{"in": "sql=\"select value from table where name='aaaa'\"<nl>cursor.execute(sql)<nl>results=cursor.fetchall() # changed to results to better reflect the list structure<nl>count = len(results)<nl>for i in range(0, count):<nl>  for j in range (i+1, count):<nl><tab>print results[i][0], results[j][0]", "out": "Pythonを使用してテーブルの行を比較する方法", "out_en": "how to compare the rows of a table using python"}
{"in": "import signal<nl>dict((k, v) for v, k in reversed(sorted(signal.__dict__.items()))<nl><tab> if v.startswith('SIG') and not v.startswith('SIG_'))", "out": "Pythonで数値からシグナル名を取得する", "out_en": "Get signal names from numbers in Python"}
{"in": "y = a + bx + c*exp(-d*x)", "out": "Pythonで単調に増加するシーケンスの推定値を計算する方法", "out_en": "How to calculate estimation for monotonically growing sequence in python?"}
{"in": "message = (<nl><tab>'From: me@yahoo.com <nl>'<nl><tab>'To: %s <nl>'<nl><tab>'Subject: Data saved successfully <nl>'<nl><tab> '%s' %(args.r,TEXT)<nl>)", "out": "ループ内でメールが生成され、件名が送信されない", "out_en": "Emails generated in loop not sending subject"}
{"in": "for index in range(len(listOne)):<nl><tab>listThree.append((listOne[index],listTwo[index]))", "out": "Pythonのネストされたリストとforループプログラムでは、おかしな結果になります。", "out_en": "nested lists and for loops program in python gives me a crazy result"}
{"in": "def was_published_today(self):<nl><tab>return (self.pub_date.date() == datetime.date.today())", "out": "django datetime.datetimeエラー", "out_en": "django datetime.datetime error"}
{"in": "def joinSegments( s ):<nl><tab>if s[0][0] == s[1][0] or s[0][0] == s[1][-1]:<nl><tab><tab>s[0].reverse()<nl><tab>c = s[0][:]<nl><tab>for x in s[1:]:<nl><tab><tab>if x[-1] == c[-1]:<nl><tab><tab><tab>x.reverse()<nl><tab><tab>c += x<nl><tab>return c", "out": "順序付けラインストリング方向アルゴリズム", "out_en": "Ordering linestring direction algorithm"}
{"in": "class ProbSVC(SVC):<nl><tab>def predict(self, X):<nl><tab><tab>return super(ProbSVC, self).predict_proba(X)", "out": "SCIキット学習におけるSVC確率出力のグリッド検索クロスバリデーション", "out_en": "grid search cross-validation on SVC probability output in sci-kit learn"}
{"in": "USE_PYTHON=yes<nl>USE_PYDISTUTILS=yes", "out": "新しいFreebsdポートの作成", "out_en": "Creating a new Freebsd port"}
{"in": "class Friendship(models.Model):<nl>  from_friend = models.ForeignKey(<nl><tab>User, related_name='friend_set'<nl>  )<nl>  to_friend = models.ForeignKey(<nl><tab>User, related_name='to_friend_set'<nl>  )<nl>  def __unicode__(self):<nl><tab>return u'%s, %s' % (<nl><tab>  self.from_friend.username,<nl><tab>  self.to_friend.username<nl><tab>)<nl>  class Meta:<nl><tab>unique_together = (('to_friend', 'from_friend'), )", "out": "この「モデル」をDjangoで書くにはどうすればよいでしょうか。", "out_en": "How to write this \"model\" in Django?"}
{"in": "def setup_cookie():<nl><tab># try/except to read the cookie<nl><tab>return cookie<nl><nl>def headers(cookie):<nl><tab># print a set-cookie header if needed<nl><tab>return \"SetCookie: etc\"<nl><nl>def page_content(cookie):<nl><tab># maybe you want to alter the page content with a regex or something based on the cookie value<nl><tab>return html<nl><nl>cookie = setup_cookie()<nl>print headers( cookie )<nl>print \"\"<nl>print page_content( cookie )", "out": "Python CGIを使用したWebページへのCookieの追加", "out_en": "Adding cookie to webpage, with python CGI"}
{"in": "import lxml.html<nl>doc = lxml.html.parse(url_to_site)<nl>feeds = doc.xpath('//link[@type=\"application/rss+xml\"]/@href') # list feed urls", "out": "Pythonを使用してHTMLからURLをフィード", "out_en": "Feed URL from HTML using Python"}
{"in": "3.907985046680551e-14", "out": "Cで作成されたバイナリファイルからdoubleを読み取る最善の方法は何ですか?", "out_en": "What is the best method to read a double from a Binary file created in C?"}
{"in": "from suds.client import Client<nl>from suds.transport.http import HttpAuthenticated<nl><nl>t = HttpAuthenticated(username='liferayuser', password='liferaypassword')<nl>c = Client('http://liferay62instance.domain.com/api/axis/Portal_UserService?wsdl', transport=t)<nl>result = c.service.getUserByScreenName(companyId=10154, screenName='user')", "out": "liferay 6.2GA2 soap認証とpython sudsクライアント", "out_en": "liferay 6.2GA2 soap authentication with python suds client"}
{"in": "with open('some_file_1.txt', 'r') as file1:<nl><tab>with open('some_file_2.txt', 'r') as file2:<nl><tab><tab>same = set(file1).intersection(file2)<nl><nl>same.discard('<nl>')<nl><nl>with open('some_output_file.txt', 'w') as file_out:<nl><tab>for line in same:<nl><tab><tab>file_out.write(line)", "out": "Pythonで2つの異なるファイルを1行ずつ比較する", "out_en": "Compare two different files line by line in python"}
{"in": "from django.db.models import Q<nl><nl>threshold = {<nl><tab>'hot': Q(post_upvotes__gt=50),<nl><tab>'trending': Q(post_upvotes__range=(20,50)),<nl><tab>'new': Q(post_upvotes__lt=20)<nl>}<nl><nl>return Post.objects.filter(threshold[section])", "out": "Django ormフィルターはdictの要素です", "out_en": "Django orm filter is an element of dict"}
{"in": "request.FILES['file_pm']", "out": "python-djangoファイルのアップロード'キーエラー'", "out_en": "python-django file upload 'key error'"}
{"in": "x = csr_matrix(np.random.rand(1000) > 0.99).T<nl>print x.shape   # (1000, 1)", "out": "Pythonでの疎/密の乗算", "out_en": "Sparse-Dense multiplication in Python"}
{"in": "imagelist[pagenumber: pagenumber+16]", "out": "Pythonでdictオブジェクトを使用してページングソリューションを実装する方法", "out_en": "How to do implement a paging solution with a dict object in Python"}
{"in": "from bs4 import BeautifulSoup<nl><nl>page = \"<span>Hello world</span><h1>Nice to see you</h1><span>no</span><span>Hello babe</span>\"<nl><nl>soup = BeautifulSoup(page)<nl><nl>while len(soup.find_all('span')) > 0:<nl><tab>soup.span.extract()<nl>print soup", "out": "PythonとBeautifulSoupを使用して、特定のタイプのタグをHTMLから削除する(文字列操作なし)", "out_en": "Remove certain type of tag from HTML (without string operations) with Python and BeautifulSoup"}
{"in": "l = [a, b, c, d, e]<nl>c_index = l.index(\"c\")<nl>l2 = l[:c_index]", "out": "Python:インデックス範囲に基づいてリストをサブリストに分割する", "out_en": "Python: Split a list into sub-lists based on index ranges"}
{"in": "def inplace_unique_latest(L, key=None):<nl>  if key is None:<nl><tab>def key(x):<nl><tab>  return x<nl>  seen = set()<nl>  n = iter(xrange(len(L) - 1, -2, -1))<nl>  for x in xrange(len(L) - 1, -1, -1):<nl><tab>item = L[x]<nl><tab>k = key(item)<nl><tab>if k not in seen:<nl><tab>  seen.add(k)<nl><tab>  L[next(n)] = item<nl>  L[:next(n) + 1] = []", "out": "順序を維持し、最も古い要素を削除しながら、Pythonリストから重複を削除する最も効率的な方法", "out_en": "Most efficient way to remove duplicates from Python list while preserving order and removing the oldest element"}
{"in": "dither=\"yes\"", "out": "Pocketsphinxデコーダーが独自の単語を追加", "out_en": "Pocketsphinx decoder adds words of its own"}
{"in": "import xlsxwriter<nl><nl>workbook  = xlsxwriter.Workbook('file.xlsx')<nl>worksheet = workbook.add_worksheet()<nl><nl>data = [13, 24, 15]<nl><nl>for row_num, value in enumerate(data):<nl><tab>worksheet.write(row_num, 0, value)<nl><nl>row_num += 1<nl>worksheet.write(row_num, 0, '=SUM(A1:A{})'.format(row_num))<nl><nl>workbook.close()", "out": "xlsxwriterの特定の列に最後に移入された行を判別する方法", "out_en": "How to determine last row populated for a certain column in xlsxwriter?"}
{"in": "from openerp.addons.web import http<nl>from openerp.addons.web.http import request<nl><nl>class Book(http.Controller):<nl><tab>@http.route('/page/getjson/', type='http', auth='public', website=True)<nl><tab>def index(self, **kw):<nl><tab><tab>Books = request.env['x_book.book']<nl><tab><tab>return request.render('book.index', {<nl><tab><tab>'books': Books.search([])<nl>   })", "out": "Odoo 8でデータベースからデータを取得する方法", "out_en": "How to retrive data from database in Odoo 8"}
{"in": "class ItemLoader(ItemLoader):<nl><nl><tab>default_output_processor = MapCompose(unicode.strip)", "out": "Pythonで辞書を反復処理し、空白を取り除く", "out_en": "Iterating over a dictionary in python and stripping white space"}
{"in": "row[2] == day", "out": "Python-Ifステートメント", "out_en": "Python - If statement"}
{"in": "process.terminate()", "out": "特定の時間内に完了しなかったPythonプロセスを強制終了する", "out_en": "Kill a Python process if it doesn't finish in a certain time?"}
{"in": "class escapeMode(object):<nl><tab>'''<nl><tab>Enum to represent the escape mode.<nl><tab>'''<nl><tab>## Escape all values<nl><tab>ALLWAYS<tab> = 1<nl><tab>## Escape only values containing seperators or starting with quotation<nl><tab>NECESSARY   = 2", "out": "Python(doxygenを使用)でのメンバー以降のドキュメンテーション", "out_en": "Documentation after members in python (with doxygen)"}
{"in": "import uuid <nl>uuid.uuid4().hex[:6].upper()", "out": "Python/Djangoで固有の文字列を生成する", "out_en": "Generate a Unique String in Python/Django"}
{"in": "body = str(\"The following items are in the list: \")<nl>items = [\"a\", \"b\", \"c\", \"d\"]  # list of strings<nl>for i in items:<nl><tab>body = body.__add__(i + \",\")<nl>print(body)", "out": "リストのすべての項目を変数に追加する方法", "out_en": "How do I add all of the items from a list to a variable?"}
{"in": "values = [l[3] for l in data[:100]]", "out": "リストのリストへのアクセス", "out_en": "Accessing a list of lists"}
{"in": "import filename", "out": "以前に作成したプログラムを、現在作成中の新しいプログラムで使用するにはどうすればいいですか。", "out_en": "How do I use a previous program that I've written in a new program that I am currently writing?"}
{"in": "rxSetting = re.compile('((?:/\\w+:[^/]+){3})')", "out": "Python RegExの一致結果が小さすぎます。アドバイスしてください", "out_en": "Python RegEx match results are too minimal, please advise"}
{"in": "connecting = ClientCreator(reactor, RedisListenerProtocol).connectTCP(HOST, PORT)<nl>def connected(listener):<nl><tab>listener.subscribe(\"newChannelName\")<nl><tab>listener.unsubscribe(\"channelName\")<nl>connecting.addCallback(connected)", "out": "txredisapiとの接続が確立された後、チャネルの購読と購読解除を行います", "out_en": "Subscribe and unsubscribe to channels after the connection has been made with txredisapi"}
{"in": "{} and {}.format(\"string\", 1)", "out": "Pythonでの文字列と整数の連結", "out_en": "Concatenating string and integer in python"}
{"in": "sys.stdout.write(stdout_data)<nl>sys.stderr.write(stderr_data)", "out": "stdoutおよびstderrの2つの異なるログ・ファイルへのリダイレクト", "out_en": "Redirection of stdout and stderr to two different log files"}
{"in": "print(name + ', you won.')", "out": "Pythonで文字列の末尾から空白を削除する方法は?", "out_en": "How to remove whitespace from end of string in Python?"}
{"in": "start = new_programme.get('start')<nl>start_time = datetime.datetime.strptime(start, '%Y%m%d%H%M%S -0000')<nl>print(type(start_time))<nl>seven_weeks = datetime.datetime.now() - datetime.timedelta(weeks=7)<nl>print(type(seven_weeks))<nl>is_more_than_7_weeks = start_time < seven_weeks", "out": "Pythonでtime_structをdatetime.datetimeと比較する方法は?", "out_en": "How to compare time_struct with datetime.datetime in python?"}
{"in": "response = opener.open(self.__url, data)<nl>if response.info().get('Content-Encoding') == 'gzip':<nl><tab>buf = StringIO.StringIO( response.read())<nl><tab>gzip_f = gzip.GzipFile(fileobj=buf)<nl><tab>content = gzip_f.read()<nl>else:<nl><tab>content = response.read()", "out": "urllib2 openerが間違った文字セットを提供しています", "out_en": "urllib2 opener providing wrong charset"}
{"in": "import matplotlib<nl>if matplotlib.rcParams['backend'] == 'module://my_backend':<nl><tab>from IPython.lib.inputhook import enable_gui<nl><tab>enable_gui('qt4')", "out": "Matplotlib:Qt4Aggバックエンドのカスタマイズ", "out_en": "Matplotlib: Customizing Qt4Agg Backend"}
{"in": "def generate(ysize, xsize, ycenter, xcenter, radius):<nl><tab>x = np.arange(xsize)[None,:]<nl><tab>y = np.arange(ysize)[:,None]<nl><tab>return ((xcenter - x) ** 2 + (ycenter - y) ** 2 <= radius ** 2) * 1<nl><nl><nl>generate(10,8,4,3,2)<nl><nl><nl>array([[0, 0, 0, 0, 0, 0, 0, 0],<nl><tab>   [0, 0, 0, 0, 0, 0, 0, 0],<nl><tab>   [0, 0, 0, 1, 0, 0, 0, 0],<nl><tab>   [0, 0, 1, 1, 1, 0, 0, 0],<nl><tab>   [0, 1, 1, 1, 1, 1, 0, 0],<nl><tab>   [0, 0, 1, 1, 1, 0, 0, 0],<nl><tab>   [0, 0, 0, 1, 0, 0, 0, 0],<nl><tab>   [0, 0, 0, 0, 0, 0, 0, 0],<nl><tab>   [0, 0, 0, 0, 0, 0, 0, 0],<nl><tab>   [0, 0, 0, 0, 0, 0, 0, 0]])", "out": "パターン化されたnumpyマトリックスを生成する", "out_en": "generate a patterned numpy matrix"}
{"in": "Discount.objects.filter(discount_store__store_city__city_name=\"bursa\")", "out": "ジャンゴビュー内のスパンフィルタ", "out_en": "Django Span Filter in View"}
{"in": "self.ToggleTool(self.add_points_id, True)", "out": "WxPython:プログラムでラジオツールを選択する方法", "out_en": "wxpython: how to programmatically select a radio tool?"}
{"in": "Button.invoke()", "out": "tkinter/pythonで、ボタンに触れずに押す方法はありますか?", "out_en": "Is there a way to press a button without touching it on tkinter / python?"}
{"in": "package_dir = {'': 'src'},", "out": "パッケージが./srcにあることをpip/setuptoolsに認識させるにはどうすればいいですか?", "out_en": "how can I make pip/setuptools understand that my package is in ./src?"}
{"in": "self.b_set.last().name", "out": "(Django)他のモデルの属性がまだ定義されていないモデルで`__str__`を定義します", "out_en": "(Django) define `__str__` in a model with attributes of other model not yet defined"}
{"in": "from urllib import quote_plus as urlquote<nl>from sqlalchemy.engine import create_engine<nl>engineString = 'postgresql://wberg:%s@localhost/mydatabase' % urlquote('pass/word')<nl>engine = create_engine(engineString)", "out": "SQLAlchemy create_engine()のパスワードに含まれるスラッシュの値エラー", "out_en": "SQLAlchemy ValueError for slash in password for create_engine()"}
{"in": "def initialize_function(num,instruction,emplacement1,emplacement2,current_pipeline):<nl><tab>function_mapping={<nl><tab>\"LOAD\" : LOAD,<nl><tab>\"STORE\" : STORE,<nl><tab>\"MOVE\" : MOVE_IADD,<nl><tab>\"IADD\" : MOVE_IADD,<nl><tab>\"FADD\" : FADD<nl><tab>}<nl><tab>current_pipeline=function_mapping[instruction](num,emplacement1,emplacement2,current_pipeline)<nl><tab>return(current_pipeline)", "out": "初期化のために辞書をキャンセルする方法は?python3.3", "out_en": "How to cancel the dictionary to initialize ? python3.3"}
{"in": "max_value = max(foo.value for foo in foos)<nl># instead of:<nl># max_value = max([foo.value for foo in foos])", "out": "オブジェクトの属性のmax-関数", "out_en": "max-Function for attributes of objects"}
{"in": "kwargs = {filter_field: filter_value}<nl>Alert.objects.filter(**kwargs)", "out": "Djangoモデルをフィルターするためにフィールドを渡すにはどうすればいいですか。", "out_en": "How do I pass in a field to filter a Django model?"}
{"in": "for sub_list in my_list:<nl><tab>for dx in (0, -1):<nl><tab><tab>while sub_list and sub_list[dx] == 0:<nl><tab><tab><tab>sub_list.pop(dx)", "out": "Pythonの多次元リストから先頭と末尾のゼロを削除する", "out_en": "Remove leading and trailing zeros from multidimensional list in Python"}
{"in": "def groupByPrefix(strings):<nl><tab>stringsByPrefix = {}<nl><tab>for string in strings:<nl><tab><tab><tab>prefix, suffix = map(str.strip, string.split(\"/\", 1))<nl><tab><tab><tab>group = stringsByPrefix.setdefault(prefix, [])<nl><tab><tab><tab>group.append(suffix)<nl><tab>return stringsByPrefix", "out": "複数の共通の開始文字列の検索", "out_en": "Finding multiple common starting strings"}
{"in": "def get_queryset(self, *args, **kwargs):<nl><tab>\"\"\"<nl><tab>Checks if currentuser = true is in the URL and filters this it.<nl><tab>\"\"\"<nl><tab>queryset = super(FilterMixin, self).get_queryset(*args, **kwargs)<nl><nl><tab>currentuser = self.request.QUERY_PARAMS.get('currentuser')<nl><tab>project = self.request.QUERY_PARAMS.get('project')<nl><nl><tab>if currentuser == \"true\":<nl><tab><tab>queryset = queryset.filter(user=self.request.user)<nl><nl><tab>if project:<nl><tab><tab>queryset = queryset.filter(project=project)<nl><nl><tab>return queryset", "out": "Django Rest Frameworkフィルターを使用してフィルターを連鎖させる方法", "out_en": "How to chain filters together using Django Rest Framework filters"}
{"in": "from random import choice<nl>random_function_selector = [foo, foobar, fudge]<nl><nl>print choice(random_function_selector)()", "out": "関数をランダムに選択する", "out_en": "Choosing a function randomly"}
{"in": "import string<nl>chars = string.lowercase + string.uppercase<nl><nl>def identifier(x, chars):<nl><tab>output = []<nl><tab>base = len(chars)<nl><tab>while x:<nl><tab><tab>output.append(chars[x % base])<nl><tab><tab>x /= base<nl><tab>return ''.join(reversed(output))<nl><nl>print identifier(1, chars)", "out": "Python固有の文字列の作成", "out_en": "python unique string creation"}
{"in": "python-ttk", "out": "Tkinterへの画像の書き込み", "out_en": "Putting images in a Tkinter"}
{"in": "xx[xx['Business']==\"1\"]['Label'].tolist()", "out": "パンダからリストを抽出するには?", "out_en": "How to extract a list from pandas?"}
{"in": "ticks = ax.get_xticks()<nl>ticks = np.union1d(ticks, [0.7])<nl>ax.set_xticks(ticks)<nl>ax.set_xticklabels(newlabels)", "out": "ティックラベルの変更;ラベルに任意のティックを追加する方法:", "out_en": "Tick label modification; How to add an arbitrary tick on the label:"}
{"in": "dicResults =  {}<nl>for row in results:<nl><tab>dicResults[row[1]] = [row[0], row[2], row[3]]", "out": "Python mysqldbデータ", "out_en": "Python mysqldb data"}
{"in": "ResultObj(*args)", "out": "オブジェクトを組み合わせるためのデザインパターン", "out_en": "Design pattern for combining objects"}
{"in": "from Package import specific_submodule", "out": "パッケージから複数のモジュールをインポートするための推奨方法", "out_en": "Preferred way to import multiple modules from package"}
{"in": "foo = '\"MARY\",\"PATRICIA\",\"LINDA\",\"BARBARA\",\"ELIZABETH\",\"JENNIFER\",\"MARIA\",\"SUSAN\",\"MARGARET\",\"DOROTHY\",\"LISA\",\"NANCY\",\"KAREN\",\"BETTY\",\"HELEN\",\"SANDRA\",\"DONNA\",\"CAROL\"'<nl>output = foo.replace('\"','').split(\",\")", "out": "Python:文字列を要素に分割してリストに追加する", "out_en": "Python: Splitting a string into elements and adding them in a list"}
{"in": "re.sub(\"[^a-zA-Z0-9 -]\",\"\",'SEGA E-r. Ata{{r}}i<nl>')", "out": "正規表現を使用した非英数字文字の除外", "out_en": "Using regular expressions to exclude non-alphanumeric characters"}
{"in": "import urllib, urllib2, cookielib<nl><nl># cookie storage<nl>cj = cookielib.CookieJar()<nl>opener = urllib2.build_opener(<nl><tab>urllib2.HTTPCookieProcessor(cj),<nl><tab>urllib2.HTTPRedirectHandler<nl><tab>)<nl># Useragent<nl>opener.addheaders.append(('User-agent','Mozilla/4.0'))<nl><nl>url = 'http://www.okcupid.com/login'<nl>login_data = urllib.urlencode({<nl><tab>'username':'myusername',<nl><tab>'password':'mypassword',<nl><tab>})<nl><nl>req = urllib2.Request(url,login_data)<nl>resp = opener.open(req)<nl>the_page = resp.read()<nl><nl>print the_page", "out": "OKCへのプログラムによるログイン", "out_en": "Programmatically login to OKC"}
{"in": "import BeautifulSoup<nl><nl>fname = r'c:\\mydir\\beautifulSoup.html'<nl>soup = BeautifulSoup.BeautifulSoup(open(fname, 'r'))<nl><nl>items = []<nl>last_seen_date = None<nl>for el in soup.findAll('tr'):<nl><tab>daterow = el.find('td', {'class':'date'})<nl><tab>if daterow is None:<tab> # not a date - get headline and link<nl><tab><tab>headline = el.find('td', {'class':'headline'}).text<nl><tab><tab>link = el.find('a').get('href')<nl><tab><tab>items.append((last_seen_date, headline, link))<nl><tab>else:<tab><tab><tab><tab>   # get new date<nl><tab><tab>last_seen_date = daterow.text", "out": "Pythonでhtml-table-datasetをループする方法", "out_en": "How to loop through a html-table-dataset in Python"}
{"in": "import sys<nl><nl>class Borg(object):<nl><tab>__shared_state = {}<nl><tab>def __init__(self, nombre):<nl><tab><tab>self.__dict__ = self.__shared_state<nl><tab><tab>self.nombre = nombre <nl><nl><tab>def instance_method_1(self):<nl><tab><tab>print 'my instance vr::', self.nombre<nl><tab><tab>panga = 'pangas'<nl><tab><tab>print 'te copio con  ' <nl><tab><tab>print panga<nl><tab><tab>print self.nombre<nl><nl><nl>pingus = Borg('varString')<nl><nl><nl>print pingus.nombre<nl>pingus.instance_method_1()", "out": "そのクラスからPythonインスタンスvarにアクセスする", "out_en": "Accessing a Python instance var from that class"}
{"in": "import subprocess <nl>try:<nl><tab>import nltk<nl><tab>nltkv = '{}.'.format(nltk.__version__)<nl><tab>print \"nltk is already installed, V : <nl>\", nltkv # mind the escape sequence<nl>except ImportError:<nl><tab>print \"Nltk is not installed, Let's start installing ...<nl>\"<nl><tab>subprocess.call('sudo pip install -U nltk', shell = True)<nl><tab>#sudo easy_install pip<nl>except:<nl><tab>print \"Some error occurred!<nl>\"", "out": "インストールを確認し、すでにインストールされている場合はバージョンを印刷します。さもなければそのパッケージをインストールします", "out_en": "Verify installation, print version if already installed otherwise install that package"}
{"in": "from datetime import datetime<nl><nl>fmt = '%Y-%m-%d %H:%M:%S'<nl>d1 = datetime.strptime('2010-01-01 17:31:22', fmt)<nl>d2 = datetime.strptime('2010-01-03 17:31:22', fmt)<nl><nl>print (d2-d1).days * 24 * 60", "out": "Python日付の差(分単位)", "out_en": "python date difference in minutes"}
{"in": "sc = (\"\\x31\\xdb\"<tab>  # xor %ebx, %ebx<nl><tab>  \"\\x31\\xc9\"<tab>  # xor %ecx, %ecx<nl><tab>  \"???\")", "out": "Pythonで複数行の文字列割り当てにインラインコメントを追加する方法", "out_en": "How to add inline comments to multiline string assignments in python"}
{"in": "lst = [['a', 'b', 'a'], ['a', 'b', 'c'], ['a']]<nl><nl>def count(lst):<nl><tab># declare dictionary that we are going to return<nl><tab>foo = {}<nl><tab># iterate sublist<nl><tab>for sublist in lst:<nl><tab><tab># make sublist into unique element list<nl><tab><tab>sublist = list(set(sublist))<nl><tab><tab>for element in sublist:<nl><tab><tab><tab># if element found in foo dic, increment<nl><tab><tab><tab>if element in foo:<nl><tab><tab><tab><tab>foo[element] += 1<nl><tab><tab><tab># else, init with 1<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>foo[element] = 1<nl><tab>return foo<nl><nl>res = count(lst)<nl>print res", "out": "Pythonで特定の用語を持つサブリストをカウントする", "out_en": "count sublists that has a specific term in python"}
{"in": "hint = random.choice(list({a, b, c, d, e, f} - {killer, previous_guess}))", "out": "ランダムな選択に例外を与える", "out_en": "Giving Exceptions to a Random Choice"}
{"in": "from IPython import get_ipython<nl>ipython = get_ipython()<nl><nl>if '__IPYTHON__' in globals():<nl><tab>ipython.magic('load_ext autoreload')<nl><tab>ipython.magic('autoreload 2')", "out": "スクリプト内でIPythonマジックを使用してモジュールを自動再ロードする方法", "out_en": "How to use IPython magic within a script to auto reload modules?"}
{"in": "butn.onClick.AddListener(lambda item=item: dicbrowser(holderdict[item],0))", "out": "PythonでのDelegateとUnityの組み合わせ", "out_en": "Delegate in Python in combination with unity"}
{"in": "sorted(results.iteritems(), key=lambda x: x[1]['Rating'])", "out": "Pythonでデータをデータ構造として最適に保存する方法", "out_en": "How to Optimally Save Data in Python as Data Structure"}
{"in": "import wx<nl>from wx.lib.iewin import IEHtmlWindow<nl>a = wx.App(redirect=False)<nl>f = wx.Frame(None,-1,\"My Desktop Application\")<nl>browser = IEHtmlWindow(f)<nl>browser.Navigate(\"http://google.com\")<nl>f.Show()<nl>a.MainLoop()", "out": "Pythonを使用したWebベースのデスクトップアプリケーションの実装", "out_en": "Implement web based desktop application with python"}
{"in": "# Converts something like \"14/Nov/2012:09:32:46\"<nl># to \"2012-11-14:09:32:46\"<nl>_MONTHS = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]<nl>def convert(s):<nl>  p = s.split(':', 1)<nl>  t = p[0].split('/')<nl>  return \"%s-%02d-%02d:\" % (t[2], _MONTHS.index(t[1]) + 1, int(t[0])) + p[1]", "out": "Pythonでdatetimeに変換せずに文字列を14/Nov/2012から2012/11/14に切り替える方法", "out_en": "how to switch strings from 14/Nov/2012 into 2012/11/14 without converting to datetime in Python?"}
{"in": "from django.contrib import admin<nl><nl>from models import News, NewsLang<nl><nl>class NewsLangInline(admin.TabularInline):<nl><tab>model = NewsLang<nl><nl>class NewsAdmin(admin.ModelAdmin):<nl><tab>inlines = [NewsLangInline]<nl>admin.site.register(News, NewsAdmin)", "out": "django-adminでの複数モデルの編集", "out_en": "Multiple model edition in django-admin"}
{"in": "strQuery = \"<queryxml><entity>Ticket</entity><query>\" + \\<nl><tab><tab><tab><tab><tab><tab>\"<condition><field>id<expression op=\"\"greaterthan\"\">\" + strCurrentID + \"</expression></field></condition>\" + strCriteria + \\<nl><tab><tab><tab><tab><tab><tab>\"<condition><field>EstimatedHours<expression op=\"\"isnull\"\"></expression></field></condition>\" + \\<nl><tab><tab><tab><tab><tab><tab>\"</query></queryxml>\"", "out": "SUDSおよびPythonでのQueryXMLの使用", "out_en": "Using QueryXML with SUDS and Python"}
{"in": "import subprocess<nl>subprocess.call([\"ssconvert\",\"sample.xlsx\",\"sample.csv\"],cwd=\"pathtoyourfile\") # pathtoyourfile must contain the xlsx and csv files", "out": "Pythonでサブプロセスを使用してssconvertコマンドを実行する方法", "out_en": "How to execute ssconvert command using subprocess in python"}
{"in": "import os<nl>if os.fork() == 0: exit()", "out": "関数内のオブジェクトを表示します。表示を閉じた後にプログラムを終了しない方法は?", "out_en": "Display objects within a function, how to NOT terminate the program after close the display?"}
{"in": "wavFile.writeframes(voiceSample.tostring())", "out": "トリミングされたwaveファイルをPythonで保存する方法", "out_en": "How to save trimmed wave file in python?"}
{"in": "def get_context_data(self,**kwargs):<nl><tab>context = super(DvStringUpdateView, self).get_context_data(**kwargs)<nl><tab>semlinks = []<nl><tab>obj = get_object_or_404(DvString,pk=context['object'].id)<nl><tab>if obj.resource_uri:<nl><tab><tab>urilist = obj.resource_uri.splitlines()<nl><tab><tab>attrlist = obj.sem_attr.splitlines()<tab><tab><nl><tab><tab>for n in range(0,len(urilist)):<nl><tab><tab><tab>semlinks.append(attrlist[n] + ' = ' + unquote(urilist[n]))<nl><nl><tab>context['semlinks'] = semlinks<nl><tab>context['ct_id'] = obj.ct_id<nl><tab>return context", "out": "クラスベースのビューでは、django-extensionsのUUIDフィールドは使用できません。", "out_en": "UUIDField from django-extensions is not available in Class Based Views"}
{"in": "# python startup file <nl>import readline <nl>import rlcompleter <nl>import atexit <nl>import os <nl># tab completion <nl>readline.parse_and_bind('tab: complete') <nl># history file <nl>histfile = os.path.join(os.environ['HOME'], '.pythonhistory') <nl>try: <nl><tab>readline.read_history_file(histfile) <nl>except IOError: <nl><tab>pass <nl>atexit.register(readline.write_history_file, histfile) <nl>del os, histfile, readline, rlcompleter", "out": "Pythonインタプリタシェルで最後のコマンドを繰り返すには?", "out_en": "How to repeat last command in python interpreter shell?"}
{"in": "similar_posts=qs.filter(state=post.state)", "out": "Djangoビューでの名前エラー", "out_en": "NameError In Django View"}
{"in": "STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')", "out": "collectstaticを実行できません", "out_en": "Unable to perform collectstatic"}
{"in": "person = db.ReferenceProperty(Person, collection_name=\"cars\")", "out": "google-app-engine:オブジェクトのリストを別のクラスのプロパティーとして使用するにはどうすればよいでしょうか。", "out_en": "google-app-engine: How can I have a list of objects as property in another class?"}
{"in": "import logging<nl>from google.appengine.ext import ereporter<nl><nl>ereporter.register_logger()", "out": "GAE Python-Ereporterが電子メールを送信しない", "out_en": "GAE Python - Ereporter doesn't send email"}
{"in": "import win32com.client<nl>import sys # <- obsolete not used<nl>import os<nl>import glob # style guide one import per line<nl><nl><nl>Application = win32com.client.Dispatch(\"PowerPoint.Application\")<nl>Application.Visible = True<nl><nl>ppt_files = glob.glob('*.ppt')<nl><nl>for file in ppt_files:<nl><tab>file = os.path.abspath(file)<nl><tab>Presentation = Application.Presentations.Open(file)<nl><tab>for Slide in Presentation.Slides:<nl><tab><tab>for Shape in Slide.Shapes:<nl><tab><tab><tab>try:<nl><tab><tab><tab><tab>Shape.TextFrame.TextRange.Font.Name = \"Arial\"<nl><tab><tab><tab><tab>Shape.TextFrame.TextRange.Font.Size = \"12\"<nl><tab><tab><tab><tab>Shape.TextFrame.TextRange.Font.Color.RGB = \"000000\"<nl><tab><tab><tab>except:<nl><tab><tab><tab><tab>pass<nl><tab>Presentation.Save()<nl><tab>Presentation.Close()<nl><nl>Application.Quit()", "out": "Python:アプリケーションのクローズ中にループを一時停止する", "out_en": "Python: Pause for-loop while application closes"}
{"in": "sniff(filter = 'dst port 5555')", "out": "scapyを使用して特定のポートのトラフィックをスニフする", "out_en": "sniff traffic on a particular port using scapy"}
{"in": "import pygame as pg<nl>from pygame.locals import *<nl><nl>SIZE = (800, 600)<nl>BGCOL = (128, 128, 128)<nl>STIMCOL = (80, 255, 80)<nl><nl>screen = pg.display.set_mode((SIZE), HWSURFACE | DOUBLEBUF)<nl>screen.fill(BGCOL)<nl><nl>surf = pg.Surface((200, 200), flags=HWSURFACE)<nl>surf.fill(BGCOL)<nl><nl>pg.draw.rect(surf, STIMCOL, (10, 20, 40, 50))<nl>pg.draw.rect(surf, STIMCOL,  (60, 70, 80, 90))<nl><nl>screen.blit(surf, (100, 100))<nl><nl>pg.display.flip()<nl><nl>running = True<nl>while running:<nl><tab>surf = pg.transform.rotate(surf, -1) # updating rotation on the surface<nl><tab>screen.blit(surf, (100, 100)) #bliting the resulting image every frame<nl><tab>pg.display.flip()", "out": "pygameオブジェクト(rectsまたはimages)のグループを回転する方法", "out_en": "How can I rotate a group of pygame objects (either rects or images)"}
{"in": "import sys, os<nl><nl>file_list = []<nl><nl>for f in os.listdir(sys.argv[1]):<nl><tab>file_list.append(f)<nl><nl>for i in range(len(file_list)):<nl><tab>prevName = file_list[i]<nl><tab>if prevName != 'stackoverflow.py':  # Mention .py file so that it doesnt get renamed<nl><tab><tab>newName = '00' + file_list[i]<nl><tab><tab>os.rename(prevName, newName)", "out": "Pythonを使用して複数のファイルの名前を変更する方法", "out_en": "How does one rename multiple files using python?"}
{"in": "p=subprocess.Popen('du -sh /tmp/*', shell=True)", "out": "ターミナルとPythonスクリプトからのdu-shの動作", "out_en": "du -sh behaviour in terminal and from an python script?"}
{"in": "{{thing['attr'] if defined('thing') else ''}}", "out": "ボトルのSimpleTemplate Engineテンプレートでの未定義値の処理", "out_en": "handling undefined values in bottle's SimpleTemplate Engine templates"}
{"in": "a.count(\"__TEXT__\")", "out": "Pythonを使用してパターンの数を取得する", "out_en": "Get a count for a pattern using python"}
{"in": "class PublicationAdmin(admin.ModelAdmin):<nl><tab>list_display = ('title',)<nl><tab>search_fields = ('tags__title',)", "out": "逆リレーション検索Django管理インタフェース", "out_en": "Reverse Relation Search Django Admin Interface"}
{"in": "def __init__(self):<nl><tab>for parent_klass in inspect.getmro(self.__class__):<nl><tab><tab>_d.update(getattr(parent_klass, 'd', {}))<nl><tab>_d.update(self.d)<nl><tab>self.d = _d", "out": "親クラスで定義された名前と同じ名前を持つディクショナリを上書きせずに更新するための子クラスのディクショナリ", "out_en": "Dictionary in a child class to update the dictionary with same name defined in parent class instead of over-riding"}
{"in": "mylist = range(0,20+1,5)<nl>f = open(\"test.txt\", \"w\")<nl>f.writelines(' '.join(map(str, mylist)))<nl>f.close()", "out": "forループとリストを含むPython構文、テキストファイルへのエクスポート", "out_en": "Python syntax with for loop and lists, exporting to text file"}
{"in": "import urllib2<nl><nl>url = \"http://www.cmegroup.com/CmeWS/mvc/ProductSlate/V1/List/500/1?sortField=oi&sortAsc=false&venues=3&page=1&cleared=1&group=1&r=eSxQS2SI\"<nl>user_agent = 'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'<nl>headers = { 'User-Agent' : user_agent }<nl><nl>req = urllib2.Request(url, headers=headers)<nl><nl>response = urllib2.urlopen(req)<nl><nl>your_json = response.read()<nl>response.close()", "out": "Pythonアクセスサーバurlopen()", "out_en": "Python access server urlopen()"}
{"in": "sum(my_counter.itervalues())", "out": "Pythonでカウンタのすべての値を合計する", "out_en": "Sum all values of a counter in Python"}
{"in": "class Manager(object):<nl><tab>def new_thread(self):<nl><tab><tab>return MyThread(parent=self)<nl><tab>def on_thread_finished(self, thread, data):<nl><tab><tab>print thread, data<nl><nl>class MyThread(Thread):<nl><tab>def on_thread_finished(self, thread, data):<nl><tab><tab>pass<nl><tab>def __init__(self, parent=None):<nl><tab><tab>self.parent = parent<nl><tab>def run(self):<nl><tab><tab># ...<nl><tab><tab>self.parent and self.parent.on_thread_finished(self, 42)<nl><nl>mgr<tab>= Manager()<nl>thread = mgr.new_thread()<nl>thread.run()", "out": "Python:Pythonでコールバック・メソッドを渡して実行する方法", "out_en": "Python: How to pass and run a callback method in Python"}
{"in": "from Tkinter import *<nl>from tkFileDialog import askopenfilename<tab>  <nl><nl>value_list = []<nl><nl>def callback():<nl><tab>name = askopenfilename() <nl><tab>value_list.append(name)<nl><tab>print name<nl><nl>Button(text='File Open', command=callback).pack(fill=X)<nl>mainloop()<nl><nl># value_list[0] is filename", "out": "Tkinterからメインプログラムに変数を渡す", "out_en": "Passing a variable from Tkinter to main program"}
{"in": "Toy.objects.filter(toy_owners__parents=parent)", "out": "Django ORM複数のMany-to-Many関係を通過する方法", "out_en": "Django ORM way of going through multiple Many-to-Many relationship"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy as np<nl><nl>length = np.random.random(10)<nl>length.sort()<nl>time = np.random.random(10)<nl>time.sort()<nl>slope, intercept = np.polyfit(np.log(length), np.log(time), 1)<nl>print(slope)<nl>plt.loglog(length, time, '--')<nl>plt.show()", "out": "Python:matplotlibを使って描画されたグラフの傾きを調べる方法は?", "out_en": "Python: How to find the slope of a graph drawn using matplotlib?"}
{"in": "def equal_float(a, b):<nl><tab>#return abs(a - b) <= sys.float_info.epsilon<nl><tab>return abs(a - b) <= chosen_value #see edit below for more info", "out": "floatがPythonの整数値と等しいかどうかをチェックする", "out_en": "Checking if float is equivalent to an integer value in python"}
{"in": "def outer():<nl><tab>a = [1]<nl><tab>def inner():<nl><tab><tab>a[0] += 1<nl><tab><tab>print a[0]", "out": "Pythonの内部関数から関数変数を変更する", "out_en": "Modify the function variables from inner function in python"}
{"in": "class ClassB(gtk.Window):<nl><tab>def __init__(self, variable):<nl><tab><tab>#Your code<nl><tab><tab>self.variable = variable", "out": "python/gtkでクラスから変数を渡す方法は?", "out_en": "How to pass a variable from class in python/gtk?"}
{"in": "import tkFileDialog<nl>import os<nl>import os.path<nl>import re<nl><nl>directory = tkFileDialog.askdirectory()<nl><nl>for dirpath, dirnames, filenames in os.walk(directory):<nl><tab>for filename in filenames:<nl><tab><tab>path = os.path.join(dirpath, filename)<nl><nl><tab><tab>with open(path) as file:<nl><tab><tab><tab>contents = file.read()<nl><nl><tab><tab><tab>print path[:30], contents.count('Tmp'), re.findall('Tmp\\d{5}', contents)", "out": "1つのフォルダ内の複数のテキストファイルの「何か」をカウントする", "out_en": "Counting \"something\" in multiple text files in one folder"}
{"in": "scipy.misc.imread()", "out": "Pythonでイメージを行列に変換する", "out_en": "Convert image to a matrix in python"}
{"in": "frame = MyFrame(logger)", "out": "OSX上でpy 2アプリがフリーズしたWxPythonアプリのエラーを早期に報告する方法", "out_en": "How to report errors early in a py2app-frozen wxpython app on OSX,"}
{"in": "start()", "out": "multiprocessing.Processから継承されたPythonクラスの設定値に関する問題", "out_en": "Issue with setting value for Python class inherited from multiprocessing.Process"}
{"in": "Entry.objects.all()[0].image.thumbnail.relative_url", "out": "Django-sorl-thumbnail-ビュー関数からのサムネール画像へのアクセス", "out_en": "Django - sorl-thumbnail - accessing thumbnail image from view functions"}
{"in": "from twisted.internet.protocol import ServerFactory<nl><nl>class LocalOnlyFactory(ServerFactory):<nl><tab>def buildProtocol(self, addr):<nl><tab><tab>if addr.host == \"127.0.0.1\":<nl><tab><tab><tab>return ServerFactory.buildProtocol(self, addr)<nl><tab><tab>return None", "out": "Python Twisted:IPアドレスによるアクセス制限", "out_en": "Python Twisted: restricting access by IP address"}
{"in": "dataInSocket, _, _ = socket.select.select([sock], [], [])<nl>if dataInSocket:<nl><tab>data, addr = sock.recvfrom(MAX_MESS_LEN)<nl><tab>thread.start_new_thread(message_handler, (data, addr,))", "out": "Pythonでrecvfrom()呼び出しをキーボードで中断するにはどうすればいいですか?", "out_en": "How can I interrupt a recvfrom() call in Python with keyboard?"}
{"in": "new_word = word[1:] + word[0] + pyg", "out": "プロセスの順序に関する混乱", "out_en": "Confused about order for processes"}
{"in": "def delete(head, value):<nl><tab>curr = head<nl><tab>prev = curr.next<nl><tab>while prev.next != head:<nl><tab><tab>prev = prev.next<nl><nl><tab>if curr.value == value:<nl><tab><tab>prev.next = curr.next<nl><nl><tab>curr = curr.next<nl><tab>prev = prev.next<nl><tab>while curr.value != value and curr != head:<nl><tab><tab>curr = curr.next<nl><tab><tab>prev = prev.next<nl><nl><tab>if curr.value == value:<nl><tab><tab>prev.next = curr.next", "out": "Pythonで円形リンクされたノードを削除する別の方法", "out_en": "Alternate way to delete a node in circular linked in python"}
{"in": "os.system('ssh [...]')", "out": "Pythonスクリプトからの対話型SSHセッションの開始", "out_en": "Start interactive SSH session from Python script"}
{"in": "submenus = mainwindow.menuBar().findChildren(QAction)", "out": "QTメニューをテキストにエクスポート", "out_en": "Export QT Menu to text"}
{"in": "data[i, :, :, :] = arr.transpose(2, 1, 0)", "out": "Pythonを使用してイメージを配列に格納する", "out_en": "Store an image in an array using Python"}
{"in": "import sqlite3 as sq<nl>connection = sq.connect(\"test.db\")<nl>cursor = connection.cursor()<nl>cursor.execute(\"DROP TABLE IF EXISTS test\")<nl>cursor.execute(\"CREATE TABLE test (st TEXT)\")<nl>cursor.execute(\"INSERT INTO test VALUES ('testing')\")<nl>connection.commit() # !!!<nl>cursor.execute(\"SELECT * FROM test\")<nl>print(cursor.fetchall())<nl>cursor.close()<nl>connection.close()<nl>connection2 = sq.connect(\"test.db\")<nl>cursor2 = connection2.cursor()<nl>cursor2.execute(\"SELECT * FROM test\")<nl>print(cursor2.fetchall())", "out": "SQLiteが次の使用までデータを保存しない", "out_en": "SQLite not saving data between uses"}
{"in": "shared_items = set(x.items()) & set(y.items())<nl>print len(shared_items)", "out": "Pythonで2つの辞書を比較する", "out_en": "Comparing two dictionaries in Python"}
{"in": "maxval = max(dict.iteritems(), key=operator.itemgetter(1))[1]<nl>keys = [k for k,v in dict.items() if v==maxval]", "out": "Python dictのmax(value)に対応するキーを取得します。", "out_en": "Get the Key correspond to max(value) in python dict"}
{"in": "for page in data[\"query\"][\"pages\"].values():<nl><tab>title = page[\"title\"]<nl><tab>langlinks = page[\"langlinks\"]<nl><tab># do something with langlinks...", "out": "JSONで未知の値の後ろにある文字列に到達する", "out_en": "Reach a string behind unknown value in JSON"}
{"in": "format(number, '03')", "out": "数値をPythonでフォーマットされた文字列に変換します。接頭辞は0です。", "out_en": "convert number to formatted string in python with prefix 0s"}
{"in": "url = 'https://www.googleapis.com/appsmarket/v2/upgradableApp/oldlisting/newlisting/mybeacon.biz'<nl><nl>consumer_key = 'key'<nl>consumer_secret = 'secret'<nl><nl>consumer = oauth.Consumer(consumer_key, consumer_secret)<nl><nl>client = oauth.Client(consumer)<nl><nl># Step 1: Get a request token. This is a temporary token that is used for<nl># having the user authorize an access token and to sign the request to obtain<nl># said access token.<nl><nl>resp, content = client.request(url, \"PUT\")", "out": "Python Appengine AppによるGoogle Apps Marketplace UpgradeableApp APIの呼び出し", "out_en": "Calling Google Apps Marketplace UpgradeableApp API with Python Appengine App"}
{"in": "import numpy as np<nl>a = np.ones((3,4,5))<nl>b = np.ones((3,4,5))<nl>c = np.concatenate((a[...,np.newaxis],b[...,np.newaxis]),axis=3)", "out": "2つのnumpy配列を4次元で連結します。", "out_en": "Concatenate two numpy arrays in the 4th dimension"}
{"in": "from django.db.models import Count<nl><nl>Product.objects.get(pk=1).offer_set.all().values('price').annotate(total=Count('price')).order_by('price')", "out": "フィールドに最小値を持つレコードの数をカウントする方法は?(Django)", "out_en": "How to count how many records have minimum value in field? (Django)"}
{"in": "import re<nl>sentence = \"You are my favorite. Are you my friend? Are you an elephant?\"<nl>items = []<nl>for item in re.finditer(\"[Aa]re\", sentence, ):<nl><tab>items.append(item.start())", "out": "Pythonが配列から1つのオブジェクトを選択する", "out_en": "python choose one object from array"}
{"in": "temp_list = []<nl>prev_value = original_list[0][1]<nl><nl>for key, value in original_list:<nl><tab>if value == prev_value:<nl><tab><tab>temp_list.append(key)<nl><tab>else:<nl><tab><tab>do_something(temp_list)<nl><tab><tab>print temp_list<nl><tab><tab>temp_list = [key]<nl><tab>prev_value = value<nl><nl>do_something(temp_list)<nl>print temp_list<nl><nl># prints ['4', '3', '2']<nl># prints ['1', '6']", "out": "Python 2Dリストを反復して値を検索する", "out_en": "Iterating over a Python 2D list to find the value"}
{"in": "test_dict = dict((x, dict()) for x in ['k1', 'k2'])", "out": "Pythonの`dict.fromkeys`を使用して各キーに新しい値を渡す", "out_en": "Passing in a new value to each key using Python's `dict.fromkeys`"}
{"in": "for x_entry, y_entry, label in zip(x,y,labels):<nl><tab><tab>print label<nl><tab><tab>self.map.plot(x_entry, y_entry, 'bo', markersize=10, picker=5, label=label)", "out": "matplotlib内のリストを持つラベル", "out_en": "Labels with list in matplotlib"}
{"in": "#!/usr/bin/env python<nl><nl>import sys,os,re<nl><nl>print ('Searcing for a line in /etc/pam.d/common-password<nl>')<nl><nl>pass_file = open('/root/p_file/common-password', 'r').readlines()<nl><nl>for i in pass_file:<nl><nl><tab>if re.search(r\"password<tab><tab>required<tab><tab>pam_unix2.so use_authok<nl>\", i):<nl><nl><tab><tab>sys.exit(\"Sending exit code 0\")<nl><nl><tab>else:<nl><nl><tab><tab>sys.exit(2)<nl><nl>if __name__=='__main__':<nl><tab>main(sys.argv)", "out": "Pythonを使用してファイル内の複数の行を一致させる", "out_en": "Match multiple lines in a file using python"}
{"in": "NRZ = [0,0,1,0,1,1,0,1]<nl>NRZS = []<nl><nl>state = NRZ[0]<nl>for bit in NRZ:<nl><tab>state ^= bit ^ 1<nl><tab>NRZS.append(state)", "out": "NRZ-SとPython", "out_en": "NRZ-S with Python"}
{"in": "# Read rawImage from a file, but in reality will have it from TCPServer<nl>f = open('frame.png', \"rb\")<nl>rawImage = f.read()<nl>f.close()<nl><nl># Convert rawImage to Mat<nl>pilImage = Image.open(StringIO(rawImage));<nl>npImage = np.array(pilImage)<nl>matImage = cv.fromarray(npImage)<nl><nl>#show it<nl>cv.NamedWindow('display')<nl>cv.MoveWindow('display', 10, 10)<nl>cv.ShowImage('display', matImage)<nl>cv. WaitKey(0)", "out": "Python OpenCVでraw pngを配列から読み込む方法", "out_en": "How to read raw png from an array in python opencv?"}
{"in": "data = INPUT_LIST<nl><nl>class Item:<nl><tab>def __init__(self, _id, name, type, parent):<nl><tab><tab>self._id = _id<nl><tab><tab>self.name = name<nl><tab><tab>self.type = type<nl><tab><tab>self.parent = parent<nl><tab><tab>self.children = []<nl><nl><tab>def get_dict(self):<nl><tab><tab>return {<nl><tab><tab><tab>'id': self._id,<nl><tab><tab><tab>'name': self.name,<nl><tab><tab><tab>'type': self.type,<nl><tab><tab><tab>'children': [child.get_dict() for child in self.children]<nl><tab><tab>}<nl><nl><nl>lookup = dict((item['id'], Item(item['id'], item['name'], item['type'], item['parent'] if 'parent' in item else None)) for item in data)<nl><nl>root = []<nl><nl>for _id, item in lookup.items():<nl><tab>if not item.parent:<nl><tab><tab>root.append(item)<nl><tab>else:<nl><tab><tab>lookup[item.parent].children.append(item)<nl><nl>dict_result = [item.get_dict() for item in root]", "out": "JSON配列をループしてソートする", "out_en": "Looping through a JSON array and sorting it"}
{"in": "filename = os.path.join(\"C:\\path\\to\\Sales Packs\", filename)<nl>os.rename(filename, filename[0:11]+accName+\".xlsx\")", "out": "フォルダ内のすべてのファイルの名前を、既存のファイル名に基づいて変更する", "out_en": "Renaming all files in a folder based on the filenames they already have"}
{"in": "os.system('clear')", "out": "clear screen Pythonで256を返す", "out_en": "clear screen returning 256 in python"}
{"in": "import re<nl><nl>st='''\\<nl>The ancient Romans influenced countries and civilizations in the following centuries.  <nl>Their language, Latin, became the basis for many other European languages. They stayed in Roma for 3 month.'''<nl><nl>deletions=('and','in','the')<nl>repl={\"ancient\": \"old\", \"month\":\"years\", \"centuries\":\"years\"}<nl><nl>tgt='|'.join(r'\\b{}\\b'.format(e) for e in deletions)<nl>st=re.sub(tgt,'',st)<nl>for word in repl:<nl><tab>tgt=r'\\b{}\\b'.format(word)<nl><tab>st=re.sub(tgt,repl[word],st)<nl><nl><nl>print st", "out": "いくつかの単語を削除して、他のいくつかの単語をtxtファイルから置き換えます", "out_en": "Remove some words replace some other words from a txt file"}
{"in": "import bs4<nl>import requests <nl><nl>response = requests.get('http://my.gwu.edu/mod/pws/courses.cfm?campId=1&termId=201501&subjId=ACCY')<nl>soup = bs4.BeautifulSoup(response.text)  <nl><nl>for tr in soup.findAll('tr')[11:]:<nl><tab>stack = []<nl><tab>for td in tr.findAll('td'):<nl><tab><tab>stack.append(td.text.strip())<nl><tab>print(\",\".join(stack))", "out": "BeautifulSoupとRequestsを使用したhtmlセル・データの抽出", "out_en": "Extract html cell data with BeautifulSoup and Requests"}
{"in": "L = L[-100:]", "out": "リストを最大要素数までトリムする", "out_en": "Trim a list to a maximum number of elements"}
{"in": "for i in p:<nl>   print i.ip()", "out": "python-libtorrentを使ってtorrentのピアリストを取得する方法", "out_en": "how to get the peer list of a torrent using python-libtorrent?"}
{"in": "both = [ random.randint(0, 500) for i in range(100) ]<nl>odd = [ x for x in both if x % 2 == 1 ]<nl>even = [ x for x in both if x % 2 == 0 ]", "out": "Pythonでランダム値を生成する", "out_en": "Generating random values in python"}
{"in": "import numpy as np<nl>from enthought.mayavi import mlab<nl><nl>x, y, z = np.ogrid[-10:10:20j, -10:10:20j, -10:10:20j]<nl>s = np.sin(x*y*z)/(x*y*z)<nl><nl>src = mlab.pipeline.scalar_field(s)<nl>mlab.pipeline.iso_surface(src, contours=[s.min()+0.1*s.ptp(), ], opacity=0.3)<nl>mlab.pipeline.iso_surface(src, contours=[s.max()-0.1*s.ptp(), ],)<nl><nl>mlab.show()", "out": "3D配列複写等値面の3D印刷をmatplotlib mplot3Dなどで表示する方法", "out_en": "How to display a 3D plot of a 3D array isosurface in matplotlib mplot3D or similar?"}
{"in": "import numpy as np<nl>from matplotlib import pylab as plt<nl><nl>A = np.fromfile(filename, dtype='int16', sep=\"\")<nl>A = A.reshape([1024, 1024])<nl>plt.imshow(A)", "out": "rawバイナリイメージをPythonで読み込む", "out_en": "Read in Raw Binary Image in Python"}
{"in": "import pylab as plt<nl>a=[0,1]<nl>b=[0,1]<nl>plt.plot(a,b,'g',linewidth=3.5, label = 'a')<nl>plt.rc('text', usetex=True)<nl>plt.legend(labelspacing = 1.0,loc=1,prop={'size':40})<nl><nl>plt.text(0.45,-0.08,'a',fontsize=50)<nl>plt.text(0.53,-0.08, 'N',fontsize = 20)", "out": "同じラベル内の複数のフォントサイズMatplotlib", "out_en": "Multiple fontsize in same label Matplotlib"}
{"in": "from datetime import datetime, tzinfo, timedelta<nl><nl>timestamp = \"1322485986.672901000\"<nl><nl>class UTC(tzinfo):<nl><tab>def utcoffset(self, dt):<nl><tab><tab> return timedelta(0)<nl><tab>def tzname(self, dt):<nl><tab><tab>return \"UTC\"<nl><tab>def dst(self, dt):<nl><tab><tab>return timedelta(0)<nl><nl><nl>d1 = datetime.fromtimestamp(float(timestamp), UTC())<nl>print d1", "out": "文字列timestampをPython datetimeに変換する(was:how to proper convert char into float or double in Python)", "out_en": "Converting string timestamp to Python datetime (was: how to properly convert char into float or double in Python)"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl># Specify data / labels<nl>y = [3198293, 189910]<nl>xlabels = ['transactional','promotional']<nl>bar_width = 0.90<nl><nl>x = np.arange(len(y))<nl><nl>fig, ax = plt.subplots()<nl>ax.bar(x, y, width=bar_width)<nl>ax.set_xticks(x + (bar_width/2.0))<nl>ax.set_xticklabels(xlabels)<nl>plt.show()", "out": "Pythonでmatplotlibを使用して、Pythonでラベル付きの単純な棒グラフを描画する方法", "out_en": "how to draw a simple bar chart with labels in python using matplotlib in python?"}
{"in": "y = [x[x[:,3]==k] for k in np.unique(x[:,3])]", "out": "列に基づいてnumpy配列を分割する方法", "out_en": "How to split a numpy array based on a column?"}
{"in": "url_list = [\"cat\", \"dog\", \"mouse\"]<nl><nl>for url in url_list:<nl><tab>driver.get(\"https://www.google.com/webhp?hl=en#hl=en&q=\" + url)<nl><tab># do stuff", "out": "ループ内のURLに別の変数(辞書から取得)を挿入する", "out_en": "Insert different variable (pulled from dictionary) into URL within a loop"}
{"in": "def ons():<nl><tab>cs=StringVar<nl><tab>cs=\"\"<nl><tab>a=''<nl><tab>for i in range(listbox.size()):<nl><tab><tab>if listbox.select_includes(i):<nl><tab><tab><tab>cs +=listbox.get(i)+' ' #adding words ending with whitespace<nl><tab>listbox.delete(0,END) #deleting all the listbox content<nl><tab>for item in cs:<nl><tab><tab>a=a+item<nl><tab><tab>if item==' ': #full string passed<nl><tab><tab><tab>listbox.insert(END,a) #insert selected item into listbox<nl><tab><tab><tab>a=''#delete the string buffer", "out": "tkinterリストボックスの選択されていない複数の項目を削除する", "out_en": "tkinter delete multiple unselected items of a listbox"}
{"in": "def transform(s):<nl><tab>''' Receives a GeoNode structure as nested lists and returns a Mesh.<nl><tab>'''<nl><tab>if isinstance(s, list):<nl><tab>   return merge_meshes([transform(e) for e in s])<nl><tab>else:<nl><tab>   assert isinstance(s, GeoNode)<nl><tab>   return geonode_to_mesh(s)", "out": "Pythonクラスのツリーを解析し、文法を適用する", "out_en": "Parsing Tree of python classes and applying a grammar"}
{"in": "with open('test.csv', 'r') as file:<nl><tab>data = file.read().split('<nl>')<nl><nl>for row in range(1, len(data)):<nl><tab>third_col= data[x].split(',')<nl><tab>with open('t' + str(x) + '.txt', 'w') as output:<nl><tab><tab>output.write(third_col[2])", "out": "Pythonを使用して.csvファイルの行から別の.txtファイルにデータを抽出する方法", "out_en": "How to extract data from rows in .csv file into separate .txt files using python?"}
{"in": "#you need to explicitly name the columns of the incoming parameter in the append statement<nl>df = DataFrame(columns=['col1', 'col2'])<nl>print df.append(Series([None]*2, index=['col1','col2']), ignore_index=True)<nl><nl><nl>#as an aside<nl><nl>df = DataFrame(np.random.randn(8, 4), columns=['A','B','C','D'])<nl>dfRowImproper = [1,2,3,4]<nl>#dfRowProper = DataFrame(arange(4)+1,columns=['A','B','C','D']) #will not work!!! because arange returns a vector, whereas DataFrame expect a matrix/array#<nl>dfRowProper = DataFrame([arange(4)+1],columns=['A','B','C','D']) #will work<nl><nl><nl>print df.append(dfRowImproper) #will make the 0 named column with 4 additional rows defined on this column<nl><nl>print df.append(dfRowProper) #will work as you would like as the column names are consistent<nl><nl>print df.append(DataFrame(np.random.randn(1,4))) #will define four additional columns to the df with 4 additional rows<nl><nl><nl>print df.append(Series(dfRow,index=['A','B','C','D']), ignore_index=True) #works as you want", "out": "Pandas DataFrameに行を追加すると、0列が追加される", "out_en": "Appending row to Pandas DataFrame adds 0 column"}
{"in": "import sys<nl>states = []<nl>cities = []<nl>fname = sys.argv[1]<nl>f = open(fname, 'r')<nl>for line in f:<nl><tab>line = line.rstrip() # This will remove all the whitespaces at the end of the line<nl><tab>line = line.split(',')<nl><tab>states.append(line[0])<nl><tab>cities.append(line[1])<nl><nl>print states<nl>print cities<nl>f.close()", "out": "テキストファイルをリストに変換", "out_en": "Convert text file into list"}
{"in": "# Read file <nl>f = open('path_to_file.json')<nl>json_string = f.read()<nl>f.close()<nl><nl># Convert json string to python object<nl>import json<nl>data = json.loads(json_string)<nl><nl># Create model instances for each item<nl>items = []<nl>for item in data:<nl>   # create model instances...<nl>   item = YourModel(*item)<nl>   items.append(item)<nl><nl># Create all in one query<nl>YourModel.objects.bulk_create(items)", "out": "DjangoによるJSONファイルの読み取り", "out_en": "JSON file reading by Django"}
{"in": "import numpy as np<nl>from matplotlib import pyplot as plt<nl>x = np.random.random(50)<nl>y = np.random.random(50)<nl>a = np.random.random(50)<nl>b = np.random.random(50)<nl>s = c=zip(a, b, np.zeros(50))<nl>ax = plt.gca()<nl>print ax.get_position()<nl>plt.scatter(x,y,c = s)<nl>#adjust limits to make room for inset axes<nl>plt.xlim(xmax = 1.5)<nl>plt.ylim(ymax = 1.5)<nl>#create inset axes<nl>ax = plt.axes([.7, .675, .2, .2], axisbg='y')<nl>n = 20<nl>red = np.linspace(min(a), max(a), n)<nl>green = np.linspace(min(b), max(b), n)<nl>floats = np.linspace(0, 1, n)<nl>#make arrays of all possible values between 0 and 1<nl>X, Y = np.meshgrid(floats, floats)<nl>#stack the arrays with a third array of zeros<nl>Z = np.dstack((X, Y, np.zeros(X.shape)))<nl>Z = np.rot90(Z)<nl>red = np.round(red[::-1], 2)<nl>green = np.round(green, 2)<nl>plt.imshow(Z)<nl>ticks = np.arange(0, n, 6)<nl>plt.yticks(ticks, [red[i] for i in ticks])<nl>plt.xticks(ticks, [green[i] for i in ticks], rotation = 'vertical')<nl>plt.xlabel('Green')<nl>plt.ylabel('Red')<nl>plt.show()", "out": "matplotlib 3番目と4番目の変数の関数としての散布図の色", "out_en": "matplotlib scatter plot colour as function of third and fourth variable"}
{"in": "dic = {m : my_function(m) for m in my_list}", "out": "forループでの辞書の結合", "out_en": "Joining dictionaries in a for loop"}
{"in": "def json_equal(json1,json2):<nl><nl>   number_of_items = len(json1)<nl>   for item in json1:<nl><tab>   for item2 in json2:<nl><tab><tab>   if item[\"address\"] == item2[\"address\"]:<nl><tab><tab><tab>   if item[\"amount\"] == item2[\"amount\"]:<nl><tab><tab><tab><tab>   number_of_items -= 1<nl><tab><tab><tab><tab>   break<nl><tab><tab>   else:<nl><tab><tab><tab>   continue<nl>   if number_of_items == 0:<nl><tab>   return True<nl>   else:<nl><tab>   return False", "out": "Python 2つのjsonsのリストが等しいかどうかをチェック", "out_en": "Python Check if two list of jsons are equal"}
{"in": "a = [1,2,3,4]<nl>b = [1,2]<nl><nl>print any(x in a for x in b)<nl>True", "out": "複数の値のリスト・メンバーシップをチェックする最も効率的な方法", "out_en": "Most efficient way of checking list membership of more that one value"}
{"in": "a = wd.execute_script(\"return checkdata('\" + code + \"');\")", "out": "Seleniumを使用してPythonでJavascript関数を実行する方法", "out_en": "How to execute a Javascript function in python with selenium"}
{"in": "data= csv.reader(open('outfile.tsv','rb'), delimiter = \"\\t\")<nl>fields=data.next()<nl>for row in data:<nl><tab><tab> tsid=row[0]<nl><tab><tab> full_list.append(tsid)<nl>print [(g[0],len(list(g[1]))) for g in itertools.groupby(full_list)]", "out": "snifferを使ってtsvの最初の行を削除する", "out_en": "remove first line of tsv using sniffer"}
{"in": "import subprocess<nl>subprocess.Popen(\"C:\\ThisIsTheFolderIWantToNavigateTo\")", "out": "Pythonを使用してプログラムでmyComp/explorerのローカルフォルダを開く方法はありますか。", "out_en": "Any way to open a local folder in myComp/explorer programmatically using Python?"}
{"in": "re.sub(r\"[0-9]+[a-z]+\",\"\",str)", "out": "Pythonで正規表現を使用して、数字の後に文字が続くトークンを削除する方法", "out_en": "how to remove tokens that contains number followed by character using regular expression in python?"}
{"in": "conn_string = \"host='localhost' dbname='my_database' user='postgres' password='secret'\"<nl>conn = psycopg2.connect(conn_string)", "out": "postgresとsqliteの同等の接続", "out_en": "equivalent connection for postgres and sqlite"}
{"in": "print sys.exc_info()[1]", "out": "Python Azure SDKによるブロブのアップロード", "out_en": "Python Azure SDK Uploading a Blob"}
{"in": "namedict = ({\"first_name\":\"Joshua\", \"last_name\":\"Drake\"},<nl><tab><tab><tab>{\"first_name\":\"Steven\", \"last_name\":\"Foo\"},<nl><tab><tab><tab>{\"first_name\":\"David\", \"last_name\":\"Bar\"})<nl><nl>cur = conn.cursor()<nl>cur.executemany(\"\"\"INSERT INTO bar(first_name,last_name) VALUES (%(first_name)s, %(last_name)s)\"\"\", namedict)", "out": "チャンクとして挿入されたリアルタイム・データの読み取り", "out_en": "Read real-time data inserted as chunks"}
{"in": "pygame.time.delay()", "out": "システムが待っている間にpygameでサウンドを再生する方法", "out_en": "how can I play a sound with pygame while the system is waiting?"}
{"in": "cursor.execute('INSERT INTO actors(name,age) VALUES(%s, %s)' ,row)", "out": "データがテーブルに挿入されない", "out_en": "data is not inserting in my table"}
{"in": "from django.db import models<nl>from django.contrib.contenttypes.models import ContentType<nl><nl>class BaseModel(models.Model):<nl><tab>type = models.ForeignKey(ContentType,editable=False)<nl><tab># other base fields here<nl><nl><tab>def save(self,force_insert=False,force_update=False):<nl><tab><tab>if self.type_id is None:<nl><tab><tab><tab>self.type = ContentType.objects.get_for_model(self.__class__)<nl><tab><tab>super(BaseModel,self).save(force_insert,force_update)<nl><nl><tab>def get_instance(self):<nl><tab><tab>return self.type.get_object_for_this_type(id=self.id)", "out": "Djangoでのマルチテーブル継承設計の汎用化", "out_en": "Making a multi-table inheritance design generic in Django"}
{"in": "#!/usr/bin/env python<nl>import json<nl>import urllib2<nl><nl>try:<nl><tab>r = urllib2.urlopen(\"https://push.geckoboard.com/v1/send/\" + widget_key,<nl><tab><tab><tab><tab><tab><tab>json.dumps(nested_dict))<nl>except IOError as e:<nl><tab>if hasattr(e, 'reason'):<nl><tab>   print \"connection error:\", e.reason<nl><tab>elif hasattr(e, 'code'):<nl><tab>   print \"http error:\", e.code<nl><tab>   print e.read()<nl><tab>else:<nl><tab>   print \"error:\", e<nl>else: # success<nl><tab>assert json.load(r)[\"success\"]", "out": "GeckoboardのHighchartsプラグインで使用できるようにPythonでJSONを出力する方法", "out_en": "How to output JSON in python so it can be used for Geckoboard's Highcharts plugin"}
{"in": "app.add_url_rule('/example', view_func = example.Index.as_view('example_index'))<nl>app.add_url_rule('/example/<string:example_key>', view_func = example.Show.as_view('example_show'), methods=['GET'])", "out": "フラスコルートクエリーパラメータ", "out_en": "Flask route query parameter"}
{"in": "output = np.empty(indices[0].shape)<nl>x_indices = indices[0]<nl>y_indices = indices[1]<nl>z_indices = indices[2]<nl><nl>x0 = x_indices.astype(np.integer)<nl>y0 = y_indices.astype(np.integer)<nl>z0 = z_indices.astype(np.integer)<nl>x1 = x0 + 1<nl>y1 = y0 + 1<nl>z1 = z0 + 1<nl><nl>#Check if xyz1 is beyond array boundary:<nl>x1[np.where(x1==input_array.shape[0])] = x0.max()<nl>y1[np.where(y1==input_array.shape[1])] = y0.max()<nl>z1[np.where(z1==input_array.shape[2])] = z0.max()<nl><nl>x = x_indices - x0<nl>y = y_indices - y0<nl>z = z_indices - z0<nl>output = (input_array[x0,y0,z0]*(1-x)*(1-y)*(1-z) +<nl><tab><tab><tab> input_array[x1,y0,z0]*x*(1-y)*(1-z) +<nl><tab><tab><tab> input_array[x0,y1,z0]*(1-x)*y*(1-z) +<nl><tab><tab><tab> input_array[x0,y0,z1]*(1-x)*(1-y)*z +<nl><tab><tab><tab> input_array[x1,y0,z1]*x*(1-y)*z +<nl><tab><tab><tab> input_array[x0,y1,z1]*(1-x)*y*z +<nl><tab><tab><tab> input_array[x1,y1,z0]*x*y*(1-z) +<nl><tab><tab><tab> input_array[x1,y1,z1]*x*y*z)<nl><nl>return output", "out": "SciPyなしのNumPy配列の3D補間", "out_en": "3D interpolation of NumPy arrays without SciPy"}
{"in": "from formencode import FancyValidator, Invalid<nl>from formencode.validators import Email<nl><nl>class EmailList(FancyValidator):<nl><tab>\"\"\" Takes a delimited (default is comma) string and returns a list of validated e-mails<nl><tab><tab>Set the delimiter by passing delimiter=\"A_DELIMITER\" to the constructor.<nl><tab><tab>Also takes all arguments a FancyValidator does.  <nl><tab><tab>The e-mails will always be stripped of whitespace.<nl><tab>\"\"\"<nl><tab>def _to_python(self, value, state):<nl><tab><tab>try:<nl><tab><tab><tab>values = str(value).split(self.delimiter)<nl><tab><tab>except AttributeError:<nl><tab><tab><tab>values = str(value).split(',')<nl><tab><tab>validator = formencode.ForEach(validators.Email())<nl><tab><tab>validator.to_python(values, state)<nl><tab><tab>return [value.strip() for value in values]", "out": "チェーンFormEncodeバリデータ", "out_en": "Chain FormEncode Validators"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl># random data to stand in<nl>x1 = 0.8+0.1*np.random.rand(25)<nl>x2 = 0.3+0.2*np.random.rand(25)<nl># customise the marker properties<nl>plt.plot(x1, color='g', marker='s', mec='w', mfc='g', mew='3', ms=8)<nl>plt.plot(x2, color='b', marker='s', mec='w', mfc='b', mew='3', ms=8)<nl>plt.show()", "out": "Matplotlib:空白で囲まれたマーカー", "out_en": "Matplotlib: Markers surrounded by white space"}
{"in": "undoicon = QIcon.fromTheme(\"edit-undo\")", "out": "PyQt/PySideにデフォルトのアイコンはありますか?", "out_en": "Are there default icons in PyQt/PySide?"}
{"in": "def readMatrix(file):<nl><tab>with open(file) as contents:<nl><tab><tab>return [[int(item) for item in line.split()] for line in contents]", "out": "リスト理解を使用して文字列のリストを整数に変換しようとしていますか?", "out_en": "Trying to use list comprehension to convert list of strings to integers?"}
{"in": "urlpatterns = patterns('',<nl><tab># ... the rest of your URLconf goes here ...<nl>) + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)", "out": "データベースのhtmlページにイメージを表示できません", "out_en": "Can't display images on html page from database"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy as np<nl><nl>grid = np.random.rand(4, 4)<nl>x = ['P0', 'P1', 'P2', 'P4']<nl>y = ['C0', 'C1', 'C2', 'C4']<nl>plt.imshow(grid, interpolation='none')<nl>plt.xticks(range(len(x)), x, fontsize=12)<nl>plt.yticks(range(len(y)), y, fontsize=12)", "out": "カスタムティックラベルを使用してマトリックスデータを印刷する", "out_en": "Plot matrix data with custom tick labels"}
{"in": "import socket<nl>import sys<nl>import time<nl><nl>class Tek_scope(object):<nl><nl><tab>def __init__(self, IPaddress, PortNumber = 4000):<nl><tab><tab>self.s = socket.socket(socket.AF_INET , socket.SOCK_STREAM)<nl><tab><tab>self.s.connect((IPaddress, PortNumber))<nl><tab><tab>self.s.setblocking(True)<nl><tab><tab>print \"Scope opened Successfully\"<nl><nl>scope1 = Tek_scope(\"10.1.10.15\") #Connects to the scope<nl><nl>scope1.s.send('*IDN?<nl>') #Sends the *IDN? command to the scope. <nl><nl>print scope1.s.recv(1024)", "out": "Python:Receiving Data through Sockets-[Errno 11]リソースが一時的に使用できない", "out_en": "Python: Receiving Data through Sockets - [Errno 11] Resource temporarily unavailable"}
{"in": "def cb_check():<nl><tab>if random_cards.get():<nl><tab><tab>randomize_stacks_checkbutton.config(state=DISABLED)<nl><tab>else:<nl><tab><tab>randomize_stacks_checkbutton.config(state=NORMAL)<nl><nl>top=Tk()<nl>random_cards = IntVar() <nl>random_stacks = IntVar() <nl>flip_cards = IntVar() <nl>wildcard = IntVar()<nl><nl>randomize_cards_checkbutton = Checkbutton(top, text=\"Randomize cards\",<nl><tab><tab><tab><tab><tab><tab><tab>  variable=random_cards, command=cb_check)<nl>randomize_cards_checkbutton.grid(row=0, column=0, sticky=W)<nl><nl>randomize_stacks_checkbutton = Checkbutton(top, text=\"Randomize stacks\",<nl><tab><tab><tab><tab><tab><tab><tab>   variable=random_stacks, bg=\"lightblue\",<nl><tab><tab><tab><tab><tab><tab><tab>   disabledforeground=\"gray\")<nl>randomize_stacks_checkbutton.grid(row=1, column=0, sticky=W)<nl><nl>top.mainloop()", "out": "Tkinterの他のチェックボックスでチェックボックスを無効にする", "out_en": "Disable checkboxes by other checkboxes in Tkinter"}
{"in": "conn = sqlite3.connect('databaza.db')<nl>c = conn.cursor()<nl>conn.text_factory = str<tab><nl>data3 = str(input('Please enter name: '))<nl>query = \"DELETE FROM Zoznam WHERE Name = '%s';\" % data3.strip()<nl>print(query)<nl>mydata = c.execute(query)", "out": "テーブルからレコードを削除する方法", "out_en": "How to delete record from table?"}
{"in": "import datetime<nl>from dateutil.parser import parse as parse_date<nl>from pandas import DataFrame<nl><nl>df = DataFrame([['2009-01-04 - 2009-01-10','Some Data'], <nl><tab><tab><tab><tab>['2009-01-11 - 2009-01-17','Some Data']])<nl>df.columns = ['week','data']<nl><nl>def generate_dates(date_range):<nl><tab>day1_str, day2_str = date_range.split(' - ')<nl><tab>day1, day2 = parse_date(day1_str), parse_date(day2_str)<nl><tab>delta = day1 - day2<nl><tab>return [day1 + datetime.timedelta(days=x) for x in range(0, abs(delta.days + 1))]<nl><nl>def create_rows_from_row(row):<nl><tab>dates = generate_dates(row['week'])<nl><tab>return [[d, row['data']] for d in dates]<nl><nl>def create_new_df(df):<nl><tab>rows = []<nl><tab>for idx in range(len(df)):<nl><tab><tab>rows.extend(create_rows_from_row(df.ix[idx]))<nl><nl><tab>new_df = DataFrame(rows)<nl><tab>new_df.columns = ['week','data']<nl><tab>return new_df<nl><nl>create_new_df(df)", "out": "日付範囲列に基づいて日の行を生成する", "out_en": "Generate days row on the basis of date range column"}
{"in": "def derivs(l):<nl>  return [l[i + 1] - l[i] for i in range(len(l) - 1)]", "out": "Pythonで数値トレンドラインを計算する方法", "out_en": "How to calculate numerical trend lines in python"}
{"in": "self.request.headers", "out": "PythonでGoogle Appengineへの受信要求のHTTPヘッダーをチェックするにはどうすればいいですか。", "out_en": "How do I check HTTP headers of an incoming request to Google Appengine in Python?"}
{"in": "requests.get()", "out": "ビデオのストリーミングを開始せずにYoutubeページを取得するには?", "out_en": "How to retrieve a Youtube page without starting to stream the video?"}
{"in": "from django.db import DatabaseError<nl>from django.test import TestCase<nl>from django.test.client import Client<nl>import mock<nl><nl>class NoDBTest(TestCase):<nl><tab>cursor_wrapper = mock.Mock()<nl><tab>cursor_wrapper.side_effect = DatabaseError<nl><nl><tab>@mock.patch(\"django.db.backends.util.CursorWrapper\", cursor_wrapper)<nl><tab>def test_no_database_connection(self):<nl><tab><tab>response = self.client.post('/signup/', form_data)<nl><tab><tab>self.assertEqual(message, 'An error occured with the DB')", "out": "データベース接続なしのdjango unittest", "out_en": "django unittest without database connection"}
{"in": "import win32api<nl>from time import sleep<nl><nl>count = 0<nl>savedpos = win32api.GetCursorPos()<nl>while(True):<nl><tab>if count>20*5: # break after 5sec<nl><tab><tab>break<nl><nl><tab>curpos = win32api.GetCursorPos()<nl><tab>if savedpos != curpos:<nl><tab><tab>savedpos = curpos<nl><tab><tab>print \"moved to \" + str(savedpos)<nl><nl><tab>sleep(0.05)<nl><tab>count +=1", "out": "PythonのWindowsでは、マウスが動くまでどうやって待つのですか?", "out_en": "In python, on windows, how to wait until mouse moves?"}
{"in": "[z0] * len(seconds)", "out": "定数値を持つPythonリスト", "out_en": "Python list with constant value"}
{"in": "from dateutil.parser import parse<nl><nl>latest = max(data['posts'], key=lambda x: parse(x['date']))", "out": "Pythonを使用してjson/dictから最新のものだけを(日付で)抽出する", "out_en": "Extract only the latest one (by date) from a json/dict using Python"}
{"in": "poi_id = serializers.UUIDField(format='hex_verbose')", "out": "Django Rest Framework:モデル内部ビュー・クラスの1つのフィールドの値を操作する方法は?", "out_en": "Django Rest Framework: How to manipulate value of one field of the model inside view class?"}
{"in": "import csv<nl><nl>csv_file = open('D:\\eggs2.csv','rb')<nl>csv_reader = csv.reader(csv_file)<nl>for row in csv_reader:<nl><tab>print row[0]<nl><nl>csv_file.close()", "out": "Pythonを使用してcsvファイル内のカンマを含む単一値を読み取る方法", "out_en": "How to read single values that contains commas in csv file using python"}
{"in": "data = ['K:C:192.168.1.3:myusername:mypassword', 'M:N:192.168.3.2:root:toor']<nl>for i in data:<nl><tab>r = str(i).strip(\":\")<nl><tab>if len(r) == 4:<nl><tab><tab>print r[0] + \"   ||\" + ((28 - len(r[1])) / 2) * \" \" + r[1] + ((28 - len(r[1])) / 2) * \" \" + \"||\" + ((22 - len(r[2])) / 2) * \" \" + r[2] + ((22 - len(r[2])) / 2) * ' ' + \"||\" + ((22 - len(r[3])) / 2) * \" \" + r[3] + ((22 - len(r[3])) / 2) * \" \"<nl><tab>elif len(r) == 3:<nl><tab><tab>print r[0] + \"   ||\" + ((28 - len(r[1])) / 2) * \" \" + r[1] + ((28 - len(r[1])) / 2) * \" \" + \"||\" + ((22 - len(r[2])) / 2) * \" \" + r[2] + ((22 - len(r[2])) / 2) * ' ' + \"||\"", "out": "構文エラー無効な構文", "out_en": "SyntaxError invalid syntax"}
{"in": "graph = facebook.GraphAPI(access_token)<nl>profile = graph.get_object('me')<nl>args = {'fields' : 'id,name,email', }<nl>profile = graph.get_object('me', **args)", "out": "Facebook SDK for Python-ユーザーの電子メールを取得する", "out_en": "Facebook SDK for Python - Get user email"}
{"in": "attrs_list = Entity.objects.filter(**filters).distinct().values_list('someattr', flat=True)<nl>a = Character.objects.filter(someotherattr__in=attrs_list)", "out": "Python/Djangoで2つのQuerySetsを比較する", "out_en": "Comparing two QuerySets in Python/Django"}
{"in": "offset = -0<nl>print (\"In Command 3 - Brute force\")<nl>string = input(\"Please enter a string to Brute Force:\")<nl>while offset > -26:<nl><tab>offset = offset - 1<nl><tab>word = \"\"<nl><tab>for letter in string:<nl><tab><tab>letter = (ord(letter))<nl><tab><tab>letter = letter + offset<nl><tab><tab>if letter > 126:<nl><tab><tab><tab>letter - 95<nl><tab><tab>elif letter < 32:<nl><tab><tab><tab>letter + 32<nl><tab><tab>output = (chr(letter))<nl><tab><tab>word = word + output<tab><tab><tab><nl><tab><tab>choice = 0<nl><tab>print(\"Decryption: \"+word)", "out": "for文出力の先頭への追加", "out_en": "Appending to the front of for statement output"}
{"in": "Timestaken4={}<nl><nl>for key,value in zip(NumberPlates,Timestaken2):<nl><tab>Timestaken4[key]=value<nl><nl>print(Timestaken4)", "out": "zip内のキーと値", "out_en": "key and value in zip"}
{"in": "def OnInit(self):<nl><tab># Check for a running instance for this user.  Do not instantiate if found.<nl><tab>if self.checkInstance():<nl><tab>  dbcon.cursor().callproc('post_mutex', (self.mutexname,))<nl><tab>  dbcon.commit()<nl><tab>  self.Cleanup()<nl><tab>  return False<nl><nl><tab># Register for database events.<nl><tab>DataCache['dbListener'] = dbListener()<nl><nl><tab>return True", "out": "program_startのようなWxPythonイベントはありますか?", "out_en": "Is there a wxpython event like program_start?"}
{"in": "import os, shutil<nl><nl>dir1 = r'/path/to/dir/1'<nl>dir2 = r'/path/to/dir/2'<nl>copy_dest = r'/path/to/copy/dirs/to'<nl><nl>dir1_folders = [dir for dir in os.listdir(dir1) if os.path.isdir(os.path.join(dir1, dir))]<nl>dir2_folders = [dir for dir in os.listdir(dir2) if os.path.isdir(os.path.join(dir2, dir))]<nl><nl>for dir in dir1_folders:<nl><tab>if dir in dir2_folders:<nl><tab><tab>shutil.copytree(os.path.join(dir1, dir), os.path.join(copy_dest, dir))", "out": "一致するフォルダを検索してからファイルとサブフォルダをコピーする", "out_en": "find match folders then copy files and subfolders"}
{"in": "l1 = ['a', 'b', 'c', 'd']<nl>l2 = ['c', 'd', 'e']<nl>set(l1).intersection(l2)<nl>set(['c', 'd'])", "out": "Pythonでは、2つのリストで同じ要素の数を検索する", "out_en": "in Python find number of same elements in 2 lists"}
{"in": "djang-nested-inline", "out": "Django-adminでは、どのようにしてforeignkeyのforeignkeyを同じページに表示するのですか。", "out_en": "In Django-admin, how to show foreignkey's foreignkey in the same page?"}
{"in": "from bs4 import BeautifulSoup as Soup<nl><nl>with open(\"sample.xml\", \"r\") as f:<nl><tab>target_xml = f.read()<nl><nl># create a `Soup` object<nl>soup = Soup(target_xml, \"xml\")<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><nl><nl># loop through all <driver> returned as a list and prints all <nl>for d in soup.find_all(\"driver\"):<nl><tab>print(d)", "out": "xmlタグとともに子ノードをPythonで出力", "out_en": "printing child nodes along with their xml tags in python"}
{"in": "re.search(r'\\b' + re.escape(' '.join(query)) + r'\\b', ' '.join(line)) is not None", "out": "python-stringは単語全体にのみマッチします。", "out_en": "python - string match only whole words"}
{"in": "import pygit2<nl>repo = pygit2.Repository('.git')<nl>branch = repo.lookup_branch('new')<nl>ref = repo.lookup_reference(branch.name)<nl>repo.checkout(ref)", "out": "pygit2で支店をチェックアウトするにはどうすればいいですか?", "out_en": "How do you checkout a branch with pygit2?"}
{"in": "itemlist = dom.getElementsByTagName('filter-name')<nl>for item in itemlist:<nl><tab>if \"Filter1\" == item.childNodes[0].nodeValue:<nl><tab><tab>#need to comment the whole node containing the filter-name<nl><tab><tab>comment_node(item.parentNode)<nl>print dom.toxml() # verif", "out": "Pythonでxmlセクションにコメントを付ける", "out_en": "Comment xml sections in Python"}
{"in": "#!/usr/bin/python2.x", "out": "Python-__future__から_statementでインポートできません", "out_en": "Python - Can't import with_statement from __future__"}
{"in": "for i in range(len(a)):<nl><tab>if a[i] > max:<nl><tab><tab>max = a[i]<nl><tab><tab>maxIndex = i", "out": "リスト内の最大のPython検索インデックス", "out_en": "Python Finding Index of Maximum in List"}
{"in": "names = list()<nl>a = open(sf, 'r')<nl>for row in a:<nl><tab>place = row.find(',')<nl><tab>names.append(row[:place])<nl>print(names)", "out": "csvファイルから特定の文字列を取り出してリストにする方法-python 3.4", "out_en": "How to take a specific string from a csv file into a list - python 3.4"}
{"in": "import numpy as np<nl>x = np.random.rand(4)<nl>x = x.reshape(-1,1)<nl>xij = np.matrix(x.T - x)", "out": "ループなしでnumpy内のxi-xj行列を計算する(api呼び出しによる)", "out_en": "compute a xi-xj matrix in numpy without loops (by api calls)"}
{"in": "args = {'fields' : 'birthday,name' }<nl>friends = graph.get_object(\"me/friends\",**args)", "out": "facebookはPythonを使って友達の誕生日を取得する", "out_en": "facebook get friends' birthdays using python"}
{"in": "global lat, lon, speed", "out": "変数がbaseHTTPserverクラス内から更新されない", "out_en": "Variables not updated from within baseHTTPserver class"}
{"in": "if request.method == \"POST\":<nl><tab><tab>form = XXXXForm(request.POST,request.FILES)<nl><tab><tab>if form.is_valid():<nl><tab><tab><tab>docfile=request.FILES['docfile']<nl><nl><tab><tab>if isinstance(docfile, (InMemoryUploadedFile, TemporaryUploadedFile)):<nl><tab><tab><tab>book = xlrd.open_workbook(file_contents=docfile.read(), formatting_info=True, on_demand=True)<nl><tab><tab>else:<nl><tab><tab><tab>book = xlrd.open_workbook(filename=docfile, formatting_info=True, on_demand=True)<nl><nl><tab><tab>sheet = book.sheet_by_index(0)<nl><tab><tab>new_csv_file = csv.writer(open('new_filename', 'w'))<nl><tab><tab># read file<nl><tab><tab>for line in range(1, sheet.nrows):<nl><tab><tab><tab>new_row = [request.session.get('uploader'), request.session.get('date')]<nl><tab><tab><tab>new_row.extend(sheet.row_values(line))<tab><tab><tab><tab><nl><tab><tab><tab>new_csv_file.writerow(new_row)", "out": "django1.8-Excelをアップロードしてデータベースに挿入するときに情報を手動で追加する方法", "out_en": "django1.8- how to append information manually when uploading Excel and inserting into database"}
{"in": "if x % 3 == 0:<nl><tab>print 'x is divisible by 3'", "out": "Pythonで値が整数かどうかを判断する", "out_en": "Determining whether an value is a whole number in Python"}
{"in": "for m in modules:<nl><tab>globals()[m] = __import__(m)", "out": "Pythonで配列からモジュールをインポートする方法は?", "out_en": "How do I import modules from an array in python?"}
{"in": "print sorted(student_tuples, key=lambda t: (-t[2], t[0]))<nl># [('john', 'A', 15), ('dave', 'C', 12), ('peter', 'B', 12)]", "out": "最初に減少値でソートし、次に増加値でソートする方法", "out_en": "How to sort in decreasing value first then increasing in second value"}
{"in": "EdgeFaces = {} # mapping from edge to adjacent faces<nl>for ThisFace in TheMesh.faces :<nl><tab>for ThisEdge in ThisFace.edge_keys :<nl><tab><tab>if not ThisEdge in EdgeFaces :<nl><tab><tab><tab>EdgeFaces[ThisEdge] = []<nl><tab><tab>#end if<nl><tab><tab>EdgeFaces[ThisEdge].append(ThisFace.edge_keys)<nl><tab>#end for<nl>#end for", "out": "Blender Python APIでプレーンの境界を検出しています", "out_en": "Detecting border of plane in Blender Python API"}
{"in": "connect.execute(tobeexec, params);<nl>connect.commit()<nl>connect.close()", "out": "Python sqlite3データの保存", "out_en": "Python sqlite3 saving data"}
{"in": "if x[3] is x[4]:<nl><tab>print \"What's the difference?\"", "out": "Python-同じオブジェクトを指す2つのリスト要素を区別する方法は?", "out_en": "Python - How do I differentiate between two list elements that point to the same object?"}
{"in": "title, author, news_id<nl>hi   ,<tab>max,<tab>   1<nl>hello,<tab>max,<tab>   1<nl>world,<tab> me,<tab>   1<nl>sup  ,<tab> me,<tab>   2", "out": "Appエンジン検索での複数のフィールド名", "out_en": "Multiple field names in appengine search"}
{"in": "import datetime as dt<nl><nl>d = {0: \"(oh)\",<nl><tab> 1: \"one\",<nl><tab> 2: \"two\",<nl><tab> 3: \"three\",<nl><tab> 4: \"four\",<nl><tab> 5: \"five\",<nl><tab> 6: \"six\",<nl><tab> 7: \"seven\",<nl><tab> 8: \"eight\",<nl><tab> 9: \"nine\",<nl><tab> 10: \"ten\",<nl><tab> 11: \"eleven\",<nl><tab> 12: \"twelve\",<nl><tab> 13: \"thirteen\",<nl><tab> 14: \"fourteen\",<nl><tab> 15: \"fifteen\",<nl><tab> 16: \"sixteen\",<nl><tab> 17: \"seventeen\",<nl><tab> 18: \"eighteen\",<nl><tab> 19: \"nineteen\",<nl><tab> 20: \"twenty\",<nl><tab> 30: \"thirty\",<nl><tab> 40: \"forty\",<nl><tab> 50: \"fifty\",<nl><tab> 60: \"sixty\"}<nl><nl>def display_time(t):<nl><tab>Hour = d[int( t[0:2])] if t[0:2] != \"00\" else d[12]<nl><tab>Suffix = 'a.m.' if d[int( t[7:9])] == Hour else 'p.m.'<nl><nl><tab>if  t[3] == \"0\":<nl><tab><tab>if  t[4] == \"0\":<nl><tab><tab><tab>Minute = \"\"<nl><tab><tab>else:<nl><tab><tab><tab>Minute = d[0] + \" \" + d[int(t[4])]<nl><tab>else:<nl><tab><tab>Minute = d[int(t[3])*10] + '-' + d[int(t[4])]<nl><tab>print 'The time is', Hour, Minute, Suffix<nl><nl>display_time(dt.datetime.now().strftime('%I %M %H'))<nl>display_time(\"07 45 19\")<nl>display_time(\"11 06 23\")<nl>display_time(\"00 00 00\")", "out": "Pythonカレントタイム(英語文)", "out_en": "Python Current Time in English Sentence"}
{"in": "def getBlocks(filepath):<nl><tab>with open(filepath) as f:<nl><tab><tab>blocks = []<nl><tab><tab>go = False<nl><tab><tab>for line in f:<nl><tab><tab><tab>if line.strip() == startDelimiter:<nl><tab><tab><tab><tab>block = ''<nl><tab><tab><tab><tab>go = True<nl><tab><tab><tab>if go:<nl><tab><tab><tab><tab>block += line<nl><tab><tab><tab>if line.strip() == endDelimiter:<nl><tab><tab><tab><tab>blocks.append(block)<nl><tab><tab><tab><tab>block = ''<nl><tab><tab><tab><tab>go = False<nl><tab><tab>if block:<nl><tab><tab><tab>blocks.append(block)<nl><tab>return blocks", "out": "Pythonが特定のテキスト行を読み込む", "out_en": "Python read specific lines of text"}
{"in": "from django.core.urlresolvers import reverse<nl>from django.http import Http404<nl><nl>class RestrictStaffToAdminMiddleware(object):<nl><tab>\"\"\"<nl><tab>A middleware that restricts staff members access to administration panels.<nl><tab>\"\"\"<nl><tab>def process_request(self, request):<nl><tab><tab>if request.path.startswith(reverse('admin:index')):<nl><tab><tab><tab>if request.user.is_authenticated():<nl><tab><tab><tab><tab>if not request.user.is_staff:<nl><tab><tab><tab><tab><tab>raise Http404<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>raise Http404", "out": "Djangoの管理ページへのアクセスを制限するにはどうすればいいですか。", "out_en": "How do I restrict access to admin pages in Django?"}
{"in": "import csv<nl>log=open(\"sync_de.log\",'r')<nl>out=open(\"fn.csv\",'w')<nl>csv = csv.writer(out)<nl><nl>#  to store the list<nl>out_list = []<nl><nl>for eachline in log:<nl>   # your code<nl>   if blabla:<nl><tab>  out_list.append([filename, start, end])<nl><nl># write the csv<nl>csv.writerows(out_list)", "out": "Pythonを使用したBitTorrent同期ログの解析", "out_en": "BitTorrent Sync log parsing using Python"}
{"in": "csfont = {'fontname':'Comic Sans MS'}<nl>hfont = {'fontname':'Helvetica'}<nl><nl>plt.title('title',**csfont)<nl>plt.xlabel('xlabel', **hfont)<nl>plt.show()", "out": "matplotlib(python)でフォントを変更する方法は?", "out_en": "How to change fonts in matplotlib (python)?"}
{"in": "def foo(**kwargs):<nl><tab>pass<nl><nl>foo(**{ 'foo' : 123, 'bar' : 456 })", "out": "`kwargs`リストを生成する方法", "out_en": "How to generate a `kwargs` list?"}
{"in": "def replace_all(text, dic):<nl><tab>for i, j in dic.iteritems():<nl><tab><tab>text = text.replace(i, j)<nl><tab>return text<nl><nl>f_dic = {'a':'d'}<nl>s_dic = {'1':'x'}<nl><nl>with open('file1.csv','r') as f:<nl><tab>text=f.read()<nl><tab>with open('file2.csv','w') as w:<nl><tab><tab>text=replace_all(text,f_dic)<nl><tab><tab>text=replace_all(text,s_dic)<nl><tab><tab>print text<nl><tab><tab>w.write(text)", "out": "csvファイル内の複数の文字列を置換", "out_en": "Replace multiple strings in csv file"}
{"in": "from collections import defaultdict<nl><nl>def ordered(data, N):<nl><tab>edges = defaultdict()<nl><tab>for v1, v2 in data:<nl><tab><tab>edges.setdefault(v1, []).append(v2)<nl><tab><tab>edges.setdefault(v2, []).append(v1)<nl><nl><tab>visited = [False] * N<nl><tab>path = None<nl><tab>for v in range(N):<nl><tab><tab>if not visited[v]:<nl><tab><tab><tab>path = dfs(edges, visited, v)<nl><tab><tab><tab>if path is not None: break<nl><tab>if path is not None:<nl><tab><tab>return [[path[i], path[i + 1]] for i in range(len(path) - 1)]<nl><nl><nl>def dfs(edges, visited, v1, vp=None):<nl><tab>path = [v1]<nl><tab>if visited[v1]: return path<nl><tab>visited[v1] = True<nl><tab>for v2 in edges[v1]:<nl><tab><tab>if v2 == vp: continue<nl><tab><tab>path_child = dfs(edges, visited, v2, v1)<nl><tab><tab>if path_child is not None: return path + path_child<nl><tab>return None<nl><nl>data = [[0, 7], [1, 8], [2, 9], [3, 0], [4, 1], [5, 2], [6, 3], [4, 7], [8, 5], [9, 6]]<nl>N = 10<nl>ord = ordered(data, N)<nl><nl>[[0, 7], [7, 4], [4, 1], [1, 8], [8, 5], [5, 2], [2, 9], [9, 6], [6, 3], [3, 0]]", "out": "Nx2整数numpy配列の行を効率的にグループ化して、行内の連続する要素と一致させる", "out_en": "Efficient grouping of rows from Nx2 integer numpy array to match sequential elements in rows"}
{"in": "for image in soup.findAll(\"img\"):<nl><tab><tab>print \"Old Image Path: %(src)s\" % image<nl><tab><tab>#Get file name<nl><tab><tab>filename = image[\"src\"].split(\"/\")[-1]<nl><tab><tab>#Get full path name if url has to be parsed<nl><tab><tab>parsedURL[2] = image[\"src\"]<nl><tab><tab>image[\"src\"] = '%s\\%s' % (phonepath,filename)<nl><tab><tab>#Old File path (local to computer)<nl><tab><tab>#image[\"src\"] = '%s\\%s' % (out,filename)<nl><tab><tab>print 'New Path: %s' % image[\"src\"]<nl><tab><tab>#<tab>   print image<nl><tab><tab>outpath = os.path.join(out, filename)<nl><nl><tab><tab>#retrieve images<nl><tab><tab>if parsedURL[2].lower().startswith(\"http\"):<nl><tab><tab><tab>#urlretrieve(image[\"src\"], outpath)<nl><tab><tab><tab>urlretrieve(parsedURL[2], outpath)<nl><tab><tab><tab>print image[\"src\"].lower()<nl><tab><tab>else:<nl><tab><tab><tab>print \"HTTP INFO \" + urlparse.urlunparse(parsedURL)<nl><tab><tab><tab>print \"HTTP INFO \" + image[\"src\"].lower()<nl><tab><tab><tab>urlretrieve(urlparse.urlunparse(parsedURL), outpath) #Constructs URL from tuple (parsedURL)<nl><tab><tab><tab>#print image[\"src\"].lower()", "out": "Beautiful Soup Libraryを使用してダウンロードしたイメージを開くことができ", "out_en": "Unable to open images downloaded using beautiful soup library"}
{"in": "import csv<nl><nl>with open('filename.csv', 'rb') as f:<nl><tab>reader = csv.reader(f)<nl><tab>counter = 0<nl><tab>for row in reader:<nl><tab><tab>if len(row) == 0:<nl><tab><tab><tab>counter += 1<nl><tab><tab><tab>print counter, row", "out": "Pythonを使用したCSVファイル内の特定の列の取得", "out_en": "Getting a specific column in a CSV file using Python"}
{"in": "df[1] = df[0].dt.to_period('M')", "out": "タイムスタンプの列をパンダのピリオドに変換する", "out_en": "Convert a column of timestamps into periods in pandas"}
{"in": "from itertools import izip_longest<nl>def grouper(iterable, n, fillvalue=None):<nl><tab>\"Collect data into fixed-length chunks or blocks\"<nl><tab># grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx<nl><tab>args = [iter(iterable)] * n<nl><tab>return izip_longest(fillvalue=fillvalue, *args)<nl><nl><nl>with open('z.t') as f:<nl><tab>d = grouper(f, 4)<nl><tab>for x in d:<nl><tab><tab><tab>print ','.join(y.rstrip() for y in x) <nl><nl>a,b,c,d,e,f,g,h<nl>i,j,k,l,m,n,o,p", "out": "カラム数が異なるデータファイルを読み込み中python", "out_en": "Reading data file with varying number of columns python"}
{"in": "import csv<nl>with open(\"input.csv\", \"rb\") as input, open(\"output.csv\", \"wb\") as output:<nl><tab>w = csv.writer(output)<nl><tab>for record in csv.reader(input):<nl><tab><tab>w.writerow(tuple(s.remove(\"<nl>\") for s in record))", "out": "ファイル内の引用符で囲まれたすべてのテキストから改行を削除するにはどうすればいいですか。", "out_en": "How could I remove newlines from all quoted pieces of text in a file?"}
{"in": "#!/usr/bin/python<nl># -*- coding: utf-8 -*-<nl><nl>import serial<nl>import sys<nl>import time<nl><nl>port = \"/dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AE01J6GZ-if00-port0\"<nl><nl>baudrate = 115200<nl><nl>if len(sys.argv) == 3:<nl><tab>ser = serial.Serial(sys.argv[1], sys.argv[2])<nl>else:<nl><tab>print \"# Please specify a port and a baudrate\"<nl><tab>print \"# using hard coded defaults \" + port + \" \" + str(baudrate)<nl><tab>ser = serial.Serial(port, baudrate)<nl><nl># enforce a reset before we really start<nl>#ser.setDTR(1)<nl>#time.sleep(0.25)<nl>#ser.setDTR(0)<nl><nl>while 1:<nl><tab>sys.stdout.write(ser.readline())<nl><tab>sys.stdout.flush()", "out": "Arduinoプロジェクトからシリアルデータを読み込む(pySerial)", "out_en": "Reading serial data from Arduino project (pySerial)"}
{"in": "import urllib<nl>import json<nl><nl>response = urllib.urlopen(\"http://sncf.mobi/infotrafic/iphoneapp/transilien/?gare=BEC\")<nl>if response.getcode() == 200:<nl><tab>data = json.load(response)<nl><tab>for train in data[\"D\"]:<nl><tab><tab>print \"Train number\", train[\"numerotrain\"], \"code\", train[\"codevoyageur\"]<nl>else:<nl><tab>print \"Failed to load data:\", response.getcode()", "out": "順序付きリストへの混合文字文字列", "out_en": "Mixed-characters strings to ordered list"}
{"in": "cursor.rowcount", "out": "Python sqlite UPDATEが動作したかどうかを判断するにはどうすればいいですか?", "out_en": "How do I determine if a Python sqlite UPDATE worked?"}
{"in": "#!/usr/bin/env python3<nl><nl>import re<nl><nl>str=\"[class,'STOCK'],[symbol,'AAII'],[open,2.60],[high,2.70],[low,2.53],[close,2.60],[volume,458500],[date,'21-Dec-04'],[openClosePDiff,0.0],[highLowPDiff,0.067],[closeEqualsLow,'false'],[closeEqualsHigh,'false']\"<nl>str = re.sub('^\\[','',str)<nl>str = re.sub('\\]$','',str)<nl>array = str.split(\"],[\")<nl>for line in array:<nl><tab>print(line)", "out": "Pythonで株価をトークンに分割する", "out_en": "Split stock quote to tokens in Python"}
{"in": "for k in myDict:<nl><tab>myDict[k] /= 2", "out": "dictの各値に対して?", "out_en": "For each value in dict?"}
{"in": "from pdb import set_trace<nl>driver = webdriver.Firefox()<nl>driver.get(\"google.com\")<nl>set_trace()<nl>driver.find_element_by_xpath(\"//input[@id='gbqfq']\").send_keys(\"cats\" + Keys.RETURN)", "out": "Pythonとselenium:既存のブラウザで再実行", "out_en": "Python with selenium: rerun on pre-existing browser"}
{"in": "import numpy as np<nl>row, col = 10, 5<nl>matrix = np.random.randint(2, size=(row,col))", "out": "NUMPY作成、ランダムなバイナリデータで埋める", "out_en": "NUMPY create, fill with random binary data"}
{"in": "import sys<nl><nl>if len(sys.argv) != 2:<nl><tab>print 'Add an input file as parameter'<nl><tab>sys.exit(1)<nl><nl>print 'opening file: %s' % sys.argv[1]<nl><nl>with open(sys.argv[1]) as input, open('output', 'w+') as output:<nl><tab>for line in input:<nl><tab><tab>if line is not None:<nl><tab><tab><tab>if line == '<nl>':<nl><tab><tab><tab><tab>pass<nl><tab><tab><tab>elif 'OK' in line:<nl><tab><tab><tab><tab>pass<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>new_line = line.split(' ', 7)<nl><tab><tab><tab><tab>output.write('%s,%s,%s,%s / %s<nl>' % (new_line[1], new_line[2], new_line[3], new_line[4], new_line[6]))<nl><tab><tab><tab><tab># just for checking purposes let's print the lines<nl><tab><tab><tab><tab>print '%s,%s,%s,%s / %s' % (new_line[1], new_line[2], new_line[3], new_line[4], new_line[6])", "out": "Python-テキストファイル内の特定のデータをフォーマットする", "out_en": "Python - Formatting specific data within text files"}
{"in": "data['extras'] = base64.b64encode(zlib.compress(\"My string\".encode(\"utf-8\")))", "out": "圧縮された文字列をjsonにダンプする方法は?", "out_en": "How to dump compressed strings in json?"}
{"in": "word.ActiveDocument.Sections(1).Headers(win32.constants.wdHeaderFooterPrimary).Range.Text='test text'", "out": "win32comでのMS Wordヘッダーの編集", "out_en": "Editing MS Word header with win32com"}
{"in": "class FavoriteEnroledTrainee(SessionMixin, View):<nl><tab>def get(self, request, *args, **kwargs):<nl><tab><tab>print 'here'<nl>favorite_enroled_trainee = dajaxice_register(method='GET', name='company.favorite')(FavoriteEnroledTrainee.as_view())", "out": "クラスベースビューのあるDajaxice", "out_en": "Dajaxice with Class Based View"}
{"in": "from pylab import *<nl><nl>L1 = ['London', 'Paris', 'Tokio', 'Berlin', 'Barcelona', 'Reykjavik']<nl>pos = arange(len(L1))<nl>yticks(pos, L1)<nl><nl>I1 = [['London',0],['Paris',10],['Barcelona',23]]<nl>I2 = [['Paris',10],['Tokio',19],['Berlin',21],['Reykjavik',23]]<nl><nl>I1_y = [L1.index(el[0]) for el in I1]<nl>I1_x = [el[1] for el in I1]<nl><nl>I2_y = [L1.index(el[0]) for el in I2]<nl>I2_x = [el[1] for el in I2]<nl><nl>plot(I1_x, I1_y, 'o-')<nl>plot(I2_x, I2_y, 'x-')<nl>grid(True)<nl>savefig('countries.png')<nl>show()", "out": "Pyplotグラフマトリックス上の<string,number>ペアのマッピング", "out_en": "Pyplot Mapping <string,number> pairs on graph matrix"}
{"in": "from math import log10, floor<nl><nl>def convert(self, x, ROUND=0):<nl><nl><tab>conv = []<nl><nl><tab>for _ in range(x.size[0]):<nl><tab><tab>lst = x._data[_::x.size[0]].tolist()<nl><nl><tab><tab>if ROUND is not 0:<nl><tab><tab><tab>lst = [self.round_sig(elem, ROUND) if elem != 0 and<nl><tab><tab><tab><tab>   elem == elem else elem for elem in lst]<nl><nl><tab><tab>conv.append(lst)<nl><nl><tab>return conv<nl><nl>def round_sig(self, x, sig=2):<nl><tab>return round(x, sig-int(floor(log10(abs(x))))-1)", "out": "matlab.double配列をpython配列に変換します。", "out_en": "Convert matlab.double array to python array"}
{"in": "VideoData.objects.annotate(<nl><tab><tab>watches_count=models.Count('user_set')<nl><tab>).order_by('-watches_count')[:10]", "out": "Djangoで多対多の関係に注釈を付ける", "out_en": "Annotate many to many relation in Django"}
{"in": "myapp.show()<nl>print myapp.x<nl>if myapp.x == 1:<nl><tab>try :<nl><tab><tab>s.connect((myapp.ip, myapp.port))<nl><tab><tab>print 'connected'<nl><tab><tab>myapp.x = 0<nl><tab>except :<nl><tab><tab>print 'Unable to connect'<nl><tab><tab>myapp.x = 0", "out": "ファンクションから情報を受信しない", "out_en": "Not receiving information from function"}
{"in": "while True:<nl><tab>ans = input('Prompt ')<nl><tab>if ans:<nl><tab><tab>break<nl><tab>print ('You need to type something')", "out": "Python How to make it so entering no input prints you failed to input(入力に失敗したことを出力する方法)", "out_en": "Python How to make it so entering no input prints you failed to input"}
{"in": "shutil.copy(__file__, \"new_destination.py\")", "out": "shutilを使用して、計算後にPythonファイル自体をコピーするにはどうすればよいですか。", "out_en": "How do I use shutil to make a python file copy itself after doing a calculation?"}
{"in": "def main():<nl><tab>q = Queue.Queue()<nl><tab>for i in range(3):<nl><tab><tab>t = threading.Timer(1, run_function, [q, i])<nl><tab><tab>t.start()<nl><nl><tab>while True:<nl><tab><tab>item = q.get()<nl><tab><tab>save_to_disk(item)<nl><tab><tab>q.task_done()<nl><nl>def run_function(q, i):<nl><tab>t = threading.Timer(1, run_function, [q, i])<nl><tab>t.start()<nl><tab>q.put(function_with_delay(i))", "out": "1秒ごとに複数の関数を実行し、結果をファイルに書き込む", "out_en": "Run multiple functions every second, write result to file"}
{"in": "title = u\"Kl?ft skr?ms inf?r p? f?d?ral ?lectoral gro?e\"<nl>import unicodedata<nl>unicodedata.normalize('NFKD', title).encode('ascii','ignore')<nl>'Kluft skrams infor pa federal electoral groe'", "out": "Unicode文字列をPythonの文字列(余分なシンボルを含む)に変換する", "out_en": "Convert a Unicode string to a string in Python (containing extra symbols)"}
{"in": "b = ['cat', 'dog', 'god', 'star', 'lap', 'act']<nl>array = []<nl>t = 0<nl>for i, value in enumerate(b):<nl><tab>t = i+1<nl><tab>while t<len(b):<nl><tab><tab>if ''.join(sorted(value))==''.join(sorted(b[t])):<nl><tab><tab><tab>array.extend([value, b[t]])<nl><tab><tab>t+=1<nl>print array<nl>['cat', 'act', 'dog', 'god']", "out": "Pythonで配列内のアナグラムをフィルタ", "out_en": "Filter Anagram in Array in Python"}
{"in": "for y in range(10):<nl><tab>print<nl><tab>i = 10 - y<nl><tab>print ' ' * (y * 2),  # whitespaces<nl><tab>for x in range(i):<nl><tab><tab>print x,<nl><tab><tab>i = i - 1", "out": "降順範囲の複数行を出力するpython forループ", "out_en": "python for loop to print multiple lines of a descending range"}
{"in": "with open(r'C:\\path\\to\\logons.txt', 'r') as f:<nl><tab>for line in f:<nl><tab><tab>data = line.split()<tab># Splits on whitespace<nl><tab><tab>print '{0[0]:<15}{0[1]:<15}{0[2]:<5}{0[3]:<15}{0[4]:>15}'.format(data)", "out": "テキストファイルの列の配置", "out_en": "Align columns in a text file"}
{"in": "import pandas as pd<nl><nl>result = []<nl><nl>for i in range(1,31):<nl><tab>result.append(pd.DataFrame((find_peaks(df1['R'], df1['I {}'.format(i)])), index = None))<nl><tab>df2 = pd.concat(result)<nl><nl>print df2.head()<nl>df2.to_csv('Output.csv')", "out": "リストのリストをPythonのcsvにエクスポートする", "out_en": "exporting a list of lists to csv in python"}
{"in": "import scipy.io<nl>import numpy as np<nl>my_list = np.zeros((3,), dtype=np.object)<nl>my_list[:] = ['abc', 'def', 'ghi']<nl>scipy.io.savemat('test.mat', mdict={'my_list': my_list})", "out": "PythonからMATLAB:scipy.ioを使用した文字列のリストのエクスポート", "out_en": "Python to MATLAB: exporting list of strings using scipy.io"}
{"in": "try:<nl>  new_list1.append(float(item))<nl>except (ValueError, TypeError):<nl>  pass", "out": "浮動小数点に変換できないリスト内の項目を削除するには、何をコーディングすればいいですか?", "out_en": "What to code to delete any item in a list that can not be converted into a float?"}
{"in": "input='adId:4028cb901dd9720a011e1160afbc01a3;siteId:8a8ee4f720e6beb70120e6d8e08b0002;userId:5082a05c-015e-4266-9874-5dc6262da3e0'<nl><nl>result={}<nl>for pair in input.split(';'):<nl><tab>(key,value) = pair.split(':')<nl><tab>result[key] = value<nl><nl>print result['adId']<nl>print result['siteId']<nl>print result['userId']", "out": "Pythonでの構文解析", "out_en": "parsing in python"}
{"in": "rfile.close()", "out": "Python:永続的な接続を持つスレッド化されたHTTPサーバーをシャットダウンする方法(別のスレッドからのreadline()をkillする方法)", "out_en": "Python: How to shutdown a threaded HTTP server with persistent connections (how to kill readline() from another thread)?"}
{"in": "CYGWIN_KEY = \"SOFTWARE\\\\Cygwin\\\\setup\"<nl>hk_user = winreg.HKEY_CURRENT_USER<nl>key = winreg.OpenKey(hk_user, CYGWIN_KEY)<nl>root = winreg.QueryValueEx(key, \"rootdir\")[0]", "out": "PythonスクリプトでCygwinのインストールパスを取得する", "out_en": "Get Cygwin installation path in a Python script"}
{"in": "import threading,time<nl>def play1():<nl><tab>while time.time() <= start_time:<nl><tab><tab>pass<nl><tab>threading.Thread(target=listen_to_audio).start()<nl>def play2():<nl><tab>while time.time() <= start_time:<nl><tab><tab>pass<nl><tab>threading.Thread(target=play_audio).start()<nl>start_time=time.time()+20<nl>threading.Thread(target=play1).start()<nl>threading.Thread(target=play2).start()", "out": "Pythonで2つのメソッドを同時に起動する", "out_en": "Starting two methods at the same time in Python"}
{"in": "model = QSqlQueryModel()<nl>model.setQuery(\"select some stuff\", db)<nl>while model.canFetchMore():<nl><tab>model.fetchMore()<nl>tableView.setModel(model)", "out": "Qt-QTableViewでの垂直スクロールバーハンドルの通常の動作", "out_en": "Qt - Normal vertical scrollbar handle behavior in QTableView"}
{"in": "entry = [VC_s, VC_i, VT_s]<nl>rowAdd = tempfile.next()<nl>ofile.writerow(rowAdd + entry)", "out": "Python:各行の個々の列にリストを書き込む", "out_en": "Python: Write list to individual columns in each row"}
{"in": "class LoginHandler(tornado.web.RequestHandler):<nl><tab>def post(self):<nl><tab><tab>email_address = self.get_argument('email', '')<nl><tab><tab>password = self.get_argument('password', '')<nl><nl><tab><tab>if not email_address:<nl><tab><tab><tab>login_response = {<nl><tab><tab><tab><tab>'error': True, <nl><tab><tab><tab><tab>'msg': 'Please enter your email address.'<nl><tab><tab><tab>}<nl><tab><tab>elif not password:<nl><tab><tab><tab>login_response = {<nl><tab><tab><tab><tab>'error': True, <nl><tab><tab><tab><tab>'msg': 'Please enter your password.'<nl><tab><tab><tab>}<nl><tab><tab>else:<nl><tab><tab><tab>login_response = {<nl><tab><tab><tab><tab>'error': True, <nl><tab><tab><tab><tab>'msg': 'Thank You.'<nl><tab><tab><tab>}<nl><nl><tab><tab>self.write(login_response)", "out": "Tornadoサーバーに投稿", "out_en": "Post to Tornado server"}
{"in": "firststring = \"aaccddee\"<nl>secondstring = \"bb\"<nl>combinedstring = firststring[:2] + secondstring + firststring[2:]<nl>print(combinedstring)", "out": "Pythonで大きな文字列の間に小さな文字列を追加する方法", "out_en": "how to append a smaller string in between a larger string in python?"}
{"in": "from bson.objectid import ObjectId<nl>[i for i in dbm.neo_nodes.find({\"_id\": ObjectId(obj_id_to_find)})]", "out": "pymongoを使ったMongoDBでのObjectIdによる検索", "out_en": "search by ObjectId in mongodb with pymongo"}
{"in": "print ', '.join(jvm)", "out": "Pythonの出力フォーマット", "out_en": "output format in python"}
{"in": "import requests<nl>response = requests.get('https://docs.google.com/spreadsheet/ccc?key=0ArM5yzzCw9IZdEdLWlpHT1FCcUpYQ2RjWmZYWmNwbXc&output=csv')<nl>assert response.status_code == 200, 'Wrong status code'<nl>print response.content", "out": "Pythonを使用してGoogleドキュメントの公開スプレッドシートをcsvにダウンロードする", "out_en": "Download google docs public spreadsheet to csv with python"}
{"in": "self.fields['author'].queryset = choices", "out": "ModelMultipleChoiceFieldの選択を変更する方法", "out_en": "How to Modify Choices of ModelMultipleChoiceField"}
{"in": "im0 = ax0.imshow(im2, aspect='auto',extent=[-0.15,0.15,0,4])", "out": "Matplotlib-範囲の異なる2つのカラーマップ", "out_en": "Matplotlib - two different colormaps with different ranges"}
{"in": "from fabric.context_managers import settings<nl>from fabfile import deployFiles, deployConfiguration<nl><nl>with settings(host_string='user@192.168.xx.xx'):<nl><tab>deployFiles()<nl><tab>deployConfiguration('master', 7)", "out": "Pythonスクリプト内でFabファイルを起動する", "out_en": "Launch Fab File inside a python script"}
{"in": "df.C[df.B == 'x'] = df.C.shift(-1)", "out": "iterrows()を使用せずにデータフレーム値を設定することはできますか。", "out_en": "Can I set dataframe values without using iterrows()?"}
{"in": "def build_tree(nodes):<nl><tab># create empty tree to fill<nl><tab>tree = {}<nl><nl><tab># fill in tree starting with roots (those with no parent)<nl><tab>build_tree_recursive(tree, None, nodes)<nl><nl><tab>return tree<nl><nl>def build_tree_recursive(tree, parent, nodes):<nl><tab># find children<nl><tab>children  = [n for n in nodes if n.parent == parent]<nl><nl><tab># build a subtree for each child<nl><tab>for child in children:<nl><tab># start new subtree<nl><tab>tree[child.name] = {}<nl><nl><tab># call recursively to build a subtree for current node<nl><tab>build_tree_recursive(tree[child.name], child, nodes)", "out": "ツリーリストを階層ディクショナリに変換しています", "out_en": "Converting tree list to hierarchy dict"}
{"in": "line = line.rstrip(\"<nl>\")", "out": "Pythonで予期しない改行が出力される", "out_en": "Unexpected newlines being printed in Python"}
{"in": "def isCellNeighbor(c1, c2):<nl>   if abs(c1.x - c2.x) == 1: return True<nl>   if abs(c1.y - c2.y) == 1: return True<nl>   return False", "out": "PythonでのDFSグラフの生成", "out_en": "DFS Graph Generation in Python"}
{"in": "wx.EVT_ERASE_BACKGROUND", "out": "WxPythonパネルに背景の画像を表示", "out_en": "Put image for background in wxpython panel"}
{"in": "x=['#%d' % i for i in range(10)]<nl>['Hey!' if i%3 == 0 else b for  i,b in enumerate(x)]", "out": "Pythonでリスト内のN番目ごとの要素を割り当てる", "out_en": "assigning every Nth element in a list in python"}
{"in": "from django.db.models import Q<nl>from isbnlib import get_isbnlike, is_isbn10, is_isbn13, to_isbn10, to_isbn13<nl><nl>class Question_Admin(admin.ModelAdmin):<nl><tab>def get_search_results(self, request, queryset, search_term):<nl><tab><tab>queryset, use_distinct = super(Question_Admin, self).get_search_results(request, queryset, search_term)<nl><tab><tab>isbn = get_isbnlike(search_term, level='normal')<nl><tab><tab>if isbn:<nl><tab><tab><tab>if is_isbn10(isbn[0]):<nl><tab><tab><tab><tab>converted = to_isbn13(isbn[0])<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>converted = to_isbn10(isbn[0])<nl><tab><tab><tab>queryset |= self.model.objects.filter(Q(isbn=isbn[0]) | Q(isbn=converted))<nl><tab><tab>return queryset, use_distinct", "out": "Django search_fieldsにカスタム関数を実装する", "out_en": "Implement custom function on Django search_fields"}
{"in": "def f(x,y):<nl><tab>return np.minimum(np.minimum(np.minimum(x,x-y),x**2),y+1)<nl><nl>plt.figure()<nl><nl>x_ = np.linspace(-180, 180, num=200)<nl>y_ = np.linspace(-180, 180, num=200)<nl>x,y = np.meshgrid(x_, y_)<nl><nl>levels = f(x, y)<nl><nl>c = plt.contour(x, y, levels, 50)<nl>plt.colorbar()", "out": "\"min\"を使用する関数のレベルセット", "out_en": "Level sets of a function using \"min\""}
{"in": "typ, data = imap_server.search(None, '(SUBJECT \"Whatever you are searching for\")')", "out": "Gmailを解析するpython imaplib", "out_en": "python imaplib parsing gmail"}
{"in": "post.user_key = shuffle(users)[0].key", "out": "ndb keyPropertyを設定する方法", "out_en": "How to set an ndb keyProperty"}
{"in": "scikits.timeseries", "out": "Pandas DataFrameでnaを表すにはどうすればよいでしょうか?", "out_en": "How do you represent na in a Pandas DataFrame?"}
{"in": "from swab import Swab<nl>s = Swab('/tmp/.swab-test-data')<nl>s.addexperiment('button-size', ['default', 'larger'], 'order-completed')", "out": "PythonでのA/B分割テストには、どのようなリソースがありますか?", "out_en": "What resources are there for A/B split-testing in Python?"}
{"in": "from selenium.webdriver.common.action_chains import ActionChains<nl><nl><nl>def hover(self):<nl><tab>wd = webdriver_connection.connection<nl><tab>element = wd.find_element_by_link_text(self.locator)<nl><tab>hov = ActionChains(wd).move_to_element(element)<nl><tab>hov.perform()", "out": "Python Webdriverでマウスオーバーする方法", "out_en": "How to mouseover in python Webdriver "}
{"in": "def addAction(self, action):<nl><tab># set the Choice in the cell<nl><tab>index = self.list.InsertStringItem(sys.maxint, '')<nl><tab>self.list.SetStringItem(index, self.columns['#'], str(index))<nl><tab>self.list.SetStringItem(index, self.columns['Action'], '')<nl><tab>self.list.SetStringItem(index, self.columns['Parameters'], '')<nl><nl><tab>item = self.list.GetItem(index, self.columns['Action'])<nl><tab>choice = wx.Choice(self.list, -1, name=action.name,<nl><tab><tab><tab> choices=[availableAction.name for availableAction in self.availableActions])<nl><tab>choice.SetClientData(0, index)<nl><tab>choice.Bind(wx.EVT_CHOICE, self.onActionChange)<nl><tab>item.SetWindow(choice, expand=True)<nl><tab>self.list.SetItem(item)<nl><nl><tab># set the third column's widgets<nl><tab>self.setItemParameters(index, action)<nl><nl><nl>def onActionChange(self, event):<nl><tab>action = copy.deepcopy(self.availableActionsDict[event.GetString()])<nl><tab>self.setItemParameters(event.GetEventObject().GetClientData(0), action)", "out": "ultimatelistctrl(WxPython)での選択ウィジェットの使用", "out_en": "Using a choice widget with ultimatelistctrl (wxpython)"}
{"in": "forms.py", "out": "djangoフォームをhtmlテンプレートに渡す方法", "out_en": "How a django form is passed to a html template"}
{"in": "import module1<nl>import unittest<nl><nl>class MyTest(unittest.TestCase):<nl><tab>def setUp(self):<nl><tab><tab># Replace othermod.function with our own mock<nl><tab><tab>self.old_func1 = module1.func1<nl><tab><tab>module1.func1 = self.my_new_func1<nl><nl><tab>def tearDown(self):<nl><tab><tab>module1.func1 = self.old_func1<nl><nl><tab>def my_new_func1(self, x):<nl><tab><tab>\"\"\"A mock othermod.function just for our tests.\"\"\"<nl><tab><tab>return True<nl><nl><tab>def test_func1(self):<nl><tab><tab>module1.func1(\"arg1\")", "out": "Pythonで関数を再定義する方法は?", "out_en": "How do I redefine functions in python?"}
{"in": "class NoValue:<nl><tab>pass<nl><nl>if someValue is NoValue:<nl><tab>doSomething()", "out": "Pythonでマッチングされない変数を定義するにはどうすればよいでしょうか。", "out_en": "How can you define a variable that will never be matched in Python?"}
{"in": "ser.baudrate = 115200", "out": "デバイスに接続しているときにpySerialでボーレートを変更する", "out_en": "Change baudrate in pySerial while connected to device?"}
{"in": "import subprocess<nl>script = \"~/full_path_to_your_bash_script.sh\"<nl># Uncomment following line to ensure execution by bash and remove potential problems with permissions.<nl>#script = \"bash \"+script<nl># Commands to call (add some more if you remember any):<nl>commands = [<nl><tab>['gnome-terminal', '-x', script],<nl><tab># xterm is usually present:<nl><tab>['xterm', '-e', script],<nl><tab>['rxvt', '-e', script]<nl><tab>]<nl>ok = 0<nl>for command in commands:<nl><tab>try:<nl><tab><tab>subprocess.call(command)<nl><tab><tab>ok = 1; break<nl><tab>except OSError, e:<nl><tab><tab>if e.errno==2: continue # No such file or directory - skip non-existing terminal and try another<nl><tab><tab>raise # Some other OSError occurred<nl><tab>except: raise<nl>if not ok: raise RuntimeError, \"No terminal available!\"", "out": "Pythonのsubprocess.callは、ターミナルから実行するとbashスクリプトを実行しますが、debianメニューからは実行しません。", "out_en": "Python subprocess.call runs bash script if run from terminal, but not from debian menu"}
{"in": "def zip2tar(zipname, tarname):<nl><tab>zipf = zipfile.ZipFile(zipname, 'r')<nl><tab>tarf = tarfile.TarFile(tarname, 'w')<nl><tab>timeshift = int((datetime.datetime.now() -<nl><tab><tab><tab><tab><tab> datetime.datetime.utcnow()).total_seconds())<nl><tab>for zipinfo in zipf.infolist():<nl><tab><tab>tarinfo = tarfile.TarInfo()<nl><tab><tab>tarinfo.name = zipinfo.filename<nl><tab><tab>tarinfo.size = zipinfo.file_size<nl><tab><tab>tarinfo.mtime = calendar.timegm(zipinfo.date_time) - timeshift<nl><tab><tab>if zipinfo.internal_attr & 1:<nl><tab><tab><tab>tarinfo.mode = 0666<nl><tab><tab><tab>tarinfo.type = tarfile.REGTYPE<nl><tab><tab>else:<nl><tab><tab><tab>tarinfo.mode = 0777<nl><tab><tab><tab>tarinfo.type = tarfile.DIRTYPE <nl><tab><tab>infile = zipf.open(zipinfo.filename)<nl><tab><tab>tarf.addfile(tarinfo, infile)<nl><tab>zipf.close()<nl><tab>tarf.close()", "out": "Python圧縮されたzipを圧縮されていないtarに変換", "out_en": "python convert compressed zip to uncompressed tar"}
{"in": "import networkx as nx<nl><nl># one of your examples<nl>g1 = nx.Graph([(1,3), (15,21), (1,10), (57,66), (76,85), (66,76)])<nl>print nx.connected_components(g1) # [[57, 66, 76, 85], [1, 10, 3], [21, 15]]<nl><nl># my own test case<nl>g2 =  nx.Graph([(1,2),(2,10), (20,3), (3,4), (4,10)])<nl>print nx.connected_components(g2) # [[1, 2, 3, 4, 10, 20]]", "out": "Python:リストをクラスタにマージする方法", "out_en": "python: how to merge a list into clusters?"}
{"in": "tag_dic[i] = None", "out": "Pythonでforループ内のディクショナリに項目を追加する方法", "out_en": "How to add items to dictionary in a for loop in Python?"}
{"in": "data1 = u'NAME: abc<nl>School Name: CD<nl>________________<nl>ENG: B   <nl>Mat: B   '<nl><nl>import re<nl>from itertools import izip<nl>data2 = re.split(r'[:<nl>________________]+',data1)<nl>i = iter(data2)<nl>ans = dict(izip(i, i))", "out": "python Unicode文字列分割/JSONへの変換", "out_en": "python Unicode string splitting/ to json conversion"}
{"in": "next_page_number = '1'<nl>print(next_page_number, type(next_page_number))  #output: 1, <class 'str'><nl># set str explicit or call int(next_page_number)<nl>if next_page_number == '1': <nl><tab>print('yes')<nl>else:<nl><tab>print('no')", "out": "href内のテキストの選択", "out_en": "Select text in href"}
{"in": "newlist = []<nl><nl>for i in filter_words:<nl><tab>if i not in skip_words:<nl><tab><tab>newlist.append(i)", "out": "2つのリストを比較して不要な単語を削除する", "out_en": "Comparing 2 lists to remove unwanted words"}
{"in": "np.fft.ifft(x, axis=1)", "out": "Python/Numpyで指定された次元の逆離散フーリエ変換", "out_en": "Inverse discrete Fourier transform of across specified dimension in Python/Numpy"}
{"in": "data = \"\"\"<nl>1100.21 57.66   1.8<nl>1157.88 57.79   1.7<nl>1272.85 58.03   1.67<nl>1330.34 58.22   1.67<nl>1389.   57.69   1.7<nl>1590.   57.01   1.67<nl>1820.   55.42   1.6<nl>2049.   59.35   1.5<nl>2308.   58.32   1.56<nl>2596.   57.28   1.6<nl>2711.   57.13   1.368<nl>2826.   55.61   1.33<nl>2883.   54.79   1.315<nl>2940.   53.78   1.325<nl>3001.   54.41   1.3<nl>3117.   55.93   1.2495<nl>3291.   57.15   1.28<nl>3377.   58.05   1.25<nl>3522.   58.41   1.31<nl>3725.   57.61   1.31<nl>3899.   53.55   1.195<nl>4015.   51.22   1.178<nl>4188.   50.89   1.185\"\"\"<nl>data = np.array([line.split() for line in data.strip().split('<nl>')], dtype='f8')<nl>x, y, z = data[:, 0], data[:, 1], data[:, 2]<nl><nl>def obj(a):<nl><tab>z_hat = a[0]*y**a[1]*x**a[2]+a[3]*x**a[4]<nl><tab>return ((z-z_hat)**2).sum()<nl><nl>import scipy.optimize as opt<nl>print opt.minimize(obj, np.ones(5))", "out": "Pythonで任意のユーザ定義の目的関数にCMA-ES最適化を適用するにはどうすればよいですか。", "out_en": "How to apply CMA-ES optimization to an arbitrary user defined objective function in Python?"}
{"in": "#! /usr/bin/python<nl><nl>import sys<nl>import pycurl<nl><nl>class Test:<nl><tab>def __init__(self):<nl><tab><tab>self.contents = ''<nl><nl><tab>def body_callback(self, buf):<nl><tab><tab>self.contents = self.contents + buf<nl><nl>sys.stderr.write(\"Testing %s<nl>\" % pycurl.version)<nl><nl>t = Test()<nl>c = pycurl.Curl()<nl>c.setopt(c.URL, 'http://curl.haxx.se/dev/')<nl>c.setopt(c.WRITEFUNCTION, t.body_callback)<nl>c.perform()<nl>c.close()<nl><nl>print(t.contents)", "out": "CURLに相当するPythonコードを作成する方法", "out_en": "How to achieve CURL equivalent python code"}
{"in": "textfile=open('somefile.txt','r')<nl>text_list=[line.split(' ') for line in textfile]<nl>unique_words=[word for word in text_list if word not in unique_words]<nl>print(len(unique_words))", "out": "Pythonで特定のディレクトリにあるテキストファイルの固有の単語をカウントする方法", "out_en": "how do I count unique words of text files in specific directory with Python?"}
{"in": "def get_vlan_iface():<nl><tab>while True:<nl><tab><tab>vlan = raw_input (\"what VLAN ID do you want to add? \"),<nl><tab><tab>iface = raw_input(\"what interface do you want to add the VLAN to? (e.g. eth10)\")<nl><tab><tab>print \"So we are adding VLAN %r to interface %r\" % (vlan, interface)<nl><nl><tab><tab>if raw_input(\"Are the details above correct? (Yes/No)>\")[0].lower() == \"y\":<nl><tab><tab><tab> return vlan,iface<nl><tab><tab>print \"Please Fix Your Entries!\"<nl><nl>vlan,iface = get_vlan_iface()", "out": "コード内の特定のポイントにループバックするPython", "out_en": "Python while loop back to specific point in code"}
{"in": "import subprocess<nl><nl>cmd = subprocess.Popen(['cd', '/home/time/tmprcc;', 'ino', 'build;',<nl><tab><tab><tab><tab><tab><tab>'ino', 'upload;'], stdout=subprocess.PIPE)<nl><nl>while cmd.poll() is None:<nl><tab>new_output = cmd.stdout.readline()<nl><tab>do_something_function(new_output)", "out": "os.systemの出力をWebアプリケーションに送信しています", "out_en": "Sending output of os.system to web app"}
{"in": "scipy.signal.deconvolve()", "out": "デコンボルブ2D配列", "out_en": "deconvolve 2D array"}
{"in": "d = g.degree_property_map(\"out\", weight)   # weight is an edge property map<nl>bins = linspace(d.a.min(), d.a.max(), 40)  # linear bins<nl>h = vertex_hist(g, d, bins)", "out": "Pythonのgraph_toolでの重み付き次数分布", "out_en": "Weighted Degree Distribution in Python's graph_tool"}
{"in": "if len(x) == len(set(x)):<nl><tab>print \"all elements are unique\"<nl>else:<nl><tab>print \"elements are not unique\"", "out": "リストのすべての要素が異なることを保証するための最もPython的な方法は何ですか?", "out_en": "What's the most pythonic way to ensure that all elements of a list are different?"}
{"in": "import re<nl><nl>BAD_WORDS = [\"spam\", \"ham\"]<nl>BAD_WORDS_RE = re.compile(r\"\\b(%s)\\b\" % \"|\".join(BAD_WORDS))<nl><nl>for i, line in enumerate(open(\"file.txt\").readlines()):<nl><tab>words = set(BAD_WORDS_RE.findall(line))<nl><tab>if words:<nl><tab><tab>print \"Found the following words on line %i: %s\" % (i + 1, \", \".join(words))<nl><tab><tab>print line", "out": "python djangoはファイルを分析してキーワードのリストを取得します。", "out_en": "python django analyze a file for a list of keywords"}
{"in": "from PIL import Image<nl>import images2gif as i2g<nl>images = i2g.readGif('Animated.gif', False)<nl>watermark = Image.open(\"Watermark.gif\")<nl>for i in images: i.paste(watermark, (1, 1))<nl><nl>i2g.writeGif('Out.gif', images, 0.5) # You may wish to play with the timing, etc.<nl>exit()", "out": "Python PILを使用したウォーターマークGIF", "out_en": "Watermark GIF with Python PIL"}
{"in": "with open('your_file', 'rt') as filehandle:<nl>  lines = filehandle.readlines()[4:]<nl><nl>for line in lines:<nl><tab>print line<nl><tab>#do something", "out": "Pythonで特定の行から先を読む", "out_en": "Reading from a certain line onwards in python"}
{"in": "file = tkFileDialog.askopenfile(parent=root,mode='rb',filetypes=[('Subrip Subtitle File','*.srt')],title='Choose a subtitle file')<nl>abs_path = os.path.abspath(file.name)", "out": "tkFileDialogを使用してファイルの絶対パスを取得する方法", "out_en": "How to get the absolute path of a file using tkFileDialog?"}
{"in": "def getDocPrefixes(self, deviceId):<nl><tab>f = sq.sql.func.doc_codes(deviceId, type_=types.String)<nl><nl><tab>columns = [<nl><tab><tab>sq.Column('name', types.String),<nl><tab><tab>sq.Column('sufix', types.String)<nl><tab>]<nl><nl><tab>with self.con.begin():<nl><tab><tab>return [dict(x.items()) for x in self.con.execute<nl><tab><tab><tab>(<nl><tab><tab><tab><tab>select(columns).<nl><tab><tab><tab><tab>select_from(f)<nl><tab><tab><tab>).fetchall()]", "out": "postgresでpsqlを使用すると、sqlalchemyから'ghost'ROLLBACKが返されますが、返されません。", "out_en": "I'm getting a 'ghost' ROLLBACK from sqlalchemy but not when use psql with postgres"}
{"in": "def Main():<nl><tab>Class_A_Input = int(raw_input('Enter Class A tickets sold: '))<nl><tab>total_profit(Class_A_Input)<nl><nl>def total_profit(Class_A_Tickets):<nl><tab>print (Class_A_Tickets * 15)<nl><tab>a = Class_A_Tickets * 15<nl><tab>b = str(a)<nl><tab>text_file = open('test.txt', 'w')<nl><tab>text_file.write(b)<nl><tab>text_file.close()<nl><nl>Main()", "out": "Python-関数をテキストドキュメントに送る", "out_en": "Python - Send Function Into Text Document"}
{"in": "def fchar(ch,mi):<nl><tab>global numLi<nl><tab>fc=ch<nl><tab>li=\"\"<nl><tab>for c in infected[mi:]:<nl><tab><tab>if fc==c :<nl><tab><tab><tab>li+=fc<nl><tab><tab><tab>mi = mi+1<nl><tab><tab>else:<nl><tab><tab><tab>break<nl><nl><tab>if mi<len(infected) :<nl><tab><tab>return li+\" \"+fchar(infected[mi],mi)<nl><tab>else:<nl><tab><tab>return li<nl><nl>infected =input(\"Enter DNA sequence<nl>\") ;#\"AAATTTTTTTTGCCCCCCA\"<nl>x=fchar(infected[0],0)<tab><tab> <nl>newSet = x.split(' ')<nl>print(newSet)", "out": "Pythonで文字列を分割して、各部分に同じ文字だけが含まれるようにする方法", "out_en": "How to split a string into parts that each part contains only same characters in python"}
{"in": "option = 0<nl>comicdb = []<nl><nl>while option != 3:<nl><tab>print \"--------------------------\"<nl><tab>print \"1. Add a New Comic Book\"<nl><tab>print \"2. Print the Database\"<nl><tab>print \"3. Quit\"<nl><tab>option = int(raw_input(\"Pick an Option: \"))<nl><tab>if option == 1:<nl><tab><tab>title = raw_input(\"Comic Book Title: \")<nl><tab><tab>issue = int(raw_input(\"Issue Number: \"))<nl><tab><tab>publisher = raw_input(\"Publisher: \")<nl><tab><tab>temp_list = []<nl><tab><tab>temp_list.append(title)<nl><tab><tab>temp_list.append(issue)<nl><tab><tab>temp_list.append(publisher)<nl><tab><tab>comicdb.append(temp_list)<nl><tab><tab>print comicdb", "out": "リストへの値の追加", "out_en": "Adding values to a list"}
{"in": "pycassa.connect_thread_local()", "out": "Pylonsアプリ内でCassandraに接続する方法は?", "out_en": "How to connect to Cassandra inside a Pylons app?"}
{"in": "auth_token_key = request.get('auth_token_key')", "out": "リダイレクトURLからの情報の解析", "out_en": "Parsing Information from redirect URL"}
{"in": "def somestring(**kwargs):<nl>  return ', '.join('%s=%r' % x for x in kwargs.iteritems())", "out": "辞書をキーワード引数の文字列に変換する方法", "out_en": "how can I convert a dictionary to a string of keyword arguments?"}
{"in": "new_col_list = ['city','state','regions','country']<nl>for n,col in enumerate(new_col_list):<nl><tab>df[col] = df['location'].apply(lambda location: location[n])<nl><nl>df = df.drop('location',axis=1)", "out": "パンダのタプルから複数の列へ", "out_en": "From tuples to multiple columns in pandas"}
{"in": "for file in list_file:<nl>  outStat=\"path_for_sum_output\"<nl>  arcpy.Statistics_analysis(file,outStat, [[\"field_value\", \"SUM\"]])<nl>  rowsStat = arcpy.SearchCursor(outStat)<nl>  for row in rowsStat:<nl><tab> sum=row.getValue('Sum_field_value')<nl><nl>  #formate name of file so the format match with field ID_old of the feature class<nl>  namelist=file.split('_')<nl>  myname=' '.join(namelist)<nl>  print myname <nl><nl>  fc='big_file'<nl>  cursor=arcpy.da.UpdateCursor(fc,['Sum_value'], \"ID_old = '\" +myname+ \"'\")<nl>  for row in cursor:<nl><tab>  row[0]= sum<nl><tab>  cursor.updateRow(row)<nl><tab>  print row", "out": "python-in-arcmap、行IDを使用してクエリーし、別のフィーチャクラスからフィールド値を検索する方法", "out_en": "python-in-arcmap, how to query using row ID and look for field values from another feature class"}
{"in": "datetime.strptime(str(newdate),\"%Y-%m-%d %H:%M:%S\")", "out": "日時型で時間を置き換えるPython", "out_en": "replace hours in a datetime type python"}
{"in": "class ProductFactory(factory.django.DjangoModelFactory):<nl><tab>FACTORY_FOR = Product <nl><nl><tab>name = \"test product\"<nl><tab>offer1 = factory.RelatedFactory(OfferFactory, 'product')<nl><tab>offer2 = factory.RelatedFactory(OfferFactory, 'product') # add a second offer<nl><tab>offer3 = factory.RelatedFactory(OfferFactory, 'product') # add a third offer<nl><tab>merchant1 = factory.RelatedFactory(MerchantFactory, 'product')<nl><tab>merchant2 = factory.RelatedFactory(MerchantFactory, 'product') # add a second merchant<nl><tab>merchant3 = factory.RelatedFactory(MerchantFactory, 'product') # add a third\"", "out": "factory_boy:複数の従属オブジェクトを追加", "out_en": "factory_boy: add several dependent objects"}
{"in": "if not os.path.exists(os.path.join(template_path, page)): <nl><tab>self.abort(404)", "out": "特定のルートが一致する場合に404を表示する", "out_en": "Show 404 when specific route matches"}
{"in": "super()", "out": "同じメソッド名を持つ異なるパスからのPythonの多重継承", "out_en": "python multiple inheritance from different paths with same method name"}
{"in": "return Dept.objects.filter(employees_set__name='XYZ')", "out": "python djangoでの外部キーの逆ルックアップ", "out_en": "Reverse lookup of foreign key in python django"}
{"in": "from BeautifulSoup import BeautifulStoneSoup<nl>soup = BeautifulStoneSoup(xml_string)<nl>whatyouwant = soup.find('second-tag')['status']", "out": "XML Python ElementTreeを使用した多数の属性からの1つの選択", "out_en": "XML Python Choosing one of numerous attributes using ElementTree"}
{"in": "def download_paper(request, paper_pk):<nl><tab> paper = get_object_or_404(Paper, pk=paper_pk) # get your model instance<nl><tab> # also check permissions on paper, if necessary<nl><tab> with paper.pdf_file_field.open(\"r\") as fd:<nl><tab><tab> response = HttpResponse(fd.read(), content_type=\"application/pdf\")<nl><tab><tab> response['Content-Disposition'] = 'attachment; filename=\"%s\"' % paper.pdf_file_field.name<nl><tab><tab> return response", "out": "私は、私のジャンゴウェブサイトに提出された文書を再ダウンロードできる必要があります。", "out_en": "I need to be able to redownload a document that was submitted onto my django website"}
{"in": "[i['x'] for i in a]", "out": "Pythonを使用して正しいものを取得する最善の方法", "out_en": "best way to get right thing using python "}
{"in": "import matlplotlib<nl>matplotlib.use('TkAgg')", "out": "Pythonでカラーバーを使用してグレースケールカラーマップを作成する", "out_en": "Create a gray scale colormap with colorbar on Python"}
{"in": "from logging import Handler<nl><nl>class DBHandler(Handler,object):<nl><tab>model_name = None<nl><nl><tab>def __init__(self, model=\"\"):<nl><tab><tab>super(DBHandler,self).__init__()<nl><tab><tab>self.model_name = model<nl><nl><tab>def emit(self,record):<nl><tab><tab># instantiate the model<nl><tab><tab>try:<nl><tab><tab><tab>model = self.get_model(self.model_name)<nl><tab><tab>except:<nl><tab><tab><tab>from logger.models import GeneralLog as model<nl><nl><tab><tab>log_entry = model(level=record.levelname, message=self.format(record))<nl><nl><nl><tab><tab>log_entry.save()<nl><nl><tab>def get_model(self, name):<nl><tab><tab>names = name.split('.')<nl><tab><tab>mod = __import__('.'.join(names[:-1]), fromlist=names[-1:])<nl><tab><tab>return getattr(mod, names[-1])", "out": "循環インポートを持つカスタムPythonデータベースロガー", "out_en": "Custom python database logger, having circular import"}
{"in": "driver.find_element_by_xpath(\"//option[@value='\" + state + \"']\").click()", "out": "Python Seleniumでのxpathの変数の使用", "out_en": "Using a variable in xpath in Python Selenium"}
{"in": "import curses<nl>oScreen = curses.initscr()<nl>curses.noecho()<nl>curses.curs_set(0)<nl>oScreen.keypad(1)<nl>oScreen.addstr(\"Woooooooooooooo<nl><nl>\",curses.A_BOLD)<nl>while True:<nl><tab>oEvent = oScreen.getch()<nl><tab>if oEvent == ord(\"q\"):<nl><tab><tab>break<nl>curses.endwin()", "out": "nanoのようなインターフェースを持つPythonターミナルアプリケーション", "out_en": "Python terminal application with interface like nano"}
{"in": "ylabel('Soil Moisture Sensitivity,<nl>(0.01 K m$^3$ m$^{-3}$)', multialignment='center')", "out": "matplotlib内の分割された軸ラベルをセンタリングします", "out_en": "Centering line-broken axis label in matplotlib"}
{"in": "import sqlite3 as sql<nl><nl>con = sql.connect(r\"E:\\Users.db\")<nl>c = con.cursor()<nl>con.row_factory = sql.Row<nl>username = input(\"What is your username: \")<nl><nl>readdata = input(\"Select the message you wish to read: \")<nl>c.execute(\"SELECT Sender, Recipient, Subject, Message FROM Mail WHERE (Subject LIKE ?) AND   (Recipient LIKE ?)\", (readdata, username))<nl><nl>component = c.fetchall()<nl><nl>for row in component:<nl><tab>(sent, rec, subject, msg) = tuple(row)<nl><tab>print()<nl><tab>print(\"Sender: \" + sent)<nl><tab>print(\"Recipient: \" + rec)<nl><tab>print(\"Subject: \" + subject)<nl><tab>print()<nl><tab>print(\"Message: \" + msg)", "out": "sqliteテーブルからrawデータをPythonで読み込む", "out_en": "Reading raw data from an sqlite table in python"}
{"in": "from OpenGL.GL import *<nl>from OpenGL.GLUT import *<nl>from OpenGL.GLU import *<nl><nl>import math<nl><nl>def initFun():<nl><tab>glClearColor(1.0,1.0,1.0,0.0)<nl><tab>glColor3f(0.0,0.0, 0.0)<nl><tab>glMatrixMode(GL_PROJECTION)<nl><tab>glLoadIdentity()<nl><tab>gluOrtho2D(0,700,0,700)<nl><nl>def displayFun():<nl><tab>glClear(GL_COLOR_BUFFER_BIT)<nl><tab>glColor3f(0.0,0.0,1.0)<nl><tab>xpts=[]<nl><tab>ypts=[]<nl><tab>N=len(newlist)<nl><tab>for i in range(0,N):<nl><tab><tab>xpts.append(700+100-float(newlist[i][4])*20)<nl><tab><tab>ypts.append(700+1300-float(newlist[i][5])*20)<nl><nl><tab>glBegin(GL_POINTS)<nl><tab>for j in range(0,N):<tab><tab><nl><tab><tab>glVertex2f(xpts[j],ypts[j])<nl><nl><tab>glEnd()<nl><tab>glFlush()<nl><nl>if __name__ == '__main__':<nl><tab>glutInit()<nl><tab>glutInitWindowSize(700,700)<nl><tab>glutCreateWindow(\"My Display\")<nl><tab>glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB)<nl><tab>glutDisplayFunc(displayFun)<nl><tab>initFun()<nl><tab>glutMainLoop()", "out": "OpenGlでプロットされたポイント間の距離をサイズ変更、尺度変更、または拡大する方法", "out_en": "How do I resize,scale or magnify the distances between points plotted in OpenGl"}
{"in": "s = raw_input(\"Octal?  \")<nl>digits = map(int, s)<nl>lookup = ['','x','w','wx','r','rx','rw','rwx']<nl>perms = [lookup[d] for d in digits]<nl>rights = ['{}={}'.format(*x) for x in zip('ugo', perms)]<nl>print ','.join(rights)", "out": "Pythonでのリスト処理はどのように単純化されますか?", "out_en": "How simplify list processing in Python?"}
{"in": "import numpy as np<nl>import sklearn.tree<nl>clf = sklearn.tree.DecisionTreeClassifier()<nl>clf.fit(X,y)<nl>clf.tree_.apply(np.asfortranarray(X.astype(sklearn.tree._tree.DTYPE)))", "out": "scikit-learn DecisionTreeClassifierを使用したクラスタ化", "out_en": "Using scikit-learn DecisionTreeClassifier to cluster"}
{"in": "yy = numpy.tan(2*(x - numpy.pi/2))<nl>threshold = 10000<nl>yy[yy>threshold] = numpy.inf<nl>yy[yy<-threshold] = numpy.inf<nl>ax.plot(x, yy, linewidth=1.2, color=\"black\")", "out": "matplotlibでtanをグラフ化する", "out_en": "Graphing tan in matplotlib"}
{"in": "if 1: import views", "out": "PyDevが特定のインポートを移動しないようにする", "out_en": "Prevent PyDev from moving specific imports"}
{"in": "imgsize = (int(self.viewport.cget('width')) - 1,int(self.viewport.cget('height')) - 1)<nl># limit the draggable mouse area to just the image dimensions<nl>if event.x < 4:<nl><tab>currentx = 4<nl>elif event.x > imgsize[0]:<nl><tab>currentx = imgsize[0]<nl>else:<nl><tab>currentx = event.x<nl>if event.y < 4:<nl><tab>currenty = 4<nl>elif event.y > imgsize[1]:<nl><tab>currenty = imgsize[1]<nl>else:<nl><tab>currenty = event.y", "out": "Python tkinter:キャンバス内のマウスカーソルを制限する方法", "out_en": "Python tkinter: how to restrict mouse cursor within canvas?"}
{"in": "d = defaultdict(int)<nl>for lst in lists:<nl>   d[len(lst)] += 1", "out": "Pythonでリストのリストの統計情報を取得する方法", "out_en": "How to get statistic of a list of lists in python?"}
{"in": "c_solutions = [sol[c] for sol in solutions]", "out": "Sympy-solve()の解の各部分にアクセスする", "out_en": "Sympy - get access to the single parts of the solution of solve()"}
{"in": "from django.contrib.auth.decorators import login_required<nl>from django.shortcuts import render<nl><nl>from your_app.models import ToDo<nl><nl>@login_required<nl>def todos_for_user(request):<nl><tab>todos = ToDo.objects.filter(user=request.user)<nl><tab>return render(request, 'todos/index.html', {'todos' : todos})", "out": "django:各ユーザーのデータを分離します。", "out_en": "django: keep each users data separate"}
{"in": "L = [1,2,3,4,5,6,7,8,9,0]<nl>a = np.random.ranint(0,50,(35,10))<nl><nl># identify location of value in array that are in L<nl>ix = np.in1d(a.ravel(), L).reshape(a.shape)", "out": "Python:与えられた異なるリスト内のリストにあるすべての要素の位置を取得する高速な方法", "out_en": "Python: fast way to get position of all the element in a list in different lists given"}
{"in": "import subprocess<nl><nl>hostname = \"192.168.1.4\"<nl>output = subprocess.Popen([\"ping\",\"-c\",\"5\", hostname],stdout = subprocess.PIPE).communicate()[0]<nl><nl>if ('100% packet loss' in output):<nl><tab>print(\"Offline\")", "out": "Pythonを使用してローカルネットワークでpingを実行する方法", "out_en": "How to ping in local network using python?"}
{"in": "from Tkinter import *<nl><nl>root = Tk()<nl>t = Text(root)<nl>t.pack()<nl>t.insert(END, '''\\<nl>blah blah blah Failed blah blah<nl>blah blah blah Passed blah blah<nl>blah blah blah Failed blah blah<nl>blah blah blah Failed blah blah<nl>''')<nl>t.tag_config('failed', background='red')<nl>t.tag_config('passed', background='blue')<nl><nl>def search(text_widget, keyword, tag):<nl><tab>pos = '1.0'<nl><tab>while True:<nl><tab><tab>idx = text_widget.search(keyword, pos, END)<nl><tab><tab>if not idx:<nl><tab><tab><tab>break<nl><tab><tab>pos = '{}+{}c'.format(idx, len(keyword))<nl><tab><tab>text_widget.tag_add(tag, idx, pos)<nl><nl>search(t, 'Failed', 'failed')<nl>search(t, 'Passed', 'passed')<nl><nl>#t.tag_delete('failed')<nl>#t.tag_delete('passed')<nl><nl>root.mainloop()", "out": "キーワードを使用したTkinterテキストの特定の行の強調表示", "out_en": "Tkinter text highlight specific lines using keyword"}
{"in": "def f(s, n):<nl><tab>return ' '.join(s.split()[:n])", "out": "Pythonで単語数を減らすにはどうすればいいですか?", "out_en": "How do I trim the number of words in Python?"}
{"in": "print sum(map(len,dic.itervalues()))", "out": "dict内のリスト内にある変数の合計量を取得するPython風の方法はありますか?", "out_en": "Is there a pythonic way to grab the total amount of variables within lists inside a dict?"}
{"in": "searchindexnodes = {}<nl>searchindexnodes[1036592] = 'Apparel'<nl>searchindexnodes[672123011] = 'Apparel'<nl>searchindexnodes[165796011] = 'Baby'", "out": "Pythonで未定義のキーを持つ配列を定義するにはどうすればいいですか?", "out_en": "How can I define an array in Python with undefined keys?"}
{"in": "s = Sound() <nl>s.read('sound.wav') <nl>s.play()", "out": "Pythonでサウンドを再生する", "out_en": "Play a Sound with Python"}
{"in": "numpy.random.seed(42)", "out": "同じランダムなnumpy配列を一貫して作成する", "out_en": "Consistenly create same random numpy array"}
{"in": "M = 20<nl>N = 20<nl><nl>a = np.random.normal(0, 1, (N, M))<nl>b = np.random.normal(0, 3, N)[:, None]<nl><nl>print np.var(a + b, axis=0)<nl>print np.var(a + b, axis=1)", "out": "各軸に沿って異なる分散を持つランダムなガウス行列を生成する方法", "out_en": "How to generate a random gaussian matrix with different variance along each axis"}
{"in": "if charint >= 65 and charint <=90:<nl><tab><tab>cipher_int = ((charint-65 + k) % 26)+65<nl><tab><tab>code_char = chr(cipher_int)<nl><tab><tab>print code_char,<nl><nl>elif charint >= 97 and charint <=122:<nl><tab>cipher_int = ((charint-97 + k) % 26)+97<nl><tab>code_char = chr(cipher_int)<nl><tab>print code_char,<nl><nl><nl>else:<nl><tab>print char,", "out": "Python:Caesar暗号、if文とelse文の両方が同時に真になる?", "out_en": "Python: Caesar Cipher, If statement and else statement both True at the same time?"}
{"in": "boto.s3.key.Key", "out": "botoキー・オブジェクトをDjangoのModelフィールドとして保管する方法", "out_en": "How to store boto key object as Django's Model field?"}
{"in": "import win32api<nl>import win32con<nl>import ctypes<nl><nl>ctypes.windll.gdi32.AddFontResourceA(\"C:\\\\Users\\\\Username\\\\Desktop\\\\fontname.ttf\")<nl>win32api.SendMessage(win32con.HWND_BROADCAST, win32con.WM_FONTCHANGE)", "out": "Pythonを使用したWindowsへのTTFフォントのインストール", "out_en": "Installing TTF fonts on windows with python"}
{"in": "df.groupby(['tags_0', 'gender']).gender.count().unstack().plot(kind='barh', legend=False, color=['r', 'g', 'b'])", "out": "グループ化された棒グラフの色をパンダで変更するにはどうすればいいですか?", "out_en": "How can I change the color of a grouped bar plot in Pandas?"}
{"in": "from numpy import array, dot<nl>dot(array([0.5, -1]), array([[1, 2, 3], [4, 5, 6]]))<nl># array([-3.5 -4. -4.5])", "out": "Numpy-行列の重み行と合計行", "out_en": "Numpy- weight and sum rows of a matrix"}
{"in": "# METHOD 1<nl>FA_dict1 = {d:2 for v in FA[0][u'child'] for d in v.values()}<nl>FA_dict1.update({FA[0][u'pdesc']: 2})<nl><nl><nl># METHOD 2<nl>from itertools import chain<nl>FA_dict = {d:2 for v in FA[0][u'child'] for d in chain(v.values(), [FA[0][u'pdesc']])}<nl><nl><nl># METHOD 3<nl>FA_DICT = {d:2 for v in FA[0][u'child'] for d in list(v.values())+[FA[0][u'pdesc']]}", "out": "辞書理解におけるネストされたループ", "out_en": "Nested loops in dictionary comprehension"}
{"in": "text = \"\"\" name = Kurradu<nl> image =<nl> image_size =<nl> producer = P. Kiran<nl> writer =<nl> starring = Varun Sandesh,Neha Sharma<nl> music = Achu<nl> cinematography = Sarvesh Murari<nl> editing =<nl> distributor =<nl> released = 12 November 2009<nl> studio =<nl> country = IND\"\"\"<nl><nl><nl>d = dict(map(str.strip, line.split('=', 1)) for line in text.splitlines())<nl><nl><nl># d is now:<nl><nl>{'cinematography': 'Sarvesh Murari',<nl> 'country': 'IND',<nl> 'distributor': '',<nl> 'editing': '',<nl> 'image': '',<nl> 'image_size': '',<nl> 'music': 'Achu',<nl> 'name': 'Kurradu',<nl> 'producer': 'P. Kiran',<nl> 'released': '12 November 2009',<nl> 'starring': 'Varun Sandesh,Neha Sharma',<nl> 'studio': '',<nl> 'writer': ''}", "out": "テキストを辞書に変換する", "out_en": "Convert text into dict"}
{"in": "text = 'According to James, \"we do not know\" the source of the problem, \"we are clueless\".'<nl>re.sub('\".+?\"', '', text)", "out": "引用符内のすべてのテキストを削除するPython Reg式", "out_en": "Python Reg expression to delete all text inside quotation marks"}
{"in": "L = [('a', [[0],[1]]), ('b', [[2],[3]]), ('c', [[4],[5]])]<nl>prev = []<nl>for i,el in enumerate(L):<nl><tab>el_new = (el[0], prev + el[1])<nl><tab>prev += el[1]<nl><tab>L[i] = el_new", "out": "タプルのPython前方反復/拡張リスト", "out_en": "python - forward iteration / extending list of tuples"}
{"in": "class Nationality:<nl><tab><tab>Poland='PL'<nl><tab><tab>Germany='DE'<nl><tab><tab>France='FR'<nl><nl><tab><tab>def convertToCodeFromName(name):<nl><tab><tab><tab><tab>return getattr( Nationality, name )<nl><nl><tab><tab>def convertToNameFromCode(code):<nl><tab><tab><tab><tab>lookFor = None<nl><nl><tab><tab><tab><tab>for member in dir( Nationality ):<nl><tab><tab><tab><tab><tab><tab>if ( getattr( Nationality, member ) == code ):<nl><tab><tab><tab><tab><tab><tab><tab><tab>lookFor = member<nl><tab><tab><tab><tab>return lookFor<nl><nl>print( Nationality.convertToCodeFromName( \"Poland\" ) )<nl>print( Nationality.convertToNameFromCode( \"PL\" ) )", "out": "Pythonの列挙型コンバータ", "out_en": "Enum converter in python"}
{"in": "return ['']", "out": "uwsgiおよびwebsocketsとの密接な接続", "out_en": "close connection with uwsgi and websockets"}
{"in": "#!/usr/bin/python26/python", "out": "異なるバージョンのPythonを実行するためのFast CGIの変更", "out_en": "Changing Fast CGI to run a different version of python"}
{"in": "x = column_width - image_width<nl><nl>sheet.insert_bitmap(filepath_to_bmp, row, col, x)", "out": "Python XLWT-セルの右上隅に位置合わせされたイメージの挿入", "out_en": "Python XLWT - Insert Image aligned to top-right corner of cell"}
{"in": "# reset the `totalintron` for the current `exonnumber`<nl>totalintron = 0<nl><nl># only iterate `exonnumber - 1` (which is guaranteed to be len(y) - 1 at max)<nl>for index in range(exonnumber - 1):<nl><tab>first_max = max(y[index])<nl><tab>second_min = min(y[index + 1])<nl><tab>intron = second_min - first_max<nl><tab># don???t print `intron`, we only care about the total<nl><tab>totalintron = totalintron + intron<nl><nl>print totalintron", "out": "ループで合計する数値の量の指定", "out_en": "Specifying amount of numbers to sum in loop"}
{"in": "import re<nl>import json<nl>for line in logs:<nl><tab>for t in re.finditer(r\"\\{.*\\}\", line):<nl><tab><tab>try:<nl><tab><tab><tab>json.loads(t.group())<nl><tab><tab>except ValueError:<nl><tab><tab><tab>pass", "out": "Pythonを使用してrawテキストファイルからJSONオブジェクトを読み取る方法", "out_en": "how to read JSON object from raw text file using python"}
{"in": "import parms<nl><nl>parms.foo<nl>parms.bar<nl>parms.baz", "out": "パラメータのパラメータをディクショナリとしてインポートしますか?", "out_en": "Import a bunch of parameters as a dictionary?"}
{"in": "class TaskForm(forms.ModelForm):<nl>   class Meta:<nl><tab>  model = Task<nl><nl>   def __init__(self, *args, **kwargs):<nl><tab>  super(TaskForm, self).__init__(*args, **kwargs)<nl><tab>  self.fields['prerequisites'].queryset = Task.objects.filter(job=self.instance.job)", "out": "Django:selfへのManyToManyFieldマッピングに\"same parent\"制約を適用する", "out_en": "Django: apply \"same parent\" constraint to ManyToManyField mapping to self"}
{"in": "__init__.py", "out": "models.pyからのインポート", "out_en": "Importing from models.py"}
{"in": "# reading from file:<nl>with open('cities.txt') as f:<nl><tab>lines = f.readlines()<nl><nl># pre-processing<nl>indices = {line.split()[0]: i for i, line in enumerate(lines)}<nl>distances = [line.split()[1:] for line in lines]<nl><nl>#user input:<nl>start = input(\"Please enter starting point: \")<nl>end = input(\"Now please enter ending point: \")<nl><nl># evaluation:<nl>distance = distances[indices[start]][indices[end]]<nl><nl># output:<nl>print(\"Distance between {start} and {end} is {distance} km.\".format(**locals()))", "out": "Python 3:リスト内のリストから情報を取得する", "out_en": "Python 3: Getting information from list in list"}
{"in": "v = 8.836333333333339<nl>s = str(v)<nl>print s[:s.find('.')+3]<nl><nl># prints 8.83", "out": "四捨五入せずに表示される小数点以下の桁数を制限するにはどうすればよいですか。", "out_en": "How can limit a certain number of decimal places being shown without rounding?"}
{"in": "def checkJson(jsonContents):<nl><tab>bodyFlag = True if \"body\" in jsonContents[\"objects\"][0][\"data\"] and jsonContents[\"objects\"][0][\"data\"][\"body\"] == \"Present\" else False<nl><tab>codeFlag = True if \"code\" in jsonContents[\"objects\"][0][\"data\"] and jsonContents[\"objects\"][0][\"data\"][\"code\"] == 200 else False<nl><nl><tab>return bodyFlag or codeFlag<nl><nl>print checkJson(result)", "out": "キー/値がJSONであるかどうかをチェックする", "out_en": "Check if key/value is in JSON"}
{"in": "check = \"asdf\"<nl>checkLower = check.lower()<nl><nl>print any(checkLower == val.lower() for val in [\"qwert\", \"AsDf\"])<nl><nl># prints true", "out": "Python:大文字と小文字に関係なく、値がリスト内にあるかどうかをチェックします。", "out_en": "Python: check if value is in a list no matter the CaSE"}
{"in": "from BeautifulSoup import BeautifulSoup<nl>soup = BeautifulSoup(open(\"file.html\",'r').read())<nl>cols = [header.string for header in soup.find('thead').findAll('th')]<nl>col_idx = cols.index('Username')<nl>col_values = [td[col_idx].string for td in [tr.findAll('td') for tr in soup.find('tbody').findAll('tr')]]<nl>print col_values", "out": "美肌のスープ特定の列のすべての値を取得する", "out_en": "BeautifulSoup get all the values of a particular column"}
{"in": "segment='sessions::condition::ga:pagePath=@error=PAYPAL'", "out": "このGoogle分析セグメントをPython APIで設定する方法", "out_en": "How to set up this Google analytics segment in Python API"}
{"in": "import os<nl>import sys<nl><nl><nl>def main():<nl><tab>if os.getpgrp() == os.tcgetpgrp(sys.stdout.fileno()):<nl><tab><tab>print 'Running in foreground.'<nl><tab>else:<nl><tab><tab>print 'Running in background.'<nl><nl><nl>if __name__ == '__main__':<nl><tab>main()", "out": "Pythonスクリプトがバックグラウンドプロセスとして実行されているかどうかを検出する方法", "out_en": "How to detect if python script is being run as a background process"}
{"in": "x=int(a,2)<nl>num_bits = 10<nl>print x - (1 << num_bits)", "out": "Python-2の補数を実装する最も効果的な方法は?", "out_en": "Python - Most effective way to implement two's complement?"}
{"in": "import csv<nl><nl>dictionary = {}<nl>with open('data.csv', 'r') as f:<nl><tab>reader = csv.DictReader(f)<nl><tab>for row in reader:<nl><tab><tab>dictionary[row['Key']] = row['Value']", "out": "ExcelのPython辞書", "out_en": "Python dictionary from excel"}
{"in": "res = {}<nl>for item in l:<nl><tab>res.setdefault(item['a'], []).append(item)", "out": "Python:ディクショナリ内のリスト項目をグループ化", "out_en": "Python: group list items in a dict"}
{"in": "import sys<nl>import time<nl><nl>def spinning_cursor():<nl><tab>while True:<nl><tab><tab>for cursor in '|/-\\\\':<nl><tab><tab><tab>yield cursor<nl><nl>spinner = spinning_cursor()<nl>for _ in range(50):<nl><tab>sys.stdout.write(spinner.next())<nl><tab>sys.stdout.flush()<nl><tab>time.sleep(0.1)<nl><tab>sys.stdout.write('\\b')", "out": "Pythonを使用して回転するコマンドラインカーソルを作成する方法", "out_en": "How to create a spinning command line cursor using python?"}
{"in": "import urllib2<nl>import lxml.etree<nl><nl>url = \"http://weather.yahooapis.com/forecastrss?w=24260013&u=c\"<nl>doc = lxml.etree.parse( urllib2.urlopen(url) ).getroot()<nl>conditions = doc.xpath('*/*/yweather:condition',<nl><tab><tab><tab><tab><tab>   namespaces={'yweather': 'http://xml.weather.yahoo.com/ns/rss/1.0'})<nl>try:<nl><tab>condition=conditions[0]<nl>except IndexError:<nl><tab>print('yweather:condition not found')<nl>print(condition.items())<nl># [('text', 'Fair'), ('code', '33'), ('temp', '16'), ('date', 'Wed, 19 May 2010 9:55 pm EDT')]", "out": "yahoo weather rssのPythonフィードパーサ", "out_en": "python feedparser with yahoo weather rss"}
{"in": "def get_line(x1, y1, x2, y2):<nl><tab>points = []<nl><tab>issteep = abs(y2-y1) > abs(x2-x1)<nl><tab>if issteep:<nl><tab><tab>x1, y1 = y1, x1<nl><tab><tab>x2, y2 = y2, x2<nl><tab>rev = False<nl><tab>if x1 > x2:<nl><tab><tab>x1, x2 = x2, x1<nl><tab><tab>y1, y2 = y2, y1<nl><tab><tab>rev = True<nl><tab>deltax = x2 - x1<nl><tab>deltay = abs(y2-y1)<nl><tab>error = int(deltax / 2)<nl><tab>y = y1<nl><tab>ystep = None<nl><tab>if y1 < y2:<nl><tab><tab>ystep = 1<nl><tab>else:<nl><tab><tab>ystep = -1<nl><tab>for x in range(x1, x2 + 1):<nl><tab><tab>if issteep:<nl><tab><tab><tab>points.append((y, x))<nl><tab><tab>else:<nl><tab><tab><tab>points.append((x, y))<nl><tab><tab>error -= deltay<nl><tab><tab>if error < 0:<nl><tab><tab><tab>y += ystep<nl><tab><tab><tab>error += deltax<nl><tab># Reverse the list if the coordinates were reversed<nl><tab>if rev:<nl><tab><tab>points.reverse()<nl><tab>return points", "out": "Pythonで直線のすべてのポイントを取得する", "out_en": "Get all points of a straight line in python"}
{"in": "unknown = list(\"46X90157\")<nl>unknown = ''.join(unknown)<nl>for i in range(10):<nl><tab>print([int(i) for i in unknown.replace(\"X\", str(i))])", "out": "Pythonを使用してインデックスを作成せずに整数をリストに挿入する方法", "out_en": "How to insert integers into a list without indexing using python?"}
{"in": "root = etree.fromstring(xmlstr)", "out": "python:zip圧縮されたxmlファイルを解析する方法", "out_en": "python : how to parse zipped xml file?"}
{"in": "if batch:<nl><tab><tab>key =\"\"<nl><tab><tab>key = '({})'.format(','.join(elem for elem in batch[0]))<nl><tab><tab>print key<nl><tab><tab>value ='({})'.format(','.join(\"'\"+str(eleme)+\"'\" for eleme in batch[0].values()))<nl><tab><tab>print value<nl><tab><tab>sqlWrite = []<nl><tab><tab>sqlWrite.append(\"INSERT IGNORE INTO %s \" %writeTable)<nl><tab><tab>sqlWrite.append(\"\".join(key))<nl><tab><tab>sqlWrite.append(\" VALUES \")<nl><tab><tab>sqlWrite.append(\"\".join(value))<nl><tab><tab>sql=\"\".join(sqlWrite)<nl><tab><tab>print sql<nl><tab><tab>if batch:<nl><tab><tab><tab>writeCur.executemany(sql, batch)<nl><tab><tab><tab>cnx2.commit()", "out": "動的sqlクエリーをPythonで作成し、executemany()を使用して挿入するにはどうすればよいでしょうか。", "out_en": "How to build dynamic sql query in python and use executemany() to insert?"}
{"in": "blobs = BlobInfo.all().fetch(500)<nl>for blob in blobs:<nl>  if not MyModel.all().filter(\"blob_ref =\", blob.key()).count(1):<nl><tab>blob.delete()", "out": "アプリケーションエンジンのblobstoreで孤立したblobを見つけて削除することはできますか?", "out_en": "Is it possible to find and delete orphaned blobs in the app engine blobstore?"}
{"in": "import wx<nl><nl>def set_frame_display(frame, display_index):<nl><tab>display = wx.Display(display_index)<nl><tab>x, y, w, h = display.GetGeometry()<nl><tab>frame.SetPosition((x, y))<nl><nl>def main():<nl><tab>app = wx.PySimpleApp()<nl><tab>count = wx.Display_GetCount()<nl><tab>for index in range(count):<nl><tab><tab>frame = wx.Frame(None, -1, 'Display %d of %d' % (index + 1, count))<nl><tab><tab>set_frame_display(frame, index)<nl><tab><tab>frame.Center()<nl><tab><tab>frame.Show()<nl><tab>app.MainLoop()<nl><nl>if __name__ == '__main__':<nl><tab>main()", "out": "デフォルトのwx.DisplayをWxPythonで選択するにはどうすればいいですか。", "out_en": "How can I choose the default wx.Display in wxpython?"}
{"in": "list_of_objects = [Object_1, Object_2, Object_3]<nl>[x.time for x in list_of_objects]", "out": "Pythonでオブジェクトアトリビュートのリストを作成する", "out_en": "Create list of object attributes in python"}
{"in": "car1 = []<nl>car2 = []<nl>car3 = []<nl>car4 = []<nl>car5 = []<nl>cars = [car1,car2,car3,car4,car5]<nl>for i in range(5):<nl><tab>rand0m = randint(1,5)<nl><tab>cars[i].append(rand0m)", "out": "forループの繰り返しごとに複数の変数を変更する方法", "out_en": "How to change multiple variables ever iteration of a for loop"}
{"in": "example_instance = example(**{var_under_study: value})", "out": "Pythonで変数名と同じ文字列に値を割り当てる", "out_en": "Assign value to a string that is the same as a variable name in Python"}
{"in": "if not (args.process or args.upload):<nl><tab>parser.error('No action requested, add -process or -upload')", "out": "Python argparse:少なくとも1つの引数が必要です", "out_en": "Python argparse: Make at least one argument required"}
{"in": "import random<nl>def rand_sum(i, j):<tab><nl><tab>sum_list = []<nl><tab>for rand_num in range(i, j+1):<nl><tab><tab>sum_list.append(random.random()) # Check random docs for a function that returns<nl><tab>return sum(sum_list)<tab><tab><tab><tab> # a different set of randoms if this isn't <nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab> # appropriate", "out": "Pythonでランダム変数を生成し、それらすべてを合計する方法", "out_en": "How to generate random variables and sum all them in python"}
{"in": "import pyodbc<nl><nl>DBfile = 'Exam_BackUp.mdb'<nl>conn = pyodbc.connect('FILEDSN='+DBfile)<nl>cursor = conn.cursor()<nl><nl># Do whatever you want with SQL selects, etc<nl><nl>cursor.close()<nl>conn.close()", "out": "Pythonでアクセスファイルを開く", "out_en": "open access file in python"}
{"in": "from models import MyModel<nl>try:<nl><tab>max_length = MyModel._meta.get_field('source_url').max_length<nl>except:<nl><tab>max_length = None", "out": "Djangoモデルのフィールド・オプションの読み取り", "out_en": "Reading a Django model's field options"}
{"in": "verb, title, definition = myString.split (' ', 2)", "out": "Pythonの文字列/スライス操作にヘルプが必要です", "out_en": "Need some help with python string / slicing operations"}
{"in": "inds = {'EUR': [whatever],<nl><tab><tab>'AFR': [foo],<nl><tab><tab>'ASN': [other]}<nl><nl>foos = inds['EUR']", "out": "文字列を変数名として設定", "out_en": "Set string as variable name"}
{"in": "import sqlalchemy.types as types<nl><nl>class ChoiceType(types.TypeDecorator):<nl><nl><tab>impl = types.String<nl><nl><tab>def __init__(self, choices, **kw):<nl><tab><tab>self.choices = dict(choices)<nl><tab><tab>super(ChoiceType, self).__init__(**kw)<nl><nl><tab>def process_bind_param(self, value, dialect):<nl><tab><tab>return [k for k, v in self.choices.iteritems() if v == value][0]<nl><nl><tab>def process_result_value(self, value, dialect):<nl><tab><tab>return self.choices[value]", "out": "SQLAlchemy-SQLAlchemyを使って「ジャンゴ・チョイス」をするには?", "out_en": "SQLAlchemy - How to make \"django choices\" using SQLAlchemy?"}
{"in": "currentCommand = \"cmd /c \" & Chr(34) & source_code_path & \" \" & variable1 & \" \" & variable2 & Chr(34)", "out": "VBscriptからの引数を使用したPythonスクリプトの呼び出し", "out_en": "Calling Python script with arguments from VBscript"}
{"in": "plt.close()", "out": "古いsuptitleの上に印刷されたMatplotlib suptitle", "out_en": "Matplotlib suptitle printed over old suptitle"}
{"in": "popen = Popen(command_args, stdout=PIPE, stderr=PIPE)<nl>body_contents = popen.stdout().read()<nl>popen.terminate()<nl>popen.wait()<nl>r = HttpResponse(body_contents, mimetype='application/pdf')", "out": "Djangoを使用してstdoutからpdf応答を戻す", "out_en": "return pdf response from stdout with Django"}
{"in": "requests.get(\"https://api.helpscout.net/v1/conversations/{id}.json\", auth=('{API_KEY}','X'))", "out": "Pythonを使用したHelpscout APIからのGET.json", "out_en": "GET .json from Helpscout API using Python"}
{"in": "import re <nl><nl>def find_subs(line):<nl><tab>match = re.findall(\">([aA-zZ\\s]*)<\",line)<nl><tab>if len(match) != 0:<nl><tab><tab>new_line = '<ul class=\"bar\">'<nl><tab><tab>for m in match:<nl><tab><tab><tab>new_line += \"<li>\"+m+\"</li>\"<nl><tab><tab>new_line += \"</ul>\"<nl><tab><tab>return new_line<nl><tab>else:<nl><tab><tab>return None<nl><nl>line = \"<stats>Some line<br>Other line</stats>\"<nl>new = find_subs(line)<nl>print new", "out": "XMLをサブエレメントで置き換える方法", "out_en": "How to replace XML with sub-elements"}
{"in": "d = {}<nl>d['a']=[1,2,3]<nl>d['b']=[2,4,6]<nl><nl>zipped_list = zip(d['a'],d['b'])<nl>print map(lambda x: sum(x), zipped_list)", "out": "zipを使用した複数の辞書リストの要素の合計", "out_en": "summing elements of multiple dictionary lists with zip"}
{"in": "platform.get_devices(device_type=cl.device_type.ALL)", "out": "Sailfish:GPUなしでコンピュータ上で実行する方法", "out_en": "Sailfish: how to run on computer without gpu"}
{"in": "import socket<nl><nl>UDP_IP = \"127.0.0.1\"<nl>UDP_PORT = 5005<nl><nl>sock = socket.socket(socket.AF_INET, # Internet<nl><tab><tab><tab><tab> socket.SOCK_DGRAM) # UDP<nl>sock.bind((UDP_IP, UDP_PORT))<nl><nl>while True:<nl><tab>data, addr = sock.recvfrom(1024) # buffer size is 1024 bytes<nl><tab>print \"received message:\", data", "out": "Pythonでnetcatリダイレクションを使用してデータを取得する(Ctrl Cコマンドを送信した後)", "out_en": "Using netcat redirection in python to get data, after sending Ctrl C command"}
{"in": "def perms(word):<nl><tab>stack = list(word)<nl><tab>results = [stack.pop()]<nl><tab>while len(stack) != 0:<nl><tab><tab>c = stack.pop()<nl><tab><tab>new_results = []<nl><tab><tab>for w in results:<nl><tab><tab><tab>for i in range(len(w)+1):<nl><tab><tab><tab><tab>new_results.append(w[:i] + c + w[i:])<nl><tab><tab>results = new_results<nl><tab>return results", "out": "反復解法:-文字列置換の検索", "out_en": "Iterative solution for :- Finding String permutations"}
{"in": "for alb in l.songs:<nl>   if alb.album not in song_database:<nl><tab>   song_database[alb.album] = [alb.name]<nl>   else:<nl><tab>   song_database[alb.album].append(alb.name)", "out": "Python辞書をループで構築する方法", "out_en": "How to build a python dictionary in a loop?"}
{"in": "if length > 1: <nl><tab>listPlace = overlap[1] - 3<nl><tab>brick = bricklist[listPlace]<nl><tab># Get the coordinates<nl><tab>bx1,by1,bx2,by2 = drawpad.coords(brick)<nl><tab># Now delete it<nl><tab>drawpad.delete(brick)<nl><tab>if x1 <= bx1 or x2 >= bx2:<nl><tab><tab>angle = -angle<nl><tab>if y1 <= by1 or by2 >= y2:<nl><tab><tab>direction = -direction", "out": "変数の座標をパック解除", "out_en": "Unpack Coordinates of Variable"}
{"in": "from django_extensions.db.fields.json import JSONField", "out": "Djangoモデルを通常のオブジェクトに変換する", "out_en": "Convert Django models to normal objects"}
{"in": "# create item widget<nl>item = QListWidgetItem()<nl>w = CustomItemWidget()<nl>w.setTitle = \"Title\"<nl>w.setDescription = \"Blah blah\"<nl># would have a QPixmap already cached<nl>w.setBadgeImage = preCreatedPixmaps['thisBadge']  <nl>listWidget.insertItem(item)<nl>listWidget.setItemWidget(item, w)", "out": "QListViewのカスタム項目", "out_en": "Custom Items in QListView"}
{"in": "def prog_callback(param, current, total):<nl><tab>pct = 100 - ((total - current ) *100 )/ (total) <nl><tab>print \"Progress: %s \" % pct<tab><nl><nl><nl>datagen, headers = multipart_encode({<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"post\": \"1\",<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"skin\": \"xmlhttprequest\",<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"userlogin\": \"%s\" % username,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"password\": \"%s\" % password,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"item_type\": \"file\",<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"title\": \"%s\" % title.encode(\"utf-8\"),<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"description\": \"%s\" % description.encode(\"utf-8\"),<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab> <nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> \"file\": filename<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> }, cb=prog_callback)<tab><nl><nl>opener = register_openers()<nl><nl>req = urllib2.Request(UPLOAD_URL, datagen, headers)<nl>response = urllib2.urlopen(req)<nl>return response.read()", "out": "Python HTTPConnectionファイルがhttplibで送信され、進行状況が取得される", "out_en": "Python HTTPConnection file send with httplib, retrieving progress"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt <nl>from mpl_toolkits.mplot3d import Axes3D<nl>import matplotlib.tri as mtri<nl><nl>X = np.load('./mydatars.npy')<nl># My data points are strictly positive. This doesn't work if I don't center about the origin.<nl>X -= X.mean(axis=0)<nl><nl>rad = np.linalg.norm(X, axis=1)<nl>zen = np.arccos(X[:,-1] / rad)<nl>azi = np.arctan2(X[:,1], X[:,0])<nl><nl>tris = mtri.Triangulation(zen, azi)<nl><nl>fig = plt.figure()<nl>ax  = fig.add_subplot(111, projection='3d')<nl>ax.plot_trisurf(X[:,0], X[:,1], X[:,2], triangles=tris.triangles, cmap=plt.cm.bone)<nl>plt.show()", "out": "Pythonを使用した3Dでの2DサーフェスからのポイントのDelaunay Triangulation?", "out_en": "Delaunay Triangulation of points from 2D surface in 3D with python?"}
{"in": "sorted_items = sorted(d.items(), key = lambda item : len(item[1]))<nl>newd = dict(sorted_items[-2:])", "out": "値の長さで辞書をソートします", "out_en": "Sort a dictionary by length of the value"}
{"in": "def __init__(self, master, number_of_people, node_size):<nl><tab>a = 350<nl><tab>b = 140<nl><tab>ellipsePoints = [(a * cos(theta), b * sin(theta))<nl><tab><tab><tab><tab><tab> for theta in (pi*2 * i/number_of_people for i in range(number_of_people))]<nl><tab>DisplayFrame = Canvas(root, bg=\"white\", width=725, height=320)<nl><tab>DisplayFrame.grid(row=0, columnspan=7, column=0, sticky='W', padx=5, pady=5)<nl><tab>for i in range(number_of_people):<nl><tab><tab><tab>DisplayFrame.create_oval(ellipsePoints[i][0]+355, ellipsePoints[i][1]+155,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> ellipsePoints[i][0]+355+node_size, ellipsePoints[i][1]+155+node_size, fill=\"red\")", "out": "楕円パス上に円を等間隔に配置する方法", "out_en": "How to place evenly spaced circles on an elliptical path?"}
{"in": "key = \"testtest12\"<nl>mapping = range(256)<nl><nl>keylen = len(key)<nl>maplen = len(mapping)<nl><nl>for i, v in enumerate(mapping):<nl><tab>c = ord(key[i % keylen])<nl><tab>t = (i + c) % maplen<nl><tab>mapping[i] = mapping[t]<nl><tab>mapping[t] = v", "out": "ユーザ入力に基づいて擬似ランダムテーブルを作成する", "out_en": "Create a pseudo random table based on user input"}
{"in": "import sys<nl>sys.exit(\"Your error message\")", "out": "エラーのあるループ中にPythonを終了します", "out_en": "Exit Python while loop with error"}
{"in": "param_table.write(param.h5, format='hdf5')", "out": "3d astropyテーブルをファイルに書き込む方法", "out_en": "How do I write a 3d astropy table to a file"}
{"in": "lxml.html", "out": "オートコンプリート検索の結果を取得する", "out_en": "Get results of autocompletion search"}
{"in": "post_save.connect(create_user_profile, sender=User, <nl><tab><tab><tab><tab><tab>dispatch_uid=\"user_create_profile\")", "out": "IntegrityErrorへのユーザー登録", "out_en": "User signup leads to IntegrityError"}
{"in": "start_times = node.xpath(\"//t:chapter/start_time/text()\", <nl><tab><tab><tab><tab>   namespaces={'t':'http://example.com/namespace'})", "out": "親要素に基づいて名前空間を持つXPATHを検索する", "out_en": "Find XPATH with namespace and based on parent element"}
{"in": "# change variable name and values to what you need<nl>connection.execute(\"SET SESSION query_cache_type = OFF\")", "out": "SQLAlchemy:SQLAlchemyを使ってMySQLサーバーのシステム変数を変更する方法は?", "out_en": "SQLAlchemy: How to change a MySQL server system variable using SQLAlchemy?"}
{"in": "user_agent_string = self.request.headers['user-agent']", "out": "Python/AppEngine:クライアントブラウザの情報を取得する", "out_en": "Python/AppEngine: Get client browser information"}
{"in": "def _free_places(self):<nl><tab>places = 0<nl><tab>for r in self.rooms:<nl><tab><tab>x = r.beds - ((r.tenant).size())<nl><tab><tab>places = places + x<nl><tab>return places<nl>free_places = property(_free_places)", "out": "djangoでリレーションをナビゲートするモデル・メソッドを宣言して呼び出す方法", "out_en": "How to declare and call a model method navigating through relations in django?"}
{"in": "for c in cols:<nl><tab>if not re.match(r'^[A-Za-z][A-Za-z0-9$_-]+$', c):<nl><tab><tab><tab>print \"Argument is not a valid column name :\", c<nl><tab><tab><tab>sys.exit()", "out": "Pythonでpsycopg2を使用した適切なSQL要求", "out_en": "Proper SQL request with psycopg2 in Python"}
{"in": "top_score_id = sorted_tuple[0][0]", "out": "Python-Dictionaryとタプル、sorted()の後にキーを取得", "out_en": "Python - Dictionnary and tuples, retrieving key after sorted()"}
{"in": "def pictures_2png(file):<nl><tab>buffer = StringIO()<nl><tab>Image.open(file).save(buffer, \"PNG\")<nl><tab>return InMemoryUploadedFile(buffer, None, 'test.png', 'image/png', buffer.len, None)", "out": "画像をpngにアップロード", "out_en": "Upload image to png"}
{"in": "gurl = 'http://toolbarqueries.google.com/tbr?client=navclient-auto&ch=%s&features=Rank&q=info:%s' % (hsh,urllib.quote(URL))", "out": "ローカルに保存されたGoogle検索結果のページランク", "out_en": "Pagerank for locally stored google search results"}
{"in": "d = collections.defaultdict(list)<nl>for element in rootElement.iter():<nl><tab>d[element.tag].append(element.text)", "out": "ネストされたタグを持つXMLデータをPythonで構文解析する", "out_en": "Parsing XML data with nested tags in Python"}
{"in": "class Episode(models.Model):<nl><tab>episode_num = models.IntegerField()<nl><tab>def __unicode__(self):<nl><tab><tab>return 'episode {}'.format(self.episode_num)<nl><nl>Episode.objects.order_by('episode_num')", "out": "ジャンゴでの名前によるソート", "out_en": "Sorting by name in django"}
{"in": "def fetchFuction():<nl><tab>QtGui.QApplication.setOverrideCursor(QtGui.QCursor(QtCore.Qt.WaitCursor))<nl><tab># if incase function failed then restore it<nl><tab>try:<nl><tab><tab>yourFetchFucn()<nl><tab><tab>QtGui.QApplication.restoreOverrideCursor()<nl><tab>except:<nl><tab><tab>QtGui.QApplication.restoreOverrideCursor()", "out": "関数が0を返すまでPyQt4でボタン(またはメインウィンドウ全体)を無効にする方法", "out_en": "How to disable button(or whole main window) in PyQt4 until the function returns 0"}
{"in": "import requests<nl><nl>url = 'http://url.com'<nl>query = {'field': value}<nl>res = requests.post(url, data=query)<nl>print(res.text)", "out": "Pythonスクリプトを使用してWebサーバにデータをポストする", "out_en": "Using Python Script to post data to web server"}
{"in": "from random import randint<nl>from time import sleep<nl><nl>sleep(randint(10,100))", "out": "Pythonでブロックされないようにするために、Googleに送信されるクエリ間にランダムな遅延を追加する方法", "out_en": "How to add random delays between the queries sent to Google to avoid getting blocked in python"}
{"in": "from django.db.models import Count<nl>Image.objects.annotate(Count(\"person\")).order_by(\"person__count\")", "out": "_setによるDjangoクエリー・セットの順序付け", "out_en": "Django queryset ordering by _set"}
{"in": "import os<nl>for i in \"abc\":<nl><tab>os.system (\"mkdir \"+i)<nl><tab>for j in range (5):<nl><tab><tab><tab>os.system (\"touch \"+str(i)+\"/\"+str(j)+\".txt\")", "out": "作成,ファイルとフォルダのループ", "out_en": "creating file and folder loop"}
{"in": "from contextlib import closing<nl>with closing( conn.cursor() ) as cursor:<nl><tab>cursor.execute(\"INSERT INTO...\")", "out": "MySQLdbを使用した複数実行", "out_en": "Multiple executions using MySQLdb"}
{"in": "querystring['param2']", "out": "Pythonで構文解析された問い合わせ文字列の値を取得するにはどうすればいいですか?", "out_en": "How do I get the values of a parsed query string in python?"}
{"in": "import random<nl><nl>def WeightedPick(d):<nl><tab>r = random.uniform(0, sum(d.itervalues()))<nl><tab>s = 0.0<nl><tab>for k, w in d.iteritems():<nl><tab><tab>s += w<nl><tab><tab>if r < s: return k<nl><tab>return k<nl><nl>def Test():<nl><tab>k = {'A': 68, 'B': 62, 'C': 47, 'D': 16, 'E': 81}<nl><tab>results = {}<nl><tab>for x in xrange(10000):<nl><tab><tab>p = WeightedPick(k)<nl><tab><tab>results[p] = results.get(p, 0) + 1<nl><tab>print results<nl><nl>Test()", "out": "(Python)プロポーショナリティ/ウェイトに基づいてランダムにキーを選択するアルゴリズム", "out_en": "(Python) algorithm to randomly select a key based on proportionality/weight"}
{"in": "response=self.app.post('/test_function', <nl><tab><tab><tab><tab><tab>   data=json.dumps(dict(foo='bar')),<nl><tab><tab><tab><tab><tab>   content_type = 'application/json')", "out": "ユニット・テストでJSONsとリクエストを送信する方法", "out_en": "How to send requests with JSONs in unit tests"}
{"in": "site-packages/reportlab/platypus/doctemplate.py", "out": "キャンバスでイメージを描画し、SimpleDocTemplateを使用する", "out_en": "Draw images with canvas and use SimpleDocTemplate"}
{"in": "count = len(set(d[\"code\"] for d in li))", "out": "リスト内の一意の要素を最も効率的にチェックする方法", "out_en": "How do I most efficienty check the unique elements in a list?"}
{"in": "scipy.io.wavfile", "out": "wavファイルへの書き込み", "out_en": "Writing to a .wav file"}
{"in": "df1['age'] = now - datetime.strptime(df1['dob'], \"%m%d%Y\")", "out": "パンダ日付から年齢を計算する", "out_en": "Pandas calculating age from a date"}
{"in": "key=lambda x: abs(x._norm - number)", "out": "番号Pythonに最も近いインスタンスに基づいてオブジェクトのリストをソートする", "out_en": "sorting a list of object based on an instance that is nearest to a number python"}
{"in": "yourstring= '\"ABC\", \"XYZ,MNO\", \"KLM\"<nl>\"ABC\", \"MN\"<nl>\"ABC\", \"123\", \"10\", \"OPPA GANGNAM STYLE\", \"LADY\"'<nl><nl>import csv<nl>import StringIO<nl><nl>class MyDialect(csv.Dialect):<nl><tab>strict = True<nl><tab>skipinitialspace = True<nl><tab>quoting = csv.QUOTE_ALL<nl><tab>delimiter = ','<nl><tab>quotechar = '\"'<nl><tab>lineterminator = '<nl>'<nl><nl><nl>b=StringIO.StringIO(yourstring)<nl>r=csv.reader(b,MyDialect())<nl><nl>for i in r:<nl><tab>print len(i), ':',' @ '.join(i)", "out": "Python-csvをlineのように読み/解析する方法は?", "out_en": "Python - how to read/parse csv like line?"}
{"in": "# Create a temporary list to hold new x values<nl>result = []<nl><nl>for x, y in zip(list_x, list_y):<nl><tab> # Populate the new list<nl><tab> result.append(f(x, y))<nl><nl># Name your new list same as the old one<nl>list_x = result", "out": "forループでのPythonリストの初期化", "out_en": "Python list initialization in for loop"}
{"in": "CACHES = {<nl><tab>'default': {<nl><tab><tab>'BACKEND': 'django.core.cache.backends.dummy.DummyCache',<nl>   }<nl>}", "out": "djangoで開発用のキャッシュを無効にする方法", "out_en": "how to disable cache for development in django?"}
{"in": "import re<nl>testString = r'this, is a test \"one\" it should only return the first item \\\"two\\\" and not the second'<nl>pattern = r'(?<!\\\\)\"([^\"]*)(?<!\\\\)\"'<nl><tab><tab>  # ^^^^^^^<tab><tab>^^^^^^^<nl>print re.findall(pattern, testString)", "out": "Pythonでreを使用して、エスケープされていない引用符で囲まれた項目を検索する", "out_en": "Finding items in quotes, but not escaped quotes, in python using re"}
{"in": "from datetime import date<nl>import random<nl><nl>start_date = date.today().replace(day=1, month=1).toordinal()<nl>end_date = date.today().toordinal()<nl>random_day = date.fromordinal(random.randint(start_date, end_date))", "out": "Pythonが現在の年の日付をランダムに選択する", "out_en": "Python select random date in current year"}
{"in": "with open('file') as f:<nl><tab>print(f.read().count(sequence))", "out": "ファイルPython内のstringの完全一致数の検索", "out_en": "Finding number of exact matches of string in file python"}
{"in": "import re<nl>reValidIPv4 = re.compile(r\"\"\"<nl><tab># Match a valid IPv4 in the wild.<nl><tab>(?:<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab> # Group two start-of-IP assertions.<nl><tab>  ^<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab> # Either the start of a line,<nl><tab>| (?<=\\s)<tab><tab><tab><tab><tab><tab><tab><tab>   # or preceeded by whitespace.<nl><tab>)<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>   # Group two start-of-IP assertions.<nl><tab>(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)<tab># First number in range 0-255 <nl><tab>(?:<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab> # Exactly 3 additional numbers.<nl><tab>  \\.<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab># Numbers separated by dot.<nl><tab>  (?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)  # Number in range 0-255 .<nl><tab>){3}<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab># Exactly 3 additional numbers.<nl><tab>(?=$|\\s)<tab><tab><tab><tab><tab><tab><tab><tab><tab># End IP on whitespace or EOL.<nl><tab>\"\"\", re.VERBOSE | re.MULTILINE)<nl><nl>text = \"10.0.0.1.1 but 127.0.0.256 1.1.1.1\"<nl>l = reValidIPv4.findall(text)<nl>print(l)", "out": "regexを使用した有効なIPアドレスの検索", "out_en": "Finding valid IP addresses with regex"}
{"in": "import os<nl>open(os.path.join(os.path.dirname(__file__), 'Directory', 'input.txt'))", "out": "相対パスからテキストファイルを取得する方法", "out_en": "How to get text file from a relative path?"}
{"in": "from twisted.web.util import Redirect<nl>fooDotComResource.putChild(\"bar\", Redirect(\"http://foobar.com/bar\"))", "out": "別のドメインへのツイストリダイレクトサブディレクトリ", "out_en": "Twisted redirect subdirectory to another domain"}
{"in": "print('<tab><tab>%-40s%s' % (self.serverrqs()*int(self.nbpro), self.servernbrqs()))", "out": "Python pprintや他のモジュールとデータをアラインする方法", "out_en": "python how to align data with pprint or another module"}
{"in": "import web<nl><nl>urls = (<nl><tab>'/(.*)', 'hello'<nl>)<nl>app = web.application(urls, globals())<nl><nl>class hello:<tab><tab><nl><tab>def GET(self, name):<nl><tab><tab>if not name: <nl><tab><tab><tab>name = 'world'<nl><tab><tab>return 'Hello, ' + name + '!'<nl><nl>if __name__ == \"__main__\":<nl><tab>app.run()", "out": "参入障壁の低いPython Webフレームワーク", "out_en": "Python web framework with low barrier to entry"}
{"in": "os.system(\"cat * | grep -r -i -c 'Error' '%s' > '%s'\" % (dir, errors_file))", "out": "複数のファイルに対してファイル内の単語の出現数を書き込み、その結果を別のファイルに書き込む最善の方法は何ですか。", "out_en": "What is the best way of writing the number of occurrences of a word in a file for multiple files and writing the results to another file"}
{"in": "pt = (2, 2)<nl>distance = 1<nl>mask = (indices[0] - pt[0]) ** 2 + (indices[1] - pt[1]) ** 2 <= distance ** 2<nl>result = my_array[mask]", "out": "インデックスに基づいてnumpy配列をフィルタリングする方法", "out_en": "How to filter a numpy array based on indices?"}
{"in": "line1 = file1.readline()<nl>line2 = file2.readline()<nl>while file1_not_at_end and file2_not_at_end:<nl><tab>if line1 < line2:<nl><tab><tab>file3.write(line1)<nl><tab><tab>line1 = file1.readline()<nl><tab>else:<nl><tab><tab>file3.write(line2)<nl><tab><tab>line2 = file2.readline()<nl><nl> # merge file 1 into file 3<nl> # merge file 2 into file 3", "out": "Python-ファイルの先頭行をメモリにロードせずに読み取って削除する", "out_en": "Python - reading and deleting the top line of a file without loading it into memory"}
{"in": "import unittest<nl>class TestNothing(unittest.TestCase):<nl><tab>def test_0010_test_nothing(self):<nl><tab><tab>self.assertEqual(200, 200)", "out": "unittest-TypeError:このコンストラクタは引数を取りません", "out_en": "unittest- TypeError: this constructor takes no arguments"}
{"in": "a=2<nl>s = np.random.zipf(a, 1000)<nl>result = (s/float(max(s)))*1000<nl><nl>print min(s), max(s)<nl>print min(result), max(result)", "out": "Pythonで範囲nのZipf Distributionから値を作成する方法は?", "out_en": "How to create values from Zipf Distribution with range n in Python?"}
{"in": "get_by_id()", "out": "標準のデータストアインデックスを使用するか、独自のインデックスを作成します。", "out_en": "use standard datastore index or build my own"}
{"in": "sizer = wx.BoxSizer(wx.VERTICAL)<nl>sizer.Add(widget1, 0, wx.EXPAND)<nl>sizer.Add(widget2, 1)", "out": "wxPython:BoxSizerの商品は横には広がらず、縦にしか広がらない", "out_en": "wxPython: Items in BoxSizer don't expand horizontally, only vertically"}
{"in": "dict['a'][:,1]", "out": "Pythonのdictでキーの列を使用する方法", "out_en": "How to use columns of a key in a dict in Python?"}
{"in": "from chef import autoconfigure, Client<nl>api = autoconfigure()<nl>Client.delete('notcool.my.com')<nl>Client.create('cool.my.com')", "out": "PyChefを使用して「knife client delete」と「knife client create」を行う方法", "out_en": "how to do 'knife client delete' and 'knife client create' using PyChef?"}
{"in": "def update_weights(w,x,y, learning_rate):<nl><tab>inner_product = 0.0<tab><nl><tab>for f_ in range(len(x)):<nl><tab><tab>inner_product += (w[f_] * x[f_])<nl><tab>dloss = inner_product - y<nl><tab>for f_ in range(len(x)):<nl><tab><tab>w[f_] += (learning_rate * (-x[f_] * dloss))<nl><tab>return w", "out": "反復後にSGD損失が増加し始める", "out_en": "SGD - loss starts increasing after some iterations"}
{"in": "import matplotlib.pyplot as plt<nl><nl>fig, ax = plt.subplots()<nl>x = [0, 0.2, 0.4, 0.6, 0.8]<nl>y = [0, 0.5, 1, 1.5, 2.0]<nl>colors = ['k']*len(x)<nl>ax.scatter(x, y, c=colors, alpha=0.5)<nl>ax.set_xlim((0,2))<nl>ax.set_ylim((0,2))<nl>x0,x1 = ax.get_xlim()<nl>y0,y1 = ax.get_ylim()<nl>ax.set_aspect(abs(x1-x0)/abs(y1-y0))<nl>ax.grid(b=True, which='major', color='k', linestyle='--')<nl>fig.savefig('test.png', dpi=600)<nl>plt.close(fig)", "out": "matplotlibの散布図を正方形にする方法", "out_en": "How do I make a matplotlib scatter plot square?"}
{"in": "def partitionIndexes(totalsize, numberofpartitions):<nl><tab># Compute the chunk size (integer division; i.e. assuming Python 2.7)<nl><tab>chunksize = totalsize / numberofpartitions<nl><tab># How many chunks need an extra 1 added to the size?<nl><tab>remainder = totalsize - chunksize * numberofpartitions<nl><tab>a = 0<nl><tab>for i in xrange(numberofpartitions):<nl><tab><tab>b = a + chunksize + (i < remainder)<nl><tab><tab># Yield the inclusive-inclusive range<nl><tab><tab>yield (a, b - 1)<nl><tab><tab>a = b", "out": "ほぼ同じサイズのチャンクのインデックスを取得する", "out_en": "Get indices of roughly equal sized chunks"}
{"in": "age = int(input(\"Thank you \" + name + \", please enter your name to continue.\"))", "out": "Pythonプログラムの構文エラー", "out_en": "Syntax error in a Python program"}
{"in": "import os<nl>import sys<nl><nl><nl>filename = 'logo.txt'<nl># Use join instead of hard-coding file separators<nl>path = os.path.join(os.getcwd(), filename)<nl># You need to specify some kind of delimiter so you know<nl># where the logo ends. I couldn't think of a better way to<nl># only print part of the file.<nl>delimiter = '------'<nl><nl><nl>with open(path, 'r') as f:<nl><tab>for line in f:<nl><tab><tab>if delimiter in line:<nl><tab><tab><tab>sys.stdout.write('Press any key to continue...')<nl><tab><tab><tab>raw_input()<nl><tab><tab>else:<nl><tab><tab><tab>sys.stdout.write(line)", "out": "テキストファイルをPythonで開き、最初に表示される部分だけを画面に書き込むにはどうすればよいですか。", "out_en": "How to open a text file in python and write only the first visible portion to the screen?"}
{"in": "import wx<nl><nl>TIMER_ID = 100<nl><nl>class Frame(wx.Frame):<nl><tab>def __init__(self, title):<nl><tab><tab>wx.Frame.__init__(self, None, title=title, size=(350,200))<nl><tab><tab>self.timer = None<nl><tab><tab>self.Bind(wx.EVT_LEFT_DCLICK, self.OnDoubleClick)<nl><tab><tab>self.Bind(wx.EVT_LEFT_DOWN, self.OnLeftDown)<nl><nl><tab>def OnDoubleClick(self, event):<nl><tab><tab>self.timer.Stop()<nl><tab><tab>print(\"double click\")<nl><nl><tab>def OnSingleClick(self, event):<nl><tab><tab>print(\"single click\")<nl><tab><tab>self.timer.Stop()<nl><nl><tab>def OnLeftDown(self, event):<nl><tab><tab>self.timer = wx.Timer(self, TIMER_ID)<nl><tab><tab>self.timer.Start(200) # 0.2 seconds delay<nl><tab><tab>wx.EVT_TIMER(self, TIMER_ID, self.OnSingleClick)<nl><nl><nl><nl>app = wx.App(redirect=True)<nl>top = Frame(\"Hello World\")<nl>top.Show()<nl>app.MainLoop()", "out": "WxPythonでマウスのダブルクリックとシングルクリックを区別する方法", "out_en": "How to distinguish the double click and single click of mouse in wxpython"}
{"in": "with open (\"my.ini\", \"r\") as myfile:<nl><tab>my_config = myfile.read()<nl><nl>lines = my_config.splitlines(True)<nl>replacements = {\"path_jamjs\": {\"changeUsername\": \"Te\"},<nl><tab><tab><tab><tab>\"path_php\": {\"changeUsername\": \"TeS\"}}<nl><nl>for path, reps in replacements.items():<nl><tab>for i, line in enumerate(lines):<nl><tab><tab>if line.startswith(path + ':'):<nl><tab><tab><tab>for key, value in reps.items():<nl><tab><tab><tab><tab>line = line.replace('[' + key + ']', value)<nl><tab><tab><tab>lines[i] = line<nl><nl>result = ''.join(lines)", "out": "特定の行に特定の正規表現を適用する方法", "out_en": "how to apply a specific regex to a specific line"}
{"in": "recordList = []", "out": "Pythonでdefaultdictのリストを作成する", "out_en": "Create a list of defaultdict in python"}
{"in": "import win32com.client<nl>objShell = win32com.client.Dispatch(\"WScript.Shell\")<nl>allUserDocs = objShell.SpecialFolders(\"AllUsersDesktop\")<nl>print allUserDocs", "out": "Pythonでシステムフォルダの場所を検索する", "out_en": "Find system folder locations in Python"}
{"in": "sysconfig.get_config_var('SO')", "out": "python distutils:コンパイルされた拡張子の名前へのアクセス", "out_en": "python distutils: access to name of compiled extension"}
{"in": "import math<nl>import pygame<nl>from pygame.locals import *<nl><nl>radar = (100,100)<nl>radar_len = 50<nl>x = radar[0] + math.cos(math.radians(angle)) * radar_len<nl>y = radar[1] + math.sin(math.radians(angle)) * radar_len<nl><nl># then render the line radar->(x,y)<nl>pygame.draw.line(screen, Color(\"black\"), radar, (x,y), 1)", "out": "pygame線を回転する", "out_en": "pygame rotating a line"}
{"in": "import re<nl>f=open('test.file.here', 'r')<nl><nl>pattern = re.compile(\"^[^\\s]*ello[^\\s]*\\sWorld[^\\s]*$\")<nl><nl>for line in f:<nl>  if pattern.match(line):<nl><tab>print line,<nl><nl>f.close()", "out": "Pythonでワイルドカードを使用して検索語を作成するにはどうすればいいですか。", "out_en": "How can I create search terms with wildcards in Python?"}
{"in": "def f(x,y):<nl><tab>'...some code...'<nl><tab>single_value = array[x,y] # = dependent array (e.g. DEM)<nl><tab>'...some code...'<nl><tab>return z<nl><nl>x = np.arange(array.shape[0])<nl>y = np.arange(array.shape[1])<nl>xx, yy = np.meshgrid(x,y, sparse=True)<nl><nl>f_vec = np.vectorize(f) # vectorization of function f<nl><nl>tp_vec = f_vec(xx,yy).T", "out": "更新:グリッドを補間するために各セルに(ベクトル化された)関数を適用", "out_en": "Updated: Apply (vectorized) function on each cell to interpolate grid"}
{"in": "one = np.ascontiguousarray(a['one'])<nl>one.ctypes.data_as(ctypes.POINTER(ctypes.c_double))", "out": "カスタムdtypeを持つnumpy配列へのctypesポインタ", "out_en": "ctypes pointer to numpy array with custom dtype"}
{"in": "from sklearn.cluster import KMeans<nl>import numpy as np<nl>x = np.random.random(13876)<nl><nl>km = KMeans()<nl>km.fit(x.reshape(-1,1))  # -1 will be calculated to be 13876 here", "out": "Scikit-learn:1次元配列上でKMeansを実行する方法", "out_en": "Scikit-learn: How to run KMeans on a one-dimensional array?"}
{"in": "'^(aby|xyz)_.*?(?<!_Result)\\.csv$'", "out": "ファイルが特定の文字列で終了していない場合は一致させる", "out_en": "Match files if it not ends with particular string"}
{"in": "axs = df_month.plot(secondary_y=['C'], mark_right=False)<nl><nl>for ax in axs:<nl><tab>ax.right_ax.set_ylim((0,50)) # Set the y limits to 0 to 50", "out": "Pandas groupby関数のsecondary_yの範囲", "out_en": "Secondary_y range in a Pandas groupby function"}
{"in": "time.struct_time", "out": "Universal Feed Parserを使用してRSS日付を取得する方法", "out_en": "How to get RSS date using Universal Feed Parser"}
{"in": "class ProducerProcess(Process):<nl><nl><tab>def __init__(self, q, **kwargs):<nl><tab><tab>Process.__init__(self,)<nl><tab><tab>self.q = q<nl><nl><tab>def run():<nl><tab><tab>res = do_stuff()<nl><tab><tab>q.put(res)<nl><nl>class ConsumerProcess(Process):<nl><nl><tab>def __init__(self, q, **kwargs):<nl><tab><tab>Process.__init__(self,)<nl><tab><tab>self.q = q<nl><nl><tab>def run():<nl><tab><tab>while True:<nl><tab><tab><tab>args = q.get(block=True) # wait until there is an item in the queue<nl><tab><tab><tab>do_stuff(*args) # do stuff here<nl><nl><nl>q = Queue()<nl>p1 = ProducerProcess(q, **your_args)<nl>p2 =ConsumerProcess(q, **extra_args)<nl>p2.start()<nl>p1.start()<nl># join the processes p1.join() p2.join() or use JoinableQueue depending what you need", "out": "相互通信のためにプロセスを待機させる", "out_en": "Keep a process listening for intercommunication"}
{"in": "subprocess.call('echo -e \"root (hd0,1)<nl>find /boot/grub/menu.lst<nl>setup (hd0)<nl>quit\" | grub --batch', shell=True)", "out": "Pythonサブプロセスを使用し長いbashシーケンスを実行する方法", "out_en": "How to execute long bash sequence with Python subprocess"}
{"in": "mystring = \"a1234f\"<nl>data = list(mystring)", "out": "Python文字列からのバイトの読み取り", "out_en": "Reading bytes from Python String"}
{"in": "sql.execute(connection, \"\"\"<nl>INSERT INTO blah VALUES %s;\"\"\" % (<nl><tab>\", \".join(\"(%d)\" % hid for hid in hids)))", "out": "カーソルから一時テーブルを作成", "out_en": "create temporary table from cursor"}
{"in": "columns = ['Facility', 'Category', 'ID', 'Part', 'Text']<nl><nl># It's always a good idea to sort after creating a MultiIndex like this<nl>df = df.set_index(columns).sortlevel()<nl>df1 = df1.set_index(columns).sortlevel()<nl><nl># You don't have to use Yes here, anything will do<nl># The boolean True might be more appropriate<nl>df['MatchingFlag'] = \"Yes\"<nl>df1['MatchingFlag'] = \"Yes\"<nl><nl># Add them together, matching rows will have the value \"YesYes\"<nl># Non-matches will be nan<nl>result = df + df1<nl><nl># If you'd rather not have NaN's <nl>result.loc[:,'MatchingFlag'] = result.loc[:,'MatchingFlag'].replace('YesYes','Yes')<nl>result.loc[:,'MatchingFlag'] = result['MatchingFlag'].fillna('No')", "out": "パンダ2つのDataFrameを比較し、一致するものにフラグを付ける", "out_en": "Pandas Compare between Two DataFrames, flag what matches"}
{"in": "import os<nl><nl>sep = \" \"<nl><nl>with open(\"inline-t.txt\", \"rb+\") as fd:<nl><tab>seekpos = fd.tell()<nl><tab>line = fd.readline()<nl><tab>while line:<nl><tab><tab>print line<nl><tab><tab>next = raw_input(\">>> \")<nl><tab><tab>if next == \":q\":<nl><tab><tab><tab>break<nl><tab><tab>if next:<nl><tab><tab><tab>values = line.split(sep)<nl><tab><tab><tab>newval = values[0] + sep + next + '<nl>'<nl><tab><tab><tab>if len(newval) == len(line):<nl><tab><tab><tab><tab>fd.seek(seekpos)<nl><tab><tab><tab><tab>fd.write(newval)<nl><tab><tab><tab><tab>fd.flush()<nl><tab><tab><tab><tab>os.fsync(fd)<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>remaining = fd.read()<nl><tab><tab><tab><tab>fd.seek(seekpos)<nl><tab><tab><tab><tab>fd.write(newval + remaining)<nl><tab><tab><tab><tab>fd.flush()<nl><tab><tab><tab><tab>os.fsync(fd)<nl><tab><tab><tab><tab>fd.seek(seekpos)<nl><tab><tab><tab><tab>line = fd.readline()<nl><tab><tab>seekpos = fd.tell()<nl><tab><tab>line = fd.readline()", "out": "Pythonでのユーザ入力からファイルを1行ずつインタラクティブに編集する", "out_en": "edit a file line by line interactively from user input in python"}
{"in": "from django.test.client import Client<nl>client = Client()<nl>resp = client.put('/employee/2/', data={'email': 'here@there.com'}, follow=True)<nl>#... etc", "out": "Django RESTブラウザー・インターフェース", "out_en": "Django REST browser interface"}
{"in": "for key1 in dict:<nl><tab>for key2 in dict[key1]:<nl><tab>   dict[key1][key2]['time'] = 'newTime'", "out": "異なる項目の同じキーを反復処理するPython辞書", "out_en": "Iterating through the same key in different items python dictionary"}
{"in": "comma_separated_float_list_re = re.compile('^([-+]?\\d*\\.?\\d+[,\\s]*)+$')<nl>validate_comma_separated_float_list = RegexValidator(<nl><tab><tab><tab>  comma_separated_float_list_re, <nl><tab><tab><tab>  _(u'Enter only floats separated by commas.'), 'invalid')<nl><nl>class CommaSeparatedFloatField(CharField):<nl><tab>default_validators = [validators.validate_comma_separated_float_list]<nl><tab>description = _(\"Comma-separated floats\")<nl><nl><tab>def formfield(self, **kwargs):<nl><tab><tab>defaults = {<nl><tab><tab><tab>'error_messages': {<nl><tab><tab><tab><tab>'invalid': _(u'Enter only floats separated by commas.'),<nl><tab><tab><tab>}<nl><tab><tab>}<nl><tab><tab>defaults.update(kwargs)<nl><tab><tab>return super(CommaSeparatedFloatField, self).formfield(**defaults)", "out": "Django:浮動小数点のリストを格納するためのモデル・フィールド", "out_en": "Django: Model field for storing a list of floats?"}
{"in": "from pyramid.wsgi import wsgiapp<nl><nl># Enable TileStache tile server<nl>import TileStache<nl>tile_app = TileStache.WSGITileServer('tilestache/tilestache.cfg', autoreload=False)<nl><nl>@wsgiapp<nl>def tileserver(environ, start_response):<nl><nl><tab>return tile_app(environ, start_response)", "out": "Pyramidからwsgiアプリを提供するには?", "out_en": "How to serve a wsgi app from within Pyramid?"}
{"in": "wd = webdriver.Firefox()<nl>wd.implicitly_wait(3)<nl><nl>def get_items(items):<nl><tab>print len(items)<nl><tab>wd.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")<nl><tab># len(items) and len(wd.find_elements-by...()) both always seem to return the same number<nl><tab># if I were to start the loop with while True: it would work, but of course... never end<nl><nl><tab>sleep(5) #seconds<nl><tab>while len(wd.find_elements_by_class_name('stream-item')) > len(items):<nl><tab><tab>items = wd.find_elements_by_class_name('stream-item')<nl><tab><tab>print items<nl><tab><tab>wd.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")<nl><tab>return items<nl><nl>def test():<nl><tab>get_page('http://twitter.com/')<nl><tab>get_items(wd.find_elements_by_class_name('stream-item'))", "out": "Selenium:下にスクロールしながらロードするデータを取得する", "out_en": "Selenium: retrieve data that loads while scrolling down"}
{"in": "def foo(vals):<nl><tab>def f(p,x):<nl><tab><tab>result=0<nl><tab><tab>for i,(av,ap) in enumerate(zip(vals,p)):<nl><tab><tab><tab>result+=av*ap*(x**i)<nl><tab><tab>return result<nl><tab>return f<nl><nl>print(foo([50])([2],3))<nl># f(p,x)=50*2<nl># 100<nl>print(foo([50,60])([2,3],4))<nl># f(p,x)=50*2+60*3*x<nl># 820", "out": "Pythonでの動的関数の構築", "out_en": "Dynamic function building in Python"}
{"in": "print [procinfo for procinfo in procinfos]", "out": "私は単純なPython辞書を持っていますが、なぜディクショナリではなくジェネレータ参照が出力されるのですか?", "out_en": "I have a simple python dict why is a generator reference printed instead of the dict"}
{"in": "dataset = mydata['data']<nl>for data in dataset:<nl>   url = data['images']['standard_resolution']['url']", "out": "Instagramのjsonを繰り返し処理する", "out_en": "Iterating over Instagram json"}
{"in": "import numpy as np<nl>import matplotlib<nl>import mplh5canvas<nl><nl>matplotlib.use('module://mplh5canvas.backend_h5canvas')<nl><nl>import matplotlib.cbook as cbook<nl>import matplotlib.image as image<nl>import matplotlib.pyplot as plt<nl><nl><nl>fig = plt.figure()<nl><nl>ax = fig.add_subplot(111)<nl><nl>ax.plot(np.random.rand(20), '-o', ms=20, lw=2, alpha=0.7, mfc='orange')<nl><nl>ax.grid()<nl><nl>plt.show(open_plot=True)", "out": "python tkinterウィンドウをブラウザーに埋め込む方法", "out_en": "How to embed python tkinter window into a browser?"}
{"in": "import lxml.html<nl>page = lxml.html.parse('http://www.google.com').getroot()<nl>print page.xpath('//a/@href')", "out": "Pythonでhtmlページ上でxpathを実行する方法", "out_en": "How to run an xpath over html page in python?"}
{"in": "a=input('Enter the list of tuples')<nl>b=[]<nl>for i in range(len(a)):<nl><tab>b.append(sum(a[i]))", "out": "Pythonでは、タプルのリストを指定して、含まれるタプルの要素の合計を要素とするリストを生成します。", "out_en": "In Python, Given a list of tuple, generate a list whose elements are sum of elements of contained tuples"}
{"in": "try:<nl><tab>return self.object[row][column]<nl>except IndexError:<nl><tab>return \"error\"", "out": "Pythonの2Dリスト", "out_en": "2D Lists in python"}
{"in": "with open('test.txt') as infile, open('test_2.txt', 'w') as outfile:<nl>  for line in infile:<nl><tab>if not line.startswith(\"I want\"):<nl><tab>  outfile.write(line.strip())", "out": "テキストファイルから行を正しく削除できません", "out_en": "Can't properly remove line from text file"}
{"in": "faces[:,:,0,4] = 1<nl><nl>faces[:,:,0,4] = (1, 1, 1)", "out": "Python/Numpy:インデックス範囲への値の設定", "out_en": "Python/Numpy: Setting values to index ranges"}
{"in": "for r in Table1.objects.using('schema1').filter(column1=val1,column2=val2).values('column3').distinct('column3'):<nl><tab>ltest.append(r['column3'])<nl>for r in lookupTable(type).objects.using('schema1').filter(column3__in=ltest).values('column4').distinct('column4'):<nl><tab>lTemp.append(r['column4'])", "out": "Django、不正なDOUBLE値の切り詰め:ValueQuerySetの'\\x00'", "out_en": "Django, Truncated incorrect DOUBLE value: '\\x00' in ValueQuerySet"}
{"in": "django.db.transaction.enter_transaction_management(using='primary')<nl>django.db.transaction.managed(True, using='primary')<nl><nl>i = 0 <nl>for record in records:<nl><tab>i += 1<nl><tab>r = PrimaryDBModel(**record)<nl><tab>r.save() # This will no be committed until the end.<nl><tab>if not i % 100:<nl><tab><tab>SecondaryDBModel.update()<nl><tab><tab>status = SecondaryDBModel(id=123)<nl><tab><tab>status.current_row = i<nl><tab><tab>status.save() # This will committed immediately.<nl><nl>django.db.transaction.commit(using='primary')<nl>django.db.transaction.leave_transaction_management(using='primary')", "out": "Django ORMによる選択的トランザクション管理", "out_en": "Selective Transaction Management with Django ORM"}
{"in": "class WNode(object):<nl><nl><tab>def __init__(self,w):<nl><tab><tab>self._w=w<nl><tab><tab>self._content=[]<nl><nl><tab>def find(self, x):<nl><tab><tab>if self._w == x:<nl><tab><tab><tab>return self<nl><tab><tab>else:<nl><tab><tab><tab>y = None<nl><tab><tab><tab>for i in self._content:<nl><tab><tab><tab><tab>y = i.find(x)<nl><tab><tab><tab><tab>if y:<nl><tab><tab><tab><tab><tab>break<nl><tab><tab><tab>return y<nl><tab><tab>return None<nl><nl>if __name__ == '__main__':<nl><tab>r = WNode(1)<nl><tab>r._content = [WNode(2), WNode(3), WNode(4)]<nl><tab>for i in xrange(1, 6):<nl><tab><tab>print('find({}) = {}'.format(i, r.find(i)))", "out": "Pythonでツリーからノードを検索して返す", "out_en": "find and return a node from a tree in Python"}
{"in": "datelist =  ['2014-05-06', '2014-05-07', '2014-05-08', '2014-05-09', '2014-05-10',<tab>'2014-05-11', '2014-05-12', '2014-05-13']<nl><nl>import matplotlib<nl>from matplotlib import pyplot<nl>from matplotlib import dates<nl>import datetime<nl><nl>converted_dates = map(datetime.datetime.strptime, datelist, len(datelist)*['%Y-%m-%d'])<nl>x_axis = (converted_dates)<nl>formatter = dates.DateFormatter('%Y-%m-%d')<nl><nl><nl>y_axis = range(0,8)<nl>pyplot.plot( x_axis, y_axis, '-' )<nl>ax = pyplot.gcf().axes[0] <nl>ax.xaxis.set_major_formatter(formatter)<nl>pyplot.gcf().autofmt_xdate(rotation=25)<nl>pyplot.show()", "out": "matplotlib文字列を日付に", "out_en": "matplotlib string to dates"}
{"in": "A = [100,100,100,100]<nl>Scale = 1<nl><nl>B= []<nl>for idx, val in enumerate(A):<nl><tab>B.append( (val*idx)/(len(A)-1) * Scale)", "out": "Pythonとの線上のポイント", "out_en": "Points on line with Python"}
{"in": "browser.execute_script(<nl><tab>\"arguments[0].style.setProperty('display', 'block', 'important');\",<nl><tab>browser.find_element_by_xpath(\"//div\")<nl><tab>)", "out": "python selenium send css with!important(python seleniumは", "out_en": "python selenium send css with !important"}
{"in": "def process_element(catalog, *args, **kwargs):<nl><tab>for child in catalog.getchildren():<nl><tab><tab>print(child.text)", "out": "Python xml:item内のすべての要素のリスト", "out_en": "Python xml : list all elements in item"}
{"in": "filehandle = open(PATH)<nl><nl>r = session.post(URL_IMPORT, data={},files = {'sync_config_import':filehandle})", "out": "Python要求API", "out_en": "Python requests api"}
{"in": "df.loc[[i for j, i in enumerate(df.index) if j % 10 == 0]]", "out": "Pandas Python:10ステップごとにデータフレームの値を取得する方法", "out_en": "Pandas Python: how to get values on data frame every 10 steps?"}
{"in": "class DBExamplestart(Examplestart):<nl><tab>variable = ndb.KeyProperty(kind=DBUser, default=ndb.Key(DBUser, 776))<nl><tab>statement = ndb.StringProperty(indexed=False, default='First')", "out": "ndbモデルへの値のハードコーディング", "out_en": "Hardcoding values into ndb model"}
{"in": "COLUMN_VARIABLES = ['provider', 'language','subtype']<nl>data = {}<nl><nl>for variable in COLUMN_VARIABLES:<nl><tab>data[variable] = node.xpath(\"//%s/text()\"%variable)[0]", "out": "Pythonで変数の長いリストを定義する", "out_en": "Define a long list of variables in python"}
{"in": "def SAD_singleton(cls):<nl><tab>class tmp(object):<nl><tab><tab>def __init__(self):<nl><tab><tab><tab>self.c = None<nl><tab>instances = tmp()<nl><tab>def getinstance():<nl><nl><tab><tab>if instances.c is None:<nl><tab><tab><tab>instances.c = cls()<nl><nl><tab><tab>return instances.c<nl><tab>return getinstance", "out": "Pythonクロージャーローカル変数", "out_en": "python closure local variables"}
{"in": "def weightedL2(a,b,w):<nl><tab>q = a-b<nl><tab>return np.sqrt((w*q*q).sum())", "out": "重み付きユークリッド距離", "out_en": "Euclidean distance with weights"}
{"in": "if button.CanSetTransparent():<nl><tab>button.SetTransparent(100)", "out": "WXPythonでの個々のウィジェットの不透明度", "out_en": "Opacity of individual widgets in WXPython"}
{"in": "sys.modules", "out": "インポートされているPythonモジュールを検索する", "out_en": "Find which python modules are being imported"}
{"in": "import math<nl><nl>def getDistance(lat1,lon1,lat2,lon2):<nl><tab># This uses the haversine formula, which remains a good numberical computation,<nl><tab># even at small distances, unlike the Shperical Law of Cosines.<nl><tab># This method has ~0.3% error built in.<nl><tab>R = 6371 # Radius of Earth in km<nl><nl><tab>dLat = math.radians(float(lat2) - float(lat1))<nl><tab>dLon = math.radians(float(lon2) - float(lon1))<nl><tab>lat1 = math.radians(float(lat1))<nl><tab>lat2 = math.radians(float(lat2))<nl><nl><tab>a = math.sin(dLat/2) * math.sin(dLat/2) + \\<nl><tab><tab>math.cos(lat1) * math.cos(lat2) * math.sin(dLon/2) * math.sin(dLon/2)<nl><nl><tab>c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))<nl><nl><tab>d = R * c * 0.621371 # Converting km to miles with \"* 0.621371\"<nl><nl><tab>return d", "out": "Pythonを使用したGPSトラックポイントからの移動距離の計算", "out_en": "Calculating distance travelled from gps track points using python"}
{"in": "from string import ascii_lowercase<nl>for character in ascii_lowercase:<nl><tab>c = character", "out": "python 3xでForステートメントを使用する", "out_en": "Using the For statement in python 3x"}
{"in": "import sys<nl>from cx_Freeze import setup, Executable<nl><nl># Dependencies are automatically detected, but it might need fine tuning.<nl>build_exe_options = {\"includes\": [\"tkinter\"]}<nl><nl># GUI applications require a different base on Windows (the default is for a<nl># console application).<nl>base = None<nl>if sys.platform == \"win32\":<nl><tab>base = \"Win32GUI\"<nl><nl>setup(<nl><tab>name = \"simple_Tkinter\",<nl><tab>version = \"0.1\",<nl><tab>description = \"Sample cx_Freeze Tkinter script\",<nl><tab>options = {\"build_exe\": build_exe_options},<nl><tab>executables = [Executable(\"the timer.py\", base = base)])<nl><nl>setup(  name = \"guifoo\",<nl><tab><tab>version = \"0.1\",<nl><tab><tab>description = \"My GUI application!\",<nl><tab><tab>options = {\"build_exe\": build_exe_options},<nl><tab><tab>executables = [Executable(\"guifoo.py\", base=base)])", "out": "tkinterインタフェース用のcx_freezeを使用した.exeファイルの作成", "out_en": "creating .exe file with cx_freeze for a tkinter interface"}
{"in": "def gettext(request):<nl>  if request.method == 'POST':<nl><tab>form = UploadFileForm(request.POST, request.FILES)<nl><tab>if form.is_valid():<nl><tab><tab>f = request.FILES['file']<nl><tab><tab>for chunk in f.chunks():<nl><tab><tab><tab>text = chunk<nl><tab><tab><tab>text = preprocessing(text)<nl><tab><tab>return render(request, 'ecs/index.html', {'text': text, 'form': form})<tab>  <nl><tab>else:<nl><tab><tab>form = UploadFileForm()<nl>return render_to_response('ecs/index.html', {'form': form})", "out": "Q:Django-views.pyの他の関数からデータを返す方法", "out_en": "Q: Django - how to return data from other function on views.py"}
{"in": "raw_input()", "out": "プログラムがコマンドプロンプトから実行されない", "out_en": "my program wont run from command prompt"}
{"in": "import csv<nl><nl>with open(\"organizationTest.txt\",\"rU\") as f:<nl><tab><tab>reader = csv.reader(f)<nl><tab><tab>for row in reader:<nl><tab><tab><tab>_, created = Company.objects.get_or_create(<nl><tab><tab><tab><tab>Name=row[0].decode('latin-1').encode('utf8'),<nl><tab><tab><tab><tab>Site=row[1].decode('latin-1').encode('utf8'),<nl><tab><tab><tab><tab>)", "out": "アプリケーションをUnicodeに切り替え", "out_en": "Switch Application to Unicode"}
{"in": "const.py", "out": "Djangoでモデルとビューの定数を定義する方法", "out_en": "How can I define a constant for model and view in Django"}
{"in": "TK.Tk()", "out": "TkinterでPILを使用するには?", "out_en": "How do I use PIL with Tkinter?"}
{"in": "entry_count = Topic.objects.values('title').annotate(Count('entry')).order_by('-entry__count')", "out": "ジャンゴにおける特定の階級に関連するAnnote・伯爵", "out_en": "Annote and count posts related to a specific class, in Django"}
{"in": "import cv<nl><nl>capture = cv.CaptureFromFile(filename)<nl>while Condition1:<nl><tab># Need a frame to get the output video dimensions<nl><tab>frame = cv.RetrieveFrame(capture) # Will return None if there are no frames<nl><tab># New video file<nl><tab>video_out = cv.CreateVideoWriter(output_filenameX, CV_FOURCC('M','J','P','G'), capture.fps, frame.size(), 1)<nl><tab># Write the frames<nl><tab>cv.WriteFrame(video_out, frame)<nl><tab>while Condition2:<nl><tab><tab>frame = cv.RetrieveFrame(capture) # Will return None if there are no frames<nl><tab><tab>cv.WriteFrame(video_out, frame)", "out": "ビデオを分割するためのPythonライブラリ", "out_en": "python library for splitting video"}
{"in": "b = [range(x) for x in a]", "out": "別のリストの番号に基づいたリストのリスト", "out_en": "List of lists based on numbers in another list"}
{"in": "subprocess.call(['lp', 'foo.png'])", "out": "UbuntuでpythonとPILライブラリを使用して、プリンタに接続してpngイメージを印刷する方法", "out_en": "how to connect to a printer and print a png image using python and PIL library in Ubuntu"}
{"in": "a=np.zeros((982,5)) <nl>b=np.random.randint(0,100,(491,5)) # your 491 row matrix<nl>a[::2] = b", "out": "Numpy配列。ゼロの行を交互に挿入します。", "out_en": "Numpy array, insert alternate rows of zeros"}
{"in": "from flask import Flask<nl>app = Flask(__name__)<nl>data_loader = lambda: range(10) # this function should load your data from some external store<nl>@app.route(\"/\")<nl>def main():<nl><tab>body = \"<nl>\".join([\"<p>%s</p>\" % datum for datum in data_loader()])<nl><tab>page = \"\"\"<html><body>%s<nl><tab><tab><tab>  <script>setTimeout(function(){<nl><tab><tab><tab><tab> window.location.reload(1);<nl><tab><tab><tab>}, 5000);</script></body></html>\"\"\" % body<nl><tab>return page<nl><nl><nl>if __name__ == \"__main__\":<nl><tab>app.run()", "out": "PythonスクリプトからHTMLにデータを渡す", "out_en": "Pass data from python script to HTML"}
{"in": "import gdb<nl><nl>res = []<nl>res.append(gdb.execute(\"call factorial(4)\", False, True))<nl>res.append(gdb.execute(\"call factorial(5)\", False, True))<nl>print res", "out": "関数から戻り値を取得するGDB、Pythonスクリプティング", "out_en": "GDB, python scripting to get return values from a function"}
{"in": "from PIL import Image<nl><nl>im = Image.open(\"test.png\")<nl>im.save(\"test-600.png\", dpi=(600,600) )", "out": "画像の解像度をプログラムで変更する", "out_en": "Programmatically change image resolution"}
{"in": "from user.models import *<nl>for u in User.query.all():<nl><tab># \\u2013 is unicode for en-dash<nl><tab>if u\"\\u2013\" in u.occupation:<nl><tab><tab># replace with normal hyphen<nl><tab><tab>u.occupation = u.occupation.replace(u\"\\u2013\", \"-\")<nl><tab><tab>db.session.commit()", "out": "フラスコのSQLAlchemyを使用してすべての行の文字を置換", "out_en": "Replace Character For All Rows using SQLAlchemy on Flask"}
{"in": "SELECT {} FROM a_table.format(','.join(parameter_list))", "out": "SELECT文でパラメータを使用して1つ以上の列を選択する方法", "out_en": "How to use a parameter to select one or more columns in a SELECT statement"}
{"in": "def flip_member(x):<nl><tab>if x == 1:<nl><tab><tab>x += 1<nl><tab>else:<nl><tab><tab>x -= 1<nl><tab>return x", "out": "特定のコード行を再利用する", "out_en": "Reuse specific lines of code"}
{"in": "word = 'lake1!'<nl>new_word = ''<nl>for char in word:<nl><tab>if char.isalpha():<nl><tab><tab>new_word += char", "out": "文字列からアルファベット以外の文字を削除する", "out_en": "Remove nonalphabet characters from a string"}
{"in": "C = [ A[x] for x in range(len(A)) if B[x] ]", "out": "2つのリストを使用するリストcomprenhension", "out_en": "list comprenhension using two list"}
{"in": "print \"%.2f\" % (99990 / 100.0)", "out": "整数の最後の2桁の前に10進数を置く", "out_en": "Place decimal before last two digits for an integer"}
{"in": "def ints(filename):<nl><tab><tab>\"\"\"A function that takes the filename of a file as an input arguement, computs and returns a list of<nl><tab><tab>integers of all the numbers in the file.\"\"\"<nl><tab><tab>a = []<nl><tab><tab>f = open(filename, \"r\")<nl><tab><tab>lines = f.readlines()<nl><tab><tab>f.close()<nl><tab><tab>for line in lines:<nl><tab><tab><tab>for character in line:<nl><tab><tab><tab><tab>try:<nl><tab><tab><tab><tab><tab>a.append(int(character))<nl><tab><tab><tab><tab>except ValueError:<nl><tab><tab><tab><tab><tab>pass<nl><tab><tab>return a", "out": "Pythonでファイルを読み込んで操作する", "out_en": "Reading and manipulating a file in python"}
{"in": "#my python3 script<nl>import subprocess<nl>subprocess.call([\"python2\", \"python2scipt.py\"])", "out": "異なるインタープリター・バージョンでPythonからPythonスクリプトを実行する方法", "out_en": "How to run python script from python with different interpreter version?"}
{"in": "from bs4 import BeautifulSoup<nl>soup = BeautifulSoup('<html><body><a>bbb</a></body></html')<nl>soup.find('a')", "out": "PythonでのHTMLデータフィールドの抽出", "out_en": "Extracting HTML data fields with Python"}
{"in": "from subprocess import *<nl>from time import sleep<nl><nl>for i in range(2, 4):<nl><tab>x = Popen('python' + str(i) + ' --version', shell=True, stdout=PIPE, stdin=PIPE, stderr=STDOUT)<nl><tab>while x.poll() == None:<nl><tab><tab>sleep(0.025)<nl><tab>print('Exit code of ' + str(i) + ' is:',x.poll())<nl><tab>x.stdout.close()<nl><tab>x.stdin.close()", "out": "システムにインストールされているすべてのPythonバージョンを一覧表示する方法", "out_en": "How to list all Python versions installed in the system?"}
{"in": "def accuracy(classifier, gold):<nl><tab>results = classifier.classify_many([fs for (fs,l) in gold])<nl><tab>correct = [l==r for ((fs,l), r) in zip(gold, results)]<nl><tab>if correct:<nl><tab><tab>return float(sum(correct))/len(correct)<nl><tab>else:<nl><tab><tab>return 0", "out": "NLTKを使用したアスペクトベースの好感度", "out_en": "aspect based sentiment using NLTK?"}
{"in": "with open('newfile.txt','w') as fileinput:<nl><tab>for start, end in searchPFAM(fname):<nl><tab><tab>print start, end  <nl><tab><tab>if start <= end:<nl><tab><tab><tab>while start <= end:<nl><tab><tab><tab><tab>result = makeList[start]<nl><tab><tab><tab><tab>fileinput.write(result)<nl><tab><tab><tab><tab>start += 1", "out": "出力ファイル内のデータがすべての結果を表示しなかった", "out_en": "data in my outputfile didn't print all result it should have"}
{"in": "output=subprocess.Popen((\"certutil.exe -view -restrict  \\\"NotAfter<=now+30:00,NotAfter>=now+00:00\\\"\" ),stdout=subprocess.PIPE).stdout", "out": "サブプロセスを使用して引数を二重引用符で囲んだアプリケーションをPython内から呼び出すにはどうすればよいでしょうか。", "out_en": "How to call from within Python an application with double quotes around an argument using subprocess?"}
{"in": "def get_number(values):<nl><tab>total = 0<nl><tab>for val in reversed(values):<nl><tab><tab>total = (total << 8) + val<nl><tab>return total", "out": "Pythonの整数リストを16進数に変換する", "out_en": "converting python list of integers to a hex number"}
{"in": "from PySide import QtGui<nl>fname, _ = QtGui.QFileDialog.getOpenFileName(None, 'Choose file','.')", "out": "Enthoughtキャノピーで実行するコード用のファイルダイアログが必要です", "out_en": "Need file dialog for code running in Enthought Canopy"}
{"in": "ff = webdriver.Firefox()<nl>ff.implicitly_wait(10) # seconds", "out": "Selenium Webドライバfind_element_by_xpathに時間がかかる", "out_en": "Selenium webdriver find_element_by_xpath takes time"}
{"in": "(input_img == 255).all(axis=2)", "out": "OpenCV/Numpyを使用して、Pythonを使用してカラーイメージ内の白いピクセルを検索する", "out_en": "Using opencv / Numpy to find white pixels in a color image using python"}
{"in": "from django.db import models<nl>from django.contrib import admin<nl><nl>class Employee(models.Model):<nl><tab>lastname = models.CharField(\"Last\", max_length=64)<nl><tab>firstname = models.CharField(\"First\", max_length=64)<nl><tab>middlename = models.CharField(\"Middle\", max_length=64)<nl><tab>clocknumber = models.CharField(max_length=16)<nl><nl><tab>def _get_full_name(self):<nl><tab><tab>\"Returns the person's full name.\"<nl><tab><tab>return '%s, %s %s' % (self.lastname, self.firstname, self.middlename)<nl><tab>full_name = property(_get_full_name)<nl><nl><nl><tab>class Meta:<nl><tab><tab>ordering = ['lastname','firstname', 'middlename']<nl><nl>class EmployeeAdmin(admin.ModelAdmin):<nl><tab>list_display = ('clocknumber','full_name')<nl><tab>fieldsets = [(\"Name\", {\"fields\":((\"lastname\", \"firstname\", \"middlename\"), \"clocknumber\")}),<nl>]<nl><nl>admin.site.register(Employee, EmployeeAdmin)", "out": "Djangoモデルに特殊フィールドを追加する方法", "out_en": "How to add a calculated field to a Django model"}
{"in": "import random<nl><nl>lst = ['!','-','=','~','|']<nl>string = 'Hello world. Hello world.'<nl><nl><nl>print ''.join('%s%s' % (x, random.choice(lst) if random.random() > 0.5 else '') for x in string)", "out": "Python:ランダムなポイントで他の文字の間に文字を挿入する", "out_en": "Python: Inserting characters between other characters at random points"}
{"in": "for i in data['topartists']['artist']:<nl><tab>print (i['name'])", "out": "Python Print all from json(すべてをjsonから出力)", "out_en": "Python Print all from json"}
{"in": "hasht = \\<nl>{<nl><tab>\"A\" : [\"B\", \"D\", \"E\"],<nl><tab>\"B\" : [\"C\"],<nl><tab>\"C\" : [\"D\", \"E\"], <nl><tab>\"D\" : [\"C\", \"E\"], <nl><tab>\"E\" : [\"B\"]<nl>}<nl><nl>def recursive(start, finish):<nl><tab>paths=[]<nl><tab>def recursive_helper(path, finish):<nl><tab><tab>for i in hasht[path[-1]]:<nl><tab><tab><tab>if i == finish:<nl><tab><tab><tab><tab>paths.append(path + [i])<nl><tab><tab><tab><tab>continue<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>recursive_helper(path + [i], finish)<nl><tab>recursive_helper([start], finish)<nl><tab>return paths<nl><nl>print recursive(\"C\", \"C\")", "out": "グラフを再帰的に生成する-Python", "out_en": "Generating a graph recursively - Python"}
{"in": "cursor.execute(\"update Gps_table set longitude=?,latitude=? where gps_id=1\", s1, s2)", "out": "pyodbcを使用してsqlデータベーステーブル内の複数のcloumsを更新できません", "out_en": "Unable to update Multiple cloums in a sql database table using pyodbc"}
{"in": "print root11.__repr__()", "out": "Python複素数の出力結果がシェル出力と異なる", "out_en": "python complex number print result different from shell output"}
{"in": "comment = Comment.objects.create(**params)", "out": "djangoのメソッドを使って新しいコメントを投稿する方法", "out_en": "how to post a new comment through a method in django?"}
{"in": "import fileinput<nl><nl>for fl, line in zip(li, fileinput.input(['a.txt'], inplace=True)):<nl><tab>print(line.strip() + '\\t' + str(fl))", "out": "Python-既存のタブ区切りファイルに列を追加する", "out_en": "Python - add a column to an existing tab separated file"}
{"in": "print \"<tr><td>Review </td><td><input type=\\\"textarea\\\" name=\\\"Review\\\" cols=\\\"50\\\" rows=\\\"5\\\" />\"<nl>print \"\"\"<nl><tab>Enter some text...<nl><tab></textarea><nl><tab><br /><nl><nl>\"\"\"", "out": "HTML Pythonの正しい構文", "out_en": "HTML Python Correct Syntax"}
{"in": "# weapon.py<nl>class Weapon:<nl><tab>def __init__(self, name, dmg):<nl><tab><tab>self.name = name<nl><tab><tab>self.dmg  = dmg<nl><nl><tab>def attack(self, target):<nl><tab><tab>target.health -= self.dmg<nl><nl># fighter.py<nl>class Fighter:<nl><tab>def __init__(self, name, weapon=None):<nl><tab><tab>self.name   = name<nl><tab><tab>self.weapon = weapon<nl><nl><tab>def attack(self, target):<nl><tab><tab>if self.weapon is None:<nl><tab><tab><tab># punch him<nl><tab><tab><tab>target.health -= 2<nl><tab><tab>else:<nl><tab><tab><tab>self.weapon.attack(target)", "out": "Pythonで別のクラスからメソッドを呼び出す", "out_en": "Calling a method from another class in Python"}
{"in": "class Category(models.Model):<nl>   name = models.CharField(max_length=30, unique=True)<nl><nl>   def __unicode__(self):<nl><tab><tab>return self.name", "out": "Django選択ボックスのオプションの名前を変更する方法", "out_en": "How can I change name of option in django select box"}
{"in": "plt.savefig('test.png',  bbox_inches='tight', pad_inches=0.1)", "out": "matplotlibでのサブプロットに関するPythonサイズの問題", "out_en": "Python - Size problems with subplots in matplotlib"}
{"in": "import pandas as pd<nl><nl>data = []<nl>for line in open('temp.text'):<nl><tab>if line.startswith('/media/'):<nl><tab><tab>path = line[:-1]<nl><tab>else:<nl><tab><tab>rights = line.split()[1]<nl><tab><tab>owner = re.match('.*.CN=([^.]+).*', line).groups()[0]<nl><tab><tab>row = {'path': path, 'right': rights, 'owner': owner}<nl><tab><tab>data.append(row)<nl>df = pd.DataFrame(data)<nl>df[df.owner=='Dog']", "out": "パンダDFおよびRE:一致するYを再検索します。次に、最後に見つかったXを検索します。", "out_en": "Pandas DF and RE - Find a match Y. Then find the last occurence of X"}
{"in": "data = request.body.read()", "out": "データのpostに相当するボトルPythonのput", "out_en": "bottle python put equivalent to post for data"}
{"in": "fin = open(\"foo1.txt\")<nl>G={}<nl>for line in fin: # load data, create adj lists<nl><tab>lst = line.split()<nl><tab>lst = [int(x) for x in lst]<nl><tab>G[lst[0] ]=lst[1:]<nl>print(G)", "out": "Pythonでファイルを読み込んでリストを作成すると、空のリストになる", "out_en": "Reading a file in python and creating a list turns out to an empty list"}
{"in": "def range_sum(nums, sum=0):<nl><tab>if not nums:<nl><tab><tab>return sum<nl><tab>sum += nums.pop()<nl><tab>return range_sum(nums, sum)", "out": "Python-挿入者のリストを作成し、再帰を使用してそれらを追加する", "out_en": "Python - Creating a list of intergers and using recursion to add them up"}
{"in": "from sklearn.metrics import f1_score", "out": "SklearnをMultinomialNBにとってポジティブな方向に偏らせる", "out_en": "Biasing Sklearn toward positives For MultinomialNB"}
{"in": "for node in entry:<nl><tab>video_title = node.getElementsByTagName('title')[0].firstChild.nodeValue<nl><tab>print video_title", "out": "Pythonを使用してYouTube XMLを構文解析する方法", "out_en": "How to parse YouTube XML using Python?"}
{"in": "def get_name(line):<nl><tab>return line[1:].rsplit('|', 1)[-1].strip()<nl><nl>with open('input.txt') as f, open('output.txt', 'w') as fout:<nl><tab>name = ''<nl><nl><tab># Phase 1: Find unavailable sequence<nl><tab>unavailable = set()<nl><tab>for line in f:<nl><tab><tab>if line.startswith('>'):<nl><tab><tab><tab>name = get_name(line)<nl><tab><tab>else:<nl><tab><tab><tab>if 'Sequence unavailable' in line:<nl><tab><tab><tab><tab>unavailable.add(name)<nl><nl><tab># Phase 2: Filter avilable sequence<nl><tab>f.seek(0)<nl><tab>keep = False<nl><tab>for line in f:<nl><tab><tab>if line.startswith('>'):<nl><tab><tab><tab>name = get_name(line)<nl><tab><tab><tab>keep = name not in unavailable<nl><tab><tab>if keep:<nl><tab><tab><tab>fout.write(line)", "out": "テキストファイルから特定の行を削除する", "out_en": "Deleting specific lines from text file"}
{"in": "[Toplevel][1]", "out": "複数のTkinterウィンドウがあるチェックボタン", "out_en": "Checkbuttons with Multiple Tkinter Windows"}
{"in": "# Get a cursor for the entire collection<nl>docs = db.collection.find()<nl><nl>for doc in docs:<nl><tab># Get all documents that have a common element<nl><tab>related_docs = db.collection.find({\"$or\": [<nl><tab><tab>{\"color\": doc[\"color\"]},<nl><tab><tab>{\"name\": doc[\"name\"]},<nl><tab><tab>{\"age\": doc[\"age\"]},<nl><tab><tab>]})<nl><nl><tab># Record the relationships in whatever structure you're using<nl><tab>for related_doc in related_docs:<nl><tab><tab>store_relationship(doc, related_doc)", "out": "rdflibを使用したDB内のすべてのリレーションの取得", "out_en": "Getting all relations in DB by using rdflib"}
{"in": "from math import sqrt<nl>from joblib import Parallel, delayed<nl>import multiprocessing<nl><nl>if __name__ == '__main__':<nl><tab>test = Parallel(n_jobs=2)(delayed(sqrt)(i ** 2) for i in range(10))<nl><tab>print(test)", "out": "joblibを使用したPythonの単純な並列計算", "out_en": "python simple parallel computation with joblib"}
{"in": "re.findall(r\"vcxproj.*?\\{(.*?)\\}\", text)", "out": "指定されたパターンの後のシンボル間のマッチパターン", "out_en": "match pattern between symbols, after given pattern"}
{"in": "num = 12345678<nl>first_four = int(str(num)[:4])<nl>last_four = int(str(num)[4:])<nl>middle_two = int(str(num)[3:5])", "out": "数値変数の最後の数値を取得する方法", "out_en": "How do I get the last numbers of a number variable?"}
{"in": "if user not in data:<nl><tab>data[user] = []<nl>data[user].append({'item': row[0], 'time': row[1]})", "out": "Pythonでの連想配列の追加", "out_en": "Appending associative arrays in Python"}
{"in": "def makePlayFair(key, alpha):<nl><nl><nl><tab>letters = []<nl><tab>for letter in key + alpha:<nl><tab><tab>if letter not in letters:<nl><tab><tab><tab>letters.append(letter)<nl><nl><tab>box = []<nl><tab>for line_number in range(5):<nl><tab><tab>box.append( letters[line_number * 5: (line_number+1) * 5])", "out": "Pythonメソッドが正しく動作せず、リスト内の項目をスキップします(playfair cipher)。", "out_en": "My python method isn't working correctly, skipping items in a list (playfair cipher)"}
{"in": "def right_justify(s):<nl><tab>print \"%70s\" % s", "out": "先頭に十分なスペースがある文字列を出力します。", "out_en": "prints the string with enough leading spaces?"}
{"in": "def depluralise(plurals, plural_endings):<nl><tab>new_list = []<nl><tab>for plural, plural_ending in zip(plurals, plural_endings):<nl><tab><tab>if plural.endswith(plural_ending):<nl><tab><tab><tab>if plural_ending == '':<nl><tab><tab><tab><tab>new_list.append(plural)<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>new_list.append(plural[:-len(plural_ending)])<nl><tab>return new_list <nl><nl><nl>plural_string = \"cell phones|sheep|oxen\"<nl>plurals = plural_string.split('|')<nl>plural_endings_string = \"s,,en\"<nl>plural_endings = plural_endings_string.split(',')<nl><nl>print depluralise(plurals, plural_endings)<nl><nl>plurals = ['children', 'brothers', 'fish', 'penguins']<nl>plural_endings = ['ren', 's', '', 's']<nl><nl>print depluralise(plurals, plural_endings)", "out": "Python-2番目のリストの要素の最後から1番目のリストの要素を「減算」します。要素は整数ではなく文字列です", "out_en": "Python - 'Subtract' Elements in 1 List From The End of The Elements in 2nd List. Elements are strings not integers"}
{"in": "hour_list = [int(t[:2]) for t in time_new]", "out": "時間のTypeErrorヒストグラム", "out_en": "TypeError histogram of time"}
{"in": "for i in tree.get_children():<nl><tab>tree.delete(i)", "out": "Tkinterを使用してTreeview全体をクリアする方法", "out_en": "How to clear an entire Treeview with Tkinter"}
{"in": "import glob<nl>import pandas as pd<nl><nl>combined = []<nl>for filepath in glob.glob('path/to/your/files/*.exp'):<nl><tab>combined.append(pd.read_table(filepath, sep='\\t', header=None))<nl>combined = pd.concat(combined, ignore_index=True)", "out": "Pythonデータ内の可変列数、複数の.expファイル", "out_en": "Variable number of columns in Python data, multiple .exp files"}
{"in": "line = 5<nl>print (line-1) * \" \" + \"* \"<nl>for i in xrange(1,line-1):<nl><tab>print (line-i-1)* \" \" +  \"*\" + (2*i -1)*\" \" + \"* \"<nl>print (line) * \"* \"", "out": "Python 2.7を使用して三角形を作成する方法", "out_en": "how to make triangle using python 2.7"}
{"in": "#!/usr/bin/env python<nl><nl>import re<nl><nl>if __name__ == \"__main__\":<nl><tab>lines = {' foo<tab>  (bar)<tab>'}<nl><tab>parens_regex = re.compile(r'\\(.*?\\)')  # Non-greedy<nl><tab>space_regex =  re.compile(r'\\s+')<nl><nl><tab>for line in lines:<nl><tab><tab>print 'Before: \"%s\"' % line<nl><tab><tab>line_tmp = parens_regex.sub('', line)  # Before space-regex so we also collapse space around parens<nl><tab><tab>line_tmp = space_regex.sub(' ', line_tmp)<nl><tab><tab>line_tmp = line_tmp.strip()<nl><tab><tab>print 'After: \"%s\"' % line_tmp  # Prints: \"foo\"", "out": "括弧内の空白とテキストの削除-作業コードをより洗練されたものにする", "out_en": "Removal of whitespace and text in brackets - make my working code more elegant"}
{"in": "import pyPdf<nl><nl>def getPDFContent(path):<nl><tab>content = \"\"<nl><tab># Load PDF into pyPDF<nl><tab>pdf = pyPdf.PdfFileReader(file(path, \"rb\"))<nl><tab># Iterate pages<nl><tab>for i in range(0, pdf.getNumPages()):<nl><tab><tab># Extract text from page and add to content<nl><tab><tab>content += pdf.getPage(i).extractText() + \"<nl>\"<nl><tab># Collapse whitespace<nl><tab>content = \" \".join(content.replace(\"\\xa0\", \" \").strip().split())<nl><tab>return content<nl><nl>for f in filelist:<nl><tab>print keyword in getPDFContent(f)", "out": "400以上のPDFファイルでキーワードを検索するには?", "out_en": "How to search keywords in 400+ PDF files?"}
{"in": "import urllib2<nl>req = urllib2.urlopen(\"http://en.wikipedia.org/w/api.php?action=parse&page=China&format=json&prop=text\")<nl>content = req.read()<nl># content in json - use json or simplejson to get relevant sections.", "out": "Pythonでウィキペディアのページを構文解析する方法", "out_en": "How to parse a wikipedia page in Python?"}
{"in": "create_upload_url()", "out": "BlobstoreアップロードハンドラからユーザのIPを取得するにはどうすればよいですか。", "out_en": "How can I get a user's IP from a Blobstore upload handler?"}
{"in": "newlist = [sublist[:2] for sublist in mylist]", "out": "リストのリスト内にある各リストの要素の範囲を返す", "out_en": "Return a range of elements of each list inside a list of lists"}
{"in": "print \"mysqldump database\",<nl>for i in range(n):<nl><tab>print \"shard_\"+str(2*i),", "out": "特定のMySQLテーブルをあるマシンから別のマシンに自動的に移動する方法は?", "out_en": "How to automatically move specific MySQL tables from one machine to another?"}
{"in": "df.index = df.index.to_datetime()", "out": "Pythonでのインデックスの曜日によるデータフレーム行選択", "out_en": "Dataframe Row Selection by Weekday of Index in Python"}
{"in": "#!/usr/bin/env python<nl>from pylab import *<nl><nl>def f(t):<nl><tab>s1 = cos(2*pi*t)<nl><tab>e1 = exp(-t)<nl><tab>return multiply(s1,e1)<nl><nl>t1 = arange(0.0, 5.0, 0.1)<nl>t2 = arange(0.0, 5.0, 0.02)<nl>t3 = arange(0.0, 2.0, 0.01)<nl><nl>figure(figsize=(4, 4))<nl>sub1 = subplot(211)<nl>l = plot(t1, f(t1), 'bo', t2, f(t2), 'k--', markerfacecolor='green')<nl>grid(True)<nl>title('A tale of 2 subplots')<nl>ylabel('Damped oscillation')<nl><nl>## I ADDED THIS<nl>autoAxis = sub1.axis()<nl>rec = Rectangle((autoAxis[0]-0.7,autoAxis[2]-0.2),(autoAxis[1]-autoAxis[0])+1,(autoAxis[3]-autoAxis[2])+0.4,fill=False,lw=2)<nl>rec = sub1.add_patch(rec)<nl>rec.set_clip_on(False)<nl><nl>subplot(212)<nl>plot(t3, cos(2*pi*t3), 'r.')<nl>grid(True)<nl>xlabel('time (s)')<nl>ylabel('Undamped')<nl><nl>savefig('test.png')", "out": "matplotlibでサブプロットの周囲に境界を描画する", "out_en": "draw a border around subplots in matplotlib"}
{"in": "# define a class object (your class may be more complicated than this...)<nl>class A(object):<nl><tab>pass<nl><nl># a class method takes the class object as its first variable<nl>def func(cls):<nl><tab>print 'I am a class method'<nl><nl># you can just add it to the class if you already know the name you want to use<nl>A.func = classmethod(func)<nl><nl># or you can auto-generate the name and set it this way<nl>the_name = 'other_func' <nl>setattr(A, the_name, classmethod(func))", "out": "Pythonでクラスのクラスメソッドを動的に作成する方法", "out_en": "How can I dynamically create class methods for a class in python"}
{"in": "if m:  #only execute this if a match was found<nl>   print m.group()  #m.group() is the portion of the string that matches your regex.", "out": "Pythonで文字列の最初の桁を取得する", "out_en": "get first digit in a string in python"}
{"in": "import shutil<nl><nl>path = input(\"Enter path to delete\")<nl><nl>shutil.rmtree(path);", "out": "ファイル削除プログラムを作成しようとしています", "out_en": "I am trying to make a file delete program"}
{"in": "class RegisterView(generic.CreateView):<nl><tab>model = User<nl><tab>form_class = forms.RegisterForm<nl><tab>template_name = 'register.html'<nl><tab>success_url = reverse_lazy('platforms')<nl><nl><tab>def get(self, request, *args, **kwargs):<nl><tab><tab>if request.user is not None:<nl><tab><tab><tab>return redirect('home')<nl><tab><tab># register logic<nl><tab><tab>return render(request, 'register.html', data)<nl><nl><tab>def form_valid(self, form):<nl><tab><tab>response = super(RegisterView, self).form_valid(form)<nl><tab><tab>user = authenticate(username=form.instance.username, password=form.cleaned_data['password'])<nl><tab><tab>login(self.request, user)<nl><tab><tab>return response", "out": "クラスビューにロジックを追加する方法", "out_en": "How to add logic to classview"}
{"in": "[x[1] for x in elements]", "out": "Pythonでタプルのリストからn番目の要素を抽出するにはどうすればよいですか?", "out_en": "How to extract the n-th elements from a list of tuples in python?"}
{"in": "test_rec[(test_rec.age==1) & (test_rec.sex==1)]", "out": "Pythonで配列に複数のインデックスを使用する", "out_en": "Using multiple indicies for arrays in python"}
{"in": "temp_input=raw_input()  #taking the input<nl>lst=temp_input.split(\";\") # splitting the input and saving in a list<nl>for i in lst: # iterating through the list<nl><tab>parse(i) # calling parse() with single list element", "out": "関数を使用したリストの値の送信", "out_en": "Sending a list's values through a function"}
{"in": "import os<nl><nl>direc = os.getcwd() # Get current working directory<nl>ext = '.txt' # Select your file delimiter<nl><nl>file_dict = {} # Create an empty dict<nl><nl># Select only files with the ext extension<nl>txt_files = [i for i in os.listdir(direc) if os.path.splitext(i)[1] == ext]<nl><nl># Iterate over your txt files<nl>for f in txt_files:<nl><tab># Open them and assign them to file_dict<nl><tab>with open(os.path.join(direc,f)) as file_object:<nl><tab><tab>file_dict[f] = file_object.read()<nl><nl># Iterate over your dict and print the key/val pairs.<nl>for i in file_dict:<nl><tab>print i, file_dict[i]", "out": "フォルダからdictへのPython?ファイル", "out_en": "Python ??? files from folder to a dict"}
{"in": "import cgi<nl>escaped = cgi.escape(unescaped)", "out": "Pythonで'<'と'>'を自動的に変換する", "out_en": "Converting to and from '<' and '>' automatically with Python"}
{"in": "def find_convergence(iterable, count):<nl><tab>current_count = 0<nl><tab>last = None<nl><nl><tab>for i, x in enumerate(iterable):<nl><tab><tab>if x == last:<nl><tab><tab><tab>current_count += 1<nl><nl><tab><tab><tab>if current_count == count:<nl><tab><tab><tab><tab>return i - count + 1<nl><tab><tab>else:<nl><tab><tab><tab>last = x<nl><tab><tab><tab>current_count = 1", "out": "python-次の10個の項目が繰り返され始める項目のインデックス", "out_en": "python - the index of the item where the next 10 items starts repeating"}
{"in": "from multiprocessing import Pool<nl>from multiprocessing import cpu_count<nl><nl><nl>def handle_tiff(some_file):<nl><tab>data_open = gdal.Open(some_file)<nl><tab>data_array = data_open.ReadAsArray().astype(np.float32) <nl><tab>return data_array<nl><nl>tiff_files = glob.glob('*.tif') <nl>p = Pool(cpu_count()- an_integer)<nl>all_data = p.map(handle_tiff, tiff_files)", "out": "ディスクからのデータの読み取りを高速化し、それらをnumpy配列に変換してさらに処理するためのソリューションはありますか?", "out_en": "Any solution for accelerating the reading of data from disk and converting them into numpy array for further processing?"}
{"in": "import active_directory<nl><nl>homeMDB = \"CN=UBER MAILBOX,CN=InformationStore,CN=UBERMAILSERVER,\"\\<nl><tab><tab>\"CN=Servers,CN=Administrative Groups,CN=UBERORG,\"\\<nl><tab><tab>\"CN=Microsoft Exchange,CN=Services,CN=Configuration,\"\\<nl><tab><tab>\"DC=uber,DC=org,DC=uk\"<nl><nl>user=active_directory.find_user(\"captain.awesomeface\")<nl>user.CreateMailbox(homeMDB)<nl><nl><nl>user.Properties[\"mail\"].Value = \"captain.awesomeface@uberorg.com\";<nl><nl>user.SetInfo()", "out": "Pythonから交換メールボックスを作成", "out_en": "Create exchange Mailbox from python"}
{"in": "# Import pyplot and dates from matplotlib<nl>import matplotlib.pyplot as plt<nl>import matplotlib.dates as mdates<nl># Set date format and major locator of x-axis<nl>plt.gca().xaxis.set_major_formatter(mdates.DateFormatter('%Y%m%d'))<nl>plt.gca().yaxis.set_major_locator(mdates.DayLocator())<nl># Actually plot the data<nl>plt.plot([x[0] for x in rows],[y[1] for y in rows])<nl># Fix ticklabels so they don't overlap in the figure<nl>plt.gcf().autofmt_xdate()", "out": "datetime.dateオブジェクトをfloatにパースする方法", "out_en": "How to parse datetime.date object into a float"}
{"in": "import subprocess<nl>sp = subprocess.Popen(['ls', '-l'], stdout=subprocess.PIPE)<nl>output, _ = sp.communicate()<nl>print \"Status:\", sp.wait()<nl>print \"Output:\"<nl>print output", "out": "出力コマンドを変数またはファイルにリダイレクトしますか?", "out_en": "Redirect an output command to a variable or file?"}
{"in": "def checkNextID(ID):<nl><tab>global numOfRuns, curRes, lastResult<nl><tab>while ID < lastResult:<nl><tab><tab>try:<nl><tab><tab><tab>numOfRuns += 1<nl><tab><tab><tab>if numOfRuns % 10 == 0:<nl><tab><tab><tab><tab>time.sleep(3) # sleep every 10 iterations<nl><tab><tab><tab>if isValid(ID + 8):<nl><tab><tab><tab><tab>parseHTML(curRes)<nl><tab><tab><tab><tab>ID = ID + 8<nl><tab><tab><tab>elif isValid(ID + 18):<nl><tab><tab><tab><tab>parseHTML(curRes)<nl><tab><tab><tab><tab>ID = ID + 18<nl><tab><tab><tab>elif isValid(ID + 7):<nl><tab><tab><tab><tab>parseHTML(curRes)<nl><tab><tab><tab><tab>ID = ID + 7<nl><tab><tab><tab>elif isValid(ID + 17):<nl><tab><tab><tab><tab>parseHTML(curRes)<nl><tab><tab><tab><tab>ID = ID + 17<nl><tab><tab><tab>elif isValid(ID+6):<nl><tab><tab><tab><tab>parseHTML(curRes)<nl><tab><tab><tab><tab>ID = ID + 6<nl><tab><tab><tab>elif isValid(ID + 16):<nl><tab><tab><tab><tab>parseHTML(curRes)<nl><tab><tab><tab><tab>ID = ID + 16<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>ID = ID + 1<nl><tab><tab>except Exception, e:<nl><tab><tab><tab>print \"somethin went wrong: \" + str(e)", "out": "Python:Pythonオブジェクトの呼び出し中に最大再帰深度を超えました", "out_en": "Python: maximum recursion depth exceeded while calling a Python object"}
{"in": "def get_ffmpeg_bin():<nl><tab>ffmpeg_dir = helper_functions.get_ffmpeg_dir_path()<nl><tab>FFMPEG_BIN = os.path.join(ffmpeg_dir, \"ffmpeg.exe\")<nl><tab>return FFMPEG_BIN<nl><nl><nl>def split_vid_from_path(video_file_path, start_time, end_time):<nl><tab>ffmpeg_binary =  get_ffmpeg_bin()<nl><tab>output_file_name = get_next_file_name(video_file_path)<nl><tab>pipe = sp.Popen([ffmpeg_binary,\"-v\", \"quiet\", \"-y\", \"-i\", video_file_path, \"-vcodec\", \"copy\", \"-acodec\", \"copy\",<nl><tab><tab><tab><tab> \"-ss\", start_time, \"-t\", end_time, \"-sn\", output_file_name ])<nl><nl><nl><tab>pipe.wait()<nl><tab>return True<nl><nl><nl>sample_vid = os.path.join(get_sample_vid_dir_path(), \"Superman-01-The_Mad_Scientist.mp4\")<nl>split_vid_from_path(sample_vid, \"00:00:00\", \"00:00:17\")", "out": "Pythonビデオ編集--ビデオをトリミングする方法", "out_en": "Python video editing -- How to trim videos"}
{"in": "import os<nl>os.path.abspath(file_csv.name)", "out": "djangoでアップロードされたファイルのローカル・パスを取得する", "out_en": "get local path of an uploaded file in django"}
{"in": "arrow.get(s, 'YYYY/M/D HH:mm:ss').replace(tzinfo=dateutil.tz.gettz(tz))", "out": "矢印を使用して、タイムゾーンを含む文字列から日付と時刻を解析します。", "out_en": "Parse date and time from string with time zone using Arrow"}
{"in": "random.randint(a, b)", "out": "pygameを使用して、ランダムな位置でスプライトをスポーンさせる方法", "out_en": "How can i make sprites spawn on random locations using pygame?"}
{"in": "layout = g.layout_reingold_tilford(mode=\"in\", root=0)", "out": "ルートノードが一番上にあるツリー状のグラフをプロットする", "out_en": "Plot a tree-like graph with root node at the top"}
{"in": "{{ some_date|date:\"j-M\" }}", "out": "Djangoテンプレート日付フィルタ書式文字列質問", "out_en": "django template date filter format string question"}
{"in": "class Blog(Module):<nl><tab>def _get_posts(self):<nl><tab><tab>return Post.objects.filter(module=self)<nl><tab>posts = property(_get_posts)", "out": "継承/子オブジェクト内のrelated_nameをオーバーライドする方法は?", "out_en": "How do I override related_name in inherited/child objects?"}
{"in": "for (name, amount) in cursor: <nl><tab>print(\"{}\".format(name)+ \"\\t\\t\\t\" + \"{:>5}\".format(\"$\"+ \"{:.0f}\".format(amount).strip()))", "out": "金額の値を、マージンだけでなく各数値の横にある「$」に正しく揃えるにはどうすればいいですか。", "out_en": "How do I right align monetary values with the \"$\" next to each number, not just at the margin?"}
{"in": "for x in xrange(5):<nl><tab>item = QTableWidgetItem()<nl><tab>item.setText(\"blah blah\")<nl><tab>self.tableWidget.setItem(n, 0, item)", "out": "QTableWidgetのPyQt-setTextメソッドがAttributeErrorを取得する", "out_en": "PyQt - setText method of QTableWidget gets AttributeError"}
{"in": "import scipy.cluster.vq as spa<nl>print spk.kmeans2(dataset, 5)[0]  # for code<nl>print spk.kmeans2(dataset, 5)[1]  # for label", "out": "Pythonでreturn関数を出力する方法", "out_en": "how to print return function in Python"}
{"in": "import ctypes<nl>from ctypes import *<nl><nl>winmm= windll.winmm<nl>print 'waveInGetNumDevs=',winmm.waveInGetNumDevs()", "out": "Pythonを使用して、アクティブなマイクが1つあるかどうかを確認する方法", "out_en": "How to see if there is one microphone active using python?"}
{"in": "from scipy import linalg, mat, dot<nl>a = mat([-0.711,0.730])<nl>b = mat([-1.099,0.124])<nl><nl>c = dot(a,b.T)/linalg.norm(a)/linalg.norm(b)", "out": "2つの行列のコサイン類似度を計算する-Python", "out_en": "Calculate cosine similarity of two matrices - Python"}
{"in": "from itertools import groupby<nl>from operator import itemgetter<nl>dict(((u, sum(row['score'] for row in rows)) for u, rows in<nl><tab>groupby(sorted(d, key=itemgetter('alias')), key=itemgetter('alias'))))<nl># {'2133232': 158, 'u234243': 416}", "out": "辞書一覧でキー値を比較するにはどうすればいいですか?", "out_en": "How can I do comparison in List of dictionaries for key values?"}
{"in": "import csv<nl><nl>bottle_list = []<nl><nl># Read all data from the csv file.<nl>with open('a.csv', 'rb') as b:<nl><tab>bottles = csv.reader(b)<nl><tab>bottle_list.extend(bottles)<nl><nl># data to override in the format {line_num_to_override:data_to_write}. <nl>line_to_override = {1:['e', 'c', 'd'] }<nl><nl># Write data to the csv file and replace the lines in the line_to_override dict.<nl>with open('a.csv', 'wb') as b:<nl><tab>writer = csv.writer(b)<nl><tab>for line, row in enumerate(bottle_list):<nl><tab><tab> data = line_to_override.get(line, row)<nl><tab><tab> writer.writerow(data)", "out": "PythonのCSVモジュールを使用したcsvファイル内の特定の行の上書き", "out_en": "Overwriting a specific row in a csv file using Python's CSV module"}
{"in": "user.save()", "out": "Djangoモデルでの継承とデータの保存", "out_en": "Inheritance in django models and saving data"}
{"in": "import re<nl>pattern = re.compile('prod/([\\d_]+)/x/blah')<nl>query   = \"http://www.example.com/blah/prod/4_2343_234/x/blah.html\"<nl>result  = pattern.search(query).group(1)<nl>print result", "out": "動的URLから値を取得する", "out_en": "Get value from a dynamic url"}
{"in": "import urllib2<nl>import time<nl>url = 'Roblox url'<nl>data = urllib2.urlopen(url)<nl>time.sleep(10)<nl>data = data.read()", "out": "Python-Urllib2データをスクレープするためにページがロードされるのを待機します", "out_en": "Python - Urllib2 Wait for page to load to scrape data"}
{"in": "import serial, time, struct<nl><nl>ser = serial.Serial(\"/dev/ttyAMA0\", 9600)<nl><nl><nl><nl>while True:<nl><nl><tab>count = 0<nl><tab>AValue = []<nl><tab>for ch in ser.read():<nl><tab><tab>if ch == \"<nl>\":<nl><tab><tab><tab>AValue = []<nl><tab><tab><tab>time.sleep(0.1)<nl><nl><tab>while count < 4:<nl><tab><tab>for ch in ser.read():<nl><tab><tab><tab>AValue.append(ch)<nl><tab><tab><tab>count += 1", "out": "Raspberry piのUART受信データ(PIN 10,RX)をTkinterウィンドウに表示する方法", "out_en": "how to show UART received data (on PIN 10, RX) of Raspberry pi on Tkinter Window"}
{"in": "print \"text : \", repr(singleTweetJson[index])", "out": "json pythonを使用したunicodeツイートの解析", "out_en": "parsing unicoded tweet using json python"}
{"in": "class MySpinBox(QtGui.QSpinBox):<nl><tab>def __init__(self, *args):<nl><tab>   QtGui.QSpinBox.__init__(self, *args)<nl><nl><tab>   self.setRange(0,9999)<nl><nl><tab>def textFromValue(self, value):<nl><tab>   return \"%04d\" % value", "out": "PyQt4 QSpinBox値の形式", "out_en": "PyQt4 QSpinBox value format"}
{"in": "import pandas as pd<nl>s = pd.Series({'a':1, 'b':2, 'c':3})<nl>s.values # a numpy array", "out": "辞書をnumpy配列に変換するPython的な方法", "out_en": "Pythonic way to convert a dictionary to a numpy array"}
{"in": "import json <nl>payload = json.dumps({\"on\":True})", "out": "Python'requests'を使用したJSON booleanの送信", "out_en": "Using python 'requests' to send JSON boolean"}
{"in": "from subprocess import Popen<nl>Popen('gdb a.out', shell=True).communicate()<nl>print 'test'", "out": "コンソールウィンドウの制御をサブプロセスに渡す", "out_en": "Passing control of console window to subprocess"}
{"in": "bufsize = 0<nl>f = open('file.txt', 'w', bufsize)", "out": "Pythonはどのくらいの頻度でファイルをフラッシュしますか?", "out_en": "How often does python flush to a file?"}
{"in": "def load_binary(file):<nl><tab>with open(file, 'rb') as file:<nl><tab><tab>return file.read()", "out": "Python HTTPサーバ上で送信するイメージをエンコードする方法", "out_en": "How to encode image to send over Python HTTP server?"}
{"in": "for book in books:<nl><tab><tab>print \"%d/%d\" % (curr, total)<nl><tab><tab>if book.cover_url != \"\":<nl><tab><tab><tab>new_path = string.replace(book.cover_url.path, \"app-old/\", \"\")<nl><tab><tab><tab>book.cover_url = new_path<nl><tab><tab><tab>book.save()<nl><tab><tab>curr+=1", "out": "ImageFieldの新しい`path`値を設定します", "out_en": "Set new `path` value for ImageField"}
{"in": "os.path.dirname(__file__)", "out": "Pythonスクリプトが別の場所から実行されている場合の参照先", "out_en": "Reference where a python script is located if being run from another location"}
{"in": "f = open('your_file.txt')<nl>lines = f.readlines()<nl>res = [x for x in lines if str(year) in x.split()[1]]<nl>print res", "out": "関数を使用してテキストファイルから特定のデータを取得します。Python 3", "out_en": "Using a function to retrieve specific data from text file. Python 3"}
{"in": "frame = wx.Frame( None, title=\"Hello wxPython\", style = wx.CLOSE_BOX | wx.CAPTION | wx.RESIZE_BORDER )", "out": "WxPython:背景画像とボタンの追加", "out_en": "wxpython : Add Background picture and buttons"}
{"in": "threads = Thread.objects.all()[:30]<nl>threads_by_pk = dict((t.pk, t) for t in threads)<nl># Extra info about threads that the user have visited<nl>visited_threads = VisitedThread.objects.filter(pk__in=threads_by_pk.keys(), user=request.user)<nl><nl># I want to loop the visited_threads and add info to thread in threads with new info<nl>for visited_thread in visited_threads:<nl><tab>thread = threads_by_pk[visited_thread.pk]<nl><tab>thread.has_unread_post = thread.post_count > visited_thread.post_count", "out": "object_list内の一部のオブジェクトをループ/変更する最善の方法", "out_en": "Best way to loop/change some objects in object_list"}
{"in": "dont_start_with_these = ('10.', '172.16.', '172.31.', '192.168')<nl><nl>filtered_ip = [ip for ip in fil2 if not ip[0].startswith(dont_start_with_these)]", "out": "ネストされたリストからのポートを持つプライベートIPのFilterig/削除/除外", "out_en": "Filterig/removing/excluding private IPs with port from a nested list"}
{"in": "# Safe since everything in the namespace begins with 'Q'<nl>from PyQt4.QtGui import *<nl><nl>class MyMessageBox(QMessageBox):<nl><nl><tab># This is a much better way to extend __init__<nl><tab>def __init__(self, *args, **kwargs):<tab><tab><tab><nl><tab><tab>super(MyMessageBox, self).__init__(*args, **kwargs)<nl><tab><tab># Anything else you want goes below<nl><nl><tab># We only need to extend resizeEvent, not every event.<nl><tab>def resizeEvent(self, event):<nl><nl><tab><tab>result = super(MyMessageBox, self).resizeEvent(event)<nl><nl><tab><tab>details_box = self.findChild(QTextEdit)<nl><tab><tab># 'is not' is better style than '!=' for None<nl><tab><tab>if details_box is not None:<nl><tab><tab><tab>details_box.setFixedSize(details_box.sizeHint())<nl><nl><tab><tab>return result", "out": "PyQt4でQMessageBoxのサイズ変更を可能にする方法", "out_en": "How to allow resizing of QMessageBox in PyQt4"}
{"in": "def repeat(x,Y):<nl><tab>A = list(str(x)) #makes a list, A, of each digit: 101 becomes ['1','0','1']<nl><tab>A = map(int,A)  #converts each value of the new list to integers<nl><tab>print 'Proceessing', x<nl><tab>for i in range(0,10):  <nl><tab><tab>b = A.count(i) #counts how many times each digit is present<nl><tab><tab>if b>1:<tab><tab> #if there is repetition<nl><tab><tab><tab>print 'Removed', x<nl><tab><tab><tab>Y.remove(x)<nl><nl><nl>B = []<nl>for i in range(100,1000):   #needs to be a 3 digit number (100 until 999)<nl><tab>if i%17 == 0:<nl><tab><tab>B.append(i)<tab><tab> #creates list of factors of 17<nl>print B<nl><nl>for j in B:<tab><tab><tab><tab> #removes any values that have digits that occur more than once<nl><tab>repeat(j,B)<nl><nl>print B", "out": "繰り返し整数を持つ数値を削除する関数は、1つのエントリをスキップします。理由はわかりません。", "out_en": "Function used to remove numbers with a repeating integer skips one entry and i dont know why"}
{"in": "x=np.array([6,3,5,2,1,4,9,7,8])<nl>y=np.array([2,1,3,5,7,9,8,10,7])<nl><nl>sort_idx = np.argsort(x)<nl>y=y[sort_idx]<nl>x=x[sort_idx]<nl>minm=np.array([],dtype=int)<nl>maxm=np.array([],dtype=int)<nl>length = y.size<nl>i=0<nl><nl>while i < length-1:<nl><tab>if i < length - 1:<nl><tab><tab>while i < length-1 and y[i+1] >= y[i]:<nl><tab><tab><tab>i+=1<nl><nl><tab><tab>if i != 0 and i < length-1:<nl><tab><tab><tab>maxm = np.append(maxm,i)<nl><nl><tab><tab>i+=1<nl><nl><tab>if i < length - 1:<nl><tab><tab>while i < length-1 and y[i+1] <= y[i]:<nl><tab><tab><tab>i+=1<nl><nl><tab><tab>if i < length-1:<nl><tab><tab><tab>minm = np.append(minm,i)<nl><tab><tab>i+=1<nl><nl><nl>print minm,maxm", "out": "関数のxとyの値がnpとして与えられた場合に、すべてのmaximaを検索する方法。配列", "out_en": "How to find all maximas if x and y values of the function are given as np.array"}
{"in": "from xgoogle.search import GoogleSearch, SearchError<nl>try:<nl>  page = 1<nl>  gs = GoogleSearch(\"foo bar\")  <nl>  gs.results_per_page = 100<nl>  results = []<nl>  while page < 10:<nl><tab>  gs.page = page<nl><tab>  results += gs.get_results()<nl><tab>  page += 1<nl>except SearchError, e:<nl>  print \"Search failed: %s\" % e<nl>for res in results:<nl><tab>print res.url", "out": "Python xgoogleライブラリに問題があります。結果数の上限を10にするにはどうすればよいですか?", "out_en": "problem with python xgoogle library. How to increase the limit of 10 results?"}
{"in": "import nltk<nl>nltk.download()", "out": "stanford NLTK pythonモジュールはどうすれば入手できますか?", "out_en": "How can I get the stanford NLTK python module?"}
{"in": "[logger_root]<nl>level=DEBUG<nl>handlers=screen,file", "out": "Pythonでのロギングレベルの設定", "out_en": "Configuring logging level in python"}
{"in": "from win32com.client import Dispatch<nl><nl>excel = Dispatch('Excel.Application')<nl>wb = excel.Workbooks.Open(\"D:\\\\output.xlsx\")<nl><nl>#Activate second sheet<nl>excel.Worksheets(2).Activate()<nl><nl>#Autofit column in active sheet<nl>excel.ActiveSheet.Columns.AutoFit()<nl><nl>#Save changes in a new file<nl>wb.SaveAs(\"D:\\\\output_fit.xlsx\")<nl><nl>#Or simply save changes in a current file<nl>#wb.Save()<nl><nl>wb.Close()", "out": "Pythonを使用したExcelシートのすべての列の自動調整", "out_en": "Using Python To Autofit All Columns of an Excel Sheet"}
{"in": "nums = [3,51,34]<nl>reduce(lambda x, y: [y] if not x else x + [y + x[-1]], nums, None)<nl># [3, 54, 88]", "out": "Pythonでリスト要素に対して算術演算を行う方法", "out_en": "how can i do math operation on list elements in python?"}
{"in": "box_top = (0, 0, x, y / 2)<nl>top_part = im1.crop(box_top)<nl>result = im2.copy()<nl>result.paste(top_part, box_top)", "out": "画像の一部を貼り付ける-python,PILモジュール", "out_en": "paste parts of picture - python, PIL module"}
{"in": "import psycopg2<nl>from psycopg2.extensions import AsIs<nl><nl>column_list = ['id','name']<nl>columns = ', '.join(column_list)<nl><nl>cursor.execute(\"SELECT %s FROM table\", (AsIs(columns),))", "out": "psycopg2でパラメータを渡す", "out_en": "Passing parameter in psycopg2"}
{"in": "ships.update(<nl>  {'_id': 1}, <nl>  {\"$set\": {'staff': staff}},<nl>  false,true<nl>)", "out": "pymongo:辞書を含むフィールドを追加", "out_en": "pymongo: Add field containing a dict"}
{"in": "from bs4 import BeautifulSoup<nl><nl>soup = BeautifulSoup(html)<nl><nl>table = soup.find('table', id='test_table')<nl>for anchor in table.find_all('a'):<nl><tab>print anchor['href'], anchor.string", "out": "Pythonの正規表現は、1つの正規表現と一致する要素で一致します。", "out_en": "Python regex match in matched elements with one regex"}
{"in": "total = value[c1-1]+value[c2-1]", "out": "Pythonのlistでの文字列と整数の合計", "out_en": "summing string and integers in list in python"}
{"in": "from django.utils import simplejson<nl><nl>def post(self, request, *args, **kwargs):<nl><tab>isUpvote = simplejson.loads(request.POST.get('isUpvote'))", "out": "JavascriptからDjangoへのブール値の変換", "out_en": "Converting Boolean value from Javascript to Django?"}
{"in": "s = s.extra(track_scores=True)", "out": "elasticsearch-dsl pythonでtrack_scoresを有効にする方法", "out_en": "How to enable track_scores in elasticsearch-dsl python"}
{"in": "self.spawnPoint = [1, 0]<nl>self.vel = self.spawnPoint # Does not make a copy!<nl>self.vel[0] += 0.1<nl>self.vel[1] += 0.2", "out": "PythonがFloatのIntegerを単独で変更", "out_en": "Python changes Integer in Float by itself"}
{"in": "def my_reverser(x):<nl>  try:<nl><tab>x_ = x[::-1]<nl>  except TypeError:<nl><tab>return x<nl>  else:<nl><tab>return x if len(x) == 1 else tuple(my_reverser(e) for e in x_)", "out": "reverse関数を使用してPythonでネストされたタプルを逆にする", "out_en": "Reversing a nested tuple in python using the function reversed"}
{"in": "string = r\"asdasd\\asdasd\"<nl>lhs, rhs = string.split(\"\\\\\")<nl>print rhs", "out": "エスケープ文字を使用しているにもかかわらず、バックスラッシュを含む文字列を分割できない", "out_en": "Unable to split a string with a back slash despite using escape character"}
{"in": "pattern = r'(?<=X)([a-z])X'", "out": "Regex:重複するパターンを一致させる方法(おそらくPython特有)", "out_en": "Regex: how to match overlapping patterns (maybe Python specific)"}
{"in": "value = raw_input('Please enter a value between 10 and' + str(max) + 'for percentage')", "out": "Pythonは変数でraw_inputを使用します。", "out_en": "Python use raw_input with a variable"}
{"in": "import requests<nl>import BeautifulSoup as bs<nl><nl>URL = \"page to get\"<nl>pg = requests.get(URL).content<nl>pg = bs.BeautifulSoup(pg)<nl><nl>scripts = bs.findAll('script')<nl><nl>for sc in scripts:<nl><tab>try:<nl><tab><tab>print(\"External code at {}\".format(sc['src']))<nl><tab>except KeyError:<nl><tab><tab>print(\"Inline code:\")<nl><tab><tab>print(sc.getText())", "out": "Pythonを使用してhtmlからjavascriptをエクスポートする方法", "out_en": "How to export javascript from html using python"}
{"in": "import os<nl>import tarfile<nl><nl>home = '/home/'<nl>backup_dir = '/backup/'<nl><nl>home_dirs = [ name for name in os.listdir(home) if os.path.isdir(os.path.join(home, name)) ]<nl><nl>for directory in home_dirs:<nl><tab>full_dir = os.path.join(home, directory)<nl><tab>tar = tarfile.open(os.path.join(backup_dir, directory+'.tar.gz'), 'w:gz')<nl><tab>tar.add(full_dir)<nl><tab>tar.close()", "out": "Pythonを使用してtarバックアップを作成する方法", "out_en": "How to make tar backup using python"}
{"in": "import numpy as np<nl>import pylab as pl<nl><nl>Y, X = np.mgrid[-10:10:100j, -10:10:100j]<nl><nl>def f(x):<nl><tab>return x**3 -3*x + 5<nl><nl>px = -2.0<nl>py = -np.sqrt(f(px))<nl><nl>qx = 0.5<nl>qy = np.sqrt(f(qx))<nl><nl>k = (qy - py)/(qx - px)<nl>b = -px*k + py <nl><nl>poly = np.poly1d([-1, k**2, 2*k*b+3, b**2-5])<nl><nl>x = np.roots(poly)<nl>y = np.sqrt(f(x))<nl><nl>pl.contour(X, Y, Y**2 - f(X), levels=[0])<nl>pl.plot(x, y, \"o\")<nl>pl.plot(x, -y, \"o\")<nl><nl>x = np.linspace(-5, 5)<nl>pl.plot(x, k*x+b)", "out": "Python--sympy solve()を使用した楕円曲線のMatplotlib", "out_en": "Python -- Matplotlib for elliptic curve with sympy solve()"}
{"in": "file = open(\"dizionario_della_vela.txt\", \"r\")<nl>data = file.read()<nl>file.close()<nl>data = data.split(\"<nl>\") # getting every line as seperate list<nl>myDict = {}<nl>for line in data:<nl><tab>line = line.split(\":\")<nl><tab>key = line[0] # getting first element as key<nl><tab>value = \":\".join(line[1:]) # joins elements (starting with second) with <nl><tab><tab><tab><tab><tab><tab><tab>   # \":\". We need this because previous line <nl><tab><tab><tab><tab><tab><tab><tab>   # was splitted by \":\" to get your key. This<nl><tab><tab><tab><tab><tab><tab><tab>   # is where \"string\" value is produced.<nl><tab>myDict[key] = value<nl><nl>for key in myDict.keys():<nl><tab>print(myDict[key])", "out": "Pythonでテキストを分割すると、strとstrのリストが返されます。", "out_en": "Python splitting text returns a str and a list of str"}
{"in": "a, b, c = (1, 2, 3)", "out": "Python:タプルを使用してリストの内容を再配置する", "out_en": "python: use tuples to re-arrange the contents of a list"}
{"in": "#!/usr/bin/env python<nl># encoding: utf-8<nl>\"\"\"<nl>logClient2.py<tab><nl>Created by Allister on 2010-11-30.<nl>\"\"\"<nl><nl>import wx<nl>import sqlite3<nl><nl>WINDOW_SIZE = (900,400)<nl><nl>class logClient(wx.Frame):<nl><tab>def __init__(self, parent, id, title):<nl><nl><tab><tab>wx.Frame.__init__(self, parent, id, title, size=WINDOW_SIZE)<tab><tab><nl><nl><tab><tab>self.toolbar = self.CreateToolBar()<nl><tab><tab>self.startLiveUpdate(None)<nl><nl><tab><tab>self.Show(True)<nl><nl><tab>def startLiveUpdate(self, event):<nl><tab><tab>self.createToolbarItem(\"Refresh\", \"refresh.jpg\", self.stopLiveUpdate)<nl><nl><tab>def stopLiveUpdate(self, event):<nl><tab><tab>self.createToolbarItem(\"Stop\", \"refresh2.jpg\", self.startLiveUpdate)<nl><nl><nl><tab>def createToolbarItem(self, label, imageName, method):<nl><tab><tab>self.toolbar.RemoveTool(1)<nl><tab><tab>self.toolbar.AddLabelTool(1, label, wx.Bitmap(imageName))<nl><tab><tab>self.toolbar.Realize()<nl><tab><tab>self.Bind(wx.EVT_TOOL, method, id=1)<nl><nl><nl>if __name__ == '__main__':<nl><tab>app = wx.App(False)<nl><tab>logClient(None, -1, \"Log Event Viewer\")<nl><tab>app.MainLoop()", "out": "wxPythonを使用したツールバーのラベルの変更", "out_en": "Changing Label in toolbar using wxPython"}
{"in": "import os<nl><nl>os.system(\"my_util some_file.txt | grep 'Some data1' | awk '{print $2}'\" )", "out": "ターミナルからの出力の取り込み", "out_en": "Grabbing the output from the terminal"}
{"in": "(Person, Date, Comment)", "out": "querysetのdjango結合のような拡張", "out_en": "django join-like expansion of queryset"}
{"in": "config.get('pylons.app_globals') or config.get('pylons.g')", "out": "app_globalsへのアクセス権を持つPylonsスレッドの作成", "out_en": "Creating a Pylons Thread with Access to app_globals"}
{"in": "import xml.etree.ElementTree as ET<nl><nl>def sortchildrenby(parent, attr):<nl><tab>parent[:] = sorted(parent, key=lambda child: child.get(attr))<nl><nl>tree = ET.parse('input.xml')<nl>root = tree.getroot()<nl><nl>sortchildrenby(root, 'NAME')<nl>for child in root:<nl><tab>sortchildrenby(child, 'NAME')<nl><nl>tree.write('output.xml')", "out": "python etreeでのXMLのソート", "out_en": "Sorting XML in python etree"}
{"in": "cm2 = compute_confusion_matrix(truth_dict,pred_dict,pos_tag='SPAM',neg_tag='OK')<nl>return quality_score(cm2.tp,cm2.tn,cm2.fp,cm2.fn)", "out": "関数で変数を定義する方法", "out_en": "how can i define variables in my function?"}
{"in": "item['a'] = x<nl>item['_junk'] = {}<nl>item['_junk']['b'] = y<nl>item['_junk']['c'] = z", "out": "ネストされた配列を持つスクラピー", "out_en": "Scrapy with a nested array"}
{"in": "from TwitterAPI import TwitterAPI<nl><nl>TWEET_TEXT = 'some tweet text'<nl>IMAGE_PATH = './some_image.png'<nl><nl>api = TwitterAPI(CONSUMER_KEY,CONSUMER_SECRET,ACCESS_TOKEN_KEY,ACCESS_TOKEN_SECRET)<nl><nl># STEP 1 - upload image<nl>file = open(IMAGE_PATH, 'rb')<nl>data = file.read()<nl>r = api.request('media/upload', None, {'media': data})<nl>print('UPLOAD MEDIA SUCCESS' if r.status_code == 200 else 'UPLOAD MEDIA FAILURE')<nl><nl># STEP 2 - post tweet with a reference to uploaded image<nl>if r.status_code == 200:<nl><tab>media_id = r.json()['media_id']<nl><tab>r = api.request('statuses/update', {'status':TWEET_TEXT, 'media_ids':media_id})<nl><tab>print('UPDATE STATUS SUCCESS' if r.status_code == 200 else 'UPDATE STATUS FAILURE')", "out": "pythonとtwitterApiを使用してツイートに複数の画像を追加する", "out_en": "Add multiple images to a tweet with python and twitterApi?"}
{"in": "import numpy as np<nl><nl>def split_into_quadrants(points, idx=0):<nl><tab>if idx < points.shape[-1]:<nl><tab><tab>positive = points[points[:, idx] >= 0]<nl><tab><tab>negative = points[points[:, idx] < 0]<nl><tab><tab>return (split_into_quadrants(positive, idx+1) +<nl><tab><tab><tab><tab>split_into_quadrants(negative, idx+1))<nl><tab>else:<nl><tab><tab>return [points]<nl><nl>b = np.round(np.random.random((30,3))*20)<nl>b = b - b.mean(axis=0)<nl>print(split_into_quadrants(b))", "out": "Pythonでポイントクラウドを四半円に分割する", "out_en": "Dividing point clouds into quadrants in python"}
{"in": "portnumber = int(portnumber.strip('\\x00'))", "out": "Pythonにおけるヌル終端文字列のIntへの変換", "out_en": "Conversion of null terminated string to Int in Python"}
{"in": "help('modules')", "out": "インストールしたPythonライブラリのリストを取得するにはどうすればいいですか?", "out_en": "How do I get a list of python libraries I've installed?"}
{"in": "class A:<nl><nl><tab>def x(self):<nl><tab><tab>#do stuff and call Class B<nl><tab><tab>n = 1<nl><tab><tab>n += B().y() #Instance B and call y method<nl><tab><tab>print n<nl><nl>class B:<nl><tab>def y(self):<nl><tab><tab>#do stuff get results and pass results to Class A<nl><tab><tab>x = 10<nl><tab><tab>return x<nl><nl>a = A() #create a object with type A<nl>a.x() #call x method of A class", "out": "あるクラスのメソッドの結果を別のクラスで使用する方法", "out_en": "How to use method results from one class in another"}
{"in": "text.replace(\"<\", \"\")", "out": "Pythonのreportlab paragraph関数は、入力テキストの3分の1のみをpdfファイルに描画します。", "out_en": "Python reportlab paragraph function only draws a third of the input text to a pdf file"}
{"in": "end_trimm = 3<nl>myList = myList[:-end_trimm]", "out": "Pythonでリストの最後から固定数の項目を削除する方法", "out_en": "How to delete a fixed number of items from end of list in python"}
{"in": "amount = 250000<nl><nl>thousands = amount % 100000<nl>lakhs = amount - thousands", "out": "Python:AmountをThousandsとLakhに分割", "out_en": "Python : Split Amount into Thousands and Lakhs"}
{"in": "self.label.show()", "out": "ユーザー定義スロットでのウィジェットの作成", "out_en": "creating widgets in user defined slots"}
{"in": "def remove_section(alist, start, end):<nl><tab>return alist[:start] + alist[end+1:]", "out": "リストからenclusiveの始点から終点までの範囲を削除する方法", "out_en": "How to remove a range from start to end enclusive from a list"}
{"in": "import os, pymunk<nl>pymunk_dir = os.path.dirname(pymunk.__file__)<nl>chipmunk_libs = [<nl><tab>('chipmunk.dll', os.path.join(pymunk_dir, 'chipmunk.dll'), 'DATA'),<nl>]<nl>#... <nl>coll = COLLECT(exe,<nl><tab><tab><tab>   a.binaries + chipmunk_libs,<nl><tab><tab><tab>   a.zipfiles,<nl><tab><tab><tab>   a.datas,<nl><tab><tab><tab>   strip=None,<nl><tab><tab><tab>   upx=True,<nl><tab><tab><tab>   name=os.path.join('dist', 'basic_test'))", "out": "PyinstallerでPymunkを使う", "out_en": "Using Pymunk with Pyinstaller"}
{"in": "choice1 = Button(master, text=question1[1].text, command=lambda : check(question1[1].value))", "out": "tkinter buttonコマンドは、クリックせずに関数を実行しますか?", "out_en": "tkinter button command runs function without clicking?"}
{"in": "keyVal = map(str.strip,line.split('=')) #this will remove extra whitespace", "out": "Python辞書でキーと値のペアを使用する方法", "out_en": "How to use key/value pairs in a Python dictionary"}
{"in": "import urllib<nl>data = urllib.urlencode({\"postField1\" : \"postValue1\", \"postField2\" : \"postValue2\", \"etc\" : \"etc\"})<nl>f = urllib.urlopen(\"http://www.domain.com/storePostData.php\", data)<nl># At this point your storePostData.php file stores all the post <nl># info in either an sql DB or temporary file so this can accessed later on and<nl># an uuid is passed back which we now read below. In may case I store all post<tab><tab><nl># fields in a sql DB and each column represents each post field.<nl>uuid = f.read()<nl># the uuid is the sql table id field which is auto_incremented.<nl># SO now we load the default browser below and send it the uuid so the php script<nl># can access the sql data. Once it has been accessed and the form fields have been <nl># received then we delete that row as the information is useless to us now that we <nl># have filled in the forms fields<nl>import webbrowser<nl>webbrowser.open_new(\"http://www.domain.com/someOtherUrl?uuid=\" + uuid)", "out": "Pythonを使用して、URLに値をポストするブラウザー・セッションをロードするにはどうすればよいでしょうか。", "out_en": "How can I use python to load a browser session that posts values to a url?"}
{"in": "cutoff = 0.00694444444444444<nl>filtered_list = [ dt for dt in dtime_list if dt <= cutoff ]", "out": "Python-2つのfloatの比較", "out_en": "Python - Comparing 2 floats"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy as np<nl>from bubblegum.backend.mpl.cross_section_2d import CrossSection<nl>fig= plt.figure()<nl>cs= CrossSection(fig)<nl>img= np.random.rand(100,100)<nl>cs.update_image(img)<nl>plt.show()", "out": "matplotlibイメージのスライスを使用したインタラクティブな印刷", "out_en": "matplotlib interactive plot with slices of image"}
{"in": "passwd = getpass.getpass()<nl>pid = os.fork()<nl>if pid:<nl>  print 'Parent thinks passwd is', passwd<nl>else:<nl>  print 'Child thinks passwd is', passwd", "out": "ユーザーにパスワードの入力を求めることができるPythonプログラムをバックグラウンドで起動する", "out_en": "start python program in the background that can prompt the user for password"}
{"in": "db.commit()", "out": "接続を閉じずに、更新されたMySQLテーブルエントリをPythonで取得する", "out_en": "Get updated MySQL table entries in python without closing connection"}
{"in": "import boto<nl>import boto.dynamodb2<nl>from boto.dynamodb2.table import Table<nl>from boto.dynamodb2.fields import HashKey, RangeKey<nl><nl>drivers = Table('current_fhv_drivers')<nl>rowcountquery = drivers.query(<nl>   number__eq = 'blah',<nl>   expiration__eq = 'foo',<nl>   count__eq = True,<nl>  )<nl>for x in rowcountquery:<nl> print x['Count']", "out": "Pythonによるdynamodbの行数、botoクエリ", "out_en": "dynamodb row count via python, boto query"}
{"in": "for node in (n for n in nodelist if condition):<nl><tab>node.x += 1", "out": "forループでのよりクリーンな割り当て(Python)", "out_en": "Cleaner assignment in for loop (python)"}
{"in": "class Task(Base):<nl><tab>__tablename__ = 'tasks'<nl><tab>id = Column(Integer, primary_key=True)<nl><tab>hostID = Column(Integer, ForeignKey('hosts.id'))<nl><tab>name = Column(String)<nl><tab>host = relationship(\"Host\", backref=backref(\"tasks\", cascade_backrefs=False))<nl><nl><tab>def __init__(self, host, name):<nl><tab><tab>self.host = host<nl><tab><tab>self.name = name", "out": "SQLAlchemyを使用した非永続オブジェクトの作成:関係での逆参照の不適切な使用", "out_en": "Creating non persistent objects with SQLAlchemy: wrong employment of backref in a relationship?"}
{"in": "from facebookads.objects import AdImage<nl><nl>image = AdImage(parent_id='act_<AD_ACCOUNT_ID>')<nl>image[AdImage.Field.filename] = './test.zip'<nl>image.remote_create(batch=True)<nl><nl># Output image hash.<nl>print image[AdImage.Field.hash]", "out": "Facebook Ads APIへのPOST要求を含む空の応答本文", "out_en": "Empty response body with POST requests to Facebook Ads API"}
{"in": "template = '<input name=\"#key#\" value=\"#value#\">'<nl>html = template<nl>data = {key:value,key:value}<nl>for key in data.keys():<nl><tab>html = html.replace(\"#key#\", key).replace(\"#value#\", data[value]) + \"<nl>\"<nl><tab>html = html + template<nl>#there's an extra template line here that you'll have to get rid of.<nl>html = \"<nl>\".join(html.split(\"<nl>\")[0:-1])", "out": "Pythonでオブジェクトからフォームを作成する", "out_en": "Creating a form from an object in python"}
{"in": "def op(self):<nl><tab><tab>self.start()<nl><tab><tab>while True:<nl><tab><tab><tab>time.sleep(self.waiting_time)<nl><tab><tab><tab>if not self.q.empty():<nl><tab><tab><tab><tab>print(\"Outputting: \", self.q.get())<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>break", "out": "PythonのProducer-Consumerアルゴリズム", "out_en": "Producer-Consumer algorithm in python"}
{"in": "import sys<nl>from PyQt4 import QtGui<nl><nl>app = QtGui.QApplication(sys.argv)<nl>widget = QtGui.QWidget()<nl><nl>unicode_font = QtGui.QLabel(u\"Unicode Font: H\\u2082O\")<nl>unicode_font.setStyleSheet(\"font-family: 'Arial Unicode MS', Arial, sans-serif; font-size: 15px;\") <nl><nl>normal_font = QtGui.QLabel(u\"Normal Font: H\\u2082O\")<nl>normal_font.setStyleSheet(\"font-family: Arial, sans-serif; font-size: 15px;\")<nl><nl><nl>layout = QtGui.QVBoxLayout()<nl>layout.addWidget(unicode_font)<nl>layout.addWidget(normal_font)<nl>widget.setLayout(layout)<nl>widget.show()<nl>sys.exit(app.exec_())", "out": "Windowsで下付き文字2のUnicode文字を表示できません", "out_en": "Can't display unicode character for subscript 2 on Windows"}
{"in": "import datetime<nl><nl>if __name__ == \"__main__\":<nl><tab>d1 = datetime.datetime.now()<nl><tab>data = port.read()<nl><tab># Do more things ...<nl><tab>tdelta = datetime.datetime.now() - d1<nl><tab>print(tdelta.total_seconds()) # This is your answer", "out": "Pythonで経過時間をカウントする方法", "out_en": "How to count elapsed time on Python"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy as np<nl><nl>x = np.arange(10)<nl>np.random.seed(101)<nl>y = np.random.rand(10)<nl><nl>small = [i for i in range(len(x)) if y[i] < .5 ]<nl>big = [i for i in range(len(x)) if y[i] > .5 ]<nl><nl>fig = plt.figure()<nl>ax = fig.add_subplot(111)<nl><nl>ax.scatter(x,y)<nl># user wants to plot lines connecting big values (>.5)<nl>ax.plot(x[big],y[big])<nl><nl>#plt.show()<nl># now user wants to delete the first (and only) line<nl>del ax.lines[0]<nl><nl># so that they can plot a line only showing small values<nl>ax.plot(x[small],y[small])<nl><nl>plt.show()", "out": "以前に作成したコンテンツをpyplot図から削除する", "out_en": "Erase previously drawn content from a pyplot drawing"}
{"in": "stop_words_lst = ['yo', 'so', 'well', 'um', 'a', 'the', 'you know', 'i mean']<nl>s = \"you know what i mean so just turn the lights on\"<nl><nl>import re<nl>for w in stop_words_lst:<nl><tab>pattern = r'\\b'+w+r'\\b'<nl><tab>s = re.sub(pattern, '', s)<nl><tab>print (s)", "out": "Pythonでフレーズからカスタムストップワードを削除する", "out_en": "removing custom stop words form a phrase in python"}
{"in": "#!/usr/local/bin/python3<nl><nl>print('Content-type: text/html<nl>')<nl><nl>def fib(n):<nl><tab>a, b = 0, 1<nl><tab>for i in range(n):<nl><tab><tab>a, b = b, a + b<nl><tab>return a<nl><nl>print('''<nl><tab><table><nl><tab><tab><tr><nl><tab><tab><th>Index Number</th><nl><tab><tab><th>Decimal</th><nl><tab><tab><th>Hexadecimal</th><nl><tab><tab><th>Octadecimal</th><nl><tab><tab><th>float</th><nl><tab></tr><nl>''')<nl><nl>for i in range (0, 51):<nl><tab>print('''<nl><tab><tr><nl><tab><tab><td>{0}</td><nl><tab><tab><td>{1}</td><nl><tab><tab><td>{1:x}</td><nl><tab><tab><td>{1:o}</td><nl><tab><tab><td>{1:.2f}</td><nl><tab></tr>'''.format(i, fib(i)))<nl><nl>print('</table>')", "out": "Python HTMLテーブル", "out_en": "Python HTML Table"}
{"in": "google = oauth.remote_app('google',<nl><tab><tab><tab><tab><tab>  base_url='https://www.google.com/accounts/',<nl><tab><tab><tab><tab><tab>  authorize_url='https://accounts.google.com/o/oauth2/auth',<nl><tab><tab><tab><tab><tab>  request_token_url=None,<nl><tab><tab><tab><tab><tab>  request_token_params={'scope': 'https://www.googleapis.com/auth/userinfo.email',<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>'response_type': 'code',<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>'hd':'domain.com'},<nl><tab><tab><tab><tab><tab>  access_token_url='https://accounts.google.com/o/oauth2/token',<nl><tab><tab><tab><tab><tab>  access_token_method='POST',<nl><tab><tab><tab><tab><tab>  access_token_params={'grant_type': 'authorization_code'},<nl><tab><tab><tab><tab><tab>  consumer_key=GOOGLE_CLIENT_ID,<nl><tab><tab><tab><tab><tab>  consumer_secret=GOOGLE_CLIENT_SECRET)", "out": "Google Oauth2.0 with Python:特定のドメインへのアクセスを制限するにはどうすればいいですか?", "out_en": "Google Oauth2.0 with Python: How do I limit access to a specific domain?"}
{"in": "views/debug.py", "out": "djangoでスタック・トレース・テンプレートをオーバーライドする方法", "out_en": "How to override the stack trace template in django?"}
{"in": "df[df['date_time'].str.startswith('2014-02-21')]", "out": "日付スタンプから日付を取得するパンダ", "out_en": "Pandas get date from datetime stamp"}
{"in": "grouped = [list(g) for _, g in itertools.groupby(test, lambda x: x.split('_')[2])]", "out": "関連する.tifファイルをグループ化する方法", "out_en": "How to group related .tif files?"}
{"in": "#!/usr/bin/python<nl>filename='thefile.txt'<nl>search=\"class Parking(models.Model):\"<nl>add=\"<nl><tab>layer_id= models.ForeignKey('sdr_layer.id')\"<nl>content=open(filename,'r').read()<nl>content=content.replace(search,search+add)<nl>fp=open(filename,'w')<nl>fp.write(content)<nl>fp.close()", "out": "Pythonを使用してテキストファイルに文字列を挿入する方法", "out_en": "How to insert a string of characters into a text file using python?"}
{"in": "import requests<nl>import cookielib<nl><nl><nl>URL = '...whatever...'<nl>jar = cookielib.CookieJar()<nl>r = requests.get(URL, cookies=jar)<nl>r = requests.get(URL, cookies=jar)", "out": "`Cookie`を`CookieJar`に入れる", "out_en": "Putting a `Cookie` in a `CookieJar`"}
{"in": "import csv<nl><nl>with open('/Users/stephan/Desktop/cities.csv', \"r\") as f:<nl><tab>mycsv = csv.DictReader(f)<nl><tab>for row in mycsv:<nl><tab><tab>for col in FIELDS:<nl><tab><tab><tab>try:<nl><tab><tab><tab><tab>print(row[col])<nl><tab><tab><tab>except KeyError:<nl><tab><tab><tab><tab>pass", "out": "csvファイルの列を抽出してインデックスを検索する", "out_en": "Extracting Columns of a .csv file and finding their index"}
{"in": "foo, bar, baz == (list(a) + [None]*3)[:3]", "out": "タプルからオプション・アイテムをアンパックする方法", "out_en": "How to unpack optional items from a tuple?"}
{"in": "f = open('apple.txt')<nl>lines = f.readlines()<nl>f.close()<nl>things = []<nl>printtofile = []<nl>for i in lines:<nl><tab>things.append(i)<nl><tab>if i.startswith('date'):<nl><tab><tab>things.pop()<nl><tab><tab>for x in things:<nl><tab><tab><tab>if i[:-1] == '<nl>':<nl><tab><tab><tab><tab>printtofile.append(x[:-1]+'|'+i[:-1])<nl><tab><tab><tab>else: <nl><tab><tab><tab><tab>printtofile.append(x[:-1]+'|'+i)<nl><tab><tab>things = []<nl>print printtofile<nl>writefile = open('file.txt', 'w')<nl>writefile.writelines(printtofile)<nl>writefile.close()", "out": "Pythonテキストファイルのフォーマット", "out_en": "Python textfile formatting"}
{"in": "finaldict = {}<nl>for key in dict1.keys():<nl><tab>finaldict[key] = {}<nl><tab>for key2 in dict1[key]:<nl><tab><tab>finaldict[key][key2] = {}<nl><tab><tab>for key3 in dict2[key2]:<nl><tab><tab><tab>finaldict[key][key2][key3] = dict3[key3]<nl>print finaldict", "out": "3つのPython辞書を結合する", "out_en": "Combine three Python dictionaries together"}
{"in": "np.rec.fromrecords(tab)<nl><nl>rec.array([('a', 1), ('b', 2)], <nl><tab><tab>  dtype=[('f0', '|S1'), ('f1', '<i4')])", "out": "Numpy recarrayへのタプルのリスト", "out_en": "List of tuples to Numpy recarray"}
{"in": "activate_this = '/path/to/env/bin/activate_this.py'<nl>execfile(activate_this, dict(__file__=activate_this))", "out": "Windows上でApache/mod_wsgiを使用してvirtualenvからPythonを実行する", "out_en": "Running Python from a virtualenv with Apache/mod_wsgi, on Windows"}
{"in": "def print_table(lines, col_num, col_width):<nl><tab>for line_ix in range(0, len(lines), col_num):<nl><tab><tab>print ' -- '.join([line.strip().ljust(col_width) for line in lines[line_ix:line_ix+col_num]])", "out": "Pythonでファイルのテキストをフォーマットする方法は?", "out_en": "How do I format text from a file in Python?"}
{"in": "/ .join([item for sublist in list1 for item in sublist])", "out": "Python-リストから角括弧を削除", "out_en": "Python - Remove square brackets from list"}
{"in": "with open(\"tmp.json\") as json_file:<nl><tab>json_data = json.load(json_file)<nl><tab>for i, data_item in enumerate(json_data['data']):<nl><tab><tab>fname = 'data_%s' % i<nl><tab><tab>with open(fname, 'w') as outfile:<nl><tab><tab><tab>json.dump(data_item, outfile)", "out": "JSONファイルからデータを抽出するPythonプログラム", "out_en": "Python program to extract data from JSON files"}
{"in": "import pandas as pd<nl>df = pd.DataFrame({<nl><tab>'A': [['a','b','c','d'],['a','b','c'],['x','y','z','q'],['x','l']],<nl><tab>'B': [12,7,2,9]<nl><tab>})<nl>print(df)<nl><nl>#<tab><tab><tab>   A   B<nl># 0  [a, b, c, d]  12<nl># 1<tab> [a, b, c]   7<nl># 2  [x, y, z, q]   2<nl># 3<tab><tab>[x, l]   9<nl><nl>def cumulative_frequence(df, nodes):<nl><tab>nodes = set(nodes)<nl><tab>mask = df['A'].apply(lambda group: not nodes.isdisjoint(group))<nl><tab>return df.ix[mask, ['B']].sum().item()<nl><nl>print(cumulative_frequence(df, ['a']))<nl>print(cumulative_frequence(df, ['a','b']))<nl># 19<nl># 19", "out": "pandas配列の条件付き累積和", "out_en": "conditional cumulative sum for pandas array"}
{"in": "FullName = LastName + (\", \" + FirstName if FirstName else \"\")", "out": "オプションの区切り文字を使用して文字列とNone/文字列を結合", "out_en": "Join string and None/string using optional delimiter"}
{"in": "from subprocess import Popen, PIPE<nl><nl>cmdline = ['hipi-i2c', 'r', '1', '0x1D', '0x01']<nl>result = Popen(<nl><tab>cmdline<nl><tab>, stdin=PIPE<nl><tab>, stdout=PIPE<nl><tab>, stderr=PIPE<nl>)<nl>output = result.stdout.readlines()<nl>try:<nl><tab>X = int(output[0])<nl>except:<nl><tab>pass<nl><nl>print X", "out": "Python-Raspberry pi:popenの結果からintを取得", "out_en": "Python-Raspberry pi: get int from popen result"}
{"in": "# Import guzzle theme https://github.com/guzzle/guzzle_sphinx_theme<nl># Not actually using the theme but intead using the<nl># sitemap functionality and overriding the theme/templates in source/<nl>html_translator_class = 'guzzle_sphinx_theme.HTMLTranslator'<nl>html_theme_path = guzzle_sphinx_theme.html_theme_path()<nl>html_theme = 'guzzle_sphinx_theme'<nl>extensions.append(\"guzzle_sphinx_theme\")<nl>html_theme_options = {<nl><tab>\"base_url\": \"YOURSITEURL\"<nl>}", "out": "sphinxを使用してsitemap.xmlファイルを生成する方法", "out_en": "How do I generate a sitemap.xml file with sphinx?"}
{"in": "bin/pycharm.sh", "out": "UbuntuでPyCharmを実行する方法-\"Run in Terminal\"か\"Run\"か?", "out_en": "How to run PyCharm in Ubuntu - \"Run in Terminal\" or \"Run\"?"}
{"in": "from datetime import datetime, timedelta<nl>fourweeks = datetime.now() + timedelta(weeks=4)", "out": "Pythonのdatetimeモジュールで年の始まりを変更する", "out_en": "Change the start of the year in the datetime module of Python?"}
{"in": "import os, shutil, stat<nl><nl>def on_rm_error( func, path, exc_info):<nl><tab># path contains the path of the file that couldn't be removed<nl><tab># let's just assume that it's read-only and unlink it.<nl><tab>os.chmod( path, stat.S_IWRITE )<nl><tab>os.unlink( path )<nl><nl>shutil.rmtree( TEST_OBJECTS_DIR, onerror = on_rm_error )", "out": "WindowsでPythonを使用して読み取り専用のattribディレクトリを削除する方法", "out_en": "How to remove read-only attrib directory with Python in Windows?"}
{"in": "def my_print(obj):  <nl><tab>if hasattr(obj, '__len__') and len(obj) > 100:  <nl><tab><tab>print '... omitted object of %s with length %d ...' % (type(obj), len(obj))  <nl><tab>else: print obj", "out": "IDLEが巨大なリストを印刷しないようにするにはどうすればいいですか?", "out_en": "How can I stop IDLE from printing giant lists?"}
{"in": "outfile = open('scorefiles.txt', 'a')", "out": "複数の関数呼び出しでデータを上書きするのではなく、ファイルに追加する", "out_en": "Adding to a file instead of overwriting data on multiple function calls"}
{"in": "import clr<nl>files = [ 'file1.py', 'file2.py' ]<tab># Look into os.walk() if you have more than a few files<nl>clr.CompileModules('Foo.dll', *files)", "out": "ライブラリプロジェクトの作成方法", "out_en": "How to create Library project"}
{"in": "method = getattr(myPotatoHead, 'play_' + toy)<nl>method()", "out": "Pythonのメソッド呼び出しの一部としての変数", "out_en": "Variables as a part of calling a method in python"}
{"in": "def __hash__(self):<nl><tab>return hash(frozenset(self.iteritems()))", "out": "Pythonでハッシュできないためのルックアップテーブル", "out_en": "Lookup table for unhashable in Python"}
{"in": "ftp.retrlines(\"LIST -a\")", "out": "Python 3:ftplib-nlstコマンドでポイントで始まるファイルが表示されない", "out_en": "Python 3: ftplib - nlst command does not show files starting with a point"}
{"in": "memory_ptr =  pointer(memory)<nl>ReadMem(0x20000000, 100, memory_ptr)", "out": "構造体へのポインタの操作", "out_en": "Working with pointers to struct"}
{"in": "df['d'] = df.apply(lambda x: some_func(a = x['a'], b = x['b'], c = x['c']))", "out": "Pandas:複数の列を使用した関数のマッピング", "out_en": "Pandas: Map a function using multiple columns"}
{"in": "def f1():<nl><tab>def f2():<nl><tab><tab>print g[0]<nl><tab><tab>g[0] = 1<nl><tab><tab>print g[0]<nl><tab>g =[0]<nl><tab>print g[0]<nl><tab>f2()<nl><tab>print g[0]<nl><nl><tab>f1()", "out": "Pythonでネストされた関数間でローカル変数を共有する", "out_en": "Sharing local variable between nested functions in python"}
{"in": "myDict = dict(queryDict.iterlists())", "out": "django QueryDictをPython Dictに変更する方法", "out_en": "How to change a django QueryDict to Python Dict?"}
{"in": "def findLines():<nl><tab>myWord = 'someWordIWantToSearchFor'<nl><tab>answer = []<nl><tab>with open('daily.txt') as myfile:<nl><tab><tab>lines = myfile.readlines()<nl><tab>for line in lines:<nl><tab><tab>if myWord in line:<nl><tab><tab><tab>answer.append(line)<nl><tab>return answer", "out": "リスト内の文字列内の単語を検索する方法(Python)", "out_en": "How to find a word in a string in a list? (Python)"}
{"in": "for key in d:<nl><tab>ddd[key] = [val/sum(d[key]) for val in d[key]]<nl>print list(ddd.items())", "out": "Python辞書値リストの各値を合計で除算する", "out_en": "python dictionary divide each value in value list by total"}
{"in": "import urllib2<nl>try:<nl><tab>fh = urllib2.urlopen('http://example.com/check.txt')<nl><tab>print fh.read()<nl>except urllib2.HTTPError, e:<nl><tab>print e.code <nl>except urllib2.URLError, e:<nl><tab>print e.code", "out": "Python-urllib2>HTTPエラーのエスケープ方法", "out_en": "Python - urllib2 > how to escape HTTP errors"}
{"in": "3>> bytes(int(x, 16) for x in '0xDE 0xAD 0xBE 0xEF'.split())<nl>b'\\xde\\xad\\xbe\\xef'", "out": "Python-\"0 xDE 0 xAD 0 xBE 0 xEF\"形式の文字列をバイト配列にパースします", "out_en": "Python - Parse string in \"0xDE 0xAD 0xBE 0xEF\" form to a bytearray"}
{"in": "content = ''<nl>with open(filename, 'rt') as f:<nl><tab>content = f.read()<nl><nl>matches = re.findall(REGEX, content)", "out": "'with'ブロックでエラーが発生したにもかかわらず、ファイルの内容を操作する", "out_en": "Operating on a file's content despite a failure in the 'with' block"}
{"in": "for index, item in enumerate(L):<nl>  if a in item or b in item:<nl><tab>r.append(index)", "out": "Python-1つの要素を含むリスト内のリストの検索インデックス", "out_en": "Python - Searching index of lists in list containing one element"}
{"in": "import re<nl><nl>with open('php_file.txt', 'r') as f:<nl><tab>html = re.sub('<\\?.*?\\?>', '', f.read(), re.MULTILINE)<nl><nl>with open('html_file.txt', 'w') as f:<nl><tab>f.write(html)", "out": "Pythonを使用したHTMLファイルからのPHP行の削除", "out_en": "Removing PHP Lines from an HTML File Using Python"}
{"in": "import matplotlib.pylab as plt<nl>import matplotlib.animation as animation<nl>import numpy as np<nl><nl>#create image with format (time,x,y)<nl>image = np.random.rand(100,10,10)<nl><nl>#setup figure<nl>fig = plt.figure()<nl>ax1 = fig.add_subplot(1,2,1)<nl>ax2 = fig.add_subplot(1,2,2)<nl>#set up viewing window (in this case the 25 most recent values)<nl>repeat_length = (np.shape(image)[0]+1)/4<nl>ax2.set_xlim([0,repeat_length])<nl>#ax2.autoscale_view()<nl>ax2.set_ylim([np.amin(image[:,5,5]),np.amax(image[:,5,5])])<nl><nl>#set up list of images for animation<nl><nl><nl>im = ax1.imshow(image[0,:,:])<nl>im2, = ax2.plot([], [], color=(0,0,1))<nl><nl>def func(n):<nl><tab>im.set_data(image[n,:,:])<nl><nl><tab>im2.set_xdata(np.arange(n))<nl><tab>im2.set_ydata(image[0:n, 5, 5])<nl><tab>if n>repeat_length:<nl><tab><tab>lim = ax2.set_xlim(n-repeat_length, n)<nl><tab>else:<nl><tab><tab># makes it look ok when the animation loops<nl><tab><tab>lim = ax2.set_xlim(0, repeat_length)<nl><tab>return im, im2<nl><nl>ani = animation.FuncAnimation(fig, func, frames=image.shape[0], interval=30, blit=False)<nl><nl>plt.show()", "out": "matplotlibアニメーションを使用したX軸値の更新", "out_en": "Updating the x-axis values using matplotlib animation"}
{"in": "for n in numbers:<nl><tab>frequencies[n] += 1", "out": "リスト内の頻度番号を取得してから、別のリストにインデックスを作成するにはどうすればよいでしょうか。", "out_en": "How do you get number frequencies in a list, then index into another list?"}
{"in": "sum(SCORES[letter] for letter in word)", "out": "forループで値を加算する(Python)", "out_en": "Add values together in for loop (Python)"}
{"in": "re.split(r'\\s+-\\s*|\\s*-\\s+', description)", "out": "文字列の末尾から検索して分割", "out_en": "Search from end of string and split"}
{"in": "Recommendation.objects.filter(user__publication_set__subscriber=request.user).select_related()", "out": "複数のテーブルにまたがるクエリを実行するための最良の方法は何ですか?", "out_en": "What's the best django way to do a query that spans several tables?"}
{"in": "for x in ['a', 'b', 'c', 'd', 'e']:<nl><tab>setattr(i, x, f(getattr(i, x)))", "out": "Pythonで参照によって変数のリストを変更する洗練された方法", "out_en": "Elegant way to modify a list of variables by reference in Python?"}
{"in": "asciiList = [n.encode(\"ascii\", \"ignore\") for n in strList]<nl>h5File.create_dataset('xxx', (len(asciiList),1),'S10', asciiList)", "out": "PythonからHDF5データセットに文字列のリストを格納する", "out_en": "Storing a list of strings to a HDF5 Dataset from Python"}
{"in": "name = 'My Name'<nl>skipLines = False<nl>results = []<nl>for x in chatLog:<nl><tab>if x == name:<nl><tab><tab>skipLines = True<nl><tab>elif not x[0].isdigit():<nl><tab><tab>skipLines = False<nl><nl><tab>if not skipLines:<nl><tab><tab>results.append(x)", "out": "Python-チャットログファイルの条件付き行の削除", "out_en": "Python - Delete Conditional Lines of Chat Log File"}
{"in": "import wx<nl><nl>class Frame(wx.Frame):<nl>  def __init__(self, parent, id, title, img_path):<nl><tab>wx.Frame.__init__(self, parent, id, title, <nl><tab><tab><tab><tab><tab>  style=wx.DEFAULT_FRAME_STYLE ^ wx.RESIZE_BORDER)<nl><nl><tab>image = wx.StaticBitmap(self, wx.ID_ANY)<nl><tab>image.SetBitmap(wx.Bitmap(img_path))<nl><nl><tab>sizer = wx.BoxSizer()<nl><tab>sizer.Add(image)<nl><tab>self.SetSizerAndFit(sizer)<nl><nl><tab>self.Show(True)<nl><nl>app = wx.App()<nl>frame = Frame(None, wx.ID_ANY, 'Image', '/path/to/file.png')<nl>app.MainLoop()", "out": "WxPython単位での画像に対するフレームのサイズ変更", "out_en": "Sizing a frame to an image in WxPython"}
{"in": "from twisted.application.service import Service<nl><nl>class MultiprocessingService(Service):<nl><tab>def startService(self):<nl><tab><tab>self.pool = multiprocessing.Pool(processes=processes)<nl><nl>MultiprocessingService().setServiceParent(application)", "out": "マルチプロセッシング・ワーカーを使用するツイスト・ネットワーク・クライアント", "out_en": "Twisted network client with multiprocessing workers?"}
{"in": "json.dumps()", "out": "AMQPにPython辞書を入れることはできますか?", "out_en": "Is it possible to put a python dictionary in AMQP?"}
{"in": "from collections import defaultdict<nl><nl>data = [['a', 'b', 2], ['a', 'c', 1], ['a', 'b', 1]]<nl><nl>result = collections.defaultdict(int) # new keys are auto-added and initialized as 0<nl>for item in data:<nl><tab>a, b, value = item<nl><tab>result[(a,b)] += value<nl>print result<nl># defaultdict(<type 'int'>, {('a', 'b'): 3, ('a', 'c'): 1})<nl>print dict(result)<nl># {('a', 'b'): 3, ('a', 'c'): 1}<nl>print [[a, b, total] for (a, b), total in result.items()]<nl># [['a', 'b', 3], ['a', 'c', 1]]", "out": "リストのリスト内の重複を識別し、最後の項目を合計する", "out_en": "Identify duplicates in a list of lists and sum up their last items"}
{"in": "import BeautifulSoup<nl><nl>soup = BeautifulSoup.BeautifulSoup('''<table><nl>  <tr><nl><tab><td>Names</td><nl><tab><td>Fred, John, Barry, <a href=\"http://www.example.com/\">Roger</a>, James</td><nl>  </tr><nl></table>''')<nl><nl>result = []<nl>for tag in soup.table.findAll('td')[1]:<nl>  if isinstance(tag, BeautifulSoup.NavigableString):<nl><tab>for name in tag.string.split(','):<nl><tab>  name = name.strip()<nl><tab>  if name:<nl><tab><tab>result.append({ 'name': name })<nl>  else:<nl><tab>result.append({ 'name': tag.string.strip(), 'url': tag[\"href\"] })<nl><nl>print result", "out": "コンマで区切られたリストを分割して、美しいスープでリンクを入れる", "out_en": "split a comma separated list with links in with beautifulsoup"}
{"in": "def parse_file():<nl>  with open('SOMETHING.txt', 'r') as f:<nl><tab>c1 = 0<nl><tab>c2 = 0<nl><tab>for i in f:<nl><tab>  w = i.split()<nl><tab>  c1 += len(w)<nl><tab>  for j in w:<nl><tab><tab>if j.endswith('LY'):<nl><tab><tab>  c2 += 1<nl><tab>return {'Total words': c1, 'Words ending with LY': c2}", "out": "テキストファイル内のすべての単語をカウントするpython", "out_en": "Count every word in a text file python"}
{"in": "import matplotlib.pyplot as pl<nl>from matplotlib.ticker import ScalarFormatter<nl><nl>fig = pl.figure()<nl>ax = fig.add_subplot(111)<nl><nl>ax.set_xscale('log')<nl>ax.set_xticks([1,2,5,10])<nl>ax.get_xaxis().set_major_formatter(ScalarFormatter())<nl>ax.set_xlim([1., 10.])", "out": "Matplotlibログスケールフォーマット", "out_en": "Matplotlib log scale formatting"}
{"in": "class PopenThread(threading.Thread):<nl><nl><tab>def __init__(self, port):<nl><tab><tab>threading.Thread.__init__(self)<nl><tab><tab>self.port=port<nl><nl><tab>def run(self):<nl><tab><tab>Popen('ant -Dport='+str(self.port)+ ' -Dhost='+GetIP()+ <nl><tab><tab><tab><tab>' -DhubURL=http://192.168.1.113:4444' <nl><tab><tab><tab><tab>' -Denvironment=*firefox launch-remote-control'<nl><tab><tab><tab><tab>' $HOME/selenium-grid-1.0.8', shell=True)<nl><nl>if '__main__'==__name__:<nl><tab>PopenThread(5555).start()<nl><tab>PopenThread(5556).start()<nl><tab>PopenThread(5557).start()", "out": "シェルの複数プロセスの起動", "out_en": "Launching multiple processes of shell"}
{"in": "__author__ = 'vinayjoseph'<nl><nl>from google.appengine.ext import ndb<nl>import logging<nl>from datetime import datetime<nl><nl>class Event(ndb.Model):<nl><tab>\"\"\"Models an individual event at xxx xxx \"\"\"<nl><tab>Date = ndb.DateTimeProperty()<nl><tab>Location = ndb.StringProperty()<nl><tab>Address = ndb.StringProperty()<nl><tab>Name = ndb.StringProperty()<nl><nl><nl>def get_meeting_date():<nl><tab>\"\"\"gets the next meeting date from the No SQL Schemaless Google Datastore<nl><tab>\"\"\"<nl><tab>qry = Event.query(Event.Name == 'Next Meeting Location')<nl><tab>for event in qry.fetch(1):<nl><tab><tab>logging.info(\"Meeting is on %s at %s\" % (str(event.Date), event.Address))", "out": "Google App Engine ndbクエリ", "out_en": "Google App Engine ndb query"}
{"in": "class Player:<nl>  def __init__(self, name, hp):<nl><tab>self.name = name<nl><tab>self.hp = hp", "out": "名前変更されたグローバル変数を関数内から変更する(Python)", "out_en": "Changing renamed global variables from inside a function (python)"}
{"in": "def setUp(self):<nl><tab>self.test_passed = false<nl><nl>def tearDown(self):<nl><tab>if not self.test_passed:<nl><tab><tab>log()<nl><nl>def test_something(self):<nl><tab>self.assertEquals(something())<nl><tab>self.test_passed = true", "out": "ユニットテストが失敗したときにアクションを実行する", "out_en": "Performing an action whenever a unit test fails"}
{"in": "class exampleForm(forms.Form):<nl> item_price = forms.IntegerField(label = 'item price')<nl> item_quantity = forms.IntegerField(label = 'quantity')<nl> item_total = forms.IntegerField(label = 'total')<nl><nl> def clean_item_total(self):<nl>   total = self.cleaned_data.get(\"item_price\", 0)+self.cleaned_data.get(\"item_quantity\", 0)<nl>   return total", "out": "Django Forms:他のフィールドの複数であるフィールドを追加する必要がある", "out_en": "Django Forms : I need to add a field that is a multiple of other fields?"}
{"in": "sel = selected()<nl><nl>for i in sel:<nl><tab>print i.ty.get()<nl><tab>i.ty.set(i.ty.get() + 1)", "out": "Maya Pythonでリストからオブジェクトのアトリビュートを取得または設定する方法", "out_en": "how to get or set object's attribute from a list in maya python?"}
{"in": "re.findall('\\[[^\\]]*\\]|\\([^\\)]*\\)|\\\"[^\\\"]*\\\"|\\S+',strs)", "out": "括弧で文字列を分割するPython", "out_en": "Python splitting string by parentheses"}
{"in": "re.search(r'<div.*?>(*.?)</div>', price.get_attribute('innerHTML')).group(1)", "out": "Selenium Python<div>からテキスト(htmlソース)を取得する方法", "out_en": "Selenium Python how to get text(html source) from <div>"}
{"in": "mylist=['I am fabulous']<nl><nl>mylist[0] = mylist[0].replace(' ', ', ')<nl><nl>print mylist", "out": "Pythonで、1つの長い単語文字列を含むリスト内の各単語の後にカンマを追加するにはどうすればいいですか。", "out_en": "How do I add a comma after each word in a list with a single long string of words in Python?"}
{"in": "#Bind listbox selection into entry field <nl>def get_list(event):<nl><tab>index = listbox1.curselection()[0]<nl><tab>seltext = listbox1.get(index)<nl><tab>enter1.delete(0, 50)<nl><tab>enter1.insert(0, seltext)<nl><nl>#Bind entry text into listbox<tab><nl>def set_list(event):<nl><tab>try:<nl><tab><tab>index = listbox1.curselection()[0]<nl><tab><tab>listbox1.delete(index)<nl><tab>except IndexError:<nl><tab><tab>index = tk.END<nl><tab>listbox1.insert(index, enter1.get())<nl><nl>listbox1 = tk.Listbox(root, width=50, height=6)<nl>listbox1.grid(row=0, column=0)<nl><nl>enter1 = tk.Entry(root, textvariable=source, width=50)<nl>enter1.insert(0, 'Click on Fetch Button, then select item in the listbox')<nl>enter1.grid(row=1, column=0)<nl><nl>enter1.bind('<Return>', set_list)<nl>enter1.bind('<Double-1>', set_list)<nl><nl>listbox1.bind('<ButtonRelease-1>', get_list)", "out": "Sqlite3 Connectionを使用してリストボックスの選択項目を入力ボックスに読み込む", "out_en": "Load Listbox Selection into Entry Box with Sqlite3 Connection"}
{"in": "def convert_pdf_to_png(blob):<nl><tab>pdf = Image(blob=blob)<nl><nl><tab>pages = len(pdf.sequence)<nl><nl><tab>image = Image(<nl><tab><tab>width=pdf.width,<nl><tab><tab>height=pdf.height * pages<nl><tab>)<nl><nl><tab>for i in xrange(pages):<nl><tab><tab>image.composite(<nl><tab><tab><tab>pdf.sequence[i],<nl><tab><tab><tab>top=pdf.height * i,<nl><tab><tab><tab>left=0<nl><tab><tab>)<nl><nl><tab>return image.make_blob('png')", "out": "imagemagick wand pdfページを画像として保存", "out_en": "imagemagick wand save pdf pages as images"}
{"in": "sorted_qs = sorted(chain(fqs, sqs), key=lambda obj: obj.added)", "out": "querysetsジャンゴをソートする", "out_en": "sort two joined querysets - django"}
{"in": "import importlib<nl>themodule = importlib.import_module('django-google-storage')", "out": "pipとともにインストールされたPythonパッケージの参照", "out_en": "Referencing a python package installed with pip"}
{"in": "c = [item for item in a<nl><tab> if any(name in item for name in b)]", "out": "Pythonの2つのリスト内の文字列内の共通文字", "out_en": "Common characters within strings in 2 lists in Python"}
{"in": "hands = {} # Create a new dictionary to hold the hands.<nl>hands[\"flush\"] = make_hand(deck) # Generate some hands using your function.<nl>hands[\"straight\"] = make_hand(deck) # Generate another hand with a different name.<nl>print hands[\"flush\"] # Access the hand later.", "out": "Pythonで関数引数で指定されたリスト", "out_en": "list named with a function argument in python"}
{"in": "return json.dumps({'lat': result.lat, 'lon': result.lon})", "out": "単純なjsonを使用してPython Appengine GeoModelサブクラスをJSONシリアライズできません", "out_en": "Cannot JSON serialize python Appengine GeoModel subclass using simple json"}
{"in": "linecache.clearcache()", "out": "フォルダ内のファイルを解析中にメモリエラーが発生しました", "out_en": "Memory error while parsing files in a folder"}
{"in": "json.loads(request.POST.get('myd'), object_pairs_hook=collections.OrderedDict)", "out": "Pythonでjsonから順序付き辞書を作成する方法", "out_en": "How can I create an ordered dictionary from json in Python"}
{"in": "button.modify_base(gtk.STATE_NORMAL, gtk.gdk.color_parse(\"red\"))", "out": "GTK:チェックボタンの背景色を変更する", "out_en": "GTK: Modify bg color of a CheckButton"}
{"in": "[[\"A\", \"B\", 1.3750], [\"X\", \"Y\", 0.7097]]", "out": "JSONを解析しようとしたときのValueError", "out_en": "ValueError when attempting to parse JSON"}
{"in": "newList = [row[0] for row in data[1:]]", "out": "Python:リストグループの各リストの最初の項目を削除する(2番目のリストから開始)", "out_en": "Python: removing first item in each list of a group of lists, starting with the second list"}
{"in": "from itertools import islice<nl>with open('target.txt', 'w') as target:<nl><tab>f1, f2 = open('f1.txt'), open('f2.txt')<nl><tab>while True:<nl><tab><tab>ls1 = islice(f1, 32)<nl><tab><tab>if not ls1:<nl><tab><tab><tab># will not happen in this case<nl><tab><tab><tab>target.write('<nl>' + f2.read())<nl><tab><tab><tab>break<nl><tab><tab>ls2 = islice(f2, 64)<nl><tab><tab>if not ls2:<nl><tab><tab><tab>target.write('<nl>' + f1.read())<nl><tab><tab><tab>break<nl><tab><tab>target.write('<nl>'.join('<nl>'.join(ls) for ls in [ls1, ls2]))<nl><tab>f1.close()<nl><tab>f2.close()", "out": "Pythonで2つのtxtファイルを順次読み込み、新しいファイルに書き込む方法", "out_en": "how to sequentially read two txt files and write into a new file in python?"}
{"in": "df[(1.5 <= df.two) & (df.two <= 3.5)]", "out": "パンダ列の比較を行うhpw", "out_en": "pandas hpw to perform comparison on column"}
{"in": "from bs4 import BeautifulSoup<nl><nl>html = \"\"\"<tr> <stuff1> <tr><stuff2> </tr> </tr>\"\"\"<nl>soup =BeautifulSoup(html)<nl><nl>print(soup.find_all(\"tr\"))", "out": "reを使用して文字列内のネストされた結果を検索する", "out_en": "using re to find nested results in strings"}
{"in": "# XXX for whatever reasons, creating the first instance of a callback<nl># function is needed for the unittests on Win64 to succeed.  This MAY<nl># be a compiler bug, since the problem occurs only when _ctypes is<nl># compiled with the MS SDK compiler.  Or an uninitialized variable?<nl>CFUNCTYPE(c_int)(lambda: None)", "out": "mod_wsgi djangoアプリケーションからnumpyをインポートする際にctypesエラーが発生することがある", "out_en": "Occasional ctypes error importing numpy from mod_wsgi django app"}
{"in": "django.conf.settings", "out": "Djangoでは、プロジェクト外の新しいアプリケーションでsettings.pyを再利用するにはどうすればよいのでしょうか。", "out_en": "In Django, how can I reuse settings.py in a new app outside of the project"}
{"in": "import json<nl>payload={'text': 'bi ba buzemann!',<nl><tab><tab> 'nouns': ['streetlight', 'situation'],<nl><tab><tab> 'states': ['solid', 'fluid']<nl><tab><tab>}<nl>requests.post(url, data=json.dumps(payload))", "out": "http.server:JSONへのPOST要求のデコード", "out_en": "http.server: decoding POST request to JSON"}
{"in": "import matplotlib.pyplot as plt<nl><nl>for i, group in df.groupby('ModelID'):<nl><tab>plt.figure()<nl><tab>group.plot(x='saleDate', y='MeanToDate', title=str(i))", "out": "Pandas DataSeries.GroupByのプロット", "out_en": "Plotting a Pandas DataSeries.GroupBy"}
{"in": "from datetime import datetime<nl>today = datetime.today()<nl>b.utcoffset(today) == c.utcoffset(today)", "out": "Pythonで2つのタイムゾーンを比較するには?", "out_en": "How to compare two timezones in python?"}
{"in": "my_datetime.strftime(\"%B %d, %Y\")", "out": "Pythonの日時を、読み取り可能な形式の日付を持つ文字列に変換するにはどうすればよいでしょうか。", "out_en": "How do I turn a python datetime into a string, with readable format date?"}
{"in": "fig, ax = plt.subplots(1,2, figsize=(10,4))<nl><nl>x = [2,4,3,6,1,7]<nl>y = [1,2,3,4,5,6]<nl><nl>ax[0].plot(x, y)<nl><nl>ax[1].plot(np.arange(len(x)), y)<nl>ax[1].set_xticklabels(x)", "out": "matplotlib/pylabのX軸が自動的に値をソートしないようにするには?", "out_en": "How to make X axis in matplotlib/pylab to NOT sort automatically the values?"}
{"in": "in_str  = \"1, 2, 3, 4\"<nl>listed = [int(x) for x in in_str.split(',')]", "out": "Pythonでリストに整数を入れる", "out_en": "Putting integers in lists in python"}
{"in": "if request.method == \"POST\":<nl><tab>image = request.files['myfile'] #myfile is name of input tag<nl><tab>config ={<nl><tab><tab><tab>'album':album,<nl><tab><tab><tab>'name':'Catastrophe!',<nl><tab><tab><tab>'title':'Catastrophe!'<nl><tab>}<nl><tab>print \"uploading image...\"<nl><tab>filename = secure_filename(image.filename)<nl><tab>file.save(os.path.join('/home/suraj/Pictures', filename))<nl><tab>print os.path.realpath(image.filename)", "out": "イメージを使用してイメージをアップロードするフラスコ内のパス", "out_en": "upload image using image Path in flask"}
{"in": "import web<nl><nl>class MyApplication(web.application):<nl><tab>def run(self, port=8080, *middleware):<nl><tab><tab>func = self.wsgifunc(*middleware)<nl><tab><tab>return web.httpserver.runsimple(func, ('0.0.0.0', port))<nl><nl>urls = (<nl>   '/(.*)', 'hello'<nl>)<nl><nl>class hello:<nl><tab>def GET(self, name):<nl><tab><tab>if not name:<nl><tab><tab><tab>name = 'World'<nl><tab><tab>return 'Hello, ' + name + '!'<nl><nl>if __name__ == \"__main__\":<nl><tab>app = MyApplication(urls, globals())<nl><tab>app.run(port=8888)", "out": "単純なPython Webサーバーを適切な方法でデプロイするには?", "out_en": "How to deploy a simple python webserver in a right way?"}
{"in": "def save(self):<nl><tab>from django.template.defaultfilters import slugify<nl><nl><tab>if not self.slug:<nl><tab><tab>self.slug = slugify(self.title)<nl><nl><tab>super(Your_Model_Name,self).save()", "out": "管理アプリケーションで編集可能なモデル内のフィールドを定義する方法はありますか?", "out_en": "Is there a way to define which fields in the model are editable in the admin app?"}
{"in": "sqlite3.Row", "out": "列を名前で選択する方法は?(Python&SQLite3)", "out_en": "How do I select a column by its name? (Python & SQLite3)"}
{"in": "parser.add_argument('path', nargs=1, help='File path to process')", "out": "ファイルパスのグローバル展開からargparseを停止します", "out_en": "Stop argparse from globbing filepath"}
{"in": "xarr, yarr = [], []<nl>for i in range(1,n):<nl><tab>dx = random.uniform(-2,2)<nl><tab>x = x+dx<nl><tab>y += ((v**2 - dx**2)**(0.5))*(random.randint(-1,1))<nl><tab>xarr.append(x)<nl><tab>yarr.append(y)<nl>pl.plot(xarr,yarr)<nl><nl>pl.show()", "out": "Pythonのforループで生成された2 D値からのプロットの作成", "out_en": "Creating plots from 2-D values generated in a for loop in Python"}
{"in": "What is your name?.replace(\"?\",\"\") #this is the most clear<nl>#or<nl>filter(lambda x:x!= \"?\",\"What is your name?\")<nl>#or<nl>\"\".join(x for x in \"What is your name?\" if x != \"?\")<nl>#or<nl>\"What is your name?\".translate(None,\"?\") #this is my favorite", "out": "文字列から疑問符を削除する", "out_en": "Removing Question marks from string"}
{"in": "d ={'idx1':{'tokenA': 0.1,<nl><tab><tab><tab>'tokenB': 1.3,<nl><tab><tab><tab>'tokenD': 2.3},<nl><tab>  'idx2':{'tokenC': 0.9,<nl><tab><tab><tab>'tokenE': 3.4},<nl><tab>  'idxn':{'tokenA': 0.3,<nl><tab><tab><tab>'tokenF': 0.4,<nl><tab><tab><tab>'tokenZ': 7.4}<nl><tab>  }<nl><nl>from collections import Counter<nl><nl>token_sums   = sum((Counter(v<tab>   ) for k,v in d.iteritems()), Counter())<nl>token_counts = sum((Counter(v.keys()) for k,v in d.iteritems()), Counter())<nl>token_mean   = {k:token_sums[k]/token_counts[k] for k in token_sums}<nl>print token_mean", "out": "以下のような辞書から平均値を得るにはどうすればいいですか?", "out_en": "How to get average value from a dict like below?"}
{"in": "\"This pure Python MySQL client provides a DB-API to a MySQL database by talking directly to the server via the binary client/server protocol.\"<nl><nl>import pymysql<nl>conn = pymysql.connect(host='127.0.0.1', unix_socket='/tmp/mysql.sock', user='root', passwd=None, db='mysql')<nl>cur = conn.cursor()<nl>cur.execute(\"SELECT Host,User FROM user\")<nl>for response in cur:<nl><tab>print(response)<nl>cur.close()<nl>conn.close()", "out": "Python 3.3 Mysqlコネクタ", "out_en": "Python 3.3 Mysql Connector"}
{"in": "#! /usr/bin/env python<nl>import pandas as pd<nl>import matplotlib.pyplot as plt<nl>data = pd.read_fwf('myfile.log',header=None,names=['time','amount'],widths=[27,5])<nl>data.time = pd.to_datetime(data['time'], format='%Y-%m-%d %H:%M:%S.%f')<nl>data.set_index(['time'],inplace=True)<nl>data.plot()<nl><nl>#OR <nl>plt.plot(data.index, data.amount)", "out": "matplotlibでパンダの日付をプロットする", "out_en": "Plot pandas dates in matplotlib"}
{"in": "import subprocess<nl>import wx<nl><nl>def main():<nl><tab>p = subprocess.Popen(['ls', '-a'], stdout = subprocess.PIPE)<nl><tab>text = p.stdout.readlines()<nl><tab>text = \"\".join(text)<nl><nl><tab>wx.MessageBox(\"file names:<nl>%s\" % text, \"info\")<nl><nl>if __name__ == '__main__':<nl><tab>app = wx.PySimpleApp()<nl><tab>main()", "out": "WxPythonを使用してターミナル出力をGUIに渡す", "out_en": "pass terminal output to GUI using wxpython"}
{"in": "import netCDF4<nl>dset = netCDF4.Dataset('test.nc')<nl>dset.variables", "out": "netCDF4とpythonを使用して、netCDFファイルのすべての変数をプログラムで一覧表示する", "out_en": "programatically list all variables of a netCDF file using netCDF4 and python"}
{"in": "myvars = {}<nl><nl># iterate through all the lines<nl>for line in open('SampleText.txt').readlines():<nl><tab># skip this line if it doesn't look like an assignment<nl><tab>if not '=' in line: continue<nl><nl><tab># split it into left and right pieces<nl><tab>left, right = line.split('=', 1)<nl><nl><tab># keep it around in a dictionary<nl><tab>myvars[left.strip()] = right.strip()<nl><nl># now you can query it to get stuff:<nl>myvars['efgh']   # returns /home/user/targetfile1.txt", "out": "Python:テキストファイルからファイルパスを取得する", "out_en": "Python: Get file path from a text file"}
{"in": "import re<nl>lookup = {re.search('([A-Z][A-Za-z_]*$)', cls.__name__).group(1): cls for cls in BaseCls.__subclasses__()}<nl># {'A': <class '__main__.ChildClsA'>, 'B': <class '__main__.ClildClsB'>}<nl><nl>input_str = raw_input('Please enter one of {}:'.format(', '.join(lookup)))<nl>new_class = lookup[input_str]()", "out": "'if'ステートメントを使用しないで子クラスを作成する方法", "out_en": "How to decide creating a child class without using 'if' statement"}
{"in": "from sqlalchemy import func, desc<nl>session.query(<nl><tab>func.count(tablename.id).label('qty')<nl><tab>).group_by(tablename.category<nl><tab>).order_by(desc('qty'))", "out": "SQLの配列の列で最も頻度の高い値の検索錬金術", "out_en": "Finding most frequent values in column of array in SQL Alchemy"}
{"in": "import datetime<nl>date = (datetime.date.today() - datetime.timedelta(1)).strftime(\"%d-%b-%Y\")<nl>result, data = mail.uid('search', None, '(SENTSINCE {date})'.format(date=date))", "out": "IMAPフォルダから複数の条件を検索する(Python)", "out_en": "Searching through IMAP folder for multiple criterion (python)"}
{"in": "try:<nl><tab>dico[\"title\"] = unicode(xml.Items.Item.ItemAttributes.Title)<nl>except AttributeError:<nl><tab>dico[\"title\"] = ''", "out": "Pythonですべてのxml値にアクセスします。この場合、同じ名前を持つ複数のxml値があります。", "out_en": "access all xml value in python, where there's several that have the same name"}
{"in": "default_app_config = 'apps.cliente.config.ClienteConfig'", "out": "app verbose_nameを指定すると、壊れたモデルがDjangoにインポートされる", "out_en": "Broken models imports in Django when specifying app verbose_name"}
{"in": "totalData = [ [['Test1',5,2,1,8],['Test2',10,4,3,2]],<nl><tab><tab><tab><tab>  [['Test1',2,4,5,1],['Test2',4,6,10,3]] ]<nl>for t in range(len(totalData[0])): #tests<nl><tab>result = [totalData[0][t][0],]<nl><tab>for i in range(1,len(totalData[0][0])): #numbers<nl><tab><tab>sum = 0.0<nl><tab><tab>for j in range(len(totalData)):<nl><tab><tab><tab>sum += totalData[j][t][i]<nl><tab><tab>sum /= len(totalData)<nl><tab><tab>result.append(sum)<nl><tab>print result", "out": "Pythonでリストのリストのリストの値を平均化する", "out_en": "Averaging values in a list of a list of a list in Python"}
{"in": "# In models.py, add as_dict() method to all models<nl># Example for class Book<nl>def as_dict(self):<nl><tab>d = {<nl><tab><tab>\"id\": self.id,<nl><tab><tab>\"publisher\": self.publisher.as_dict(), # avoid this<nl><tab><tab>\"title\": self.title,<tab><tab><nl><tab><tab>\"publication_date\": str(self.publication_date),  <nl><tab><tab>\"publisher\": self.publisher,  <nl><tab><tab>\"authors\": [author.as_dict() for author in self.authors.all()] # avoid this<nl><tab>}<nl><nl># then in views.py<nl>def getAllBooks(request):<nl><tab>book_list = [book.as_dict() for book in Book.objects.all().select_related()]<nl><tab>return HttpResponse(simplejson.dumps(book_list), <nl><tab><tab><tab><tab><tab><tab>content_type=\"application/json\")", "out": "Modelを適切にフォーマットされたJSON文字列に変換する、より良い方法はありますか?", "out_en": "Is there a better way to convert a Model to a well formatted JSON string?"}
{"in": "data.sort('COL1', inplace=True)", "out": "matplotlib:折れ線グラフで間違った順序で接続されたデータポイント", "out_en": "matplotlib: data points connected in wrong order in line graph"}
{"in": "class Client(Person):<nl>   favorite_stores = models.ManyToManyField('store.Store')<nl>   favorite_vendors = models.ManyToManyField(Vendor)", "out": "2つのアプリ間のDjango manytomany関係", "out_en": "Django manytomany relationship over 2 apps"}
{"in": "dset.attrs[\"Name\"] = \"My Dataset\"", "out": "scipy/numpy配列を辞書のように効率的に格納", "out_en": "Dictionary-like efficient storing of scipy/numpy arrays"}
{"in": "print '.{0,3}'.join(re.escape(part) for part in s.split('?')) + '.*'", "out": "python+postgresql:文字列リテラルを正規表現に変換します。", "out_en": "python+postgresql: Convert string literal to regex"}
{"in": "colormap = PythonMagick.Image(\"colors256.png\")<nl>original.map(colormap)", "out": "(Python)PILまたはPyPNGを使用してイメージ内の特定のパレットを設定する", "out_en": "(Python) Set a specific palette in an image using PIL or PyPNG"}
{"in": "for k in a.keys():<nl><tab> a[k] = a[k] * 2", "out": "Python:Counterオブジェクトの値を乗算する方法", "out_en": "Python: How to multiply values of a Counter object?"}
{"in": "def sc1(self, *argv):<nl><tab><tab>self.a = float(argv[0]) <nl><tab><tab># rather than re-request the value resulting in more function calls<nl><tab><tab># i'm using the value that is passed in during the callback<nl><tab><tab>if not hasattr(self, \"a_prev\"): # this is a hacky method to <nl><tab><tab><tab>self.a_prev = 1<tab><tab><tab> # remember the previous value<nl><nl><tab><tab>b_diff = self.scale_2.get() - self.a_prev <nl><tab><tab>c_diff = self.scale_3.get() - self.a_prev<nl><tab><tab># calculate the differences to the previous value<nl><nl><tab><tab>self.scale_2.set(self.a+b_diff) # set the scales<nl><tab><tab>self.scale_3.set(self.a+c_diff)<nl><tab><tab>self.a_prev = self.a # remember current value as the new previous", "out": "tkinter python3では、1つのスケールが他のスケール値を制御します。", "out_en": "one scale controls other scale values in tkinter python3"}
{"in": "#!/usr/bin/env python", "out": "ビジュアルプロファイラを使用してPyCudaコードをプロファイルする方法", "out_en": "How to profile PyCuda code with the Visual Profiler?"}
{"in": "import difflib", "out": "PythonでのセットA-セットBの計算", "out_en": "Calculation of Set A - Set B in Python"}
{"in": "from wand.image import Image<nl>from wand.display import display<nl>from wand.drawing import Drawing<nl>from wand.color import Color<nl>img=Image(filename='../../rmli_fr/rmli_fr.ave.ras')<nl><nl>color = Color('red')<nl>draw = Drawing()<nl>draw.fill_color = color<nl>for i in pts_comp:<nl><tab>draw.line((i[0], i[1]), (i[0], i[1]))<nl><tab>draw(img)<nl><nl>img.save(filename='rmli.ras')", "out": "Wand(imagemagick)は、グレースケールの太陽ラスターイメージの上に色付きの点を描画します。", "out_en": "Wand (imagemagick) draw colored points on top of greyscale sun raster image"}
{"in": "import os<nl>import sys<nl>import shutil<nl><nl>source = raw_input(\"Enter source file path: \")<nl>dest = raw_input(\"Enter destination path: \")<nl><nl>if not os.path.isfile(source):<nl><tab>print \"Source file %s does not exist.\" % source<nl><tab>sys.exit(3)<nl><nl>try:<nl><tab>shutil.copy(source, dest)<nl>except IOError, e:<nl><tab>print \"Could not copy file %s to destination %s\" % (source, dest)<nl><tab>print e<nl><tab>sys.exit(3)", "out": "Pythonでファイルをコピーする方法", "out_en": "How to copy a file in Python?"}
{"in": "import numpy as np<nl>from scipy.io import wavfile<nl><nl>fs = 44.1e3<nl>t = np.arange(0, 1.0, 1.0/fs)<nl><nl>f1 = 440<nl>f2 = 600<nl><nl>x = 0.5*np.sin(2*np.pi*f1*t) + 0.5*np.sin(2*np.pi*f2*t)<nl><nl>fname = 'output.wav'<nl>wavfile.write( fname, fs, x )<nl><nl><nl>fs, data = wavfile.read( fname )<nl><nl>print fs, data[:10]", "out": "Pythonで読み込んだオーディオのwave値を探す", "out_en": "looking for reading audio wave values in python"}
{"in": "U = np.random.rand(3,24,5) <nl>R = np.eye(3,3)<nl>result = np.einsum( \"ijk,il\", U,R )", "out": "numpy:ブロードキャスト行列乗算accross配列", "out_en": "numpy: broadcast matrix multiply accross array"}
{"in": "#!/usr/bin/python<nl>from PIL import Image<nl>import os, sys<nl><nl>path = \"/root/Desktop/python/images/\"<nl>dirs = os.listdir( path )<nl><nl>def resize():<nl><tab>for item in dirs:<nl><tab><tab>if os.path.isfile(path+item):<nl><tab><tab><tab>im = Image.open(path+item)<nl><tab><tab><tab>f, e = os.path.splitext(path+item)<nl><tab><tab><tab>imResize = im.resize((200,200), Image.ANTIALIAS)<nl><tab><tab><tab>imResize.save(f + ' resized.jpg', 'JPEG', quality=90)<nl><nl>resize()", "out": "Python/PILフォルダ内のすべての画像のサイズを変更する", "out_en": "Python/PIL Resize all images in a folder"}
{"in": "sorted(lst, reverse=True)", "out": "Pythonでこのリストをソートする方法", "out_en": "Python how to sort this list?"}
{"in": "R = (R - A) / (1 - A)<nl>G = (G - A) / (1 - A)<nl>B = (B - A) / (1 - A)", "out": "私のスプライトには、奇妙な白いピクセル状の境界があります", "out_en": "My sprite has a weird white pixelated border around it"}
{"in": "print \"Enter 100 words:\"<nl>words = [] # create a list<nl>for x in range(100): # loop through all the numbers from 0 to 100<nl>  words.append(raw_input(\"Word {}\".format(x + 1))) # ask for the word,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>   # then add it to the list", "out": "Pythonで何度も入力するには?", "out_en": "how to input many times in python?"}
{"in": "def __getattr__(self, name):<nl><tab>if hasattr(self.st, name):<nl><tab><tab>return getattr(self.st, name)<nl><tab>else:<nl><tab><tab>raise AttributeError", "out": "Python 2:ローカル変数からクラス自体へのクラス属性の書き出し", "out_en": "Python 2: export class attributes from a local variable to the class itself"}
{"in": "def zero_value(x):<nl><tab>if x is None:<nl><tab><tab>return None<nl><tab>return type(x)()", "out": "指定された値に対応する「0値」の取得", "out_en": "Getting the \"zero value\" corresponding to a given value"}
{"in": "gws = conn.get_all_internet_gateways(filters={'attachment.vpc-id': vpc.id})", "out": "AWS boto:VPCに接続されているすべてのインターネットゲートウェイのリストを取得する方法", "out_en": "AWS boto: how to get a list of all Internet gateways attached to a VPC"}
{"in": "ip_string = \",\".join(IPsToPING)<nl>subprocess.call('Fping.exe -H %s ...' % ip_string)", "out": "個々のリスト項目(文字列)をストリップする方法", "out_en": "How to strip an individual list item (string)?"}
{"in": "#!/usr/bin/env python<nl><nl>d = {<nl><tab>'key1' : ['A', 'B', 'C'], <nl><tab>'key2' : ['B', 'A', 'G'], <nl><tab>'key3' : ['Z', 'H', 'I']<nl>}<nl><nl>l = ['A', 'A', 'B', 'D']<nl><nl>uniq_l = set(l) # you don't need to check duplicates twice<nl><nl>for key, value in d.items():<nl><tab>if value[0] in uniq_l:<nl><tab><tab>print \"Match\", key, value<nl><nl># Output:<nl># Match key2 ['B', 'A', 'G']<nl># Match key1 ['A', 'B', 'C']", "out": "リスト内の項目と一致するディクショナリ値に対してアクションを実行する", "out_en": "Perform actions on dictionary values that match items in a list?"}
{"in": "Location.objects.annotate(encounter_count=Count('subject__encounter'))", "out": "annotateのdjango積", "out_en": "django product of annotate"}
{"in": "inrels = graph.cypher.query('START strt=node({mynode}) \\<nl><tab><tab><tab><tab><tab><tab><tab>MATCH strt<-[r:follows]-neighbor \\<nl><tab><tab><tab><tab><tab><tab><tab>WHERE neighbor.attr = {myattr} \\<nl><tab><tab><tab><tab><tab><tab><tab>RETURN r', {'mynode': self.eid, 'myattr': someattr})<nl><nl>firstrel = inrel.next()", "out": "Bulbsを使ってneo4j Cypherクエリを入力する方法は?", "out_en": "How to enter a neo4j Cypher query using Bulbs?"}
{"in": "from rx.executors import ThreadPoolExecutor<nl>from rx.futures import Future<nl><nl>with ThreadPoolExecutor(10) as tp:<nl><tab>futures = [tp.submit(foo, i) for i in range(10)] # list of futures<nl><tab>future_all = Future.all(futures) # combines into single future with list of results<nl><tab>future_all_sum = future_all.map(sum) # maps result list to sum of elements<nl><tab>print(future_all_sum.result(timeout=10))", "out": "Python用にscala風の'future'非同期APIを作りたい/作りたい", "out_en": "I would like to make/have a scala like 'future' async API for python"}
{"in": "lines = tuple(open('/var/log/fail2ban.log', 'r'))<nl>seen = set()<tab><nl>for item in lines:<nl>  item = item.strip('<nl>')<nl>  if \"fail2ban.actions:\" in item and \"[postfix]\" in item and \"Ban\" in item:<nl><tab>item = item.split(' ')<nl><tab>if item[6] not in seen:<nl><tab>  seen.add(item[6])<nl><tab>  print item", "out": "複数のリストでの一意性のソート", "out_en": "Sorting uniques in multiple lists"}
{"in": "lines = []<nl><nl>with open('file.txt', 'r') as f:<nl><tab>lines = f.readlines()<nl><nl>with open('file.txt', 'w') as f:<nl><tab>f.writelines(lines[:1] + lines[2:]) # This will skip the second line", "out": "テキストファイルから2行目を削除する", "out_en": "Removing the second line from a text file"}
{"in": "import django.utils.translation.trans_real as trans<nl>from django.utils.thread_support import currentThread<nl><nl>def isactive():<nl>  return currentThread() in trans._active", "out": "Django:翻訳がアクティブかどうかを検出する方法は?", "out_en": "Django: How to detect if translation is activated?"}
{"in": "aa1 = [0,1,1,2,3,3,4,4,5,9]<nl>aa2 = [0,1,3,3,4,4,4,4,5,6,7,9]<nl>bins = [0,3,9]<nl>height = [np.histogram( xs, bins=bins)[0] for xs in [aa1, aa2]]<nl>left, n = np.arange(len(bins)-1), len(height)<nl><nl>ax = plt.subplot(111)<nl>color_cycle = ax._get_lines.color_cycle<nl><nl>for j, h in enumerate(height):<nl><tab>ax.bar(left + j / n, h, width=1.0/n, color=next(color_cycle))<nl><nl>ax.set_xticks(np.arange(0, len(bins)))<nl>ax.set_xticklabels(map(str, bins))", "out": "matplotlib内の等間隔でないビンに対して、同じビン幅でヒストグラムを描画する方法", "out_en": "How to draw histogram with same bins width for unequally spaced bins in matplotlib"}
{"in": "p = re.compile(r'([a-zA-Z0-9\\-\\+\\.]+)\\ ([0-9][0-9a-zA-Z\\:\\.\\-]+)')<nl>iterator = p.finditer(\"amd64 build of dvdrip software 1:0.98.10-0.2svn20090909 in archive\")<nl>for match in iterator:<nl><tab>print match.group()<nl># Prints: software 1:0.98.10-0.2svn20090909", "out": "Pythonで正規表現を作成する", "out_en": "Creating Regular Expressions in Python"}
{"in": "def get_img(html):<nl><tab>soup = BeautifulSoup(html)<nl><tab>img_box = []<nl><tab>imgs = soup.find_all('div', class_= 'pthumb')<nl><nl><tab>for img in imgs:<nl><tab><tab>img_box.append(get_domain(BASE_URL) + img.img['src'])<nl><nl><tab>my_path = '/home/<username>/Desktop'  # use whatever path you like<nl><tab>for img in img_box:<nl><tab><tab>urllib.request.urlretrieve(img, os.path.join(my_path, os.path.basename(img)))", "out": "URLから特別なフォルダに画像を保存", "out_en": "Save image from url to special folder"}
{"in": "import sys<nl>import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>testData = np.array([[0,0], [0.1, 0], [0, 0.3], [-0.4, 0], [0, -0.5]])<nl>fig, ax = plt.subplots()<nl>coll = ax.scatter(testData[:,0], testData[:,1], color=[\"blue\"]*len(testData), picker = 5, s=[50]*len(testData))<nl>plt.grid(True)<nl>plt.axis([-0.5, 0.5, -0.5, 0.5])<nl><nl>def on_pick(event):<nl><tab>print testData[event.ind], \"clicked\"<nl><tab>coll._facecolors[event.ind,:] = (1, 0, 0, 1)<nl><tab>coll._edgecolors[event.ind,:] = (1, 0, 0, 1)<nl><tab>fig.canvas.draw()<nl><nl>fig.canvas.mpl_connect('pick_event', on_pick)<nl>plt.show()", "out": "Python、Matplotlib、散布図、クリックしたポイントの色の変更", "out_en": "Python, Matplotlib, Scatter plot, Change color on the clicked point"}
{"in": "for key,group in itertools.groupby(dirtup2,operator.itemgetter(2)):<nl><tab>newlist=sorted(group,key=operator.itemgetter(1),reverse=True)<nl><tab>tuple_with_max=newlist[0]<nl><tab>print tuple_with_max", "out": "サブリストから最大の項目を持つタプルを抽出します(ディレクトリ内の最新のレポートを検索します)。", "out_en": "Extract the tuple with the largest item from sublist (find most recent report in directory)"}
{"in": "cmd = r\"\"\"c:\\temp\\osmconvert.exe c:\\temp\\770.osc.gz -b=1,1,3,3 -o=c:\\temp\\extract.o5m\"\"\"", "out": "PythonでOsmconvertを使用する", "out_en": "Using Osmconvert with Python"}
{"in": "from pages.view_consignments import ViewConsignmentsPage<nl><nl>class AddConsignmentPage(BasePage):<nl><nl><tab>def __init__(self, driver):<nl><tab><tab>super(AddConsignmentPage, self).__init__(driver, self._title)<nl><tab><tab>self._title_uuid = get_random_uuid(7)<nl><tab><tab>ViewConsignmentsPage._title_uuid = self._title_uuid", "out": "Pythonが発行されるたびにランダムな値を生成する", "out_en": "Generate random value once for every issue Python"}
{"in": "orig_arr = ma.array([[11,12],[21,22]])<nl>orig_arr[1,:] = ma.masked<nl><nl>print orig_arr<nl>## Prints: [[11 12]<nl>##<tab><tab>  [-- --]]<nl><nl>view_arr = orig_arr[1,:]<nl>print view_arr<nl>## Prints: [-- --]<nl><nl>view_arr.mask=False # or [True, False] <nl><nl><nl>view_arr[:] = [31,32] <nl>print view_arr<nl>## Prints: [31 32] #or [-- 32]<nl><nl>print orig_arr<nl>## Prints: [[11 12]<nl>##<tab><tab>  [31 32]] # or [-- 32]", "out": "Numpyでマスクされた配列をスライスするときにマスクを保持する方法", "out_en": "How do I keep the mask when slicing a masked array in Numpy?"}
{"in": "os.path.realpath()", "out": "Linux上のシンボリックリンクから実行されているスクリプトのファイル名を調べる方法", "out_en": "How to find the filename of a script being run when it is executed from a symlink on linux"}
{"in": "import os<nl>for root, dirs, files in os.walk('path/to/local/dir'):<nl><tab>for fname in files:<nl><tab><tab>full_fname = os.path.join(root, fname)<nl><tab><tab>ftp.storbinary('STOR remote/dir' + fname, open(full_fname, 'rb'))", "out": "Python ftplib-複数のファイルをアップロードする?", "out_en": "Python ftplib - uploading multiple files?"}
{"in": "from urlparse import urlparse<nl>url = \"http://stackoverflow.com/questions/34446468/looks-like-a-valid-python-syntax-to-me-but-gives-me-invalid-error-using-in-djang\"<nl>long_url = urlparse(url).netloc if url else \"be kind to one another\"<nl>long_url.split('.', 1)[1] if long_url.split('.', 1)[0] == 'www' else long_url", "out": "有効なPython構文のように見えますが、djangoで使用すると無効なエラーが発生します。", "out_en": "looks like a valid python syntax to me but gives me invalid error using in django"}
{"in": "scipy.spatial.distance.euclidean", "out": "Pythonでの多次元ユークリッド距離", "out_en": "Multidimensional Eucledian Distance in Python"}
{"in": "import smtplib<nl><nl>def sendmail(sender, recipient, subject, body, server=\"localhost\"):<nl><tab>\"Sends an e-mail to the specified recipient.\"<nl><nl><tab>body = \"<html><head></head><body><pre>\" + body + \"</pre></body></html>\"<nl><nl><tab>headers = [\"From: \" + sender,<nl><tab><tab><tab>   \"Subject: \" + subject,<nl><tab><tab><tab>   \"To: \" + recipient,<nl><tab><tab><tab>   \"MIME-Version: 1.0\",<nl><tab><tab><tab>   \"Content-Type: text/html\"]<nl><tab>headers = \"\\r<nl>\".join(headers)<nl><nl><tab>session = smtplib.SMTP(server)<nl><tab>session.sendmail(sender, recipient, headers + \"\\r<nl>\\r<nl>\" + body)<tab><tab><tab><tab><nl><tab>session.quit()", "out": "Pythonを使用してgmailから電子メールを送信する", "out_en": "Sending email from gmail using Python"}
{"in": "for i, (word, frequency) in enumerate(top_words, start=1):<nl><tab>print(\"%s %d %d\" % (word, i, frequency))", "out": "単語のランク番号を印刷するにはどうすればいいですか?", "out_en": "How to print out the rank number of a word?"}
{"in": "import matplotlib<nl>matplotlib.use('TKAgg')", "out": "Mac OS Xでキーボードを使用してpyplot図形を閉じる", "out_en": "Close pyplot figure using the keyboard on Mac OS X"}
{"in": "#!/usr/bin/env python<nl># -*- coding: utf-8 -*-<nl><nl><nl>import cherrypy<nl><nl><nl>config = {<nl>  'global' : {<nl><tab>'server.socket_host' : '127.0.0.1',<nl><tab>'server.socket_port' : 8080,<nl><tab>'server.thread_pool' : 4<nl>  }<nl>}<nl><nl><nl>class App:<nl><nl>  @cherrypy.expose<nl>  def default(self, *args, **kwargs):<nl><tab>return u'It is me again at {0} with {1}'.format(args, kwargs)<nl><nl><nl>if __name__ == '__main__':<nl>  cherrypy.quickstart(App(), '/', config)", "out": "チェリーピーキャッチオールルート", "out_en": "cherrypy catch all route"}
{"in": "logging.info('date={}'.format(date))", "out": "Python:Logging TypeError:文字列のフォーマット中に一部の引数が変換されませんでした", "out_en": "Python: Logging TypeError: not all arguments converted during string formatting"}
{"in": "w = Canvas(root)<nl>w.pack()<nl>w.create_image(0, 0, image=photo, anchor=\"nw\")", "out": "Python、タプルインデックスが範囲外です", "out_en": "Python, tuple index out of range"}
{"in": "def get_detail(self, slug):<nl><tab>qr = v1_api.canonical_resource_for('question')<nl><tab>try:<nl><tab><tab>question = qr.cached_obj_get(slug=slug)<nl><tab>except Question.DoesNotExist:<nl><tab><tab>raise Http404<nl><nl><tab>bundle = qr.full_dehydrate(qr.build_bundle(obj=question))<nl><nl><tab># create response<nl><tab>desired_format = qr.determine_format(self.request)<nl><tab>serialized = qr.serialize(self.request, bundle, desired_format)<nl><tab>return serialized", "out": "Tastypie建物canonical_resource_for('object')からのデータバンドル", "out_en": "Tastypie building data bundle from canonical_resource_for('object')"}
{"in": "class LogWaitLogInOrder(pipeline.Pipeline):<nl><nl>  def run(self, message1, message2, delay):<nl><tab>with pipeline.InOrder():<nl><tab>  yield LogMessage(message1)<nl><tab>  yield Delay(seconds=delay)<nl><tab>  yield LogMessage(message2)<nl><nl><tab>yield LogMessage('This would happen immediately on run')", "out": "Google App Engine Task Queuesを使用してタスクを(FIFO)順に実行する方法", "out_en": "How to execute tasks in (FIFO) order using Google App Engine Task Queues?"}
{"in": "import pylab<nl>import matplotlib.colors<nl>import numpy<nl><nl>im = pylab.imread('lena.png').sum(axis=2) # make grayscale<nl>pylab.imshow(im, cmap=pylab.cm.gray)<nl>pylab.title('orig')<nl>imvals = numpy.sort(im.flatten())<nl>lo = imvals[0]<nl>hi = imvals[-1]<nl>steps = (imvals[::len(imvals)/256] - lo) / (hi - lo)<nl>num_steps = float(len(steps))<nl>interps = [(s, idx/num_steps, idx/num_steps) for idx, s in enumerate(steps)]<nl>interps.append((1, 1, 1))<nl>cdict = {'red' : interps,<nl><tab><tab> 'green' : interps,<nl><tab><tab> 'blue' : interps}<nl>histeq_cmap = matplotlib.colors.LinearSegmentedColormap('HistEq', cdict)<nl>pylab.figure()<nl>pylab.imshow(im, cmap=histeq_cmap)<nl>pylab.title('histeq')<nl>pylab.show()", "out": "matplotlibカラーテーブルのヒストグラム均等化", "out_en": "Histogram Equalization of matplotlib color tables"}
{"in": "def f(x):<nl><tab>return x+1<nl><nl>var1 = 5<nl>var1 = f(var1)<nl># var1 is now 6", "out": "python:変数を関数と同じ値に設定することはできますか?", "out_en": "python: can i set a variable to equal a function of itself?"}
{"in": "config.add_route('simple_example', '/simple_example')<nl>config.add_route('test', '/test')<nl><nl>@view_config(route_name='test', renderer='templates/main.html')<nl>def test(request):<nl><tab>partial = [\"Custom/test.html\"]<nl><tab>return dict(partial=partial)", "out": "GET要求ディクショナリに「iDisplayStart」キーがありません", "out_en": "No 'iDisplayStart' key in GET request dictionary"}
{"in": "POS_SERVO = struct.pack('<h', int(posicion))", "out": "Python-シリアルポート経由で送信される整数にstruct.packの値を追加する方法", "out_en": "Python-How to add a struct.pack value to an integer that would be sent through the serial port"}
{"in": "from datetime import datetime, timedelta<nl><nl>posts = Post.objects.filter(author=member.user, xyz=xzy_id, pub_date__gte=datetime.now()-timedelta(days=7))", "out": "過去7日間のQuerySetオブジェクトを作成しています", "out_en": "Creating QuerySet object from last 7 days"}
{"in": "class BaseAttrEnforcer(type):<nl><tab>def __init__(cls, name, bases, d):<nl><tab><tab>if 'loglevel' not in d:<nl><tab><tab><tab>raise ValueError(\"Class %s doesn't define loglevel attribute\" % name)<nl><tab><tab>type.__init__(cls, name, bases, d)<nl><nl>class Base(object):<nl><tab>__metaclass__ = BaseAttrEnforcer<nl><tab>loglevel = None<nl><nl>class d1(Base):<nl><tab>logfile = \"d1.log\"<nl><tab>loglevel = \"debug\"<nl><nl>class d2(Base):<nl><tab>logfile = \"d2.log\"<nl><tab>loglevel = \"info\"<nl><nl>class d3(Base):<nl><tab>logfile = \"d3.log\"<nl><tab># I should fail", "out": "Pythonでは、各サブクラスのクラス変数の値が異なる", "out_en": "different values for class variables in each subclass in python"}
{"in": "title_count = Counter(titles).most_common()<nl>for name,count in title_count:<nl><tab>print('{} was found {} times'.format(name, count))", "out": "リストから頻度を抽出しています", "out_en": "Extracting frequency from list"}
{"in": "import urllib<nl>urllib.urlretrieve(\"http://www.example.com/songs/mp3.mp3\", \"/home/download/mp3.mp3\")", "out": "Pythonを使用してファイルをダウンロードする方法", "out_en": "How to Download Files using Python?"}
{"in": "fp = codecs.open('outputfile6.txt', encoding='utf-8')<nl>lines1 = fp.readlines()<nl>fp.close()<nl>fb = codecs.open('outputfile6.txt', 'w')<nl>for j in range(0,len(lines1)):<nl><tab>if j>end:<nl><tab><tab>fb.write(lines1[j].encode('UTF-8'))<nl><nl>fb.close()", "out": "別のファイルからファイルに書き込み、ファイルから行を削除する", "out_en": "Write to a file from another file and delete line from file"}
{"in": "authors_books = db.Table(<nl><tab>'authors_books',<nl><tab>db.Column('id', UUID(as_uuid=True), primary_key=True, default=lambda: uuid.uuid4().hex),<nl><tab>db.Column('author_id', UUID(as_uuid=True), db.ForeignKey('authors.id')),<nl><tab>db.Column('book_id', UUID(as_uuid=True), db.ForeignKey('books.id')),<nl>)", "out": "フラスコ-Sqlalchemy多対多リレーションシップのセカンダリテーブルのプライマリキー", "out_en": "Flask-Sqlalchemy, Primary key for secondary table in many-to-many relationship"}
{"in": "from sqlalchemy.sql import between<nl>import datetime<nl># [all other relevant imports]<nl><nl>td = datetime.timedelta(seconds=2)<nl>t1_entry = session.query(table_1).filter(table_1.name == 'the_name').first()<nl>if t1_entry is not None:<nl> tmin = t1_entry.date - td<nl> tmax = t1_entry.date + td<nl> t2_entry = session.query(table_2).filter(between(table_2.date, tmin, tmax)).first()<nl> return (t1_entry, t2_entry)<nl>return None", "out": "SQLAlchemyを使用して、2秒以内にオブジェクトをフィルタ処理する", "out_en": "Filter objects within two seconds of one another using SQLAlchemy"}
{"in": "import base64<nl>import numpy as np<nl><nl>t = np.arange(25, dtype=np.float64)<nl>s = base64.b64encode(t)<nl>r = base64.decodestring(s)<nl>q = np.frombuffer(r, dtype=np.float64)<nl><nl>print(np.allclose(q, t))<nl># True", "out": "Numpy Arrayからbase64へ、そしてNumpy Arrayに戻る-Python", "out_en": "Numpy Array to base64 and back to Numpy Array - Python"}
{"in": "import random<nl><nl>def shuffled(seq):<nl>  copy = list(seq)<nl>  random.shuffle(copy)<nl>  return copy<nl><nl>def rand_repeat(seq):<nl>  while True:<nl><tab>for el in shuffled(seq):<nl><tab>  yield el<nl><nl>list1 = ['tom', 'mary', 'frank', 'joe', 'john', 'barry']<nl>list2 = [1, 2, 3, 4]<nl><nl>print zip(shuffled(list1), rand_repeat(list2))", "out": "forループの2つのリストをランダム化する", "out_en": "Randomize 2 lists for a for loop"}
{"in": "def print_message(message):<nl><tab>print \"<nl>\"<nl><tab>print \"-\"*10<nl><tab>print message<nl><tab>print \"-\"*10<nl><tab>print \"<nl>\"<nl><nl>print_message('This is a test of the %s system' % codes[0])<nl>print_message('This is not a test of the %s system and all is good'% codes[1])", "out": "Pythonでは、一連のコマンドを1つの変数に割り当てるにはどうすればいいですか?", "out_en": "In python how do I assign a series of commands to one variable?"}
{"in": "for line in infline:<nl><tab> #re.sub(\"pattern\",\"replacement\", \"string\")<nl><tab> line =re.sub(r\"([a-zA-Z]+:[0-9\\.]+)\",r\"\\1 STRING\", line)<nl><tab> print line", "out": "Pythonで複数桁のワイルドカードを使用して、さまざまなパターンを使用して文字列を解析するにはどうすればよいでしょうか。", "out_en": "How can you employ multi-digit wildcards in python to parse a string using varying patterns?"}
{"in": "def memsetObject(bufferObject):<nl><tab>\"Note, dangerous\"<nl><tab>import ctypes<nl><tab>data = ctypes.POINTER(ctypes.c_char)()<nl><tab>size = ctypes.c_int()  # Note, int only valid for python 2.5<nl><tab>ctypes.pythonapi.PyObject_AsCharBuffer(ctypes.py_object(bufferObject), ctypes.pointer(data), ctypes.pointer(size))<nl><tab>ctypes.memset(data, 0, size.value)<nl><nl>testObject = \"sneakyctypes\"<nl>memsetObject(testObject)<nl>print repr(testObject)<nl># '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "out": "Pythonバッファオブジェクトを使用してmemsetを実行する方法", "out_en": "How to do a memset with Python buffer object?"}
{"in": "L = [(x, y[0]) for x, y in L]", "out": "Pythonでのリストの変更", "out_en": "List Changing In Python"}
{"in": "from mod_python import Cookie<nl>ID = Cookie.get_cookie(req, 'ID')<nl>if ID:<nl><tab>ID.expires = time.time() + 60*120<nl><tab>Cookie.add_cookie(req, ID)<nl><tab>ID = ID.value<nl>else:<nl><tab>ID = None", "out": "postデータの設定Python Apache", "out_en": "set post data python apache"}
{"in": "print(\"UDP target IP:\", UDP_IP)<nl>print(\"UDP target port:\", UDP_PORT)<nl>print(\"message:\", MESSAGE)<nl><nl>sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP<nl>sock.sendto(bytes(MESSAGE, \"utf-8\"), (UDP_IP, UDP_PORT))", "out": "PythonがUDPパケットを送信する", "out_en": "Python send UDP packet"}
{"in": "url.split('/')[-1]", "out": "URL-pythonの一部を抽出します", "out_en": "Extract a part of URL - python"}
{"in": "state_obj = State.objects.get(name=\"Alaska\")<nl>province_obj = state_obj.provinces({\"name\": \"Juneau\"})<nl>for city in province_obj.cities:<nl><tab>if city.name == \"Test_City\" and city.population == 10000:<nl><tab><tab>province_obj.cities.remove(city)", "out": "mongoengineにある文書の別の埋め込み文書から埋め込み文書の項目を削除する方法", "out_en": "How to remove an item of embedded document in another embedded document of a document in mongoengine"}
{"in": "#!/usr/bin/env python<nl><nl>import re<nl><nl># uncomment/comment for test with a real file ...<nl># header = open('mycfile.c', 'r').read()<nl>header = \"\"\"<nl><nl>#if 0<nl><tab>whatever(necessary)<nl><tab>and maybe more<nl><nl>#endif<nl><nl>/* <nl> * This is an original style comment<nl> *<nl> */<nl><nl>int main (int argc, char const *argv[])<nl>{<nl><tab>/* code */<nl><tab>return 0;<nl>}<nl><nl>\"\"\"<nl><nl>p_macro = re.compile(\"#if.*?#endif\", re.DOTALL)<nl>p_comment = re.compile(\"/\\*.*?\\*/\", re.DOTALL)<nl><nl># Example ...<nl># print re.sub(p_macro, '', header)<nl># print re.sub(p_comment, '', header)", "out": "特定のプリプロセッサ指令とコメントをCヘッダファイルから自動的に削除する方法は?", "out_en": "How to automatically remove certain preprocessors directives and comments from a C header-file?"}
{"in": "data = list(Data.objects.all().values('deviceId','payload'))", "out": "jsonオブジェクトへのDjango JSONストリング", "out_en": "Django JSON string to json object"}
{"in": "class GuildMiddleware(object):<nl><tab>def process_request(self, request):<nl><tab><tab>request.G = figure_out_what_G_is()<nl><tab><tab>return None", "out": "コンテキスト変数がカスタムコンテキストプロセッサ定義内のビューにすでに設定されているかどうかを確認することはできますか?", "out_en": "Is it possible to check whether a context variable is already set in a view within a custom context processor definition?"}
{"in": "module_name = 'a.foo'<nl>module = __import__(module_name, globals(), locals(), ['*'])", "out": "django-変数が変更されたときに別のモジュールをインポートする", "out_en": "django - import different module when variable change"}
{"in": "import csv<nl><nl>from itertools import chain<nl><nl>reader = csv.DictReader(f, delimiter='\\x01', lineterminator=\"\\x02\")<nl>my_dict_of_values = {}  # whatever goes here<nl><nl>for line in chain(reader, my_dict_of_values):<nl><tab>do_something(line)", "out": "2つの異なるIterableオブジェクトを繰り返し処理する方法", "out_en": "How to iterate over two different iterable objects"}
{"in": "import requests<nl>import re<nl><nl>UTORRENT_URL = 'http://%s:%s/gui/' % ('192.168.1.80', '55655')<nl>UTORRENT_URL_TOKEN = '%stoken.html' % UTORRENT_URL<nl>REGEX_UTORRENT_TOKEN = r'<div[^>]*id=[\\\"\\']token[\\\"\\'][^>]*>([^<]*)</div>'<nl><nl>auth = requests.auth.HTTPBasicAuth('x', 'x')<nl>r = requests.get(UTORRENT_URL_TOKEN, auth=auth)<nl>token = re.search(REGEX_UTORRENT_TOKEN, r.text).group(1)<nl>guid = r.cookies['GUID']<nl>cookies = dict(GUID = guid)<nl><nl>params = {'action':'add-file','token': token}<nl>files = {'torrent_file': open('C:\\\\x.torrent', 'rb')}<nl>r = requests.post(url=UTORRENT_URL, auth=auth, cookies=cookies, params=params, files=files)", "out": "Web APIを使用したtorrentの追加", "out_en": "Add torrent with web api"}
{"in": "import mechanize<nl><nl>class HeadRequest(mechanize.Request):<nl><tab>def get_method(self):<nl><tab><tab>return \"HEAD\"<nl><nl>request = HeadRequest(\"http://www.example.com/\")<nl>response = mechanize.urlopen(request)<nl><nl>print response.info()", "out": "mechanizeライブラリでHEAD要求を実行するにはどうすればよいですか。", "out_en": "How can I perform a HEAD request with the mechanize library?"}
{"in": "from PIL import Image<nl>import StringIO<nl>import binascii<nl><nl># In your case, 's' will be the string from the field<nl># in the database.<nl>s = open(\"chenchi.txt\").read()<nl><nl># chop off the '0x' at the front.<nl>s = s[2:] <nl><nl># Decode it to binary.<nl>binary = binascii.unhexlify(s)<nl><nl># Wrap the bytes in a memory stream that can be read like a file.<nl>bytes = StringIO.StringIO(binary)<nl><nl># Use pillow to read the memory stream into an image (it autodetects the format).<nl>im = Image.open(bytes)<nl><nl># And show it. Or you could .save() it.<nl>im.show()", "out": "Pythonを使用して、イメージデータタイプをWindows SQL Serverからイメージに変換する方法", "out_en": "How to convert image data type from windows sql server to image using python?"}
{"in": "from subprocess import PIPE<nl>import subprocess<nl>pro = subprocess.Popen(\"ifconfig\", stdout=PIPE, stderr=PIPE)<nl>data = pro.communicate()[0].split()<nl>for line in data:<nl><tab>print \"THIS IS A LINE\"<nl><tab>print line<nl><tab>print \"**************\"", "out": "Popenやその他のシステムコマンドで、文字列ではなくリストとして出力する必要があります。", "out_en": "Need to get output as lists rather than strings in Popen or any other system commands"}
{"in": "x = [1,2,3,4,5,6]<nl>restart = True<nl>while restart:<nl><tab>for i in x:<nl><tab><tab># add any exit condition!<nl><tab><tab># if foo == bar:<nl><tab><tab>#   restart = False<nl><tab><tab>#   break<nl><tab><tab>if i == 4:<nl><tab><tab>   break<nl><tab><tab>else:<nl><tab><tab><tab>print i", "out": "Pythonで「for」ループを再起動する方法", "out_en": "how to restart \"for\" loop in python ?"}
{"in": "#Django<nl>from django.contrib.auth.models import User<nl>from django.conf.urls import url<nl><nl>#Tasty<nl>from tastypie.resources import ModelResource<nl><nl>class UserResource(ModelResource):<nl><tab>class Meta:<nl><tab><tab>queryset = User.objects.all()<nl><tab><tab>resource_name = 'users'<nl><nl><tab><tab>#Disallow list operations<nl><tab><tab>list_allowed_methods = []<nl><tab><tab>detail_allowed_methods = ['get', 'put', 'patch']<nl><nl><tab><tab>#Exclude some fields<nl><tab><tab>excludes = ('first_name', 'is_active', 'is_staff', 'is_superuser', 'last_name', 'password',)<nl><nl><tab>#Apply filter for the requesting user<nl><tab>def apply_authorization_limits(self, request, object_list):<nl><tab><tab>return object_list.filter(pk=request.user.pk)<nl><nl><tab>#Override urls such that GET:users/ is actually the user detail endpoint<nl><tab>def override_urls(self):<nl><tab><tab>return [<nl><tab><tab><tab>url(r\"^(?P<resource_name>%s)/$\" % self._meta.resource_name, self.wrap_view('dispatch_detail'), name=\"api_dispatch_detail\"),<nl><tab><tab>]", "out": "ジャンゴ・Tastypie-オブジェクト詳細のみを持つリソース", "out_en": "Django Tastypie - Resource with object details only"}
{"in": "some_list = [l + [10, 11] for l in some_list]", "out": "Pythonでリスト内のリストを拡張する方法は?", "out_en": "How do I extend a list within a list in Python?"}
{"in": "from collections import defaultdict<nl><nl>d = defaultdict(list)<nl>for key, value in yourlist:<nl><tab>d[key].append(value)<nl><nl>result = [[key] + value for key, value in d.items()]", "out": "キー/値に基づいてtouplesをリストにグループ化する(Python)", "out_en": "Grouping touples in a list based on key/value (python)"}
{"in": "ContactDetails.objects.filter(server__user=request.user)", "out": "特定のユーザフィールドを持つすべての参照オブジェクトを含むquerysetを取得するにはどうすればよいですか。", "out_en": "How do I get queryset containing all referenced objects with a specific user field?"}
{"in": "%-140.140s % some_text", "out": "テキストの整列、Python", "out_en": "text aligning, python"}
{"in": "# Retrieve tasks<nl># Reference: http://docs.celeryproject.org/en/latest/reference/celery.events.state.html<nl>query = celery.events.state.tasks_by_type(your_task_name)<nl><nl># Kill tasks<nl># Reference: http://docs.celeryproject.org/en/latest/userguide/workers.html#revoking-tasks<nl>for uuid, task in query:<nl><tab>celery.control.revoke(uuid, terminate=True)", "out": "Celeryタスクをタスク名別に検査して取り消す方法", "out_en": "How to inspect and cancel Celery tasks by task name"}
{"in": "conn = MySQLdb.connect(host=\"1.2.3.4\", port=1234, user=\"root\", passwd=\"x\", db=\"test\")<nl><nl>for j in range(10):<nl><tab>try:<nl><tab><tab>for i in range(10):<nl><tab><tab><tab>cur = conn.cursor()<nl><tab><tab><tab>query = \"DELETE FROM SomeTable WHERE ID = %d\" % i<nl><tab><tab><tab>cur.execute(query)<nl><tab><tab><tab>cur.close()<nl><tab><tab>conn.commit()<nl><tab>except Exception:<nl><tab><tab>conn.rollback()<nl><nl>conn.close()", "out": "接続ごとに複数のトランザクションを使用するMySQLdb", "out_en": "MySQLdb with multiple transaction per connection"}
{"in": "import scipy, pylab<nl>names = ['Alice', 'Bob', 'Carol', 'David']<nl>interests = [['Football', 'Swimming'], ['Swimming', 'Jooga', 'Jogging'], <nl><tab><tab><tab> ['Cycling', 'Football'], ['Football', 'Tennis', 'Cycling']]<nl>allinterests = list(set(reduce(lambda x,y:x+y, interests)))<nl>X = scipy.zeros((len(interests), len(allinterests)))<nl>for i, indinterests in enumerate(interests):<nl><tab>for x in indinterests:<nl><tab><tab>X[i, allinterests.index(x)] = 1<nl>pylab.matshow(X, interpolation='nearest', cmap=pylab.cm.gray_r)<nl>pylab.show()<nl>pylab.yticks(range(len(names)), names)<nl>pylab.ylim([len(names)-0.5, -0.5])<nl>pylab.xticks(range(len(allinterests)), allinterests)<nl>pylab.savefig('interests.png')", "out": "多次元データのプロット", "out_en": "Plot multidimensional data"}
{"in": "text2=corpus<nl>text4=nltk.word_tokenize(text2)<nl>tags=nltk.pos_tag(text4)<nl>counter2={}<nl>for a,b in tags:<nl><tab>counter2[b] = counter2.get(b,0)+1<nl>list5=sorted([(freq,word) for word, freq in counter2.items()], reverse=True)[:3]<nl>print [word for freq,word in list5]", "out": "最も一般的なPOSのリストでは結果が意味をなさない", "out_en": "Outcome doesn't make sense for list of most common POS"}
{"in": "s = \"Some ABC text followed by XYZ followed by multiple ABC, more ABC, more ABC\"<nl><nl>pattern = re.compile(r'(?<=XYZ)(.*?)ABC')<nl>while pattern.search(s):<nl>   s = pattern.sub(r'\\1REPLACED', s)<nl><nl>print s", "out": "文字列内の任意の場所でXYZの後にあるABCを検索するための正規表現", "out_en": "Regex for matching any occurrence of ABC following XYZ anywhere in the string "}
{"in": "def main():<nl><tab>phrase = input(\"Enter a phrase: \")<nl><tab>print(\"Number of characters: \",len(phrase))<nl><tab>count = wordCount(phrase)<nl><tab>average(phrase,count)<nl><tab>freqWords(phrase)<nl><nl>def wordCount(phrase):<nl><tab>words = phrase.split()<nl><tab>wordCount = len(words)<nl><tab>print(\"Number of words: \",wordCount)<nl><tab>return wordCount<nl><nl>def average(phrase, wordCount):<nl><tab>avg = len(phrase)/wordCount<nl><tab>print(\"The average word length: %.01f\" % avg)<nl><nl>def freqWords(phrase):<nl><tab>freqLetter = phrase[0]<nl><tab>max = phrase.count(phrase[0])<nl><tab>for char in phrase:<nl><tab><tab>if char is not \" \":<nl><tab><tab><tab>if phrase.count(char) > max:<nl><tab><tab><tab><tab>freqLetter = char<nl><tab><tab><tab><tab>max = phrase.count(char)<nl><nl><tab>print(\"The most frequent letter: \", freqLetter)<nl><nl>main()", "out": "定義へのパラメータの割り当てについてヘルプが必要です", "out_en": "Need help assigning parameters to my definitions"}
{"in": "source = \"\"\"<nl>class test:<nl><tab>class inner_class:<nl><tab><tab>pass<nl><tab>pass<nl><nl>class test2:<nl><tab>pass<nl>\"\"\"<nl><nl>import ast<nl>p = ast.parse(source)<nl>classes = [node.name for node in ast.walk(p) if isinstance(node, ast.ClassDef)]<nl># ['test', 'test2', 'inner_class']", "out": "ファイル内のすべてのクラス名のリストをPythonで検索する方法は?", "out_en": "How to find the list of all the class name in a file in python?"}
{"in": "import os.path<nl>with open('idfile') as fin:<nl><tab> header = next(fin) #read the `#ID` comment header line.  Don't use it.<nl><tab> for line in fin:<nl><tab><tab> fname = 'datafileID{0}.csv'.format(line.strip())<nl><tab><tab> if not os.path.exists(fname):<nl><tab><tab><tab> print fname", "out": "すべてのファイルが存在することを確認する", "out_en": "Checking That All Files Are Present"}
{"in": "# Import required alphabet<nl>from Bio.Alphabet import IUPAC<nl><nl># Pass imported alphabet as an argument for `SeqIO.parse`:<nl>records = list(SeqIO.parse(handle, 'fasta', IUPAC.extended_protein))", "out": "BioPython:アミノ酸のalphlabetを", "out_en": "BioPython: How to convert the amino acid alphlabet to"}
{"in": "size = 10<nl>maxlen = len(str(size * size))<nl>m = size * 2 - 1<nl>matrix = [[' ' * maxlen] * m for _ in range(m)]<nl><nl>for n in range(size * size):<nl><tab>r = n // size<nl><tab>c = n % size<nl><tab>matrix[c + r][size - r - 1 + c] = '{0:{1}}'.format(n + 1, maxlen)<nl><nl>print '<nl>'.join(''.join(row) for row in matrix)", "out": "数字をひし形で印刷する", "out_en": "Printing numbers in a diamond shape"}
{"in": "def index():  <nl><tab>return \"Python works!\"<nl><nl>def command(command):  <nl><tab>return \"this is a command %s!\" %command", "out": "PythonがApacheからURLを取得する", "out_en": "Python get URL from Apache"}
{"in": "with open(inpf, \"r\") as ifile:<nl><tab>for line in ifile:<nl><tab><tab>if line.startswith(\"lattice parameters\"):<nl><tab><tab><tab>print(next(ifile, '').strip())", "out": "Pythonでマッチした行の次の行を読み込む", "out_en": "read next line after a matching line in python"}
{"in": "def strip_unwanted(line):<nl><tab>title = str(line['title']).replace(' ', '-').replace(\"??\", \"\")<nl><tab>title = ''.join((c for c in unicodedata.normalize('NFD', s) if unicodedata.category(c) != 'Mn'))<nl><tab>line['title'] = title<nl><tab>return line<nl><nl>with open(\"output.csv\", encoding = \"utf8\") as input:<nl><tab>dic_entries = csv.DictReader(input)<nl><tab># use the 'map' function<nl><tab>new_entries = map(strip_unwanted, dic_entries)<nl><nl><tab>with open('some.csv', 'wb') as output:<nl><tab><tab>writer = csv.DictWriter(output)<nl><tab><tab>writer.writerows(new_entries)", "out": "Pythonでcsvファイルの列を読み込む", "out_en": "Reading columns of a csv file with python"}
{"in": "def unanimous(it):<nl>  it1, it2 = itertools.tee(it)<nl>  return all(it1) or not any(it2)", "out": "Pythonのチェック方法:すべての要素がFalseと評価されるか-OR-すべての要素がTrueと評価される", "out_en": "Pythonic way to check if: all elements evaluate to False -OR- all elements evaluate to True"}
{"in": "from collections import Counter<nl>[x*c for x,c in Counter([1, 2, 1, 3, 3]).items()]", "out": "Python:リスト内の類似値の合計", "out_en": "python: sum similar values in list"}
{"in": "import sys<nl>import tweepy<nl><nl>consumer_key=\"\"<nl>consumer_secret=\"\"<nl>access_key=\"\"<nl>access_secret=\"\"<nl><nl>auth = tweepy.OAuthHandler(consumer_key, consumer_secret)<nl>auth.set_access_token(access_key, access_secret)<nl>api = tweepy.API(auth)<nl><nl><nl>class CustomStreamListener(tweepy.StreamListener):<nl><tab>def on_status(self, status):<nl><tab><tab>if 'manchester united' in status.text.lower():<nl><tab><tab><tab>print status.text<nl><nl><tab>def on_error(self, status_code):<nl><tab><tab>print >> sys.stderr, 'Encountered error with status code:', status_code<nl><tab><tab>return True # Don't kill the stream<nl><nl><tab>def on_timeout(self):<nl><tab><tab>print >> sys.stderr, 'Timeout...'<nl><tab><tab>return True # Don't kill the stream<nl><nl>sapi = tweepy.streaming.Stream(auth, CustomStreamListener())<tab><nl>sapi.filter(locations=[-6.38,49.87,1.77,55.81])", "out": "tweepyモジュールに位置フィルターを追加する方法", "out_en": "How to add a location filter to tweepy module"}
{"in": "cursor.executemany(\"insert into table (var1,var2,var3) values (%s, %s, %s)\", [list1,list2,list3])", "out": "pymysql(Python)を使用してMySQLに複数のリストをインポートする", "out_en": "Import multiple lists in MySQL using pymysql (Python)"}
{"in": "os.system(\"screencapture screen.png\")", "out": "Mac OS XでPythonのスクリーンショットを撮る", "out_en": "Take screenshot in Python on Mac OS X"}
{"in": "import pandas as pd<nl>data = [('a', 'b', 'c'), ('d', 'e', 'f')]<nl>df = pd.DataFrame(data)<nl>df.to_csv('test.csv', index=False, header=False)", "out": "PythonでリストのリストをCSVファイルに書き込むには?", "out_en": "How to write list of lists to CSV file Python?"}
{"in": "admin.py<nl>class PermissionInline(admin.TabularInline):<nl><tab>form = PermissionForm<nl><tab>model = Permission<nl><tab>extra = 3<nl><nl>forms.py<nl>class PermissionForm(forms.ModelForm):<nl><tab>class Meta:<nl><tab><tab>model = Permission<nl><nl><tab>def clean(self):<nl><tab><tab>cleaned_data = self.cleaned_data<nl><tab><tab>user = cleaned_data['user']<nl><tab><tab>role = cleaned_data['role']<nl><tab><tab>if role.id != 1:<nl><tab><tab><tab>folder = cleaned_data['application'].folder<nl><tab><tab><tab>if len(filter(lambda x:x in user.profile.company.all(),folder.company.all())) > 0: # this is an intersection<nl><tab><tab><tab><tab>raise forms.ValidationError(\"One of the users of this Application works for one of the Repository's organisations!\")<nl><tab><tab>return cleaned_data", "out": "Models.pyに保存する前のManyToManyFieldの検証", "out_en": "Validation on ManyToManyField before Save in Models.py"}
{"in": "from django.db import IntegrityError<nl><nl>class Property(models.Model):<nl><tab>owner = models.ForeignKey(Owner)<nl><nl><tab>def save(self, *args, **kwargs):<nl><tab><tab>if self.owner.type == \"Individual\":<nl><tab><tab><tab>if Property.objects.filter(owner=self.owner).exists():<nl><tab><tab><tab><tab>raise IntegrityError<nl><tab><tab>super(Property, self).save(*args, **kwargs)", "out": "Djangoで「One or Many\"関係をモデル化するには?", "out_en": "How to model \"One or Many\" relationship in Django?"}
{"in": "str = \"WooHoo\"   <nl>str = str[:-len(str)/2]", "out": "文字列の長さを均等にするためのより洗練されたソリューションが必要", "out_en": "Need more elegant solution to even string length"}
{"in": "# -*- coding: utf-8 -*-", "out": "PythonがファイルをUnicode文字で保存しない", "out_en": "Python doesn't save file with unicode characters"}
{"in": "import urllib<nl><nl>print urllib.unquote(\"cmd%5Blogin_user%5D%5Busername%5D=dfdsfdsf&cmd%5Blogin_user%5D%5Bpassword%5D=dsfsdf\")", "out": "クエリ文字列のエスケープを解除する方法", "out_en": "How to unescape a query string"}
{"in": "#!/usr/bin/env python<nl># -*- coding: utf-8 -*-<nl>from xml.dom.minidom import *<nl>xml = parse('1.xml')<nl>name = xml.getElementsByTagName('type_id')<nl>hashes = set()<nl>for node in name:<nl><tab>hashes.add(node.childNodes[0].data.encode('utf-8'))<nl><nl>print \"<nl>\".join(sorted(hashes))", "out": "重複をソートして削除するpython 2 xml", "out_en": "python 2 xml to sort and remove duplicates"}
{"in": "inverse_namelist = {v: k for k, v in namelist.items()}", "out": "get()を使用した辞書からのキーの抽出", "out_en": "Extracting the key from dictionary using get()"}
{"in": "numpy.searchsorted", "out": "numpy配列をより速く検索する方法はありますか?", "out_en": "Is there a faster way to search a numpy array"}
{"in": "self.EIG2D = numpy.vectorize(complex)(EIG2Dtmp[...,0], EIG2Dtmp[...,1])", "out": "netcdf pythonで複雑な引数を渡す方法", "out_en": "How to pass complex arguments in netcdf python"}
{"in": "# Open a file<nl>fo = open(\"foo.txt\", \"a\") # safer than w mode<nl>fo.write( \"Python is a great language.<nl>Yeah its great!!<nl>\");<nl><nl># Close opend file<nl>fo.close()", "out": "Pythonで既存のファイルを開いて編集する方法", "out_en": "How to open and edit an existing file in Python?"}
{"in": "ImagesUrl.objects(src=self.src).update_one(<nl><tab><tab><tab><tab><tab><tab><tab><tab>  upsert=True, <nl><tab><tab><tab><tab><tab><tab><tab><tab>  inc__counter=1, <nl><tab><tab><tab><tab><tab><tab><tab><tab>  set__src=self.src)", "out": "Mongoengine-「新しいアイテムの保存またはカウンタの増分」操作を実行する方法", "out_en": "Mongoengine - How to perform a \"save new item or increment counter\" operation?"}
{"in": "inner_qs = table2.objects.all()<nl>results = table1.objects.exclude(field1__in=inner_qs)", "out": "Djangoで他のテーブルにない値を選択する", "out_en": "Select values which not in another table with Django"}
{"in": "mylist[:4] = szResult.split()", "out": "Python String Listの追加", "out_en": "Python String List additions"}
{"in": "print n[-4::]", "out": "numpy配列pythonからインデックスを抽出する", "out_en": "Extracting indices from numpy array python"}
{"in": "# cols to select<nl>c = rpy2.robjects.IntVector((1,3))<nl># selection from df<nl>mydf.rx(True, c)", "out": "Pythonでrpy2のRデータフレームから列を選択する方法", "out_en": "how to select columns from R dataframe in rpy2 in python?"}
{"in": "from django.db.models import Count<nl>Games.objects.filter(owned=0).annotate(vote=Count('votes')).order_by('-vote')", "out": "Django ORM表の関係", "out_en": "Django ORM Table Relationships"}
{"in": "def createtable(self):<nl><tab> rows = self.tableName.rowCount()<nl><tab> columns = self.tableName.columnCount()<nl><tab> for i in range(rows):<nl><tab><tab> for j in range(columns):<nl><tab><tab><tab> item = self.cell(\"text\")<nl><tab><tab><tab> # execute the line below to every item you need locked<nl><tab><tab><tab> item.setFlags(QtCore.Qt.ItemIsEnabled)<nl><tab><tab><tab> self.ui.tableName.setItem(i, j, item)", "out": "QTableWidgetのセルを読み取り専用にする方法", "out_en": "how to make a cell in a QTableWidget read only?"}
{"in": "import IPython.nbformat.current as nbf<nl>nb = nbf.read(open('test.py', 'r'), 'py')<nl>nbf.write(nb, open('test.ipynb', 'w'), 'ipynb')", "out": "pyファイルのコマンドラインから.ipynbを作成する方法はありますか?", "out_en": "Is there a way to create a .ipynb from a .py file command line?"}
{"in": "list.pop(0)", "out": "whileループのBig-O", "out_en": "Big-O of a while loop"}
{"in": "x = info.split(';',2)[1]", "out": "Pythonで特殊文字の間にある文字列を検索する方法", "out_en": "How to find a string between to special characters in python?"}
{"in": "#circle.circle_computation()<nl>if circle_create == True:<nl><tab>#circle_list[i].draw_circle()<nl><tab>for j in xrange(i):<nl><tab><tab>circle_list[j].draw_circle()", "out": "Pythonでループの下にある反復リストのすべての要素にアクセスする", "out_en": "Accessing all elements in an iterated list under a loop in Python"}
{"in": "ILLEGAL_NTFS_CHARS = \"[<>:/\\\\|?*\\\"]|[\\0-\\31]\"<nl>def __removeIllegalChars(name):<nl><tab># removes characters that are invalid for NTFS<nl><tab>return re.sub(ILLEGAL_NTFS_CHARS, \"\", name)", "out": "Pythonでプラットフォームに互換性のないフォルダ(ファイル)名をチェックする方法", "out_en": "how to check for platform incompatible folder (file) names in python"}
{"in": "fh = open('my.txt','r').read()<nl>unique_chars = set(fh)<nl>len(unique_chars) #for the length.", "out": "テキストファイル内のすべての固有文字を取得する方法は?unix/python", "out_en": "How to get all unique characters in a textfile? unix/python"}
{"in": "ndf = merge(left=df1,right=df1,on=('c','d'),how='inner')<nl>out = ndf[(ndf.a_x == (-1)*ndf.a_y) & (ndf.b_x == (-1)*ndf.b_y)]", "out": "Pandas DataFrameで、特定の列に同じ/反対の符号が付いた同じ値を持つ行を検索する方法", "out_en": "How to find matching rows in Pandas DataFrame with identical values with same/opposite signs in certain columns?"}
{"in": "try:<nl><tab>import locale<nl><tab>locale.setlocale(locale.LC_ALL, 'en_US.utf8')<nl>except Exception:<nl><tab>try:<nl><tab><tab>locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')<nl><tab>except Exception as e:<nl><tab><tab>messages.error(request, 'An error occurred: {0}'.format(e))", "out": "Mac OS Xではサポートされていないロケール設定", "out_en": "django unsupported locale setting on Mac OS X"}
{"in": "urlpatterns = patterns(\"myapp.views\",<nl><tab>url(r'^$', 'index',dict(template_name = 'myapp/index.html'), name = 'home'),<nl><tab>url(r'^kick-ass-chart/$', 'render_chart', name='myapp_render_chart'),<nl>)", "out": "画像をレンダリングするためのURLパターンをdjangoに書き込む", "out_en": "writing urlpattern in django for rendering an image"}
{"in": "dict((k, v.split(',')) for k,v in (x.split(':') for x in s.split('::')))", "out": "文字列からint->listのマップをパースします", "out_en": "Parse a map of int -> list from a string"}
{"in": "s = sum(hours)*3600+sum(minutes)*60+sum(seconds)<nl>return '%d hours %d minutes %d seconds'%( s/3600, (s%3600)/60, s%60)", "out": "時間のリストを合計時間に変換する", "out_en": "converting a list of times to total time"}
{"in": "from A import settings as A_settings", "out": "djangoの同じフォルダにある別のプロジェクトの設定変数にアクセスする方法", "out_en": "how to access settings variable from different project in the same folder in django"}
{"in": "import tkinter as tk<nl><nl>root = tk.Tk()<nl><nl>screen_width = root.winfo_screenwidth()<nl>screen_height = root.winfo_screenheight()", "out": "Tkinterで画面サイズを取得するには?", "out_en": "How to get the screen size in Tkinter?"}
{"in": "lower, upper = dictionary1[key]", "out": "ディクショナリキーに格納されているリスト値にアクセスする方法", "out_en": "how do i access lists values stored in a dictionary key?"}
{"in": "import wave<nl><nl>start_time = 5.43<nl>stop_time = 5.81<nl>time_period = stop_time - start_time<nl>wav = wave.open('test.wav')<nl>time_period_frames = time_period * wav.getnframes()", "out": "時間範囲の間のフレーム数を取得する", "out_en": "to get number of frames between a time range?"}
{"in": "def _total_resources(self, cr, uid, ids, field_name, arg, context):<nl><tab>res = {}<nl><tab>reqrd_bffr = 0<nl><tab>trng_bffr = 0<nl><tab>billable = 0<nl><tab>for id in ids:<nl><tab><tab>res[id] = {<nl><tab><tab><tab>'total_resources' : 0,<nl><tab><tab><tab>'req_buffr':0,<nl><tab><tab><tab>'trng_buffr': 0,<nl><tab><tab><tab>'billable' : 0<nl><tab><tab>}<nl><tab><tab>list_resources = self.browse(cr,uid,ids[0]).resource_all_id<nl><tab><tab>print\"list_resources\",list_resources<nl><tab><tab>for status_chk in list_resources :<nl><tab><tab><tab>status_resrc = status_chk.status_id.name<nl><tab><tab><tab>if status_resrc == 'Required Buffer':<nl><tab><tab><tab><tab>reqrd_bffr=reqrd_bffr + 1<nl><tab><tab><tab>elif status_resrc == 'Training Buffer':<nl><tab><tab><tab><tab>trng_bffr=trng_bffr + 1<nl><tab><tab><tab>elif status_resrc == 'Billable':<nl><tab><tab><tab><tab>billable=billable + 1<nl><tab><tab>total = len(list_resources)<nl><tab><tab>res[id] = {'total_resources' : total,'req_buffr':reqrd_bffr,'trng_buffr': trng_bffr, 'billable' : billable}<nl><tab>return res", "out": "関数は、dictionryを引数として使用します。", "out_en": "in openerp fields.function takes the dictionry as a arugument"}
{"in": "values = {<nl><tab><tab>'order_line_id': order.id,<nl><tab><tab>'product_id': product.id,<nl>}<nl>if field == 0:<nl><tab>values['new_line'] = line.id", "out": "辞書のバリエーションを作成するときに冗長性を排除する方法", "out_en": "How to eliminate redundancy when creating variants of a dictionary"}
{"in": "def copy_function(row):<nl><tab>if row['col2']==1:<nl><tab><tab>return row['col2'] <nl><tab>else: <nl><tab><tab>return row['col1']<nl>df['col3'] = df.apply(copy_function, axis=1)", "out": "数式を使用して値を新しい列にコピーする", "out_en": "Copy over values to new column with formula"}
{"in": "interval = 2<nl>while True:<nl><tab>next_run = time.time() + interval<nl><tab>do_something()<nl><tab>delta = next_run - time.time()<nl><tab>if delta < 0:<nl><tab><tab>skipped(delta/-interval)<nl><tab>else:<nl><tab><tab>time.sleep(delta)", "out": "正確にn秒ごとにループを実行するPythonモジュール", "out_en": "Pythonmodule to make a loop run exactly every n seconds"}
{"in": "user_input = raw_input(\"Please enter a word: \")<nl>ls = [\"a\", \"f\" , \"x\" , \"u\"]<nl>user_list = []<nl>inDict = True<nl><nl>for i in user_input:<nl><tab>if not(i in ls):<nl><tab><tab>inDict = False<nl><tab><tab>break<nl>if(inDict):<tab><nl><tab>user_list.append(user_input)", "out": "チェック後に文字列をリストに追加する", "out_en": "Append a string to a list after checking"}
{"in": "x = np.concatenate((x, new_x))", "out": "空のnumpy配列との連結", "out_en": "Concatenating with empty numpy array"}
{"in": "for k, v in user_actions.iteritems():<nl><tab>print v['notes']", "out": "ネストされた辞書を使用してJSONリクエストをデシリアライズするDjango", "out_en": "Django deserialize JSON request with nested dictionary"}
{"in": "class ContactWizard(SessionWizardView):<nl><tab>template_name = \"invite.html\"<nl><nl><tab>def done(self, form_list, **kwargs):<nl><tab><tab>form_data = process_form_data(form_list, self.request.user)<nl><nl><tab><tab>return render_to_response('invitedone.html', {'form_data': form_data})", "out": "Django:SessionWizardViewでユーザー名を要求するにはどうすればいいですか?", "out_en": "Django: how do i request username in SessionWizardView?"}
{"in": "def test_envconfig():<nl><tab> import inspect<nl><tab> for frame, filename, line_num, func, source_code, source_index in inspect.stack():<nl><tab><tab> if 'tests/unittests/capital/' in filename:<nl><tab><tab><tab> print 'The Test env is activated for %s' % (filename)<nl><tab> return \"user\"", "out": "Pythonで呼び出し先内部の呼び出し元の詳細を追跡する方法", "out_en": "How to track the caller details inside callee in python"}
{"in": "def contact_create(request):<nl><tab>if request.method == 'POST':<nl><tab><tab>form = ContactForm(request.POST)<nl><tab><tab>if form.is_valid():<nl><tab><tab><tab>new_contact = form.save()<nl><tab><tab><tab>return HttpResponseRedirect(reverse(contact_details, args=(new_contact.pk,)))<nl><tab>else:<nl><tab><tab>form = ContactForm()", "out": "DjangoにModelFormを保存した後の主キーの取得", "out_en": "Get Primary Key after Saving a ModelForm in Django"}
{"in": "import bpy, mathutils<nl><nl>plane = bpy.data.objects[\"Plane\"]<nl>previous = None<nl><nl>for poly in plane.data.polygons:<nl>  center = mathutils.Vector(poly.center)<nl>  if previous:<nl><tab>previous -= center<nl><tab>#print length and center<nl><tab>print(previous.length, center)<nl>  previous = center", "out": "ナビゲーションメッシュの長さを取得する方法", "out_en": "How get length of Navigation Mesh?"}
{"in": "import random<nl>import matplotlib.pyplot as plt<nl>import networkx as nx<nl>G=nx.Graph()<nl>G.add_edges_from([('a','b'),('b','d'),('c','e'),('b','e')])<nl>pos=nx.spring_layout(G)<nl>nodes=G.nodes()<nl>random.shuffle(nodes)<nl>blue=nodes.pop()<nl>nx.draw_networkx_nodes(G,pos,nodelist=[blue],node_color='b')<nl>nx.draw_networkx_nodes(G,pos,nodelist=nodes,node_color='r')<nl>nx.draw_networkx_edges(G,pos)<nl>plt.show()", "out": "スプリングレイアウト+networkxの場合にノードの色を変更する", "out_en": "Change color of nodes when in a spring layout+ networkx"}
{"in": "df[\"DATE\"].irow(0)", "out": "csvファイルから曜日を計算する、csvファイルで1つのフィールドを選択する方法", "out_en": "Calculating day of the week from csv files, how to select one field in csv file"}
{"in": "data_only=True", "out": "Python-openpyxl数式を使用して既存のxlsxに書き込んだ後にxlsxデータを読み込みます", "out_en": "Python - openpyxl read xlsx data after writing on existing xlsx with formula"}
{"in": "column_name='last_login_date'", "out": "DjangoカスタムユーザーフィールドがAbstractBaseUserと衝突する", "out_en": "Django custom user field clashes with AbstractBaseUser"}
{"in": "mylist = []<nl>for i in range(million):<nl><tab>mylist.append(something)<nl>mytup = tuple(mylist)", "out": "Python:Pyscripterの可変サイズの問題", "out_en": "Python : Variable size problems with Pyscripter"}
{"in": "import itertools<nl>def update_dict(A, result): #update vaules to the same set<nl><tab>for k in A:<nl><tab><tab>result[k] = result.get(k, {k}).union(set(A[k]))<nl><tab><tab>tmp = None<nl><tab><tab>for i in result[k]:<nl><tab><tab><tab>tmp = result.get(k, {k}).union(result.get(i, {i}))<nl><tab><tab>result[k] = tmp<nl><tab><tab>for i in result[k]:<nl><tab><tab><tab>result[i] = result.get(i, {i}).union(result.get(k, {k}))<nl><nl>A = {0:('b',), 1:('c',), 2:('c',), 3:('c',)}<nl>B = {'a':(3,), 'b':(0,), 'c':(1,2,3)}<nl>result = dict()<nl>update_dict(A, result)<nl>update_dict(B, result)<nl>update_dict(A, result) #update to fix bugs<nl>update_dict(B, result)<nl><nl>k = sorted([sorted(list(v)) for v in result.values()]) <nl>k = list( k for k, _ in itertools.groupby(k))  #sort and remove dumplicated set<nl><nl>final_result = dict()<nl>for v in k: #merge the result as expected<nl><tab>final_result.update({tuple([i for i in v if isinstance(i, int)]):tuple([i for i in v if not isinstance(i, int)])})<nl>print final_result<nl><nl>#output<nl>{(0,): ('b',), (1, 2, 3): ('a', 'c')}", "out": "マージPythonセットディクショナリ", "out_en": "merge python dictionary of sets"}
{"in": "class A(object):<nl><nl>  def __init__(self):<nl><tab>self.logger = logging.LoggerAdapter(log, {'session_id': random(1024)})<nl><nl>  def process(self):<nl><tab>self.logger.info('hello')", "out": "Python Loggerフィルタに変数を注入することはできますか?", "out_en": "Is it possible to inject a variable into python logger Filter"}
{"in": "command = re.search(\"(\" + re.escape(MyDir) + \")\", body).group(1)", "out": "変数regex python", "out_en": "variable regex python"}
{"in": "pk = open( 'file.txt', 'r' ).readlines() #or 'rb' if there's a need<nl><nl>if len(pk) > 2:<nl><tab>for line in pk[1:-1]:<nl><tab><tab>print line,<nl><tab><tab>#or do anything you like to do with line", "out": "Pythonでファイルから必要なコンテンツを抽出するには?", "out_en": "How to extract necessary content from file in python?"}
{"in": "dict1 = {'imp_local'+str(k):700 for k,val in enumerate(nBottom)}<nl>dict2 = {'imp_global'+str(k):600 for k,val in enumerate(nBottom)}", "out": "ループ内で生成された変数の呼び出し方法", "out_en": "How to call variables generated in loop"}
{"in": "runcall(main, self.argv)", "out": "Python-単純なプログラムをプロファイルしようとしたときに発生するホットショットエラー", "out_en": "Python-Hotshot error trying to profile a simple program"}
{"in": "driver.find_element_by_xpath('//div[contains(@class,\"ui-dialog\") and @aria-describedby=\"dialogContent2\"]//button[@title=\"Close\"]').click()", "out": "Seleniumの汎用ポップアップを閉じる", "out_en": "Closing a generic pop up in Selenium"}
{"in": "here = pickle.load(open(\"1965.pkl\", 'rb'))", "out": "ピクルされたファイルを開く/読み取るときのEOFエラー", "out_en": "EOFError Opening/Reading Pickled File"}
{"in": "print (int(hexlify(corr),16))&0x01", "out": "Pythonでビットマスクを適用する", "out_en": "apply a bit mask in python"}
{"in": "for i in clslist:<nl><tab>if i.str1 == A and i.str2 == B:<nl><tab><tab>i.strlist.append(whatever)", "out": "Pythonの検索でタプルのリストに追加する", "out_en": "add to a list in tuple with search in python"}
{"in": "print 'Word is',<tab> #Notice the trailing comma. This will not print a newline char<nl>faultyPrint()", "out": "戻さない関数からのPythonの出力", "out_en": "Python printing from non returning functions"}
{"in": "from cPickle import dumps<nl>from cookielib import CookieJar<nl>import threading<nl><nl>class MyCookieJar(CookieJar):<nl><tab>def __getstate__(self):<nl><tab><tab>state = self.__dict__.copy()<nl><tab><tab>del state['_cookies_lock']<nl><tab><tab>return state<nl><nl><tab>def __setstate__(self, state):<nl><tab><tab>self.__dict__ = state<nl><tab><tab>self._cookies_lock = threading.RLock()<nl><nl>class Person(object):<nl><tab>def __init__(self, name):<nl><tab><tab>self.name = name<nl><tab><tab>self.cookies = MyCookieJar()<nl><nl>bob = Person(\"bob\")<nl>print dumps(bob)", "out": "CookieJarをピクルする方法", "out_en": "How to pickle a CookieJar?"}
{"in": "os.system(\"7z x install.zip subfolder -y -r -oc:\\\\\\\"Program Files (x86)\\\\\\\"Calibre2\")", "out": "特定のサブフォルダのみを抽出する7 zip", "out_en": "Extracting only a specific subfolder 7zip"}
{"in": "runner = unittest.TextTestRunner(verbosity=2)", "out": "各単体テストの直後に結果を印刷", "out_en": "Print result right after each unit test"}
{"in": "import requests<nl>r = requests.get(\"http://localhost:5000\")  <nl># a flask application there sets two cookies 'first' and 'second'<nl><nl>r.cookies.keys()<nl># returns ['first', 'second']<nl><nl>r.headers['Set-Cookie']<nl># returns 'first=4; Path=/, second=42; Path=/'", "out": "python web-client multipile set-cookieヘッダー、raw set-cookieヘッダーの取得", "out_en": "python web-client multipile set-cookie header, get raw set-cookie header"}
{"in": "basename = os.path.basename(file)<nl>if ext in (\".txt\", \".htm\", \".html\"):<nl><tab>ftp.storlines(\"STOR \" + basename, open(file))<nl>else:<nl><tab>ftp.storbinary(\"STOR \" + basename, open(file, \"rb\"), 1024)", "out": "ftplibを使ってアップロードしようとしてもうまく接続できますが、ある時点で何かを台無しにしてしまいます。", "out_en": "Trying to upload with ftplib, can connect just fine, but I'm messing something up at some point."}
{"in": "levels = np.logspace(0,np.log10(Z.max()), 100 )[30:80]<nl>levels_black = [level for i,level in enumerate(levels) if (i+5) % 10 != 0]<nl>levels_red =  [level for i,level in enumerate(levels) if (i+5) % 10 == 0]<nl><nl>CS2_black = pyplot.contour(X,Y,Z,locator=ticker.LogLocator(), colors='k', levels=levels_black, lw=2,norm=colors.LogNorm(),vmin=1,vmax =Z.max())<nl>CS2_red = pyplot.contour(X,Y,Z,locator=ticker.LogLocator(), colors='r', levels=levels_red, lw=2,norm=colors.LogNorm(),vmin=1,vmax =Z.max())<nl><nl>cbar.add_lines(CS2_red)", "out": "contourplotからの特定の線をカラーバーに追加する", "out_en": "Add certain lines from contourplot in colorbar"}
{"in": "from google.appengine.ext.remote_api import remote_api_stub<nl><nl>def auth_func():<nl>   return ('your_username', 'your_password')<nl><nl>remote_api_stub.ConfigureRemoteApi(None, '/_ah/remote_api', auth_func, 'your-app-id.appspot.com')", "out": "本番のApp Engineアプリからローカルの開発アプリにライブデータを取得するにはどうすればよいのでしょう?", "out_en": "How do I get live data from my production App Engine app to my local dev app?"}
{"in": "numpy.matrix", "out": "C APIでNumPyマトリクスを作成する方法はありますか?", "out_en": "Any way to create a NumPy matrix with C API?"}
{"in": "from Tkinter import *<nl>import sys<nl>master = Tk()<tab><nl>def callback():<nl><tab>master.destroy()<nl><tab>sys.exit()<tab><nl>b = Button(master, text=\"Click to close\", command=callback)<nl>b.pack()<tab><nl>mainloop()", "out": "mac用のスタンドアロンのpyサーバアプリケーションを作成する", "out_en": "create a standalone py server application for mac"}
{"in": "raw = open(filename).read()<nl>docs = []<nl>for raw_doc in raw.split('---'):<nl><tab>try:<nl><tab><tab>docs.append(yaml.load(raw_doc))<nl><tab>except SyntaxError:<nl><tab><tab>docs.append(raw_doc)", "out": "PyYAMLを使用してドキュメントをraw文字列としてyamlにロードする", "out_en": "Loading document as raw string in yaml with PyYAML"}
{"in": "from bs4 import BeautifulSoup<nl><nl>txt = \"\"\"<div name=\"div1\"><nl><tab><tab><li>Test 1</li><nl><tab><tab><li>Test 2</li><nl><tab><tab></div>\"\"\"<nl><nl>def clone(soup, tag):<nl>   newtag = soup.new_tag(tag.name)<nl>   for attr in tag.attrs:<nl><tab>  newtag[attr] = tag[attr]<nl>   return newtag<nl><nl>soup = BeautifulSoup(txt)<nl>tags = soup.find_all(\"li\")<nl>for tag in tags:<nl>   print tag.wrap(clone(soup, tag.parent))", "out": "PythonでBeautifulSoupを使用して、要素とその親のみを取得する", "out_en": "Get an element and its parent ONLY, using BeautifulSoup in Python"}
{"in": "from glob import glob<nl><nl>with open('C:/test/out_file/out_file.txt', 'w') as out_file:<nl><tab>out_file.write('<nl>'.join(glob('C:/test/*.txt')))", "out": "Pythonでファイルのリストを取得する", "out_en": "obtain list of files in python"}
{"in": "import os<nl>import sys<nl><nl>sys.path.append('/home/ubuntu/web/lightea.com/elderlytracking/django_test')<nl>os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"django_test.settings\") # here django_test is a directory within django_test project <nl><nl>from django.core.wsgi import get_wsgi_application<nl>application = get_wsgi_application()", "out": "uwsgiエラー:DEBUGの設定が要求されましたが、設定が構成されていません", "out_en": "uwsgi error : Requested setting DEBUG, but settings are not configured"}
{"in": "from csv import reader<nl>nan_counts = {}<nl>with open('/path/to/file') as file:<nl><tab>file_reader = reader(file)<nl><tab>next(file_reader)  # Skip the first row of headers<nl><tab>for row in file_reader:<nl><tab><tab>year, data = row[1], row[4:]<nl><tab><tab>nan_counts[year] = data.count('NaN') + nan_counts.get(year, 0)", "out": "2つの独立したユニークな列に基づいてNaNの数を計算する", "out_en": "Calculate number of NaN's based on two separate unique columns"}
{"in": "start = 0<nl>calculated_mean = float('inf')<nl>while calculated_mean > set_mean:<nl><tab>energies = []<nl><tab>for i in range(start, start + 1000): <nl><tab><tab>system = moves.move(system, 50, true)<nl><tab><tab>energy = system.energies()<nl><tab><tab>energies.append(energy)<nl><tab><tab>print(\"%d: %s\" % (i, energy))<nl><tab>calculated_mean = sum(energies[-10:]) / 10", "out": "Pythonでのループデータ、反復、および一部の統計計算", "out_en": "for loop data , iteration and some statistic calculations in python"}
{"in": "c = round(((a + b) - abs(a - b)) / 2)", "out": "Pythonでループや分岐なしに2つの数値を比較する", "out_en": "Comparing two numbers without loops or branching in Python"}
{"in": "plt.figure()<nl><nl>CS = plt.contour(X, Y,log_mu,levels = [-7,-8],<nl><tab><tab><tab><tab> colors=('k',),linestyles=('-',),linewidths=(2,))<nl>CSF = plt.contourf(X, Y,log_mu)<nl>plt.clabel(CS, fmt = '%2.1d', colors = 'k', fontsize=14) #contour line labels<nl>CB = plt.colorbar(CSF, shrink=0.8, extend='both')<nl><nl>plt.xscale('log')<nl>plt.yscale('log')<nl><nl>plt.show()", "out": "matplotlibの輪郭線マップで特定のレベルをマークする", "out_en": "Mark a specific level in contour map on matplotlib"}
{"in": "kwargs = {\"childWrapper\": {\"inputFIeld\": \"Example2\"}}<nl>form = ParentForm(**kwargs)", "out": "Flask-wtf:kwargを使用してフィールドの初期値を設定します。", "out_en": "Flask-wtf: Using a kwarg to set the initial value for a field"}
{"in": "profile = list(profile)", "out": "リスト内のモデルオブジェクトのフィールドの値は変更できません", "out_en": "Can't change the values of fields of model objects in lists"}
{"in": "ip=\"192.168.1.1\"<nl>for line in csv_file:<nl><tab>if ip in line:<nl><tab><tab>found = True<nl><tab><tab>break", "out": "Pythonを使用してCSVファイルにすでにデータが存在するかどうかを確認する方法", "out_en": "How to check if an data already present in a CSV file using Python"}
{"in": "def get_values(self, env):<nl><tab>class ValUsers(models.Model):<nl><tab><tab>name = models.TextField(max_length=64)<nl><tab><tab>value = models.TextField(max_length=2048)<nl><tab>ret = EnvUsers.objects.raw(<nl><tab><tab>'SELECT a.id, a.name, v.value '<nl><tab><tab>' FROM Authorization a, Value v ' <nl><tab><tab>' WHERE a.user_root = v.parent '<nl><tab><tab>'<tab>  and a.active = %s '<nl><tab><tab>'<tab>  and v.active = %s '<nl><tab><tab>'<tab>  and v.name = %s ',<nl><tab><tab>[True, True, env]<nl><tab>)<nl><nl><tab>return {u.name: u.value for u in ret}", "out": "ForeignKeyのないDjangoでのSpanモデル", "out_en": "Span models in Django without a ForeignKey"}
{"in": "def _example_id_default():<nl><tab>return HMAC(\"{}\".format(urandom(32).encode('base_64'))).hexdigest()<nl><nl>class ExampleMixin(object):<nl><tab>\"\"\"Mixin for `AnExample`\"\"\"<nl><nl><tab>example_id = Column(String(255), default=_example_id_default)", "out": "sqlalchemyのミックスインをデフォルト値とするスーパー", "out_en": "Super with sqlalchemy mixins for default values"}
{"in": "import csv<nl>with open(\"data.csv\", \"wb\") as f:<nl><tab>csv.writer(f).writerows((k,) + v for k, v in maxDict.iteritems())", "out": "Python:タプル値のディクショナリをcsvファイルに書き込むには?", "out_en": "Python: How to write a dictionary of tuple values to a csv file?"}
{"in": "FILTER_SOURCE_FILES = YES<nl>INPUT_FILTER = \"python path/to/doxypy.py\"", "out": "doxygenがPythonスクリプトの最初の行を無視するようにするにはどうすればよいでしょうか。", "out_en": "How to make doxygen ignore the first line of a Python script?"}
{"in": "from Tkinter import *<nl>import sys<nl><nl>def write():<nl><tab>new_player = e1_var.get() + \" \" + e2_var.get()<nl><tab>with open('stats', 'a') as file:<nl><tab><tab>file.write(\"<nl>\" + new_player + \"<nl>\")<nl><nl><tab>players[new_player] = Label(text=new_player).grid(column=0)<nl><tab>e1_var.set(\"\")<nl><tab>e2_var.set(\"\")<nl><nl>root=Tk()<nl>root.title(\"Basketball Stats\")<nl>l1=Label(text=\"Player\").grid(column=0, row=0)<nl>l2=Label(text=\"Number\").grid(column=0, row=1)<nl><nl>e1_var = StringVar()<nl>e1 = Entry(textvariable=e1_var).grid(column=1, row=0)<nl><nl>e2_var = StringVar()<nl>e2 = Entry(textvariable=e2_var).grid(column=1, row=1)<nl><nl>b1=Button(text=\"Submit\", command=write).grid(column=1, row=3)<nl><nl>players = {}<nl>with open(\"stats\", \"r\") as file:<nl><tab>for line in file.read().split('<nl>'):<nl><tab><tab>players[line] = Label(text=line).grid(column=0)<nl><nl>root.mainloop()", "out": "Tkinterラベルを更新する方法", "out_en": "How to update Tkinter labels?"}
{"in": "import matplotlib.transforms as transforms<nl><nl>fig = plt.figure()<nl>ax = fig.add_subplot(111)<nl><nl>trans = transforms.blended_transform_factory(<nl><tab>ax.transData, ax.transAxes)<nl><nl>ax.plot(range(50))<nl>ax.axvline(20)<nl><nl>ax.text(20, 0.05, 'test', transform=trans, rotation='vertical', ha='right')", "out": "Matplotlib-軸の下部に位置合わせされたラベルを追加", "out_en": "Matplotlib - Add labels aligned to bottom of axis"}
{"in": "for line in fname:<nl><tab>line = re.sub('[\\(\\)\\{\\}\\'\\'\\,<>]','', line)<nl><tab>line = re.sub(r\"(\\.\\d)\\d*_?\\d*\", r\"\\1\", line, 1)<nl><tab>fields = line.rstrip(\"<nl>\").split()<nl><tab>outfile.write('%s  %s  %s  %s  %s  %s<nl>' % (fields[0],fields[1],fields[2],fields[3],fields[4],(fields[5])))", "out": "行の列1からピリオドの後の2番目と残りの数字を削除するにはどうすればいいですか?", "out_en": "How do I remove 2nd and rest digits after a period from column one of lines?"}
{"in": "filtered_clue = filter(lambda x: len(x['number']), clue)", "out": "リスト内のディクショナリから空のセットを削除する(python 2.7)", "out_en": "Remove empty sets from a dict inside a list (python 2.7)"}
{"in": "import pytz<nl>import datetime<nl><nl>fecha_actual_Madrid = pytz.timezone('Europe/Madrid')<tab><nl>logging.info('time is %s', datetime.datetime.now(fecha_actual_Madrid ))", "out": "Google Cloud SQLでの日時[GAE+Python]", "out_en": "Datetime in Google Cloud SQL [GAE + Python]"}
{"in": "import contextlib<nl>@contextlib.contextmanager<nl>def argv_tmp():<nl><tab>tmp = sys.argv<nl><tab>sys.argv = []<nl><tab>try:<nl><tab><tab>yield<nl><tab>finally:<nl><tab><tab>sys.argv = tmp<nl><nl>with argv_tmp():<nl><tab>from ROOT import *", "out": "関数が変数の値を返さずにその値を設定するにはどうすればよいですか。", "out_en": "How can a function set the value of a variable without returning the value of that variable?"}
{"in": "def slicedict(d, s):<nl><tab>return {k:v for k,v in d.iteritems() if k.startswith(s)}", "out": "特定の文字列で始まるキーで辞書をスライスする", "out_en": "Slicing a dictionary by keys that start with a certain string"}
{"in": "import argparse<nl><nl>def do_things(args):<nl><tab>print args<nl><tab># Do your stuff<nl><nl>mainparser = argparse.ArgumentParser()<nl>submainadder = mainparser.add_subparsers(title='subcommands')<nl>parser_ut = submainadder.add_parser('unittest')<nl>parser_ut.set_defaults(func=do_things)<nl><nl>if __name__ == \"__main__\":<nl><tab>stuff = mainparser.parse_args()<nl><tab>stuff.func(stuff)", "out": "特定のサブパーサーをチェックするにはどうすればいいですか。", "out_en": "How do I check for a particular subparser?"}
{"in": "class MyHandler(tornado.web.RequestHandler):<nl><tab>@tornado.web.asynchronous<nl><tab>def get(self):<nl><tab><tab>self._pcb = tornado.ioloop.PeriodicCallback(self._cb, 1000)<nl><tab><tab>self._pcb.start()<nl><nl><tab>def _cb(self):<nl><tab><tab>self.write('Kapooya, Kapooya!')<nl><tab><tab>self.flush()<nl><nl><tab>def on_connection_close(self):<nl><tab><tab>self._pcb.stop()", "out": "数秒に1回、クライアントに変数を返すにはどうすればよいでしょうか。", "out_en": "How to return some variable once in few seconds to client?"}
{"in": "import numpy<nl><nl>def rgba_unpremultiply(data):<nl><tab>a = numpy.fromstring(data, 'B') # Treat the string as an array of bytes<nl><tab>a = a.astype('I') # Cast array of bytes to array of uints, since temporary values needs to be larger than byte<nl><tab>alpha = a[3::4] # Every 4th element starting from index 3<nl><tab>alpha = numpy.where(alpha == 0, 255, alpha) # Don't modify colors where alpha is 0<nl><tab>a[0::4] = a[0::4] * 255 // alpha # Operates on entire slices of the array instead of looping over each element<nl><tab>a[1::4] = a[1::4] * 255 // alpha<nl><tab>a[2::4] = a[2::4] * 255 // alpha<nl><tab>return a.astype('B').tostring() # Cast back to bytes", "out": "Pythonを使用してRGBAデータを効率的に処理する", "out_en": "Process RGBA data efficiently using python?"}
{"in": "setup(console=[{'script':\"process.py\",'uac_info': \"requireAdministrator\"}])", "out": "Python-windows 8でのアクセス拒否エラー", "out_en": "Python - Access denied error on windows 8"}
{"in": "from sqlalchemy import event<nl>@event.listens_for(Person.home_addresses, 'append')<nl>def receive_append(target, value, initiator):<nl><tab># set the address type to home<nl><tab>value.type = 'home'<nl><tab>return value", "out": "SQLAlchemy宣言モデルでのプロパティの自動設定", "out_en": "Automatically setting properties in SQLAlchemy declarative models"}
{"in": "L = ['Chris Terman', 'Tom Brady', 'Eric Grimson', 'Gisele Bundchen']<nl><nl>print sorted(L,key=lambda x:x.split()[-1]) # sorted by last name<nl>['Tom Brady', 'Gisele Bundchen', 'Eric Grimson', 'Chris Terman']<nl><nl>print sorted(L)# sorted first name<nl>['Chris Terman', 'Eric Grimson', 'Gisele Bundchen', 'Tom Brady']", "out": "Pythonで名前のリストをソートする", "out_en": "Sorting a list of names in python"}
{"in": "for i, word in enumerate(z):<nl><tab>if \"-\" not in word:<nl><tab><tab>if word in d.keys():<nl><tab><tab><tab>z[i] = str(d[word])<nl><tab><tab>else:<nl><tab><tab><tab>count = count + 1<nl><tab><tab><tab>d[word] = count<nl><tab><tab><tab>z[i] = str(count)", "out": "Python:文字列内の単語の置き換え", "out_en": "python : replace words in string"}
{"in": "p.drawString(10, 800, \"Name\")<nl>p.drawString(10, 790, \"Address\")<nl>p.drawString(10, 780, \"School\")", "out": "Re portlabでPDFを生成", "out_en": "Generate pdf with reportlab"}
{"in": "df['bins'] = df.groupby(df.hours).density.transform(func)", "out": "グループ化されたパンダのデータフレームで計算された結合または結合の値", "out_en": "join or merge values calculated on grouped pandas dataframe"}
{"in": "class MYREALM_securepage(webapp.RequestHandler):<nl>  def get(self):<nl><tab>  if not 'Authorization' in self.request.headers:<nl><tab><tab>  self.response.headers['WWW-Authenticate'] = 'Basic realm=\"MYREALM\"'<nl><tab><tab>  self.response.set_status(401)<nl><tab><tab>  self.response.out.write(\"Authorization required\")<nl><tab>  else:<nl><tab><tab>  auth = self.request.headers['Authorization']<nl><tab><tab>  (username, password) = base64.b64decode(auth.split(' ')[1]).split(':')<nl><tab><tab>  # Check the username and password, and proceed ...", "out": "Python/WebApp Google App Engine-ヘッダー内のuser/passのテスト", "out_en": "Python/WebApp Google App Engine - testing for user/pass in the headers"}
{"in": "def depth(t):<nl><tab>try:<nl><tab><tab>return 1+max(map(depth,t))<nl><tab>except:<nl><tab><tab>return 0<nl><nl>t = (4, (3, 5, (2, 4, 6, (1, 3, 5, 7))))<nl>print(depth(t)) # 4<nl>t = tuple(tuple(range(k)) for k in range(1,200))<nl>print(depth(t)) # 2", "out": "ネストされたタプルのネストたタプルのネストレベルを簡単に決定する方法", "out_en": "Easy way to determine a nesting level of nested tuples, in Python"}
{"in": "import json<nl><nl>f = open('data/convertcsv.json');<nl><nl>data = json.loads(f.read())<nl><nl>f.close()<nl><nl>for row in data:<nl><tab><tab>print row['sentiment']", "out": "Pythonでjsonファイルからデータをロードする正しい方法", "out_en": "Right way to load data from json file in python"}
{"in": "G={'E': 18.0, 'D': 17.0, 'C': 19.0, 'B': 15.0, 'A': 0}<nl><nl><nl>count = 0<nl>_sum = 0<nl>for key in G:<nl><tab>count += 1<nl><tab>_sum += G[key]<nl><nl>print('this is the mean: ', _sum/count)", "out": "ディクショナリ内の値の平均の検索", "out_en": "Finding mean of a values in a dictionary"}
{"in": "AA[1,2]='K'", "out": "Python:配列のシェイプを変更せずに配列の要素を置き換える", "out_en": "Python: replacing an element in an array without changing array shape"}
{"in": "with open('ProjectEuler11Data.txt') as numbers:<nl><tab>data = numbers.readlines()<nl>lines = [line.split() for line in data]", "out": "Pythonでループを持つリストを作成する", "out_en": "Creating lists with loops in Python"}
{"in": "values = range(10)<nl>random.shuffle(values)<nl><nl>def get_value():<nl><tab>return values.pop()", "out": "Pythonでは、リスト内の一部の数値を除外して、範囲内にランダムな整数を生成する方法はありますか。", "out_en": "In python, how to generate a random integer in a range, excluding some numbers in a list?"}
{"in": "from selenium import webdriver<nl>driver = webdriver.Firefox()<nl>driver.get('http://example.com')<nl>element = driver.find_element_by_class_name(\"yourClassName\") #or find by text or etc<nl>element.click()", "out": "Pythonで動的なWebページをスクレイピングする方法", "out_en": "How to scrape dynamic webpages by Python"}
{"in": "l = ['03:18:45.2345', '03:19:23']<nl>for item in l:<nl><tab>time_format = \"%H:%M:%S.%f\" if '.' in item else \"%H:%M:%S\"<nl><tab>print datetime.datetime.strptime(item, time_format)", "out": "ミリ秒の有無にかかわらず、stringからdatetimeへ", "out_en": "From string to datetime with or without millisecond"}
{"in": "second_longest = sorted(sentence.split(), key=len)[-2]", "out": "Pythonでは、文の中で2番目に長い単語を見つける方法はありますか?", "out_en": "Is there a way to find the second longest word in a sentence in Python?"}
{"in": "all_res = sorted(list(fq) + list(sq), key = lambda x: (x[-1], x[0]))", "out": "Pythonで2つのリストをマージするが、マージ中にソートする", "out_en": "merge two lists in python - but sort them during merge"}
{"in": "overlapped = plot(xdata[-2:-1],ydata[-2:-1],'-',lw=4.5)<nl><nl>for item in overlapped:<nl><tab>item.set_solid_capstyle('butt')", "out": "matplotlibで正確な線分の終点", "out_en": "Accurate line ends with matplotlib"}
{"in": "from matplotlib import pyplot as plt<nl>import numpy as np<nl>randn = np.random.randn<nl>from pandas import *<nl><nl>idx = Index(arange(1,11))<nl>df = DataFrame(randn(10, 5), index=idx, columns=['A', 'B', 'C', 'D', 'E'])<nl>vals = np.around(df.values,2)<nl>normal = plt.normalize(vals.min()-1, vals.max()+1)<nl><nl>fig = plt.figure(figsize=(15,8))<nl>ax = fig.add_subplot(111, frameon=True, xticks=[], yticks=[])<nl><nl>the_table=plt.table(cellText=vals, rowLabels=df.index, colLabels=df.columns, <nl><tab><tab><tab><tab><tab>colWidths = [0.03]*vals.shape[1], loc='center', <nl><tab><tab><tab><tab><tab>cellColours=plt.cm.hot(normal(vals)))", "out": "matplotlib:カラーマップを使用してテーブルセルの背景を色付け", "out_en": "matplotlib: using a colormap to color table-cell background"}
{"in": "def __eq__(self, value):<nl><tab>return self.value == value<nl><nl>def __len__(self):<nl><tab>return len(self.value)", "out": "選択項目を持つmodels.CharFieldからのDjangoの継承でエラーが発生する", "out_en": "Django inheritance from models.CharField with choices gives error"}
{"in": "from mpl_toolkits.axes_grid1 import make_axes_locatable <nl><nl>ax1 = plt.subplot2grid((1,1), (0,0))<nl>divider = make_axes_locatable(ax1) <nl>ax2 = divider.append_axes(\"bottom\", size=\"100%\", pad=0.5)<nl>ax3 = divider.append_axes(\"bottom\", size=\"100%\", pad=1)", "out": "matplotlibで2つのサブプロット間の距離のみを調整する", "out_en": "Adjust the distance only between two subplots in matplotlib"}
{"in": "def take(dictionary, key):<nl><tab>return {key: dictionary[key]}<nl><nl>R = take(D, k)", "out": "Python辞書から1つのエレメントをスライスする", "out_en": "Slice out one element from a python dictionary"}
{"in": "import pandas as pd<nl>data_xls = pd.read_excel('export.csv', 'Sheet1', index_col=None)<nl>data_xls.to_csv('exceltocsv.csv', encoding='utf-8')", "out": "ファイルを開いてcsv形式で保存する方法", "out_en": "How to open file and save as csv"}
{"in": "query = \"SELECT COUNT(*) from `%s`\" %table<nl>cursor.execute(query)<tab><tab><tab> #execute query separately<nl>res = cursor.fetchone()<nl>total_rows = res[0]<tab>  #total rows", "out": "Python/MySQL-行数のカウントに%sを正しく使用する方法", "out_en": "Python/MySQL- How to properly use %s for counting rows"}
{"in": "from shapely.geometry import box, Polygon<nl><nl>for pixel in pixels:<nl><tab># say the pixel has llx, lly, urx, ury values.<nl><tab>pixel_shape = box(llx, lly, urx, ury)<nl><nl><tab>for polygon in approximately_overlapping:<nl><tab><tab># say the polygon has a ``value`` and a 2-D array of coordinates <nl><tab><tab># [[x0,y0],...] named ``xy``.<nl><tab><tab>polygon_shape = Polygon(xy)<nl><tab><tab>pixel_value += polygon_shape.intersection(pixel_shape).area * value", "out": "データビンニング:不規則なポリゴンを通常のメッシュに", "out_en": "Data binning: irregular polygons to regular mesh"}
{"in": "if json.encoder.ESCAPE_DCT.get('/') != '/':<nl><tab>json.encoder.ESCAPE_DCT['/'] = '/'", "out": "Google App Engine Python simplejsonのエスケープ?", "out_en": "Google App Engine Python simplejson escaping?"}
{"in": "approved_rides = [ride for ride in initial_rides if any(<nl><tab><tab>  (lat_min < step.latitude< lat_max and \\<nl><tab><tab>   lng_min< step.longitude< lng_max) for step in ride.route.steps.all())]", "out": "map()操作、リスト、浮動小数点数、およびいくつかの検証を使用してgeoアルゴリズムを最適化するためのヘルプが必要です", "out_en": "need help optimizing a geo algorithm using a map() operation, lists, floats and some validation"}
{"in": "mydict = dict((key, {}) for key in keylist)", "out": "辞書の辞書値に値を設定する", "out_en": "Setting a value to a dictionary's dictionary value"}
{"in": "peaks_np = array([s.max() for s in segments])", "out": "numpy配列内のサブ配列の長さを正規化して計算します。", "out_en": "Normalize sub array lengths in a numpy array to do math on them"}
{"in": "from mpl_toolkits.mplot3d import Axes3D<nl>from mpl_toolkits.mplot3d.art3d import Poly3DCollection<nl>import matplotlib.pyplot as plt<nl>fig = plt.figure()<nl>ax = Axes3D(fig)<nl>x = [0,1,1,0]<nl>y = [0,0,1,1]<nl>z = [0,1,0,1]<nl>verts = [zip(x, y,z)]<nl>ax.add_collection3d(Poly3DCollection(verts))<nl>plt.show()", "out": "python-matplotlibで3Dポリゴンをプロットする", "out_en": "Plotting 3D Polygons in python-matplotlib"}
{"in": "import re<nl><nl>s = \"5+5.[)]1\"<nl>s = re.search(\"\\d+\\+\\d+\", s).group()<nl>print(s) # 5+5", "out": "Python文字列のトリミング", "out_en": "Python string trimming"}
{"in": "values = {'what': 'surreal', 'punctuation': 'is'}<nl>template=\" Hello, {what} world {punctuation} One of Python least-used functions is \"<nl>t = template.format(**values)<nl>print(t)<nl># Hello, surreal world is One of Python least-used functions is", "out": "PythonでMAP to stringテンプレートの値を置換する方法", "out_en": "How to substitute values in a MAP to string template in Python"}
{"in": "with open('rooms') as f:<nl><tab>chunks = f.read().split('<nl><nl>')<nl><nl>people_by_id = {}<nl><nl>for chunk in chunks:<nl><tab>data = dict(row.split('=', 1) for row in chunk.split('<nl>'))<nl><tab>people_by_id[data['id']] = data<nl><tab>del data['id']<nl><nl>def get_person_by_id(id):<nl><tab>return people_by_id.get(id)", "out": "Pythonでファイル内の行を検索し、次の数行を読み込む", "out_en": "Finding a line in a file then reading next few lines in Python"}
{"in": "form.getvalue('toggle-event')", "out": "Toggle Low状態はPython CGIに送信されません", "out_en": "Toggle low state won't be sent to python cgi"}
{"in": "with open('/tmp/test.tsv') as infile, open('/tmp/test2.tsv', 'w') as outfile:<nl><tab>for line in infile:<nl><tab><tab>tsplit = line.split(\"\\t\")<nl><tab><tab>firstcolumns = tsplit[:-1]<nl><tab><tab>lastitems = tsplit[-1].strip().split(\";\")<nl><tab><tab>for item in lastitems:<nl><tab><tab><tab>allcolumns = firstcolumns + item.split(\"=\")<nl><tab><tab><tab>outfile.write(\"\\t\".join(allcolumns) + \"<nl>\")", "out": "tsvファイルからデータを抽出します。python", "out_en": "Extract data from tsv file python"}
{"in": "from collections import defaultdict<nl>import json<nl><nl>d = defaultdict(dict)<nl>for date in dates:<nl><tab>d[date.year][date.month] = info_for_date(date)<nl>json.dumps(d)", "out": "このJSONフォーマットをPythonでシリアライズするデータ構造を作成するにはどうすればよいでしょうか。", "out_en": "How do I create a data structure that will be serialized this JSON format in python?"}
{"in": "view.setRootIndex(model.index(\"C:\\Myfolder\"))", "out": "Python PyQt QFileSystemModelルートパス", "out_en": "Python PyQt QFileSystemModel Root Path"}
{"in": "fig = plt.figure()<nl>ax = fig.add_axes()<nl>ax.invert_xaxis()", "out": "Pythonでx_軸を反転したloglogプロット", "out_en": "loglog plots with inverted x_axis in python"}
{"in": "random.shuffle()", "out": "Python:ワードリストでスクランブルされた単語を検索する方法", "out_en": "Python: How to find scrambled words in a wordlist"}
{"in": "def GetSelectedNodes(self,*args):<nl><tab>cal = cmds.checkBox(self.xAxis,q = True, v = True)<nl><tab>print cal", "out": "maya python print state of checkbox?(チェックボックスの状態を出力)", "out_en": "maya python print state of checkbox?"}
{"in": "import sys<nl><nl>def foobar():<nl><tab>print sys._getframe().f_code.co_name", "out": "Pythonの__func__(Cから)に相当します。", "out_en": "Equivalent of __func__ (from C) in Python"}
{"in": "self.root.grid_columnconfigure(0, weight=1)<nl>self.root.grid_rowconfigure(0, weight=1)<nl>self.contentFrame.grid_columnconfigure(0, weight=1)<nl>self.contentFrame.grid_rowconfigure(0, weight=1)<nl>self.topBar.grid_columnconfigure(0, weight=1)<nl>self.topBar.grid_rowconfigure(0, weight=1)", "out": "tkinterウィジェットをスティッキーフレームの中央に配置する方法", "out_en": "How to center a tkinter widget in a sticky frame"}
{"in": "print(\"%s %s\" % (hello, myvar))", "out": "Pythonの%演算子に関する問題", "out_en": "Difficulties with the % Operator in Python"}
{"in": "class Comment(db.Model):<nl><tab>series = db.ReferenceProperty(reference_class=Series);<nl><nl><tab>def series_id(self):<nl><tab><tab>return Comment.series.get_value_for_datastore(self)", "out": "データベースがヒットしない場合にdb.ReferencePropertyのキー値を取得する方法は?", "out_en": "How do I get the key value of a db.ReferenceProperty without a database hit?"}
{"in": "from pymongo import MongoClient<nl># Assuming youre running mongod on 'localhost' with port 27017<nl>c = MongoClient('localhost',27017)<nl>c.database_names()", "out": "pymongoから「show dbs」を発行する方法", "out_en": "how to issue a \"show dbs\" from pymongo"}
{"in": "from rpy2.robjects.packages import importr<nl><nl>MASS = importr('MASS')<nl><nl># the function is now at MASS.fitdistr", "out": "rpy2のfitdistr", "out_en": "fitdistr in rpy2"}
{"in": "myList = ['a','b','c']<nl>myStr = 'z'<nl>res = [[myStr, x] for x in myList]", "out": "Python:単一の要素とリスト内のすべての要素をペアにする", "out_en": "Python: pair a single element with every element in a list"}
{"in": "class myBool():<nl><tab>def __init__(self, val):<nl><tab><tab>self.value = val<nl><nl><tab>def __repr__(self):<nl><tab><tab>return self.value<nl><nl><tab>def __invert__(self):<nl><tab><tab>if self.value == 'A':<nl><tab><tab><tab>return 'B'<nl><tab><tab>else:<nl><tab><tab><tab>return 'A'<nl><nl>def main():<nl><tab>a = myBool('A')<nl><tab>print(a)<nl><tab>print(~a)<nl><nl>if __name__ == '__main__':<nl><tab>main()", "out": "Pythonでブール変数をモデル化する", "out_en": "Model boolean variables in Python"}
{"in": "doc.Tables(1).Rows(1).Delete()", "out": "Python-win32comを使用してMicrosoft Wordでテーブルの内容を編集できない", "out_en": "Python - Unable to Edit Table Contents in Microsoft Word using win32com"}
{"in": "from PIL import Image<nl>from PIL import ImageChops<nl><nl>a = Image.open(\"pict1.jpg\")<nl>b = Image.open(\"pict2.jpg\")<nl>diff = ImageChops.difference (a, b)<nl>RED = ('red')<nl>RL = Image.new('RGB', diff.size, RED) # Make a red layer the same size<nl>RedDiff = ImageChops.multiply(RL, diff)<nl>Result = ImageChops.blend(RedDiff, b, 0.7)<nl>Result.show()", "out": "2つの図の間に赤のdiffrenciesで色を付ける", "out_en": "Color in red diffrencies between two pictures"}
{"in": "class TourAdmin(admin.ModelAdmin):<nl>   def queryset(self, request):<nl><tab>  qs = super(TourAdmin, self).queryset(request)<nl><tab>  if request.user.is_superuser:<nl><tab><tab><tab>return qs<nl><tab>  return qs.filter(ActionUserCode=request.user)<nl>admin.site.register(Tour,TourAdmin)", "out": "ログイン・ユーザーに基づいて特定の行を表示するためのDjango admin changelistのフィルター処理", "out_en": "Filtering Django admin changelist to show specific rows based on the logged-in user"}
{"in": "super(SyncableMixin, self).save(*args, **kwargs)", "out": "Django Model:mixinクラスを使用して関数like saveのDjangoモデルをオーバーライドする方法", "out_en": "Django Model: How to use mixin class to override django model for function likes save"}
{"in": "result = serve_fileobj(RETURN_FILE,disposition='attachment',<nl><tab><tab><tab><tab><tab><tab> content_type='.txt',name=filename)<nl>os.unlink(filename)<nl>return result", "out": "cherrypyでファイルを提供し、サーバーからファイルを削除するには?", "out_en": "How to serve file with cherrypy and delete the file from server?"}
{"in": "def delete_everything(self):<nl><tab>Reporter.objects.all().delete()<nl><nl>def drop_table(self):<nl><tab>cursor = connection.cursor()<nl><tab>table_name = self.model._meta.db_table<nl><tab>sql = \"DROP TABLE %s;\" % (table_name, )<nl><tab>cursor.execute(sql)", "out": "djangoを使用してテーブル内のすべてのデータを削除する方法", "out_en": "How to remove all of the data in a table using django"}
{"in": "(mE, a)", "out": "Scipy-関数の入力値が変更された場合にのみ、関数の一部を実行します。", "out_en": "Scipy - Executing part of function only when function input values change"}
{"in": "cmap = matplotlib.colors.ListedColormap(['green', 'blue', 'red'])<nl>bounds=[0,125,200,400]<nl>cax = inset_axes(ax3, width=\"8%\", height='70%', loc=4)<nl>cbar = matplotlib.colorbar.ColorbarBase(cax, cmap=cmap, boundaries=bounds)<nl>cax.yaxis.set_ticks_position('left')<nl>cbar.ax.set_yticklabels(['0', '125', '200', '200+'])<nl>cax.yaxis.set_label_position('left')<nl>cbar.set_label('Income (,000s)')", "out": "スキャッタプロット用のカスタムMatplotlib ColorBar", "out_en": "Custom Matplotlib ColorBar for Scatterplot"}
{"in": "metric=\"precomputed\"", "out": "PythonでのDBSCAN:予期しない結果", "out_en": "DBSCAN in Python: Unexpected result"}
{"in": "pd.to_datetime(data['Deadline Time'], coerce=True)", "out": "Python Pandasでは、0 datetimeはどのように処理されるのでしょうか。", "out_en": "How does one handle zero datetime in python pandas?"}
{"in": "def adminhome():<nl><tab>row1 =''<nl><tab>try:<nl><tab><tab>db = connect_db()<nl><tab><tab>rows=g.db.query(\"SELECT * FROM `auth_user` order by id DESC \")<nl><tab><tab>rows1 = list(rows)<nl><tab><tab>data=''<nl><tab><tab>if len(rows1) > 0:<nl><tab><tab><tab>users = rows1<nl><tab><tab>#close_db(db)<nl><tab>except Exception as e:<nl><tab><tab>users = e<nl><tab>return users<nl><nl>@app.context_processor<nl>def inject():<nl><tab>return dict(adminhome=adminhome)", "out": "フラスコ内の全URLの登録機能", "out_en": "register function for all urls in flask"}
{"in": "stackOfImages = np.array((image1, image2)) #iterate over these if many more<nl>redData = stackOfImages[:, N-1, M-1]", "out": "3d Numpy配列からベクトルを抽出する方法", "out_en": "How to extract vector from 3d numpy array?"}
{"in": "query_set = Item.objects.extra(select={'count': 'count(1)'}, <nl><tab><tab><tab><tab><tab><tab><tab>   order_by=['-count']).values('count', 'category')<nl>query_set.query.group_by = ['category_id']", "out": "countとgroup byに相当するDjango", "out_en": "Django equivalent for count and group by"}
{"in": "urlpatterns = patterns('tiptop.views',<nl><tab>(r'^(\\d+)/(\\d*)$', 'test_items'),<nl>)", "out": "djangoでのCatch NoReverseMatchエラーの取得", "out_en": "Getting a Caught NoReverseMatch error in django"}
{"in": "import datetime<nl><nl>tomorrow = datetime.datetime.today()+datetime.timedelta(days=1) <nl><nl>upcoming_obj = Events.objects.filter(start_date__gt = tomorrow)", "out": "日時が明日以降のデータを取得する", "out_en": "Retrive data where date and time are more than tomorrow"}
{"in": "dict = { 'a': [ \"hello\", \"hey\", \"hi\" ] }", "out": "Pythonで辞書の値を並べ替えるにはどうすればいいですか?", "out_en": "How can I re-order the values of a dictionary in python?"}
{"in": "dictionary = {}<nl>with open('filename') as f:<nl><tab>for line in f:<nl><tab><tab>dictionary[line[0]] = line[1]", "out": "辞書へのPythonテキスト", "out_en": "Python text into dictionary"}
{"in": "getattr(CallMe, variable)()", "out": "文字列からメソッドを呼び出す", "out_en": "Call method from string"}
{"in": "class Foo(ndb.Model):<nl>  CACHE_KEY = 'bla_cache'<nl>  bla = ndb.StringProperty()<nl><nl>  @clasmethod<nl>  def build_page(cls):<nl><tab>result = memcache.get(CACHE_KEY)<nl><tab>if result is None:<nl><tab>  result = cls.query().fetch(100)<nl><tab>return result<nl><nl>  def _post_put_hook(self, future):<nl><tab>memcache.delete(CACHE_KEY)", "out": "Google App Engine(GAE)のフロント・ページ・クエリーをキャッシュするためのベスト・プラクティス", "out_en": "Best practices for caching front page queries for Google App Engine (GAE)"}
{"in": "import matplotlib.pyplot as plt<nl>from numpy import *<nl>xx = arange(0,700,30)<nl>tt = arange(0,100,5)<nl>U = outer(xx,tt)<nl>V = outer(xx**(1/2),tt/4)<nl>plt.subplot(121)<nl>plt.pcolor(tt,xx,U)<nl>plt.colorbar()<nl>#plt.axes([0,600,0,100])<nl><nl>plt.xlim(0,100)<nl>plt.ylim(0,600)<nl><nl>plt.subplot(122)<nl>plt.pcolor(tt,xx,V)<nl>plt.colorbar()<nl><nl>plt.show()", "out": "pyplotのサブプロットで軸範囲を固定する", "out_en": "Fixing axes ranges in pyplot subplots"}
{"in": "data = {}<nl><nl>for dir_item in os.listdir(path):<nl><tab>dir_item_path = os.path.join(path, dir_item)<nl><tab>if os.path.isfile(dir_item_path):<nl><tab><tab>with open(dir_item_path, 'r') as f:<nl><tab><tab><tab>data[dir_item] = f.read()<nl><tab><tab><tab>for part in data[dir_item].split():<nl><tab><tab><tab><tab>if part.startswith('color='):<nl><tab><tab><tab><tab><tab>print part[6:]", "out": "Python:ディレクトリからすべてのファイルを読み込み", "out_en": "Python: read all files from directory"}
{"in": "int1, int2 = tuple", "out": "Pythonでタプルから整数を取得するにはどうすればいいですか。", "out_en": "How do I get integers from a tuple in Python?"}
{"in": "data = np.load(filename, mmap_mode='r')", "out": "npyファイルから特定の値を抽出する", "out_en": "Extracting specific values from .npy file"}
{"in": "from main import Session, User", "out": "別のPythonファイルからSQLAlchemyセッションを使用する", "out_en": "Using a SQLAlchemy session from a separate python file"}
{"in": "from scipy.ndimage.interpolation import zoom<nl><nl>plt.pcolor(R,cmap='RdBu')<nl>plt.show()<nl><nl>R2 = zoom(R,2)<nl>plt.pcolor(R2,cmap='RdBu')<nl>plt.show()<nl><nl>R5 = zoom(R,5)<nl>plt.pcolor(R5,cmap='RdBu')<nl>plt.show()<nl><nl>R10 = zoom(R,10)<nl>plt.pcolor(R10,cmap='RdBu')<nl>plt.show()", "out": "Python:図形の行列の補間", "out_en": "Python: interpolate matrix for figure"}
{"in": "def increment(self, seconds):<nl><tab>with self._mutex:<nl><tab><tab>self._countdownInSec += seconds", "out": "このコードではmutexが本当に必要なのでしょうか?", "out_en": "Is a mutex really necessary in this piece of code?"}
{"in": "MyPrettyPrinter(stream=f).pprint(d)", "out": "pprintを使用してファイルにUTF-8文字列を書き込む", "out_en": "Write UTF-8 strings to file with pprint"}
{"in": "from visual import *<nl><nl>scene.title = \"Faces example\"<nl>scene.width = 600<nl>scene.height = 400<nl><nl>f = frame()<nl>tri = faces(<nl><tab>pos = [<nl><tab><tab>[0.,0.,0.], [1.,0.,0.], [0.,1.,0.],   # first tri - vertices<nl><tab><tab>[0.,0.,0.], [-1.,0.,0.], [0.,-1.,0.]  # second tri - vertices<nl><tab>],<nl><tab>color = [<nl><tab><tab>[1.,0.,0.], [0.5,0.5,0.], [0.,1.,0.], # first tri - colors<nl><tab><tab>[0.,0.,1.], [0.,0.5,0.5], [0.,1.,0.]  # second tri - colors<nl><tab>],<nl><tab>frame = f<nl>)<nl><nl>tri.make_normals()<nl>tri.make_twosided()<nl><nl>while True:<nl><tab>rate(100)<nl><tab>f.rotate(angle=0.01)", "out": "VPythonに単一の面を作成しますか?", "out_en": "Create a single face in VPython?"}
{"in": "class Foo(object):<nl><tab>pass<nl><nl>class Bar(object):<nl><tab>pass<nl><nl>dispatch_dict = {\"Foo\": Foo, \"Bar\": Bar}<nl>dispatch_dict[\"Foo\"]() # returns an instance of Foo", "out": "Pythonで変数を持つクラスのインスタンスを作成する", "out_en": "Creating an Instance of a Class with a variable in Python"}
{"in": "import thread, time<nl><nl>def takes_a_while():<nl><nl><tab>def print_status():<nl><tab><tab>while True:<nl><tab><tab><tab>print i   # print current i every two seconds<nl><tab><tab><tab>time.sleep(2)<nl><nl><tab>status_thread = thread.start_new_thread(print_status, ())<nl><tab>for i in xrange(10000000):<nl><tab><tab>print '*',<nl><tab><tab>time.sleep(0.1)<nl><tab>status_thread.exit()<nl><nl>takes_a_while()", "out": "Python-長時間ループが実行されている間に、スレッドが同じスコープで定期的に「何かをする」ようにするにはどうすればよいのでしょうか?", "out_en": "Python - while a long-running loop is going, how to have a thread periodically \"do something\" in the same scope?"}
{"in": "import ConfigParser<nl><nl>config = ConfigParser.ConfigParser()<nl>config.read('conf.ini')<nl><nl>try:<nl><tab>val = config.get('section1', 'var1')<nl>except:<nl><tab>sys.exit(1)<nl><nl>print val", "out": "Pythonでiniファイルをパースし、適切な関数を選択する方法", "out_en": "How to parse ini files and choose appropriate function with python"}
{"in": "import turtle<nl><nl>turtle.colormode(255)<nl><nl>for i in range(0,255,15):<nl><tab>turtle.pencolor(i,i,i)<nl><tab>turtle.write(\"Hello\")<nl><tab>turtle.delay(100)", "out": "Python Turtleでテキストをフェードする", "out_en": "Fading Text in Python Turtle"}
{"in": "#!/usr/bin/env python<nl>import csv<nl>afile = open('<directory>/*.csv', 'r+')<nl>csvReader1 = csv.reader(afile)<nl>for i in range(2):<nl><tab>print csvReader1.next()", "out": "csvファイルの最初の2行を標準出力に出力する", "out_en": "Print the first two rows of a csv file to a standard output"}
{"in": "import datetime<nl><nl>td = datetime.timedelta(seconds=time.time()-a_unix_timestamp)", "out": "unix timestamp generate timedelta for babelのformat_timedeltaの使用", "out_en": "using unix timestamp generate timedelta for babel's format_timedelta"}
{"in": "import threading<nl>import time<nl><nl>value = 3<nl><nl>def process():<nl><tab>while True:<nl><tab><tab>print(value)<nl><tab><tab>time.sleep(1)<nl><nl>thread = threading.Thread(target=process)<nl>thread.start()<nl><nl>while True:<nl><tab>value = input('Enter value: ')", "out": "ループ内にあるときに(このループ内の作業をブロックせずに)ユーザの入力を読み取る方法", "out_en": "How to read users input when in loop (and without blocking work in this loop)?"}
{"in": "from pprint import pprint<nl><nl>def getCurrentVariableState():<nl><tab>pprint(locals())<nl><tab>pprint(globals())", "out": "Python、すべてのバインドされた変数の名前と値を出力する", "out_en": "Python, print names and values of all bound variables"}
{"in": "import csv<nl>testSet = set(['thissucks.in', 'whateverlife.in', 'crapface.in', 'lasttry.in'])<nl>with open('mag.csv', 'ab+') as f:<nl><tab>writer = csv.writer(f ,dialect= 'excel', delimiter= ',')<nl><tab>for domain in testSet:<nl><tab><tab>writer.writerow([domain, '', 'Related'] )", "out": "セットとフォーマットされた文字列をCSVに書き込む", "out_en": "Writing a set plus a formatted string to a CSV?"}
{"in": "foo,bar,baz,qux", "out": "str.splitを使用した後にデータを処理する", "out_en": "Process the data after using str.split"}
{"in": "from Tkinter import *<nl>master = Tk()<nl>listbox = Listbox(master, selectbackground=\"red\")", "out": "python modify Tkinter.Listboxパラメータ", "out_en": "python modify Tkinter.Listbox parameter"}
{"in": "list1 = [0,1,4,8,87,6,4,7,5,'a','f','er','fa','vz']<nl>tuple1 = (8,5,'f')<nl><nl>def my_contains(first, second):<nl><tab>return bool(set(first).intersection(second))<nl><nl>my_contains(list1, tuple1) # True<nl>my_contains(list1, [1]) # True<nl>my_contains(list1, (125,178,999)) # False", "out": "__contains__関数の複数のパラメータ", "out_en": "Multiple parameters for the __contains__ function"}
{"in": "regex = re.compile(r'\"(?:[^\"]|\"\")*\"')", "out": "特殊なエスケープルールを使用した文字列マッチング用の正規表現", "out_en": "Regex for string matching with special escaping rule"}
{"in": "query = Q()<nl>for search in (prefs.address1, prefs.address2):<nl><tab>if search:<nl><tab><tab>query |= Q(title__icontains=search)<nl>results = Stores.objects.filter(query)", "out": "Djangoクエリーで\"None\"DB値を処理する方法", "out_en": "How to deal with \"None\" DB values in Django queries"}
{"in": "dice=random.randint(1,7)", "out": "サイコロを振ることをシミュレートし、各数字を何回振るかを示すプログラム", "out_en": "Program that simulates rolling a dice, and tells you how many times you roll each number"}
{"in": "import sys<nl>sys.path.append('/home/markstadt/.local/lib/python/site-packages')<nl>import soundcloud", "out": "Web2pyのどこかにあるPythonにインストールされたモジュールへのアクセス", "out_en": "Accessing module installed on Pythonanywhere in Web2py"}
{"in": "#!usr/bin/env python<nl>import matplotlib.pyplot as plt<nl>import numpy as np<nl><nl>x = np.arange(-180.0,190.0,10)<nl>theta = (np.pi/180.0 )*x<tab># in radians<nl><nl>offset = 2.0<nl><nl>R1 = [-0.358,-0.483,-0.479,-0.346,-0.121,0.137,0.358,0.483,0.479,0.346,0.121,\\<nl>-0.137,-0.358,-0.483,-0.479,-0.346,-0.121,0.137,0.358,0.483,0.479,0.346,0.121,\\<nl>-0.137,-0.358,-0.483,-0.479,-0.346,-0.121,0.137,0.358,0.483,0.479,0.346,0.121,\\<nl>-0.137,-0.358]<nl><nl>fig1 = plt.figure()<nl>ax1 = fig1.add_axes([0.1,0.1,0.8,0.8],polar=True)<nl>ax1.set_ylim(-2,2)<nl>ax1.set_yticks(np.arange(-2,2,0.5))<nl>ax1.plot(theta,R1,lw=2.5)", "out": "Matplotlib/Pythonで極座標プロットの軸オプションを変更する", "out_en": "Changing axis options for Polar Plots in Matplotlib/Python"}
{"in": "content = b'cmd\\x00arg1\\x00arg2\\x00'<nl>print(content.replace(\"\\x00\", \" \"))", "out": "スペースを使用した\\x00の変換", "out_en": "Converting \\x00 with a space"}
{"in": "__init__.py", "out": "インポートエラー:b-Pythonという名前のモジュールがありません", "out_en": "ImportError: No module named b - Python"}
{"in": "print \" \"+ \"\\033[01;41m\" + \" \" +\"\\033[01;46m\" + \" \" + \"\\033[01;42m\"", "out": "Pythonシェルでテキストの色を変更する", "out_en": "Change the color of text in python shell?"}
{"in": "if not 'seen' in session.data:<nl><tab># new session, set a flag<nl><tab>session.data['seen'] = True", "out": "Python、CGIでのセッションの処理", "out_en": "Python, handling session in CGI"}
{"in": "(await-svctim)/await*100", "out": "ビルドサーバの仮想マシンパフォーマンスをベンチマークしたことがある人はいますか?", "out_en": "Anyone benchmarked virtual machine performance for build servers?"}
{"in": "for circle in circles[:]:<nl><tab>circle.update()", "out": "PythonおよびPygame:反復中にループ下のリスト内のすべての要素を更新する", "out_en": "Python & Pygame: Updating all elements in a list under a loop during iteration"}
{"in": "class MyLayout(BoxLayout):<nl><tab>def getPerson1Name(self):<nl><tab><tab>return App.get_running_app().person2.getName()", "out": "Kivy-Kv言語の子ウィジェットとPythonウィジェットのクラスの両方からオブジェクトにアクセスできるようにする方法は?", "out_en": "Kivy - How to make an object accessible from both Kv Language child widgets and Python widget's classes?"}
{"in": "import subprocess # This is how we're going to call the commands.<nl><nl>samples = {} # Empty dict<nl>with open('inputfile','r') as f:<nl><tab>for line in f:<nl><tab><tab># Extract sampleID, other things depending on file format...<nl><nl><tab><tab>samples[sampleID] = [rgid, rglb, grpl, rgpu, rgsm] # Populate dict<nl><nl>for sampleID in samples:<nl><tab>rgid, rglb, grpl, rgpu, rgsm = samples[sampleID]<nl><nl><tab># Now you can run your commands using the subprocess module.<nl><tab># Remember to add a change based on sampleID if e.g. the IO files differ.<nl><tab>subprocess.call(['picard-tools', 'AddOrReplaceReadGroups', 'I=input.bam', <nl><tab><tab>'O=output.bam', 'RGID=%s' % rgid, 'RGLB=%s' % rglb, 'RGPL=%s' %rgpl,<nl><tab><tab>'RGPU=%s' % rgpu, 'RGSM=%s' % rgsm, 'VALIDATION_STRINGENCY=SILENT', <nl><tab><tab>'SORT_ORDER=coordinate', 'CREATE_INDEX=true'])", "out": "スプレッドシートからipython/pythonなどの辞書へ?", "out_en": "From spreadsheet to dictionary in ipython/python & more?"}
{"in": "from datetime import datetime<nl><nl>date_format = XFStyle()<nl>date_format.num_format_str = 'dd/MM/yyyy'<nl>plan.write(1, 4, datetime.strptime(\"01/01/2014\", \"%d/%M/%Y\"), date_format)", "out": "xlwtを使用した日付フォーマットの記述", "out_en": "Writing date format using xlwt"}
{"in": "from sympy import *<nl>s = symbols(\"s\")<nl>t = symbols(\"t\", positive=True)<nl>h = 1/(s**3 + s**2/5 + s)<nl>inverse_laplace_transform(h,s,t).evalf().simplify()", "out": "sympyからより良い回答を得る逆ラプラス変換", "out_en": "Getting a better answer from sympy inverse laplace transform"}
{"in": "A1 = [1, 2, 3, 3, 4, 4, 4]<nl>B1 = [1, 2, 3, 4, 5, 6, 7]<nl>A2 = []<nl>B2 = []<nl><nl>for i in range(len(A1)):<nl><tab>if A1[i] != A1[i + 1]:<nl><tab><tab>A2.append(A1[i])<nl><tab><tab>B2.append(B1[i])<nl><tab>else:<nl><tab><tab>j = i + 1<nl><tab><tab>sum = B1[i]<nl><tab><tab>while j < len(A1) and A1[i] == A1[j]:<nl><tab><tab><tab>sum += B1[j]<nl><tab><tab><tab>del A1[j]<nl><tab><tab><tab>del B1[j]<nl><tab><tab>A2.append(A1[i])<nl><tab><tab>B2.append(sum)<nl><tab><tab>if j >= len(A1):<nl><tab><tab><tab>break<nl><nl>print A2<nl>print B2", "out": "列Aが繰り返される場合は、列2を合計します。", "out_en": "If column A repeats, sum column 2"}
{"in": "class Features(EmbeddedDocument):<nl><tab>version = FloatField()<nl><tab>data = ListField(StringField())", "out": "EmbeddedDocument内のMongoEngine ListFieldが検証時にTypeErrorをスローする", "out_en": "MongoEngine ListField within a EmbeddedDocument throws TypeError on validation"}
{"in": "images.resize(data, width=188)", "out": "Google Python Image Library-幅に基づいてイメージのサイズを変更する方法", "out_en": "Google Python Image Library - How to resize an image based on its width?"}
{"in": "python-pygraphviz", "out": "pygraphvizでのdjango拡張の使用を可能にする", "out_en": "Enable to use django-extensions with pygraphviz"}
{"in": "import time<nl>from multiprocessing import Pool, Value, Lock<nl>import decimal<nl>import random<nl><nl>number = Value('i', 0)<nl>lock = Lock()<nl>lists = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h','i', 'j', 'k']<nl><nl>def thefunction(listi):<nl><tab>time.sleep(decimal.Decimal(random.random()))<nl><tab>with lock:<nl><tab><tab>number.value += 1<nl><tab><tab>print time.strftime('%H:%M:%S'), number.value, listi<nl><nl>def initializer(*args):<nl><tab>global number, lock<nl><tab>number, lock = args<nl><nl>pool = Pool(4, initializer, (number, lock))<nl>pool.map(thefunction, lists)<nl>print number.value", "out": "Python multiprocessing.pool.map()で呼び出された関数で数値をインクリメントする", "out_en": "Python Increment a number in a function called with multiprocessing.pool.map()"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy as np<nl>fig = plt.figure()<nl>ax = fig.add_subplot(111)<nl>ax.plot(np.random.rand(10))<nl><nl>retval = -1<nl>def onclick(event):<nl><tab>print 'button=%d, x=%d, y=%d, xdata=%f, ydata=%f'%(event.button, event.x, event.y, event.xdata, event.ydata)<nl><tab># Record the x location of the user's click in the global variable and close the figure<nl><tab>global retval<nl><tab>retval = event.xdata<nl><tab>plt.close()<nl><nl>cid = fig.canvas.mpl_connect('button_press_event', onclick)<nl># Bring up the figure (and wait)<nl>plt.show()<nl><nl>print 'User selected point {0}'.format( retval )", "out": "pythonがmatplotlibのクリックからydataを返す", "out_en": "python return ydata from matplotlib click"}
{"in": "# A Foolish Consistency is the Hobgoblin of Little Minds [1]<nl># [1]: http://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds", "out": "PEP8に準拠したPythonコメントで長いurlをフォーマットするにはどうすればいいでしょうか?", "out_en": "How should I format a long url in a python comment and still be PEP8 compliant"}
{"in": "ListLayers (map_document_or_layer, {wildcard}, {data_frame})", "out": "ArcPyマッピング:レイヤをバッチで記号化し、それぞれをJPEGとして書き出す(ArcGIS 10.2)", "out_en": "ArcPy Mapping: batch symbolizing layers and exporting each as a JPEG (ArcGIS 10.2)"}
{"in": "obj.some_function( '1', 2, '3', g=\"foo\", h=\"bar\" )", "out": "オプションの引数を持つPython関数", "out_en": "python function with optional arguments"}
{"in": "with open(\"Input.txt\") as inFile:<nl><tab>for item in inFile:<nl><tab><tab>datePart, holiday = item.split(\", \", 1)<nl><tab><tab>month, day = datePart.split()", "out": "異なるデリミタによるトークン化", "out_en": "Tokenizing with different delimiters"}
{"in": "import glob<nl>results = [open(f) for f in glob.glob(\"*.data\")]<nl>sep = \",\"<nl># Uncomment if your Excel formats decimal numbers like 3,14 instead of 3.14<nl># sep = \";\"<nl><nl>with open(\"res.csv\", 'w') as fout:<nl><tab>for row in range(21):<nl><tab><tab>iterator = (f.readline().strip().replace(\"\\t\", sep) for f in results)<nl><tab><tab>line = sep.join(iterator)<nl><tab><tab>fout.write(\"{0}<nl>\".format(line))", "out": "Python-複数ファイルから読み込み", "out_en": "Python- Read from Multiple Files"}
{"in": "import sys<nl>sys.path.append('/your/dir/goes/here')<nl>from base import foo", "out": "Pythonが上のディレクトリからインポートする", "out_en": "Python Imports From The Directory Above"}
{"in": "f = open('test.dat', 'r')<nl>while True:<nl><tab>ch=f.read(1)<nl><tab>if not ch: break<nl><tab>print ch", "out": "Python-ファイルを一度に1文字ずつ読むには?", "out_en": "Python - How to read file one character at a time?"}
{"in": "edge_list = []<nl>delete_these = []<nl>for point, edges in edges_per_point.items():<nl><tab>edge_list.append(edges.pop(0))<nl><tab>if edges:<nl><tab><tab>edges_per_point[point] = edges<nl><tab>else:<nl><tab><tab>delete_these.append(point)<nl><nl>for point in delete_these:<nl><tab>del edges_per_point[point]", "out": "リストのディクショナリから項目を削除しています", "out_en": "Removing item from dictionary of lists"}
{"in": "indices = 0, 2<nl>somelist = [i for j, i in enumerate(somelist) if j not in indices]", "out": "リストから複数の要素を削除する", "out_en": "Deleting multiple elements from a list"}
{"in": "mask = freq>=0<nl>pl.plot(freq[mask]*2*np.pi, np.sqrt(sp[mask].real**2+sp[mask].imag**2))<nl>pl.plot(freq[~mask]*2*np.pi, np.sqrt(sp[~mask].real**2+sp[~mask].imag**2))", "out": "プロット内のunecessay直線を削除する方法", "out_en": "how to remove the unecessay straight line in the plot?"}
{"in": "nx.draw_networkx(G,with_labels=False)", "out": "NetworkX-ラベルなしでグラフをプロット", "out_en": "NetworkX - Plot Graphs without labels"}
{"in": "import sqlalchemy.types as types<nl><nl>class UUID(types.TypeEngine):<nl><tab>def get_col_spec(self):<nl><tab><tab>return \"uuid\"<nl><nl><tab>def bind_processor(self, dialect):<nl><tab><tab>def process(value):<nl><tab><tab><tab>return value<nl><tab><tab>return process<nl><nl><tab>def result_processor(self, dialect):<nl><tab><tab>def process(value):<nl><tab><tab><tab>return value<nl><tab><tab>return process<nl><nl>table = Table('foo', meta,<nl><tab>Column('id', UUID(), primary_key=True),<nl>)", "out": "SQLAlchemyでUUIDを使用するにはどうすればよいですか。", "out_en": "How can I use UUIDs in SQLAlchemy?"}
{"in": "x='iamonlywhoknock BREAKINGBAD<nl>'.split(\" \")<nl>mydict={x[0]:x[1]}", "out": "String to Dictionary Python(String to Dictionary", "out_en": "String to Dictionary Python"}
{"in": "import MySQLdb<nl>import os<nl>import datetime<nl><nl>con = MySQLdb.connect(host='localhost', user='root', passwd='password', db='test')<nl>cur = con.cursor()<nl><nl>cur.execute(\"SHOW TABLES\")<nl>data = \"\"<nl>tables = []<nl>for table in cur.fetchall():<nl><tab>tables.append(table[0])<nl><nl>for table in tables:<nl><tab>data += \"DROP TABLE IF EXISTS `\" + str(table) + \"`;\"<nl><nl><tab>cur.execute(\"SHOW CREATE TABLE `\" + str(table) + \"`;\")<nl><tab>data += \"<nl>\" + str(cur.fetchone()[1]) + \";<nl><nl>\"<nl><nl><tab>cur.execute(\"SELECT * FROM `\" + str(table) + \"`;\")<nl><tab>for row in cur.fetchall():<nl><tab><tab>data += \"INSERT INTO `\" + str(table) + \"` VALUES(\"<nl><tab><tab>first = True<nl><tab><tab>for field in row:<nl><tab><tab><tab>if not first:<nl><tab><tab><tab><tab>data += ', '<nl><tab><tab><tab>data += '\"' + str(field) + '\"'<nl><tab><tab><tab>first = False<nl><nl><nl><tab><tab>data += \");<nl>\"<nl><tab>data += \"<nl><nl>\"<nl><nl>now = datetime.datetime.now()<nl>filename = str(os.getenv(\"HOME\")) + \"/backup_\" + now.strftime(\"%Y-%m-%d_%H:%M\") + \".sql\"<nl><nl>FILE = open(filename,\"w\")<nl>FILE.writelines(data)<nl>FILE.close()", "out": "Pythonでmysqldumpを使用せずにMySQLデータベースをダンプする方法", "out_en": "How can I dump a MySQL database without using mysqldump in Python"}
{"in": "for e in soup.findAll('br'):<nl><tab>e.extract()", "out": "解析されたBeautiful Soupリストから<br>タグを削除しますか?", "out_en": "Remove <br> tags from a parsed Beautiful Soup list?"}
{"in": "from sqlalchemy import and_, or_<nl><nl>db.query(ShippingRate).filter(or_( \\<nl><tab>and_(ShippingRate.minimum == None, ShippingRate.maximum == None), \\<nl><tab>and_(ShippingRate.minimum != None, ShippingRate.maximum != None,  literal(myVal).between(ShippingRate.minimum, ShippingRate.maximum)), \\<nl><tab>and_(ShippingRate.minimum == None, myVal < ShippingRate.maximum), \\<nl><tab>and_(ShippingRate.maximum == None, myVal > ShippingRate.minimum)))", "out": "SQLAlchemyを使用して1つの列が定義されていない場合に、2つの列に基づいてフィルタする方法", "out_en": "How to filter based on two columns where one column may not be defined using SQLAlchemy?"}
{"in": "mylist = re.findall(r'''(?x)<tab><tab><tab><tab><tab># verbose mode<nl><tab><tab><tab><tab><tab><tab><span\\ info=\".+</span>| # allows you to comment the regex<nl><tab><tab><tab><tab><tab><tab>Name:\\ .+<br>|<tab><tab>  # for even better readability<nl><tab><tab><tab><tab><tab><tab><span\\ id=\"Phone\"\\ info=\"phonenumber\">.+</span>''', file)", "out": "Pythonでは、read文を複数行にコーディングするにはどうすればよいでしょうか。", "out_en": "Python, how to code a read statement onto multiple lines?"}
{"in": "#cloud-config", "out": "EC2 Serverをプログラムでプロビジョニングし、デフォルト設定を構成する方法", "out_en": "How to provision an EC2 Server programmatically and configure default settings"}
{"in": "class Event:<nl><tab>def __init__(self, name):<nl><tab><tab>self.name = name<nl><tab><tab>self.people = []", "out": "Pythonでリストに項目を追加しようとしましたが、動作が異常です", "out_en": "Trying to append items to a list in python but its acting odd"}
{"in": "from Bio import Entrez, Medline<nl><nl># Always tell NCBI who you are  <nl>Entrez.email = \"your_address@example.com\"  <nl><nl>term=\"((oncology) AND breast cancer) AND resulted in\"<nl><nl>handle = Entrez.esearch(db=\"pubmed\", retmax=10, term=term)<nl>record = Entrez.read(handle)<nl><nl>print record['Count']  # see how many hits in your search<nl><nl>for ref in record['IdList']:<nl><tab>handle = Entrez.efetch(db=\"pubmed\", id=ref, <nl><tab><tab><tab><tab><tab><tab>   rettype=\"Medline\", <nl><tab><tab><tab><tab><tab><tab>   retmode=\"text\")<nl><tab>paper = Medline.read(handle)<nl><tab># Medline returns a dict from which we can extract the <nl><tab># fields we desire<nl><tab>print '-' * 30<nl><tab>print paper['TI']<nl><tab>print<nl><tab>print paper['AB']", "out": "美しいスープを使用して次のページに移動する", "out_en": "Navigating to next page using beautiful soup"}
{"in": "pModule = PyImport_Import(PyString_FromString(\"cpp_interface\"));", "out": "boost::pythonを使用して、Python型からラップされたC++型を抽出するにはどうすればよいでしょうか。", "out_en": "How can I extract a wrapped C++ type from a Python type using boost::python?"}
{"in": "from zipfile import ZipFile<nl>from StringIO import StringIO<nl><nl>inMemoryOutputFile = StringIO()<nl><nl>zipFile = ZipFile(inMemoryOutputFile, 'w') <nl>zipFile.writestr('OEBPS/content.xhtml', 'hello world')<nl>zipFile.close()<nl><nl>inMemoryOutputFile.seek(0)", "out": "ディスクに手を触れることなく、ディレクトリ付きのメモリ内zipファイルを作成する方法は?", "out_en": "How to create an in-memory zip file with directories without touching the disk?"}
{"in": "import os, re<nl>path = 'C:/Temp/Folder1/allTexts'<nl>listing = os.listdir(path)<nl>for infile in listing:<nl><tab>text = open(path + '/' + infile).read()<nl><tab>match = re.search('<div id=\"text-interesting1\">', text)<nl><tab>if match is None:<nl><tab><tab>continue<nl><tab>start = match.start()<nl><tab>end = re.search('<div id=\"text-interesting2\">', text).start()<nl><tab>print text[start:end]", "out": "複数のファイルでテキストブロックを検索し、それらのテキストブロックを別のファイルに書き込む方法", "out_en": "How to search multiple files for textblocks and write those textblocks to another file"}
{"in": "pandas.concat([df1, df2], axis=1)", "out": "2つのパンダデータフレームを同じインデックスで結合する", "out_en": "Combine two pandas dataframes with the same index"}
{"in": "from selenium import webdriver<nl>from selenium.webdriver.support.ui import WebDriverWait<nl><nl>driver = webdriver.Firefox()<nl>driver.get(\"http://www.saksoff5th.com/\")<nl><nl>driver.implicitly_wait(10) # seconds<nl><nl>driver.find_element_by_css_selector(\".sign-in > span\").click()<nl>driver.find_element_by_css_selector(\".ui-dialog[style*='display: block'] .ui-icon-closethick\").click()<nl><nl># If you prefer explicit wait, you can do these<nl># WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_css_selector(\".sign-in > span\")).click()<nl># WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_css_selector(\".ui-dialog[style*='display: block'] .ui-icon-closethick\")).click()", "out": "ダイアログ内に表示されている閉じるボタンをクリックする", "out_en": "Clicking visible close button inside a dialog"}
{"in": "def blendShape(self, *args):<nl><nl><tab>blendshape_name = cmds.textField(self.widgets['bs'],  q=True, text=True)<nl><tab>cmds.blendShape(cmds.ls(sl=True)[1], cmds.ls(sl=True)[0], frontOfChain=True, n=blendshape_name)", "out": "textFieldのテキストを名前付けに使用する-maya python", "out_en": "use text from textField for naming - maya python"}
{"in": "def is_code_block(node):<nl><tab>return (node.tagname == 'literal_block'<nl><tab><tab><tab>and 'code' in node.attributes['classes'])<nl><nl>code_blocks = doctree.traverse(condition=is_code_block)<nl>source_code = [block.astext() for block in code_blocks]", "out": "docutilsを使用したrestructuredtextからのコードディレクティブからのコードの抽出", "out_en": "extract code from code directive from restructuredtext using docutils"}
{"in": "for k in sorted(d, key=d.get, reverse=True):<nl><tab>print(\"{:>10}{:>20}\".format(k, d[k]))", "out": "Pythonで.formatを使用して辞書を印刷する", "out_en": "Printing a dictionary using .format in python"}
{"in": "def f(x):<nl><tab>return {<nl><tab><tab>'a': 1,<nl><tab><tab>'b': 2,<nl><tab>}[x]", "out": "Pythonでのswitch文の置き換え", "out_en": "Replacements for switch statement in Python?"}
{"in": "def gen_wrapper(cmp):<nl><tab>class Wrapper(object):<nl><tab><tab>def __init__(self, value): self.value = value<nl><tab><tab>def __cmp__(self, obj): return cmp(self.value, obj.value)<nl><tab>return Wrapper", "out": "Pythonの最小ヒープ", "out_en": "min heap in python"}
{"in": "result = braintree.Transaction.sale({<nl><tab>\"amount\": \"10.00\",<nl><tab>\"payment_method_token\": the_token,<nl><tab>\"options\": {<nl><tab><tab>\"submit_for_settlement\": True<nl><tab>}<nl>})", "out": "Braintree js+pythonで計画のないトランザクションを作成する方法(サブスクリプションをホワイトアウト)", "out_en": "how to create transaction without plan in braintree js+python?(whiteout subscription)"}
{"in": "url = 'http://www.klse.info/companies/listed-companies/alphabet/A'<nl>req = urllib2.Request(url, headers={'User-Agent' : \"Magic Browser\"}) <nl>page = urllib2.urlopen(req).read()", "out": "chromeでurllib2を使用してURLリンクを開くことができない", "out_en": "Unable to open a URL link with using urllib2 in chrome"}
{"in": "GridItem.setPen()", "out": "pyqtgraph.mkPen()をGridItemに適用する方法", "out_en": "How to apply pyqtgraph.mkPen() to a GridItem?"}
{"in": "import http.client<nl>connection = http.client.HTTPConnection('www.python.org')<nl><nl>connection.request('GET', '/')<nl>response = connection.getresponse()<nl>print(response.status)<nl>print(response.msg)<nl>answer = response.read()<nl>print(answer)", "out": "Python-http要求を文字列として送信する", "out_en": "Python - sending http requests as strings"}
{"in": "import pandas as pd<nl>import numpy as np<nl><nl># load your data<nl><nl>data['Time'] = pd.to_datetime(data['Time'])<nl><nl>list_of_indexes = [np.argmin(g['Time']) for l, g in data.groupby('ID Name')]<nl>data.ix[list_of_indexes]", "out": "列内の最新の値を保持し、他のすべての値を削除する方法(パンダ)", "out_en": "How to keep the most recent values and delete all other others in a column (pandas)"}
{"in": "test.func_defaults", "out": "Pythonでデフォルトの引数値にアクセスする", "out_en": "Accessing the default argument values in Python"}
{"in": "WSGIScriptAlias /A /path/to/my/wsgi.py/A<nl>WSGIScriptAlias /B /path/to/my/wsgi.py/B", "out": "mod_wsgi下のDjangoアプリケーション-URLを消費しない方法", "out_en": "Django app under mod_wsgi - how to not consume url"}
{"in": "df = {'dname':[\"123ask\", \"example92\" , \"what3ver\"]}<nl>df['numeric'] = [sum (x.isdigit()  for x in b) for b in df['dname']]<nl>print df['numeric']<nl>#>>> [3, 2, 1]", "out": "Python-データフレーム内のすべての文字列の数字の合計を計算します。", "out_en": "Python- Compute the sum of numerical characters of every string in a dataframe"}
{"in": "# FRAME 1 ##########################################################<nl>self.frame1 = gtk.Frame()<nl>self.contentTable.attach(self.frame1, 0, 1, 0, 1,<nl>gtk.FILL | gtk.EXPAND, gtk.EXPAND | gtk.SHRINK | gtk.FILL, 0, 0)", "out": "gtk Pythonウィンドウに合わせて内容を展開", "out_en": "gtk python expanding content to fit window"}
{"in": "with open(\"input1.txt\") as f, open(\"input2.txt\") as f2,open(\"output.txt\",\"w\") as f3:<nl><tab>f2.next() # skip header to avoid writing  A B C twice<nl><tab>for line in f:<nl><tab><tab>f3.write(line)<nl><tab>f3.write(\"<nl>\") # separate last line from file 1 and first of file 2<nl><tab>for line in f2:<nl><tab><tab>f3.write(line)", "out": "Python:ファイルをリストに結合する", "out_en": "Python: Joining files in a list"}
{"in": "re.findall('\"([^\"]*\\.(?:gif|jpg)[^\"]*)\"', text)", "out": "テキストファイルで見つかった特定のファイルタイプで終わる文字列のすべての出現のリストを作成するにはどうすればいいですか?", "out_en": "How do I create a list of all occurances of a string which ends with a specific file type found in a text file?"}
{"in": "data = data[0]", "out": "リストの内容ではなくパラメータを削除する方法", "out_en": "How to delete a list parameters but not the contents?"}
{"in": "import sys<nl>from PyQt4 import QtGui, QtCore<nl><nl>class CompiledWindow(QtGui.QWidget):<nl><tab>def __init__(self, parent = None):<nl><tab><tab>QtGui.QWidget.__init__(self, parent)<nl><tab><tab>self.setWindowTitle('Reasonably named window')<nl><tab><tab>names = ['Open Logo Picture', 'Open Setup Picture', 'Open first data file', 'Open second data file', 'Enter text about settings', 'Enter other text about settings', 'Enter third setting', 'Enter fourth setting']<nl><tab><tab>grid = QtGui.QGridLayout(self)<nl><tab><tab>self.Logo_button = QtGui.QPushButton(names[0], self)<nl><tab><tab>self.Logo_button.clicked.connect(self.logo_pic)<nl><tab><tab>grid.addWidget(self.Logo_button, 0, 0)<nl><nl><tab>def logo_pic(self):<nl><tab><tab>self.Logo_picture = unicode(QtGui.QFileDialog.getOpenFileName())<nl><tab><tab>print(self.Logo_picture)<nl><nl>app = QtGui.QApplication(sys.argv)<nl>cw = CompiledWindow()<nl>cw.show()<nl>sys.exit(app.exec_())", "out": "PyQt4-シグナルとスロット。ボタンをメソッドに接続できない", "out_en": "PyQt4 - signals and slots. Trouble connecting button to a method"}
{"in": "import re, sys, md5<nl><nl>def p(s, pos, callBack):<nl>  while pos < len(s):<nl><tab>m = re.match(r'(d+)[', s[pos:])<nl><tab>if m:  # repetition?<nl><tab>  number = m.group(1)<nl><tab>  for i in range(int(number)):<nl><tab><tab>endPos = p(s, pos+len(number)+1, callBack)<nl><tab>  pos = endPos<nl><tab>elif s[pos] == ']':<nl><tab>  return pos + 1<nl><tab>else:<nl><tab>  callBack(s[pos])<nl><tab>  pos += 1<nl>  return pos + 1<nl><nl>digest = md5.new()<nl>def feed(s):<nl>  digest.update(s)<nl>  sys.stdout.write(s)<nl>  sys.stdout.flush()<nl><nl>end = p(sys.argv[1], 0, feed)<nl>print<nl>print \"MD5:\", digest.hexdigest()<nl>print \"finished parsing input at pos\", end", "out": "同じ文字を複数回ハッシュする", "out_en": "Hashing same character multiple times"}
{"in": "import os<nl><nl>Export_Dir = os.path.dirname(Export)<nl>Export_Name = os.path.basename(Export)<nl><nl>Output = Export_Dir + \"\\Output_\" + Export_Name<nl>print \"<nl>Output: \" + Output + \"<nl>\"<nl><nl>cmd = grep_loc + \" --file=\" + Serial_List + \" \" + Export + \" > \" + Output<nl>print \"grep usage: <nl>\" + cmd + \"<nl>\"<nl>os.system(cmd)<nl>print \"Output created<nl>\"", "out": "Pythonでファイルにgrepを使用する", "out_en": "Use grep on file in Python"}
{"in": "hist = cv.CreateHist([255], cv.CV_HIST_ARRAY, [[0,255]], 1)<nl>cv.CalcHist([im] , hist)<tab><tab>  <nl>for h in range(255):<nl><tab>zm = cv.QueryHistValue_1D(hist, h)<nl><tab>objectArea.append([int(zm)])", "out": "バイナリイメージ内の複数のブロブの領域Python", "out_en": "Area of multiple blobs in a binary image python"}
{"in": "DataFrame.update(other, join='left', overwrite=True,<nl><tab><tab><tab><tab> filter_func=None, raise_conflict=False)", "out": "インデックスと列の両方によるMultiIndex列を持つ2つのPandas DataFrameの結合/結合/追加", "out_en": "Merge/Join/Append two Pandas DataFrames with MultiIndex columns by both index and cols"}
{"in": "m = [<nl><tab>{'title': 'Song 1', 'artist': 'Artist 1',<nl><tab><tab>'Album': 'Album 1', 'Path': 'path 1'},<nl><tab>{'title': 'Song 2', 'artist': 'Artist 1 Ft 2',<nl><tab><tab>'Album': 'Album 1', 'Path': 'path 2'},<nl><tab>{'title': 'Song 3', 'artist': 'Artist 1 Ft 3',<nl><tab><tab>'Album': 'Album 1', 'Path': 'path 3'}<nl>]<nl><nl>from collections import defaultdict<nl><nl># Group all the artists, as per the Album name<nl>d = defaultdict(list)<nl>for item in m:<nl><tab>d[item[\"Album\"]].append(item[\"artist\"])<nl><nl># Gather paths corresponding to the Albums<nl>p = {item[\"Album\"]: item[\"Path\"] for item in m}<nl><nl># Recreate a list of all albums with artist names joined<nl>result = []<nl>for album in d:<nl><tab>result.append({<nl><tab><tab>\"Album\" : album,<nl><tab><tab>\"artist\": \"; \".join(d[album]),<nl><tab><tab>\"Path\"  : p[album]<nl><tab>})<nl><nl>print result", "out": "Python:キーと値のペアに基づいて辞書をグループ化する方法", "out_en": "Python: How to group dictionaries based on a key value pair"}
{"in": "def divide(dividends, divisors):<nl><tab>ret = dict()<nl><tab>for key, dividend in dividends.iteritems():<nl><tab><tab>if key in divisor:<nl><tab><tab><tab>ret[key] = dividend/divisors[key]<nl><tab><tab>else:<nl><tab><tab><tab>ret[key] = dividend<nl><tab>return ret", "out": "辞書の値を別の辞書の値で除算するPython", "out_en": "Dividing values of dictionaries by values of another dictionary python"}
{"in": "def toJSON(self):<nl><tab>clone = copy.deepcopy(self)<nl><tab>if getattr(clone.data, '_state', False):<nl><tab><tab>del clone.data._state<nl><tab>return jsonpickle.encode(clone, unpicklable=False)", "out": "django_state属性をjsonpickle.encodeから除外する簡単な方法", "out_en": "Easy way to exclude django _state attribute from jsonpickle.encode"}
{"in": "import gdata.gauth<nl><nl>Client_id='xxx';<nl>Client_secret='yyy'<nl>Scope='https://spreadsheets.google.com/feeds/'<nl>User_agent='myself'<nl><nl>token = gdata.gauth.OAuth2Token(client_id=Client_id,client_secret=Client_secret,scope=Scope,user_agent=User_agent)<nl>print token.generate_authorize_url(redirect_uri='urn:ietf:wg:oauth:2.0:oob')<nl>code = raw_input('What is the verification code? ').strip()<nl>token.get_access_token(code)<nl>print \"Refresh token<nl>\"<nl>print token.refresh_token<nl>print \"Access Token<nl>\"<nl>print token.access_token", "out": "Gdata Python Google Apps認証", "out_en": "Gdata python Google apps authentication"}
{"in": "if len(data) == 0:<nl><tab>plt.plot([])<nl>else:<nl><tab>plt.histogram(data)", "out": "matplotlibを使って空のヒストグラムを作成する方法", "out_en": "How to make an empty histogram with matplotlib?"}
{"in": "def queryset(self, request):<nl><tab><tab>qs = super(ContentAdmin, self).queryset(request)<nl><tab><tab>return qs.filter(score__name='Twitter').order_by('-score__score')", "out": "Django Admin:関連する外部キーの値順", "out_en": "Django Admin: Order by value on related Foreign Key"}
{"in": "wmi_sql = wmi.WMI(SQLServer_raw, user=\"%s\\\\%s\" % (sql_domain, sql_user), <nl><tab>password=sql_pass)", "out": "WMI呼び出し内で変数を割り当てる方法", "out_en": "How do I assign variables within WMI calls?"}
{"in": "import matplotlib.pyplot as plt<nl>img = plt.imread(filename)<nl><nl># >>> img<nl># array([[38948, 41457, 37714, ..., 61511, 61785, 61824],<nl>#<tab>   [39704, 38083, 36690, ..., 61419, 60086, 61910],<nl>#<tab>   [41449, 39169, 38178, ..., 60192, 60969, 63538],<nl>#<tab>   ...,<nl>#<tab>   [37963, 39531, 40339, ..., 62351, 62646, 61793],<nl>#<tab>   [37462, 37409, 38370, ..., 61125, 62497, 59770],<nl>#<tab>   [39753, 36905, 38778, ..., 61922, 59565, 60035]], dtype=uint16)", "out": "Python PILが圧縮されていない16ビットTIFFイメージと格闘する", "out_en": "Python PIL struggles with uncompressed 16-bit TIFF images"}
{"in": "del a[0][0]", "out": "Pythonでリストから要素を削除する方法は?", "out_en": "How to delete element from list in Python?"}
{"in": "import matplotlib.pyplot as plt<nl>from numpy.random import randn<nl><nl># plot something<nl>fig, ax = plt.subplots()<nl>cax = ax.imshow(randn(100,100))<nl><nl># create the color bar<nl>cbar = fig.colorbar(cax)<nl>cbar.set_label('dBZ', color = \"white\")<nl><nl># update the text <nl>t = cbar.ax.get_yticklabels();<nl>labels = [item.get_text() for item in t]<nl>cbar.ax.set_yticklabels(labels, color = 'white')<nl>plt.show()", "out": "Cbar凡例テキストPythonの色を変更します", "out_en": "Change color of cbar legend text python"}
{"in": "re.sub(r'(?<=abc)\\d{1,3}', '456', string)", "out": "正規表現のヘルプ-Python", "out_en": "Help with a regular expression - Python"}
{"in": "list_of_pixels = list(im.getdata())<nl># Do something to the pixels...<nl>im2 = Image.new(im.mode, im.size)<nl>im2.putdata(list_of_pixels)", "out": "RGBタプルのリストを使用してPILでイメージを作成する方法は?", "out_en": "How do I create an image in PIL using a list of RGB tuples?"}
{"in": "d = {'dog': [['4.1', '7.0', 'dog'], ['1.2', '3.4', 'dog']], 'cat': [['1', '8.2', '5.501', 'cat'], ['6.5', '8', '9.1', 'cat']]}<nl><nl>avg_dict = {}<nl>for key in d:<nl><tab>avg_list = []<nl><tab>i = 0<nl><tab>while (i < len(d[key][0]) - 1):<nl><tab><tab>avg_list.append((float(d[key][0][i]) + float(d[key][1][i])) /2.0)<nl><tab><tab>i += 1<nl><tab>avg_dict[key] = avg_list<nl><nl>print(avg_dict)", "out": "ディクショナリの値でネストされたリストから列の平均を検索する", "out_en": "Finding the average of columns from nested lists in a dictionary's value"}
{"in": "execute()", "out": "Fabricでは、ラッパー関数をどのように定義しますか?", "out_en": "How do you define a wrapper function in Fabric?"}
{"in": "import imp<nl>import os<nl>MODULE_EXTENSIONS = ('.py', '.pyc', '.pyo')<nl><nl>def package_contents(package_name):<nl><tab>file, pathname, description = imp.find_module(package_name)<nl><tab>if file:<nl><tab><tab>raise ImportError('Not a package: %r', package_name)<nl><tab># Use a set because some may be both source and compiled.<nl><tab>return set([os.path.splitext(module)[0]<nl><tab><tab>for module in os.listdir(pathname)<nl><tab><tab>if module.endswith(MODULE_EXTENSIONS)])", "out": "パッケージ内のPythonモジュールの名前を一覧表示する標準的な方法はありますか。", "out_en": "Is there a standard way to list names of Python modules in a package?"}
{"in": "def save(self, force_insert=False, force_update=False):<nl><tab>new_task = False<nl><tab>if not self.id:<nl><tab><tab>new_task = True<nl><tab>super(Task, self).save(force_insert, force_update)<nl><tab>end = self.startDateTime + timedelta(minutes=24*60)<nl><tab>title = \"This is test Task\"<nl><tab>if new_task:<nl><tab><tab>event = Event(start=self.startDateTime, end=end,title=title,<nl><tab><tab><tab><tab>  description=self.description)<nl><tab><tab>event.save()<nl><tab><tab>rel = EventRelation.objects.create_relation(event, self)<nl><tab><tab>rel.save()<nl><tab><tab>try:<nl><tab><tab><tab>cal = Calendar.objects.get(pk=1)<nl><tab><tab>except Calendar.DoesNotExist:<nl><tab><tab><tab>cal = Calendar(name=\"Community Calendar\")<nl><tab><tab><tab>cal.save()<nl><tab><tab>cal.events.add(event)<nl><tab>else:<nl><tab><tab>event = Event.objects.get_for_object(self)[0]<nl><tab><tab>event.start = self.startDateTime<nl><tab><tab>event.end = end<nl><tab><tab>event.title = title<nl><tab><tab>event.description = self.description<nl><tab><tab>event.save()", "out": "既存のアプリケーションでdjango-schedulerアプリケーションを使用する方法", "out_en": "How to use django-scheduler app in existing app"}
{"in": "from PyQt4 import QtGui<nl>from PyQt4 import QtWebKit<nl><nl>class DisplayHTML(QtWebKit.QWebView):<nl><nl><tab>def __init__(self, html, parent=None):<nl><tab><tab>super().__init__(parent)<nl><tab><tab>self.setHtml(html)<nl><nl>if __name__ == '__main__':<nl><tab>import sys<nl><tab>app = QtGui.QApplication(sys.argv)<nl><tab>html_template = \"<html><p>Hello, {first}, how {second} you {third}?</p></html>\"<nl><tab>values_dict = {<nl><tab><tab>'first': 'Joe',<nl><tab><tab>'second': 'are',<nl><tab><tab>'third': 'today',<nl><tab>}<nl><tab>html_ready_to_render = html_template.format(**values_dict)<nl><tab>window = DisplayHTML(html_ready_to_render)<nl><tab>window.show()<nl><tab>sys.exit(app.exec_())", "out": "Qt/pyQt/PySide-印刷用のドキュメントテンプレートを作成します。", "out_en": "Qt/pyQt/PySide - Create document template for printing"}
{"in": "from dateutil import parser<nl>parse_time = lambda s: parser.parse(s, ignoretz = True)<nl><nl>func_map = \"\"\"<nl>function() {<nl><tab>if (this.hasOwnProperty(\"time\"))<nl><tab><tab>emit(this.time.getUTCFullYear() + \"/\" + (this.time.getUTCMonth() + 1) + \"/\" + this.time.getUTCDate(),<nl><tab><tab>{<nl><tab><tab><tab>count: 1,<nl><tab><tab><tab>not_deleted: (1 - this.deleted)<nl><tab><tab>});<nl>}<nl>\"\"\"<nl><nl>func_reduce = \"\"\"<nl>function(key, values) {<nl><tab>var result = {count: 0, not_deleted: 0};<nl><nl><tab>values.forEach(function(value) {<nl><tab><tab>result.count += value.count;<nl><tab><tab>result.not_deleted += value.not_deleted;<nl><tab>});<nl><nl><tab>return result;<nl>}<nl>\"\"\"<nl><nl>with my_mongo() as m:<nl><tab>result = m.data.inline_map_reduce(func_map, func_reduce)<nl><tab>dataset = {parse_time(day['_id']): day['value']['not_deleted'] for day in result}<nl><tab>dataset2 = {parse_time(day['_id']): day['value']['count'] for day in result}", "out": "matplotlibを使用したMongodbデータ統計の視覚化", "out_en": "Mongodb data statistics visualization using matplotlib"}
{"in": "clean()", "out": "ValidationErrorを発生させ、レスポンスを返すにはどうすればよいですか。", "out_en": "How to raise a ValidationError AND return a response?"}
{"in": "oWord.Tables[1].Range.ParagraphFormat.Alignment = WdParagraphAlignment.wdAlignParagraphCenter;", "out": "ページの中央に単語テーブルを割り当てる方法", "out_en": "how to assign a word table in the center of the page"}
{"in": "def save(self, *args, **kwargs):<nl><tab># save the instance, do this first so that we have an id<nl><tab>super(MyModelClass, self).save(*args, **kwargs)<nl><tab># if it was a new instance fid is not set yet<nl><tab>if self.id and not self.fid:<nl><tab><tab>self.fid = encode(self.id)<nl><tab><tab># save the instance again now that we've set fid<nl><tab><tab>super(MyModelClass, self).save(*args, **kwargs)", "out": "Django Saveメソッドはモデル・インスタンスを2回更新する必要があります", "out_en": "Django Save method needs to update model instance twice"}
{"in": "hid = plt.pcolormesh(X,Y, data, antialiased=True)<nl><nl>#here we cover up the region that we just plotted in<nl>r3 = [1 for i in range(360)]<nl>theta3 = np.arange(360)*np.pi/180.<nl>plt.fill(theta3, r3, 'w')<nl><nl>#now we can go through and fill in all the regions<nl>for j in range(len(r)):<nl><tab>rbox = np.array([r[j], r[j], r[j]+ rstep, r[j] + rstep])<nl><tab>for i in range(len(theta)):<nl><tab><tab>thetabox = np.array([theta[i], theta[i] + tstep, theta[i] + tstep, theta[i]])<nl><tab><tab>x = rbox*np.cos(thetabox)<nl><tab><tab>y = rbox*np.sin(thetabox)<nl><tab><tab>colorv = np.sin(r[j]/10.*np.pi)<nl><tab><tab>plt.fill(thetabox,rbox, facecolor = my_cmap(colorv))<nl>#And now we can plot the color bar that fits the data Tada :)<nl>plt.colorbar()<nl>plt.show()", "out": "plt.fillで作成されたプロットのカラーバーの作成", "out_en": "Creating a colour bar for a plot made with plt.fill"}
{"in": "import codecs<nl>raw_file=open('Documents/t_alibaba_data.csv', 'r')<nl>result=open('Documents/result.txt','w')<nl>for line in raw_file.readlines():<nl><tab>entry=line.split(\",\")<nl><tab>deco=entry[3].decode(\"gbk\").strip()<nl><tab>month=deco[0]<nl><tab>if len(deco)==5:<nl><tab><tab>day=int(deco[2])*10+int(deco[3])<nl><tab>else:<nl><tab><tab>day=int(deco[4])<nl><tab>result.write(\",\".join(entry[:3])+\",\"+str(month)+\",\"+str(day)+\"<nl>\")<nl>result.close()", "out": "CSVデータの読み込み中に特定の文字列を削除する", "out_en": "Delete particular string while reading CSV data"}
{"in": "query = Notification.query.filter(Notification.id.in_(my_list)).all()", "out": "フラスコsqlalchemy上で複数の値を持つフィルター", "out_en": "filter with more than one value on flask-sqlalchemy"}
{"in": "import os<nl><nl>var = os.popen('xsel').read()<nl>print var", "out": "xsel-Pythonで選択されたテキストを取得する方法", "out_en": "How to get selected text with xsel - Python"}
{"in": "trial = pgv.AGraph(strict=False, overlap=False, splines='true')<nl>#or   <nl>trial = pgv.AGraph(strict=False, overlap=False, splines='spline')", "out": "エッジがpygraphvizのノードと交差しないようにする", "out_en": "Preventing edges from crossing nodes in pygraphviz"}
{"in": "def content_file_name(instance, filename):<nl><tab>print instance<nl><tab>print filename<nl><tab>file = os.path.exists(\"media/file/\"+str(filename))<nl><tab>print file<nl><tab>if file:<nl><tab><tab>os.remove(\"media/file/\"+str(filename))<nl><tab>return \"file/\"+str(filename)", "out": "djangoでのファイル名の変更", "out_en": "changing file name in django"}
{"in": "numpy.zeros((3,3,3))", "out": "Pythonでネストされたリストを作成する方法", "out_en": "How to create nested lists in python?"}
{"in": "db.online_users.insert(user)", "out": "Mongokitコレクションにオブジェクトを追加する", "out_en": "Mongokit add objects to collection"}
{"in": "my_list = [\"Value1\", \"Value2\"]<nl>json = simplejson.dumps(my_list)<nl># send json", "out": "PythonでのXMLの生成", "out_en": "Generating XML in Python"}
{"in": "[aa+bb for aa,bb in zip(a,b)]", "out": "Pythonを使用してコード内で[(1,2,3,4),(5,6,7,8)]を取得する方法", "out_en": "how to get [(1, 2, 3, 4), (5, 6, 7, 8)] in my code using python"}
{"in": "class Child(Parent):<nl><tab>foobar = Parent.foobar + ['world']", "out": "Pythonで継承されたクラス変数の変更", "out_en": "Inherited class variable modification in Python"}
{"in": "qry = (session.query(<nl><tab><tab><tab><tab>table.c.field1,<nl><tab><tab><tab><tab>table.c.field2,<nl><tab><tab><tab><tab># #strftime* for year-month works on sqlite; <nl><tab><tab><tab><tab># @todo: find proper function for mysql (as in the question)<nl><tab><tab><tab><tab># Also it is not clear if only MONTH part is enough, so that<nl><tab><tab><tab><tab># May-2001 and May-2009 can be joined, or YEAR-MONTH must be used<nl><tab><tab><tab><tab>func.strftime('%Y-%m', table.c.datestamp),<nl><tab><tab><tab><tab>func.count(),<nl><tab><tab><tab><tab>)<nl><tab><tab># optionally check only last 2 month data (could have partial months)<nl><tab><tab>.filter(table.c.datestamp < datetime.date.today() - datetime.timedelta(60))<nl><tab><tab>.group_by(<nl><tab><tab><tab><tab>table.c.field1,<nl><tab><tab><tab><tab>table.c.field2,<nl><tab><tab><tab><tab>func.strftime('%Y-%m', table.c.datestamp),<nl><tab><tab><tab><tab>)<nl><tab><tab># comment this line out to see all the groups<nl><tab><tab>.having(func.count()>1)<nl><tab>  )", "out": "SQLAlchemy:2つのフィールドでグループ化し、日付でフィルタする方法", "out_en": "SQLAlchemy: How to group by two fields and filter by date"}
{"in": "import wx<nl><nl>def ask(parent=None, message='', default_value=''):<nl><tab>dlg = wx.TextEntryDialog(parent, message, defaultValue=default_value)<nl><tab>dlg.ShowModal()<nl><tab>result = dlg.GetValue()<nl><tab>dlg.Destroy()<nl><tab>return result<nl><nl># Initialize wx App<nl>app = wx.App()<nl>app.MainLoop()<nl><nl># Call Dialog<nl>x = ask(message = 'What is your name?')<nl>print 'Your name was', x", "out": "wxPythonを使用したユーザからの入力の取得", "out_en": "Using wxPython to get input from user"}
{"in": "num = 0.1423<nl>print '%06.2f' %num", "out": "先行ゼロと固定小数点を使用したPythonでの数値の書式設定", "out_en": "Format number in python with leading zeros and fixed decimal places"}
{"in": "def flatten_list(l):<nl><tab>new_l = []<nl><tab>for item in l:<nl><tab><tab>if type(item) == type([]):<nl><tab><tab><tab>new_l += flatten_list(item)<nl><tab><tab>else:<nl><tab><tab><tab>new_l.append(item)<nl><tab>return new_l", "out": "Python:未知の多次元配列を1D配列に入れる方法", "out_en": "Python: How to put unknow Multidimentional array in 1D array"}
{"in": "import subprocess<nl>p=subprocess.Popen(args, stdout=subprocess.PIPE)<nl>print p.communicate()[0]", "out": "Pythonでは、os.systemの代わりにどのようにサブプロセスを使用しますか?", "out_en": "In Python, how I do use subprocess instead of os.system?"}
{"in": "vector<Points> contour", "out": "移動するバイナリイメージ内のドットの中心を見つける方法", "out_en": "How to find the center of dots in binary image that is moving"}
{"in": "numbers = []<nl><nl>while len(numbers) < 5:<nl><tab>number = raw_input('Please input 5 numbers: ')<nl><tab>if number.isdigit():<nl><tab><tab>numbers.append(int(number)) #may want to use float here instead of int<nl><tab>else:<nl><tab><tab>print \"You entered something that isn't a number\"<nl><nl>search = raw_input('Search for the numer: ')<nl>if int(search) in numbers:<nl><tab>print \"Found it!\"", "out": "ユーザが入力したPython検索リスト", "out_en": "Python searching list thats inputted by user"}
{"in": "import pylab<nl><nl>my_labels = ['food', 'music', 'clothes']<nl><nl>fig = pylab.figure()<nl>fig.text(0.4,0.95,\"Consumption by Region\")<nl><nl>ax1 = fig.add_subplot(2,2,1)<nl>ax1.pie([1,2,3])<nl>ax1.text(0.6, 1, \"North West\")<nl><nl>ax2 = fig.add_subplot(2,2,2)<nl>ax2.pie([6,4,3])<nl>ax2.text(0.6, 1, \"North East\")<nl><nl>ax3 = fig.add_subplot(2,2,3)<nl>ax3.pie([1,4,3])<nl>ax3.text(0.6, 1, \"South West\")<nl><nl>ax4 = fig.add_subplot(2,2,4)<nl>ax4.pie([9,1,3])<nl>ax4.text(0.6, 1, \"South East\")<nl><nl>pylab.legend(my_labels, title=\"Legend\", loc=(-1.5,0.9))<nl><nl>pylab.show()", "out": "サブプロットにラベルを表示しない", "out_en": "Don't display labels in subplot"}
{"in": "from dateutil.parser import parse<nl>date = 'Thu, 14 Mar 2013 13:33:07 -0400'<nl>parse(date).strftime(\"%Y-%m-%d %H:%M:%S\")", "out": "Pythonの文字列を変換してMySQL DBに挿入する日付列date", "out_en": "Convert String In Python to insert into MySQL DB date column date"}
{"in": "for i in hd_com.comment_message[1:500]:<nl><tab>fl=open('delete.txt','wb')", "out": "stdoutに出力するが、Pythonでファイルに書き込むことができない", "out_en": "Prints on stdout but unable to write to file in Python"}
{"in": "chart.data = [(20.5,32.4),(0.01, 0.01)]", "out": "Python Repotrlab縦棒グラフの間隔の不一致", "out_en": "Python Repotrlab vertical bar chart spacing inconsistency"}
{"in": "import sys<nl>from PyQt4 import QtGui, uic<nl><nl>class TestGUI(QtGui.QMainWindow):<nl><tab>def __init__(self):<nl><tab><tab>super(TestGUI, self).__init__()<nl><tab><tab>uic.loadUi('TEST.ui', self)<nl><tab><tab>self.actionAdd_Tab.triggered.connect(self.handleAddTab)<nl><nl><tab>def handleAddTab(self):<nl><tab><tab>contents = QtGui.QWidget(self.tabWidget)<nl><tab><tab>layout = QtGui.QVBoxLayout(contents)<nl><tab><tab># add other widgets to the contents layout here<nl><tab><tab># i.e. layout.addWidget(widget), etc<nl><tab><tab>self.tabWidget.addTab(contents, 'Tab One')<nl><nl>if __name__ == '__main__':<nl><tab>app = QtGui.QApplication(sys.argv)<nl><tab>window = TestGUI()<nl><tab>window.show()<nl><tab>sys.exit(app.exec_())", "out": "QTabWidgetに新しいタブを追加するためのPyQt4メニュー機能", "out_en": "PyQt4 menu acction to add new tab to QTabWidget"}
{"in": "class MyObject( object ):<nl><tab>def __init__( self, args ):<nl><tab><tab>pass # Something Expensive<nl><nl>class MyObjectFactory( object ):<nl><tab>def __init__( self ):<nl><tab><tab>self.pool = {}<nl><tab>def makeMyObject( self, args ):<nl><tab><tab>if args not in self.pool:<nl><tab><tab><tab>self.pool[args] = MyObject( args )<nl><tab><tab>return self.pool[args]", "out": "同じ入力パラメータを持つオブジェクトを再作成しないクラスの作成方法", "out_en": "How to create a class that doesn't re-create an object with identical input parameters"}
{"in": "class Projet(object):<nl><nl><tab>def pathDirectory(self):<nl><tab><tab>print \"- - in pathDirectory - -\"<nl><tab><tab>self.pathDir= str(QFileDialog.getExistingDirectory(ui.pathTab1, 'Select Path','', QFileDialog.ShowDirsOnly))<nl><nl><tab>def goFunc(self):<nl><tab><tab>print \"- - In goFunc - -\"<nl><tab><tab>print self.pathDir<nl><nl>if __name__ == \"__main__\":<nl><tab>p = Projet()<nl><tab>p.pathDirectory()<nl><tab>p.goFunc()", "out": "メソッド間での値の共有", "out_en": "Sharing values between methods"}
{"in": "color_dict = { 'Allan':'red', 'Betty':'blue', 'Chris':'black', 'Diane':'green','Eugene':'purple' }<nl><nl>plt.scatter( data['a'], data['b'], color=[ color_dict[i] for i in data['c'] ] )", "out": "文字列に対応するカラーのPython散布図", "out_en": "Python scatter plot with colors corresponding to strings"}
{"in": "df.loc[5:6,:] = df.loc[3:4,:].values", "out": "パンダデータフレーム-行を他の行と同じに設定", "out_en": "Pandas Dataframe - Set Rows Equal to Other Rows"}
{"in": "def del_task(self, *args):<nl><tab>if self.task_list.adapter.selection:<nl><tab><tab>selection = self.task_list.adapter.selection[0].text<nl><tab><tab>self.task_list.adapter.data.remove(selection)<nl><tab><tab>self.task_list._trigger_reset_populate()", "out": "Python Kivy ListView:選択したListItemButtonを削除する方法は?", "out_en": "Python Kivy ListView: How to delete selected ListItemButton?"}
{"in": "parent.list_child_properties()<nl>Gtk.ContainerClass.list_child_properties(parent)", "out": "Gtk3子ウィジェットを別のウィジェットに置き換える", "out_en": "Gtk3 replace child widget with another widget"}
{"in": "today = datetime.today()<nl>def get_data():<nl><tab>\"\"\" @return: [(student, followup), (student, followup), ...] \"\"\"<nl><tab>q = (session.query(Student) # get all students<nl><tab><tab>.outerjoin(Followup, and_(Student.id == Followup.student_id, func.date(Followup.next_date)==today)) # @NOTE: check for today might need to be different depending on the database used. Current code should work for mysql<nl><tab><tab>.options(contains_eager(Student.followup)) # let SA know that \"followup\" is loaded (line above)<nl><tab><tab>.filter(Student.status == \"active\") # filter only for active students<nl><tab><tab>)<nl><tab>res = [(s, s.followup) for s in q.all()]<nl><tab>return res<nl><nl>data = get_data()<nl><nl># debug<nl>for s, f in data:<nl><tab>print s.name<nl><tab>for _f in f:<nl><tab><tab>print \"  \", _f", "out": "各ユーザーの今日の通知を取得する最善の方法", "out_en": "Best way to get the todays notifications for each user"}
{"in": "import smtplib<nl>from smtplib import SMTP<tab>   <nl><nl>try:<nl><tab>sender = 'xxx@gmail.com'<nl><tab>receivers = ['xxx.com']<nl><nl><tab>message = \"\"\" this message sending from python<nl><tab>for testing purpose<nl><tab>\"\"\"<nl><tab>smtpObj = smtplib.SMTP(host='smtp.gmail.com', port=587)<nl><tab>smtpObj.ehlo()<nl><tab>smtpObj.starttls()<nl><tab>smtpObj.ehlo()<nl><tab>smtpObj.login('xxx','xxx')<nl><tab>smtpObj.sendmail(sender, receivers, message)<nl><tab>smtpObj.quit()<nl><tab>print \"Successfully sent email\"<nl>except smtplib.SMTPException,error:<nl><tab>print str(error)<nl><tab>print \"Error: unable to send email\"", "out": "Pythonから電子メールを送信しようとしています", "out_en": "Trying to send email from python"}
{"in": "from datetime import datetime, timedelta<nl>import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>size = 10<nl><nl># List of Dates<nl>base = datetime.now()<nl>date_list = [base - timedelta(weeks=x) for x in range(0, size)]<nl>date_list = [i.strftime(\"%Y %m %d\") for i in date_list]<nl><nl>b = np.random.random([size,size])<nl>plt.figure(2)<nl>c = np.arange(0,size)<nl>plt.pcolormesh(c,c,b)<nl>plt.xticks(c, date_list, rotation='vertical')<nl>plt.subplots_adjust(bottom=0.2)<nl>plt.show()", "out": "Python:pcolormeshでX軸上に日時を追加する方法", "out_en": "Python: How to add datetime to x-axis in pcolormesh"}
{"in": "from django.db.models import Sum", "out": "django where句に基づいて列の合計を取得します", "out_en": "django get sum of column based on where clause"}
{"in": "import os<nl>count = 0<nl>for doc in os.listdir('C:\\Users\\B\\Desktop\\<nl>ewdocs'):<nl><tab>if doc.endswith(\".txt\"):<nl><tab><tab>with open(doc, 'r') as f:<nl><tab><tab><tab>single_line = ''.join([line for line in f])<nl><tab><tab><tab>single_space = ' '.join(single_line.split())<nl><nl><tab><tab>with open(\"new_doc{}.txt\".format(count) , \"w\") as doc:<nl><tab><tab><tab>doc.write(single_space)<nl><tab><tab>count += 1<nl><tab>else:<nl><tab><tab>continue", "out": "複数行の文書ドキュメントを1つに結合する", "out_en": "Combine multiple lines of text documents into one"}
{"in": "import re<nl>with open(\"in1.txt\") as f:<nl>   lines = f.read()<nl>   m = re.sub(r'(?s)my _car_.*?(?=my|$)', '', lines)<nl>   m = re.sub(r'<nl>+', '<nl>', m)<nl>   print m,", "out": "ファイルの正規表現に一致する部分を削除", "out_en": "Delete regex matching part of file"}
{"in": "import xml.etree.ElementTree as ET<nl>def to_parseable(tree):<nl><tab>t = ET.tostring(tree)<nl><tab>t = t.lower()<nl><tab>return ET.fromstring(t)", "out": "Python ElementTreeの大文字と小文字を区別しないfindall", "out_en": "Case Insensitive findall in Python ElementTree"}
{"in": "class ExceptionLoggingMiddleware(object):<nl><tab>def process_exception(self, request, exception):<nl><tab><tab>import traceback<nl><tab><tab>print traceback.format_exc()", "out": "manage.py runserverの使用中にDjangoでエラーが発生した場合にスタック・トレースをstdoutに出力する", "out_en": "Print a stack trace to stdout on errors in Django while using manage.py runserver"}
{"in": "diff = cv2.matchTemplate(img1, img2, cv2.TM_CCORR_NORMED)<nl>x, y = np.unravel_index(np.argmax(diff), diff.shape)", "out": "SimpleCVの別の場所で画像を見つける", "out_en": "Find image inside another in SimpleCV"}
{"in": "import requests,  bs4<nl><nl>headers = {<nl><tab>\"User-Agent\":<nl><tab><tab>\"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36\"<nl>}<nl>payload = {'as_epq': 'James Clark', 'tbs':'cdr:1,cd_min:01/01/2015,cd_max:01/01/2015', 'tbm':'nws'}<nl>r = requests.get(\"https://www.google.com/search\", params=payload, headers=headers)<nl><nl>soup = bs4.BeautifulSoup(r.content, 'html5lib')<nl>print soup.find(id='resultStats').text", "out": "Pythonを使用したGoogle Scrapeの結果数が間違っている", "out_en": "Wrong number of results in Google Scrape with Python"}
{"in": "return all(c in lettersGuessed for c in secretWord)", "out": "Pythonでリスト内をループする", "out_en": "Looping Inside a list in python"}
{"in": "import os<nl><nl>os.system(\"xterm -e 'your command'\")", "out": "別のコンソールウィンドウでプロセスを開始する", "out_en": "Start a process in a different console window"}
{"in": "from django.core.urlresolvers import reverse<nl>twitterpath = reverse('social:begin', args=('twitter',))", "out": "テンプレートで使用されているPythonソーシャル認証から値にアクセスする方法", "out_en": "How do I access values from python social auth used in template"}
{"in": "t = threading.Timer(30.0, unban)<nl>t.start() # after 30 seconds, unban will be run", "out": "Pythonの遅延ループを最も簡単に実行する方法", "out_en": "Least painful way to run a Python delay loop"}
{"in": "links = []<nl>for i in urls:<nl><tab>try:<nl><tab><tab>data = urllib2.urlopen(str(i)).read()<nl><tab><tab>data = json.loads(data)<nl><tab><tab>links.append(url)<nl><tab>except:<nl><tab><tab>pass", "out": "forループ内の要素を除外する方法", "out_en": "how to filter out elements in a for loop?"}
{"in": "WSGIApplicationGroup %{GLOBAL}", "out": "Apache+mod_wsgiを使用したFlaskアプリケーションでgeventを実行すると、なぜNotImplementedErrorが発生するのでしょうか。", "out_en": "Why gevent on a Flask app with Apache + mod_wsgi is raising NotImplementedError?"}
{"in": "import urllib2<nl><nl>manager = urllib2.HTTPPasswordMgrWithDefaultRealm()<nl>manager.add_password(None, 'https://app.streamsend.com/emails', 'login', 'key')<nl>handler = urllib2.HTTPBasicAuthHandler(manager)<nl><nl>director = urllib2.OpenerDirector()<nl>director.add_handler(handler)<nl><nl>req = urllib2.Request('https://app.streamsend.com/emails', headers = {'Accept' : 'application/xml'})<nl><nl>result = director.open(req)<nl># result.read() will contain the data<nl># result.info() will contain the HTTP headers<nl><nl># To get say the content-length header<nl>length = result.info()['Content-Length']", "out": "PythonでのCURL代替", "out_en": "CURL alternative in Python"}
{"in": "data[col_name] = a_col.apply(lambda x: x if isinstance(x, datetime.datetime) <nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>   and not isinstance(x, pd.tslib.NaTType) else epoch)", "out": "NaTをパンダのエポックに置き換える", "out_en": "Replacing NaT with Epoch in Pandas"}
{"in": "# some code left out for brevity<nl><nl>class InputsModelExtendedForm(ModelForm):<nl><tab>class Meta:<nl><tab><tab>model = InputsModelExtended<nl><nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>service_choices = kwargs.pop('service_choices')<nl><tab><tab>super(InputsModelExtendedForm, self).__init__(*args, **kwargs)<nl><nl><tab><tab>if service_choices:<nl><tab><tab><tab>self.fields['service'] = forms.ChoiceField(choices=service_choices,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>   required=False)<nl><nl># example usage:<nl><nl>def my_view(request):<nl><tab>service_choices = (<nl><tab><tab>('Foo', 'Foo',),<nl><tab><tab>('Bar', 'Bar',),<nl><tab><tab>('Baz', 'Baz',),<nl><tab>)<nl><nl><tab>form = InputsModelExtendedForm(request.POST or None, service_choices=service_choices)", "out": "Djangoモデルフォーム選択セットの変更", "out_en": "modifying django modelform select set"}
{"in": "text.lower()", "out": "文字を小文字に変換する", "out_en": "Convert letters to lower case"}
{"in": "MyModel.objects.create(**{key: value for key, value in data_dict.iteritems() if key in MyModel._meta.get_all_field_names()})", "out": "無関係な要素を含む辞書をDjango object.createメソッドに渡すことはできますか?", "out_en": "Is it possible to pass a dictionary with extraneous elements to a Django object.create method?"}
{"in": "class Example(Document):<nl><tab>pass<nl><nl>db = Example._get_db()<nl>for collection_name in db.collection_names():<nl><tab>print collection_name", "out": "mongoengineのデータベースでコレクションを反復処理する方法", "out_en": "How do I iterate over collections in a database in mongoengine?"}
{"in": "x1=np.linspace(0,np.pi)<nl>y1=np.sin(x1)<nl><nl>y2=np.sin(x1)<nl><nl>rect1=[0.1,0.1,0.8,0.8]<nl>ax1=plt.axes(rect,frameon=True)<nl>ax1.yaxis.tick_left()<nl>plt.plot(x1,y1)<nl>plt.ylabel('axis 1')<nl>plt.xlabel('x')<nl><nl><nl>rect2=[0.1,1,0.2,0.2]<nl>ax2=plt.axes(rect2,frameon=False)<nl>ax2.yaxis.tick_right()<nl>ax2.plot(x1,y2)<nl><nl>percent = 0.2<nl>xp = percent*np.pi<nl>yp = np.sin(xp)<nl>ax2.plot(xp,yp, marker='o')<nl><nl>ax2.yaxis.set_label_position('right')<nl>ax2.axes.get_xaxis().set_visible(False)<nl>ax2.axes.get_yaxis().set_visible(False)<nl><nl>ax2.annotate('%d Percent' %(percent*100), xy=(0.5, 0.))<nl><nl><nl>rect3=[0.3,1,0.2,0.2]<nl>ax3=plt.axes(rect3,frameon=False)<nl>ax3.yaxis.tick_right()<nl>ax3.plot(x1,y2)<nl><nl>percent = 0.4<nl>xp = percent*np.pi<nl>yp = np.sin(xp)<nl>ax3.plot(xp,yp, marker='o')<nl><nl>ax3.yaxis.set_label_position('right')<nl>ax3.axes.get_xaxis().set_visible(False)<nl>ax3.axes.get_yaxis().set_visible(False)<nl><nl>ax3.annotate('%d Percent' %(percent*100), xy=(0.5, 0.))<nl><nl><nl><nl><nl>plt.show()", "out": "matplotlibのサブプロット内でpdfイメージを使用する", "out_en": "using a pdf image inside a subplot in matplotlib"}
{"in": "ok_words = set([\"a\", \"b\", \"c\", \"e\"])<nl><nl>def filter_words(words):<nl><tab>return [word for word in words if word in ok_words]", "out": "渡す,テキストをPythonの辞書てテキストを", "out_en": "passing text through a dictionary in Python"}
{"in": "dist([4.0, 7.0], [2.0, 9.0]) - 2.0", "out": "点[4,7]と半径2の[2,9]を中心とする円上の最も近い点との間の距離はどれくらいですか?少なくとも4桁の精度を提供してください。", "out_en": "What is the distance between point [4, 7] and the nearest point on the circle centered at [2, 9] with radius 2? Provide at least 4 digits of accuracy"}
{"in": "self.request.GET.getlist('pax')", "out": "取得,要求内の複数の同じキーワードパラメータから値を", "out_en": "getting values from multiple same keyword parameter in request"}
{"in": "colors = weights.apply(lambda x: (0,0,1,x)).tolist()", "out": "Python matplotlib:分散プロットの各ポイントに異なる不透明度を割り当てる方法", "out_en": "Python matplotlib: How to assign a different opacity to each point in a scatter plot?"}
{"in": "df2 = df[((df.index.month == 6) & (df.index.day > 20)) | (df.index.month > 6)]", "out": "Pandas Python年の特定の日以降のすべてのデータを選択", "out_en": "pandas python select all data after day of year"}
{"in": "import os<nl><nl>zfName = 'simonsZip.kmz'<nl>foo = zipfile.ZipFile(zfName, 'w')<nl>foo.write(\"temp.kml\")<nl># Adding files from directory 'files'<nl>for root, dirs, files in os.walk('files'):<nl><tab>for f in files:<nl><tab><tab>foo.write(os.path.join(root, f))<nl>foo.close()<nl>os.remove(\"temp.kml\")", "out": "Pythonでフォルダとファイルをzip圧縮する方法", "out_en": "How to zip a folder and file in python?"}
{"in": "file.info(\"/etc\")<nl>##<tab>  size isdir mode<tab><tab><tab>   mtime<tab><tab><tab>   ctime<nl>## /etc 3638  TRUE  755 2015-07-22 10:51:58 2015-07-22 10:51:58<nl>##<tab><tab><tab><tab><tab>atime uid gid uname grname<nl>## /etc 2015-08-01 08:11:43   0   0  root  wheel<nl><nl>file.info(\"/etc/hosts\")<nl>##<tab><tab><tab>  size isdir mode<tab><tab><tab>   mtime<tab><tab><tab>   ctime<nl>## /etc/hosts 787448 FALSE  644 2015-07-19 17:34:59 2015-07-19 17:34:59<nl>##<tab><tab><tab><tab><tab><tab>  atime uid gid uname grname<nl>## /etc/hosts 2015-08-06 12:30:26   0   0  root  wheel<nl><nl>file_test(\"-f\", \"/etc/hosts\") # is a file and not a dir<nl>## [1] TRUE<nl><nl>file_test(\"-d\", \"/etc\") # is a dir<nl>## [1] TRUE<nl><nl>dir.exists(\"/etc\") # R 3.2.0+<nl>## [1] TRUE<nl><nl>file.exists(\"/etc/hosts\")<nl>## [1] TRUE<nl><nl>Sys.readlink(\"/etc\") # will return something if it's a symbolic link<nl>## [1] \"private/etc\"<nl><nl>Sys.readlink(\"/tmp\")<nl>## [1] \"private/tmp\"<nl><nl>Sys.readlink(\"/bin\") # or \"\" if not<nl>## [1] \"\"", "out": "引数がR内のファイルかディレクトリかを確認するにはどうすればよいですか?", "out_en": "How to check if an argument is a file or a directory in R?"}
{"in": "import os, sys<nl><nl>dataDir = 'fullpath of directory with images'<nl>os.chdir(dataDir)<nl><nl><nl>os.system('SETLOCAL EnableDelayedExpansion')<nl>#This is the path of the imagemagick installation convert command.  <nl>#The invalid parameter I was  getting was because the computer was trying to <nl>#use a different convert command.  This code sets convert as a different<nl>#variable and then calls that new variable as the convert command.  <nl>os.system('SET IMCONV=\"C:\\Program Files\\ImageMagick-6.9.1-Q16\\Convert\"')<nl>os.system('%IMCONV% *.jpg animated.gif')", "out": "ImageMagickを使用したPythonでのgifの作成", "out_en": "Creating a gif in python using ImageMagick"}
{"in": "def get_brand_count(filename, brand):<nl><tab>return int(subprocess.check_output('''zcat %s |  '''<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>   '''awk 'BEGIN {FS=\";\"};{print $6}' | '''<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>   '''grep -i %r | wc -l''' %<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>   (filename, brand), shell=True))<nl><nl>brands = 'hummer', 'bmw', 'audi'<nl>with open('results.csv', 'wb') as csvfile:<nl><tab>csvwriter = csv.writer(csvfile)<nl><tab>csvwriter.writerow(brands)  # csv header row (if desired)<nl><tab>for myfilename in glob.iglob('*.gz'):<nl><tab><tab>csvwriter.writerow([get_brand_count(myfilename, brand)<nl><tab><tab><tab><tab><tab><tab><tab><tab>for brand in brands])", "out": "python-ループ中にcsvファイルに書き込む方法", "out_en": "python - how to write to a csv file while in a loop"}
{"in": "class History(Article, IHasAttachments):<nl><tab>date = DateField(default=datetime.date.today)", "out": "djangoモデルの継承と管理アプリケーション", "out_en": "django model inheritance and admin application"}
{"in": "users = session.query(User).all()<nl>for user in users:<nl><tab>users_classes = ','.join([c.class_name for c in user.classes])<nl><tab>print(\"{0} is {1} in {2}\".format(user.user_firstName,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> user.role.role_name,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> users_classes))", "out": "フラスコで多対多を選択-SQLAlchemy", "out_en": "Select many to many with Flask-SQLAlchemy"}
{"in": "thumbor_kwargs = {}<nl>thumbor_kwargs['image_url'] = 'localhost:8000/media/image.jpg'<nl>thumbor_kwargs['width'] = 80<nl>thumbor_kwargs['filters'] = [<nl><tab>\"quality(80)\",<nl><tab>\"grayscale()\",<nl>]", "out": "Thumborフィルターエフェクトの適用方法", "out_en": "How to apply Thumbor filters effects"}
{"in": "import copy<nl>import types<nl><nl>def _deepcopy_method(x, memo):<nl><tab>return type(x)(x.im_func, copy.deepcopy(x.im_self, memo), x.im_class)<nl>copy._deepcopy_dispatch[types.MethodType] = _deepcopy_method", "out": "Pythonクラスでメソッドのリストを使用できません。ディープコピーが壊れます。回避策はありますか?", "out_en": "Can't use a list of methods in a Python class, it breaks deepcopy. Workaround?"}
{"in": "import os, zipfile<nl><nl>dir_name = 'C:\\\\SomeDirectory'<nl>extension = \".zip\"<nl><nl>os.chdir(dir_name) # change directory from working dir to dir with files<nl><nl>for item in os.listdir(dir_name): # loop through items in dir<nl><tab>if item.endswith(extension): # check for \".zip\" extension<nl><tab><tab>file_name = os.path.abspath(item) # get full path of files<nl><tab><tab>zip_ref = zipfile.ZipFile(file_name) # create zipfile object<nl><tab><tab>zip_ref.extractall(dir_name) # extract file to dir<nl><tab><tab>zip_ref.close() # close file<nl><tab><tab>os.remove(file_name) # delete zipped file", "out": "Python 2.7.5を使用して、フォルダ内のすべての圧縮ファイルを同じフォルダに解凍する", "out_en": "Unzip all zipped files in a folder to that same folder using Python 2.7.5"}
{"in": "xpath = \"//table[2]/tr/td//text()[re:match(., '\\\\S')]\"<nl><nl>filtered_html = tree.xpath(<nl><tab>xpath,<nl><tab>namespaces={\"re\": \"http://exslt.org/regular-expressions\"})", "out": "複数のテーブルを使用したTimetable Webスクレイピング(Python)", "out_en": "Timetable Web Scraping with multiple tables (Python)"}
{"in": "import os<nl>import subprocess<nl><nl>cwd = os.getcwd()<nl><nl>for i in os.listdir(cwd):<nl><tab>if i.endswith('.ttp'):<nl><tab><tab>o = i + \"-out\"<nl><tab><tab>p = subprocess.call([\"program_name\", \"-input\", i, \"-output\", o])", "out": "Pythonから非Pythonプログラムを呼び出す", "out_en": "Calling a non python program from python?"}
{"in": "counter = len(f.readlines())", "out": "ファイル内の行数を印刷または返す方法", "out_en": "How do i print/return the number of lines in a file"}
{"in": "def test_check_url(self):<nl><tab>url_a = \"http://audaxing.wordpress.com\"<nl><tab>dummy_event = self.generate_dummy_auction_event(url_a)<nl><tab>with patch(\"sys.stdin\") as mock_stdin:<nl><tab><tab>MaddUrl = Mock()<nl><tab><tab>Minit = Mock(return_value=None)<nl><tab><tab>with patch('Foo.crawler.crawlerapp.CrawlerApp.__init__', Minit, create=True):<nl><tab><tab><tab>with patch('Foo.crawler.crawlerapp.CrawlerApp.addUrl', MaddUrl, create=True):<nl><nl><tab><tab><tab><tab>ca = Foo.crawler.crawlerapp.CrawlerApp(1)<nl><tab><tab><tab><tab>mock_stdin.read.return_value = EventDataFrame(1, \"TOKEN1\", dummy_event.SerializeToString()).to_bytes()<nl><tab><tab><tab><tab>ca._running = True<nl><tab><tab><tab><tab>input_thread = threading.Thread(target=ca.inputStreamThread)<nl><tab><tab><tab><tab>input_thread.start()<nl><tab><tab><tab><tab>time.sleep(0.5)<nl><tab><tab><tab><tab>ca._running = False<nl><tab>MaddUrl.assert_called_with(url_a)", "out": "オブジェクトのメソッドをモックしようとすると'AttributeError'が発生します", "out_en": "Trying to mock method in Object gives 'AttributeError'"}
{"in": "l = [35,53,[525,6743],64,63,[743,754,757]]<nl><nl>def flatten(xs):<nl><tab>result = []<nl><tab>if isinstance(xs, (list, tuple)):<nl><tab><tab>for x in xs:<nl><tab><tab><tab>result.extend(flatten(x))<nl><tab>else:<nl><tab><tab>result.append(xs)<nl><tab>return result<nl><nl>print flatten(l)", "out": "Pythonでリストの異種リストを単一のリストにフラット化する方法", "out_en": "How to flatten a hetrogenous list of list into a single list in python?"}
{"in": "urls = [ user['url'] for user in loadmain ]", "out": "TypeError:リストのインデックスは整数である必要があります。JSONのstrではありません", "out_en": "TypeError: list indices must be integers, not str with JSON"}
{"in": "re.findall('ABC-[0-9]+', string)", "out": "Pythonのfindall正規表現", "out_en": "Python findall regex"}
{"in": "class Alien(object):<nl><tab>def __init__(self):<nl><tab><tab>self.health = 5<nl><tab>def do_damage(self, amount):<nl><tab><tab>self.health -= amount", "out": "新しい属性を作成せずに値を減らす簡単な方法", "out_en": "Simple way to decrease values without making a new attribute?"}
{"in": "import string<nl><nl>def func(str1, str2):<nl><tab>s1 = set(str1)<nl><tab>s2 = set(str2)<nl><tab># requests are ambiguous \"contained in both strings\" can be either interpreted as intersections or union (i chose intersection)<nl><tab>uni = s1.union(s2)<nl><tab>letters_in_both_strings = [item for item in s1.intersection(s2) if item.isalpha()]<nl><tab>non_letters_in_any_string = [item for item in uni if not item.isalpha()]<nl><tab>all_letters = set(string.ascii_uppercase + string.ascii_lowercase)<nl><tab>return letters_in_both_strings, all_letters.difference(uni), non_letters_in_any_string<nl><nl>str1 = input(\"Enter 1st string:\")<nl>str2 = input(\"Enter 2nd string:\")<nl>a, b, c = func(str1, str2)<nl>print(\"|\" + \"\".join(a) + \"|<nl>|\" + \"\".join(b) + \"|<nl>|\" + \"\".join(c) + \"|<nl>\")", "out": "Pythonでセットを使用して2つの文字列から共通の文字を検索する", "out_en": "Using sets in python to find common letters from two strings"}
{"in": "T_g.append([x for x in rootss(coeff) if np.isreal(x) and x > 0])", "out": "配列から正の実数値のみを保持する", "out_en": "Keeping only real positive value from an array"}
{"in": "from nltk.corpus.reader import XMLCorpusReader<nl>reader = XMLCorpusReader(dir, file)", "out": "NLTKでスペイン語のWordnetを使うには?", "out_en": "How to use the Spanish Wordnet in NLTK?"}
{"in": "def retrive(directory, a_regex):<nl><tab>for filename in glob.glob(os.path.join(directory, '*.txt')):<nl><tab><tab>with open(filename, 'r') as file:<nl><tab><tab><tab>important_stuff = re.findall(a_regex, file.read(), re.S)<nl><tab><tab><tab>my_list = [tuple([j.split()[0] for j in i]) for i in important_stuff]<nl><tab><tab><tab># print my_list # old line<nl><tab><tab><tab>print str(my_list).strip('[]') + filename.split('/')[-1]<nl><nl><nl>lists_per_file = retrive(directory,regex_)", "out": "Pythonでディレクトリから各ファイルの名前をリストに入れるにはどうすればですか?", "out_en": "How to carry in a list the name each file from a directory with python?"}
{"in": "title = \"This is my title, there are many like it but this one is mine...\"<nl>self.headerItem().setText(0, title)", "out": "作成されたツリービューのタイトルを変更する方法", "out_en": "How do I change the title of the tree view that is created"}
{"in": "vbox.pack_start(self.scrolledwindow)", "out": "Python:トップ・レベルのgtk.Windowにgtk.TreeViewとgtk.Menuをパックする", "out_en": "Python : Packing a gtk.TreeView and a gtk.Menu in a top level gtk.Window"}
{"in": "a = tb.open_file(\"FGBS.h5\")<nl>table = a.root.quote.z4<nl>c = pd.DataFrame.from_records(table.read())", "out": "pytablesの表をパンダのデータフレームに読み込む方法", "out_en": "how do you read a pytables table into a pandas dataframe"}
{"in": "Stop.objects.filter(approved_ts__isnull=False).order_by('line')", "out": "別の関連モデルによるクエリーセットのグループ化", "out_en": "Grouping a queryset by another related model"}
{"in": "self.function = lambda *args: module1.f(*args)[0]", "out": "関数を割り当てます。最初の値は無視されます", "out_en": "Assign function, ignore first value"}
{"in": "def add_invoice(request):<nl><tab>InvoiceFormSet = inlineformset_factory(Invoice, InvoiceItem)<nl><tab>if request.POST:<nl><tab><tab>invoiceForm = InvoiceForm(request.POST) <nl><tab><tab>invoiceFormSet = InvoiceFormSet(request.POST)<nl><tab><tab>if invoiceForm.is_valid() and invoiceFormSet.is_valid():<nl><tab><tab><tab>invoice = invoiceForm.save()<nl><tab><tab><tab>invoiceItems = invoiceFormSet.save(commit=False)<nl><tab><tab><tab>for invoiceItem in invoiceItems:<nl><tab><tab><tab><tab>invoiceItem.invoice = invoice<nl><tab><tab><tab><tab>invoiceItem.save()<nl><tab><tab><tab>return redirect('show_invoice', invoice_id=invoice.id)<nl><tab>else:<nl><tab><tab>invoiceForm = InvoiceForm()<nl><tab><tab>invoiceFormSet = InvoiceFormSet()<nl><tab>context_data = {<nl><tab><tab><tab>'invoiceForm': invoiceForm,<nl><tab><tab><tab>'invoiceFormSet': invoiceFormSet,<nl><tab><tab><tab>}<nl><tab>return render(request, 'add_invoice.html', context_data)", "out": "複数の子モデルを持つモデルフォーム", "out_en": "ModelForm with multiple child models"}
{"in": "import re<nl><nl>def get_id(toParse):<nl><tab>return re.search('id(\\d+)', toParse).groups()[0]", "out": "Pythonを使ってiTunesのURLから簡単にIDを抽出する方法", "out_en": "How to easily extract ID from iTunes URL using Python"}
{"in": "add_signal_watch_full()", "out": "GStreamerバスがNoneメッセージを送信する", "out_en": "GStreamer bus sends None message"}
{"in": "import subprocess<nl>import locale<nl><nl>encoding = locale.getdefaultlocale()[1]<nl>proc = subprocess.Popen([\"ping\", \"123.123.123.123\"], stdout=subprocess.PIPE)<nl>out = proc.communicate()[0]<nl>if 'Request timed out' in out.decode(encoding):<nl><tab>print 'the host is down'<nl>else: <nl><tab>print 'the host is up'", "out": "出力が何であるかを検出し、そこからif文を実行する方法", "out_en": "How to detect what output is and do if statement from it?"}
{"in": "import random<nl><nl>def insert_spaces(s):<nl><tab>s = list(s)<nl><tab>for i in xrange(len(s)-1):<nl><tab><tab>while random.randrange(2):<nl><tab><tab><tab>s[i] = s[i] + ' '<nl><tab>return ''.join(s)", "out": "既存の文字列のランダムな位置にスペース文字を挿入するPython風の方法はありますか?", "out_en": "Is there a pythonic way to insert space characters at random positions of an existing string?"}
{"in": "def filtering(a_list):<nl><tab>results = []<nl><tab>for i, item in enumerate(a_list):<nl><tab><tab>if re.search(r'\\d{0,1}\\s+Contacts;\\s*', item) is not None:<nl><tab><tab><tab>results.extend(a_list[i+1:i+6])", "out": "正規表現との特定の一致を取得した後に、リストからN個の値を分離する", "out_en": "Isolate N values from a list after obtaining a specific match with a regex"}
{"in": "f = open(\"text.txt\", \"rb\")<nl>s = f.readlines()<nl>f.close()<nl>f = open(\"newtext.txt\", \"wb\")<nl>s.reverse()<nl>for item in s:<nl>  print>>f, s<nl>f.close()", "out": "テキストファイルから行を読み込み、反転して新しいテキストファイルに保存します。", "out_en": "Read lines from a text file, reverse and save in a new text file"}
{"in": "logger = logging.getLogger(__name__)", "out": "Pythonモジュールからのカスタマイズ可能なロギングを許可するためのガイドラインは何ですか?", "out_en": "What are the guidelines to allow customizable logging from a Python module?"}
{"in": "xls = pd.ExcelFile('path_to_file.xls')<nl>df1 = xls.parse('Sheet1')<nl>df2 = xls.parse('Sheet2')", "out": "同じワークブックの複数のワークシートに対してpd.read_excel()にPandasを使用する", "out_en": "Using Pandas to pd.read_excel() for multiple worksheets of the same workbook"}
{"in": "#!/usr/bin/python<nl>from multiprocessing import Process,Queue<nl>import random<nl>import time<nl><nl>def printrand():<nl>   #Checks whether Queue is empty and runs<nl>   while q.empty():<nl><tab>  rand = random.choice(range(1,100))<nl><tab>  time.sleep(1)<nl><tab>  print rand<nl><nl><nl>if __name__ == \"__main__\":<nl>   #Queue is a data structure used to communicate between process <nl>   q = Queue()<nl>   #creating the process<nl>   p = Process(target=printrand)<nl>   #starting the process<nl>   p.start()<nl>   while True:<nl><tab>  ip = raw_input(\"Write something: \")<nl><tab>  #if user enters stop the while loop breaks<nl><tab>  if ip==\"stop\":<nl><tab><tab> #Populating the queue so that printramd can read and quit the loop<nl><tab><tab> q.put(ip)<nl><tab><tab> break<nl>   #Block the calling thread until the process whose join() <nl>   #method is called terminates or until the optional timeout occurs.<nl>   p.join()", "out": "Python-2つのコマンドを同時に実行する", "out_en": "Python - run two commands at the same time"}
{"in": "from datetime import datetime, timedelta<nl>now = datetime.now()<nl>now = now - timedelta(minutes = now.minute % 15, seconds = now.second, microseconds = now.microsecond )", "out": "現在の時間間隔をPythonで検索する", "out_en": "Find current time interval in python?"}
{"in": "while True:<nl><tab>new = Cell(\"A1\").value<nl><tab>if static != new:<nl><tab><tab>CellRange(\"C2:E4\").clear()<nl><tab><tab>Cell(\"C2\").table = {\"mamposteria\": data1,<nl><tab><tab><tab><tab><tab><tab><tab>\"moretero\": data2,<nl><tab><tab><tab><tab><tab><tab><tab>\"estructura\": data3}[new]<nl><tab><tab>static = new", "out": "Datanitroを使用した対話型シート", "out_en": "Interactive sheet using Datanitro"}
{"in": "import re<nl><nl>d = {}<nl><nl>with open('data', 'r') as f:<nl><nl><tab>for line in f:<nl><nl><tab><tab>line =   re.sub('\\s', '', line)<nl><nl><tab><tab>key, value = line.split('=')<nl><nl><tab><tab>d[key] = value<nl><nl>for el in d.items():<nl><nl><tab>print(el)", "out": "Python:テキスト・ファイルのデータを辞書に変換するにはどうすればいいですか?", "out_en": "Python: How do i convert data in text file into a dictionary?"}
{"in": "df = pd.concat([DataFrame({'M': [1, 2], 'F': [2, 5]}), \\<nl><tab><tab><tab><tab>DataFrame({'M': [1, 5], 'F': [2, 7]})], \\<nl><tab><tab><tab><tab>axis=1, keys=['Completed', 'Not Completed'])<nl><nl>df.index = ['A', 'B']<nl><nl>df.index.name = 'Name'", "out": "Pandasデータフレーム列構造", "out_en": "Pandas Data Frame Column structure"}
{"in": "class N:<nl><tab>def __init__(self):<nl><tab><tab>self.s = []<nl><tab>def add(self,u):<nl><tab><tab>self.s.append(u)<nl><tab>def check(self):<nl><tab><tab>if sorted(self.s) == True:<nl><tab><tab><tab>print \"List is sorted\"<nl><tab><tab>else:<nl><tab><tab><tab>print \"Not sorted but it will sort now\"<nl><tab><tab><tab>return sorted(self.s)", "out": "条件付きキューの初期化", "out_en": "initializing queue with condition"}
{"in": "if __name__ == \"__main__\":<nl><tab>import traceback<nl><tab>from raven import Client<nl><tab>client = Client('requests+http://XXKEYXX@sentry.yourserver.com/sentry/1')<nl><tab>try:<nl><tab><tab>YourApp().run()<nl><tab>except:<nl><tab><tab>traceback.print_exc()<nl><tab><tab>ident = client.get_ident(client.captureException())<nl><tab><tab>print \"Exception caught; reference is %s\" % ident", "out": "kivy-clientのクラッシュログを取得してサーバに送信するにはどうすればいいですか?", "out_en": "How can I catch kivy-client crash log and send it to my server?"}
{"in": "image = load_image(\"/path/to/image\")[:,:,0]", "out": "Pythonでの位相相関による移動/回転", "out_en": "translation/rotation through phase correlation in python"}
{"in": "import subprocess<nl>process = subprocess.Popen([\"C:\\Users\\Ben\\Desktop\\youtube-dl\\youtube-dl.exe\", \"--max-quality\", \"FORMAT\", \"--extract-audio\", \"songUrl\"], shell=True, stdout = subprocess.PIPE)<nl><nl>while process.poll() is None:<nl><tab>result = process.stdout.read()<nl><tab># do some calculations for percentage done", "out": "Python:コマンド終了前のcheck_outputからの応答の取得", "out_en": "python: getting a response from check_output before the command is finished"}
{"in": "class Tag(models.Model):<nl><tab>test_case_counter = models.IntegerField(default=0)<nl><tab>my_date_field = models.DateField(auto_now=True,auto_add=True)<nl><nl><tab>class Meta: # notice indentation<nl><tab><tab>ordering = ['my_date_field']<nl><tab><tab>app_label = 'project'", "out": "ソート機能の書き方", "out_en": "How to write sort function"}
{"in": "import csv<nl><nl>result={}<nl>with open('/tmp/test.csv','r') as f:<nl><tab>red=csv.DictReader(f)<nl><tab>for d in red:<nl><tab><tab>result.setdefault(d['team'],[]).append(d['bldg'])<nl><nl>#results={'1': ['1450'], '3': ['204', '250', '1437'], '2': ['1440']}", "out": "2列目のCSVをdictとして読み込み、1番目の列をキーとして読み込む", "out_en": "Read two column CSV as dict with 1st column as key"}
{"in": "x=\"[python] how to [css]\"<nl>print re.findall(r\"(?<=\\[)[^\\]]*(?=\\])\",x)   # this is the list you want<nl>print re.sub(r\"\\[[^\\]]*\\]\",\"\",x)<tab><tab><tab> # this is the string you want", "out": "角括弧で囲まれた単語に従って文字列を分割する", "out_en": "split string according to words between square parenthesis"}
{"in": "jrange = np.arange(self.max_j - j_start)<nl>joffset = np.round(jrange * discriminant).astype(int)<nl>i = np.arange(self.max_i)<nl><nl>for j in jrange:<nl><tab>new_i = i + joffset[j]<nl><tab>in_range = new_i < self.max_i<nl><tab>self.grid[new_i[in_range], j+j_start] = standard[i[in_range]]", "out": "このコードをPythonループから(パフォーマンスのために)numpyベクターに書き直すにはどうすればいいですか?", "out_en": "How to rewrite this code from python loops to numpy vectors (for perfomance)?"}
{"in": "G.label(*x)", "out": "変数にリストを割り当てる", "out_en": "Assign a list to variables"}
{"in": "company_3 = [o.title() for o in company_2]", "out": "このような複雑なforループを使わずにこのコードを繰り返すにはどうすればよいでしょうか。", "out_en": "How can I iterate this code without using such a complicated for loop?"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>data = \"\"\"100 0.0<nl><tab>  5 500.25<nl><tab>  2 10.0<nl><tab>  4 5.55<nl><tab>  3 950.0<nl><tab>  3 300.25\"\"\"<nl><nl>counts = []<nl>values = []<nl><nl>for line in data.split(\"<nl>\"):<nl><tab>x, y = line.split()<nl><tab>values.append(int(x))<nl><tab>counts.append(float(y))<nl><nl>plt.bar(counts, values)<nl><nl>plt.show()", "out": "2つのデータ列からのmatlibplot棒グラフの生成", "out_en": "Generating a matlibplot bar chart from two columns of data"}
{"in": "sample_means = [x/seg_len] + [mean(data[x:x+seg_len,i]) for i in range(4)]<nl>writer.writerow(sample_means)", "out": "Pythonで記述されたcsvファイルに不正な形式の数値が含まれています", "out_en": "Written csv file with Python contains wrong format of numbers"}
{"in": "Stmt<tab>  << ( selectToken +<nl><tab><tab><tab><tab>columnNameList('columns') + <nl><tab><tab><tab><tab>Optional( CaselessKeyword('where') + whereExpression('where'), \"\" ) +<nl><tab><tab><tab><tab>Each( [ Optional( CaselessKeyword('group by') + columnNameList('group'), \"\" ).setDebug(),<nl><tab><tab><tab><tab><tab><tab>Optional( CaselessKeyword('order by') + columnNameList('order'), \"\" ).setDebug() ] <nl><tab><tab><tab><tab><tab>) <nl><tab><tab><tab>)", "out": "pyparsing、各、結果名", "out_en": "pyparsing, Each, results name"}
{"in": "class GraphElement:<nl><tab>def __init__(self, graph):<nl><tab><tab>pass<nl><nl>class Edge(GraphElement, tuple):<nl><tab>def __new__(cls, graph, (source, target)):<nl><tab><tab>return tuple.__new__(cls, (source, target))<nl><tab>def __init__(self, graph, (source, target)):<nl><tab><tab>GraphElement.__init__(self, graph)", "out": "Python:組み込み型からの継承", "out_en": "Python: Inheriting from Built-In Types"}
{"in": "import subprocess<nl>subprocess.call('nircmd.exe win close class \"CabinetWClass\"' , shell=True)", "out": "Pythonを使用してすべてのwindows7フォルダを閉じる方法", "out_en": "How to close all windows7 folders using python"}
{"in": "import unicodedata, re<nl><nl>all_chars = (unichr(i) for i in xrange(0x110000))<nl>control_chars = ''.join(c for c in all_chars if unicodedata.category(c) == 'Cc')<nl># or equivalently and much more efficiently<nl>control_chars = ''.join(map(unichr, range(0,32) + range(127,160)))<nl><nl>control_char_re = re.compile('[%s]' % re.escape(control_chars))<nl><nl>def remove_control_chars(s):<nl><tab>return control_char_re.sub('', s)", "out": "Pythonで文字列から印刷できない文字を取り除く", "out_en": "Stripping non printable characters from a string in python"}
{"in": "import random <nl>score = 0<nl>ops = ['+','-','*']<nl><nl>for i in range(10):<nl><tab>num1 = random.randint(1,9)<nl><tab>num2 = random.randint(1,9)<nl><tab>operation = random.choice(ops)<nl><tab>print(num1)<nl><tab>print(operation)<nl><tab>print(num2)<nl><tab>user = int(input(\"\"))<nl><tab>if operation == \"+\":<nl><tab><tab>answer = num1 + num2<nl><tab>elif operation == \"-\":<nl><tab><tab>answer = num1 - num2<nl><tab>elif operation == \"*\":<nl><tab><tab>answer = num1 * num2<nl><nl><tab>if user == answer:<nl><tab><tab>print(\"correct\")<nl><tab><tab>score = score + 1<nl><tab>else:<nl><tab><tab>print(\"Incorrect\")<nl><tab>print (score)", "out": "ランダムに生成された算術を10回ループするにはどうすればいいですか?これは今までの私のコードです", "out_en": "How would I loop a randomly generated arithmetic 10 times over? this is my code so far"}
{"in": "import numpy as np<nl>import pylab as py<nl>from scipy.misc import factorial as fact<nl><nl>e = 0.65<nl><nl><nl>def E(M):<nl><tab>return (M + sum((1.0 / 2.0 ** (n - 1) *<nl><tab><tab><tab><tab><tab> sum((-1) ** (k) / (fact(n - k) * fact(k)) *<nl><tab><tab><tab><tab><tab><tab> (n - 2 * k) ** (n - 1) *<nl><tab><tab><tab><tab><tab><tab> np.sin((n - 2 * k) * M)<nl><tab><tab><tab><tab><tab><tab> for k in range(0, n / 2, 1))) * e ** n<nl><tab><tab><tab><tab><tab><tab> for n in range(1, 4, 1)))<nl><nl><nl>M = np.linspace(0, 2 * np.pi, 50000.0)<nl><nl>fig = py.figure()<nl>ax = fig.add_subplot(111)<nl>ax.plot(E(M), M)<nl>py.xlim((0, 2 * np.pi))<nl>py.ylim((0, 2 * np.pi))<nl>py.show()", "out": "Python:有限点のみを使用して無限級数をプロットする", "out_en": "Python: Plotting a infinite series by only taking finite points"}
{"in": "import module_1<nl><nl>class Card(object):<nl><tab>def __init__(self, suit, number):<nl><tab><tab>self.suit = suit<nl><tab><tab>self.number = number<nl><tab><tab>self.index = [suit, number]<nl><nl>if __name__ == '__main__':<nl><tab># Keep reference to the original Card class.<nl><tab>original_card = module_1.Card<nl><tab># Replace with my custom Card class.<nl><tab>module_1.Card = Card  <nl><tab>new_deck = module_1.Deck()<nl><tab>print new_deck.cards[0]<nl><tab># Restore.<nl><tab>module_1.Card = original_card", "out": "Pythonでクラス定義をオーバーライドするにはどうすればいいですか?", "out_en": "How can I override a class definition in python?"}
{"in": "text = \"Some sample (with parenthesis) text\"<nl>regEx = re.compile(r'([^\\(]*)\\([^\\)]*\\) *(.*)')<nl>m = regEx.match(text)<nl>while m:<nl>  text = m.group(1) + m.group(2)<nl>  m = regEx.match(text)<nl>print text", "out": "段落から括弧内の内容と括弧自体を削除する", "out_en": "remove content inside parenthesis as well as the parenthesis themselves from a paragraph"}
{"in": "shell=True", "out": "すべてのパラメータをカンマで区切る必要があるsubprocess.call", "out_en": "subprocess.call requiring all parameters to be separated by commas"}
{"in": "driver.switch_to.window(driver.window_handles[-1])", "out": "インデックスがわからないのに、WebDriverを新しく開いたChromeタブに移動するにはどうすればいいですか?", "out_en": "How can I move WebDriver to new opened Chrome tab without knowing index?"}
{"in": "class mydeque(object):<nl><nl>  def __init__(self):<nl><tab>self.left = []<nl><tab>self.right = []<nl><nl>  def pushleft(self, v):<nl><tab>self.left.append(v)<nl><nl>  def pushright(self, v):<nl><tab>self.right.append(v)<nl><nl>  def popleft(self):<nl><tab>if not self.left:<nl><tab>  self.__fill_left()<nl><tab>return self.left.pop()<nl><nl>  def popright(self):<nl><tab>if not self.right:<nl><tab>  self.__fill_right()<nl><tab>return self.right.pop()<nl><nl>  def __len__(self):<nl><tab>return len(self.left) + len(self.right)<nl><nl>  def __getitem__(self, i):<nl><tab>if i >= len(self.left):<nl><tab>  return self.right[i-len(self.left)]<nl><tab>else:<nl><tab>  return self.left[-(i+1)]<nl><nl>  def __fill_right(self):<nl><tab>x = len(self.left)//2<nl><tab>self.right.extend(self.left[0:x])<nl><tab>self.right.reverse()<nl><tab>del self.left[0:x]<nl><nl>  def __fill_left(self):<nl><tab>x = len(self.right)//2<nl><tab>self.left.extend(self.right[0:x])<nl><tab>self.left.reverse()<nl><tab>del self.right[0:x]", "out": "O(1)Pythonにおける整数のインデックス付け可能なデック", "out_en": "O(1) indexable deque of integers in Python"}
{"in": "import servo<nl>servo.move(int(argv[1]), int(argv[2]))", "out": "特定のニーズに対応するために、Pythonスクリプトに関するヘルプが必要です。", "out_en": "I need help with a python script I am trying to adapt for a specific need"}
{"in": "from matplotlib.pyplot import axes, pie, show, figure, subplot<nl>import matplotlib.gridspec as gridspec<nl><nl>fig = figure(facecolor = 'k')<nl><nl>ax1 = subplot(111, axisbg='k')<nl>ax1.pie([1,2,3,4])<nl>ax1.set_frame_on(True)<nl>ax1.spines['bottom'].set_color('w')<nl>ax1.spines['left'].set_color('w')<nl>ax1.spines['top'].set_color('w')<nl>ax1.spines['right'].set_color('w')", "out": "Python matplotlib-円グラフ付きの白いスパイン?", "out_en": "Python matplotlib - White spines with pie chart?"}
{"in": "from selenium import webdriver<nl>driver = webdriver.Firefox()<nl>print (driver.current_url)", "out": "ブラウザPythonから現在のURLを取得する", "out_en": "get current url from browser python"}
{"in": "if x == \"No Event\":<nl><tab># Handle no-event situation<nl><tab>pass<nl>elif x.startswith(\"P(\"):<nl><tab># extract the number<nl><tab>s = x[2:].split()[0]<nl><tab>if \".\" in s:<nl><tab><tab># period present<nl><tab><tab>result = float(s)<nl><tab>else:<nl><tab><tab># period not present<nl><tab><tab>result = int(s)<nl>else:<nl><tab># Handle unexpected input<nl><tab>pass", "out": "PythonでUnicodeをフィルタして整数に変換する方法", "out_en": "How do filter and convert unicode to integer in python"}
{"in": "from suds.xsd.sxbasic import Import<nl><nl>file_url = 'file://<path to xml.xsd>'<nl>Import.bind('http://www.w3.org/XML/1998/namespace', file_url)", "out": "sudsがxml.xsdをネットワーク経由で取得しないようにするにはどうすればいいですか。", "out_en": "How do I prevent suds from fetching xml.xsd over the network?"}
{"in": "from subprocess import call<nl>call([\"open\", \"hi.jpg\"])", "out": "Pythonでpngファイルを出力したい", "out_en": "I want to get python to output a png file"}
{"in": "from turtle import *<nl>from time import sleep<nl>turtle = Turtle()<nl>screen = Screen()<nl>screen.onscreenclick(turtle.goto)<nl>turtle.getscreen()._root.mainloop()", "out": "Python-クリック時にタートルをマウスに移動", "out_en": "Python - Move Turtle To Mouse On Click"}
{"in": "df.unstack(level=1)", "out": "補間を使用して複数インデックスのPandas DataFrameの塗りつぶし", "out_en": "Fill multi-index Pandas DataFrame with interpolation"}
{"in": "print(\"Hello World\")", "out": "ターミナルからprintを実行するためにpython3.2を入力すると、構文エラーが発生します。", "out_en": "SyntaxError when entering python3.2 to run print from Terminal"}
{"in": "def devisors_number(n):<nl><tab>result = 0<nl><tab>sqrt_n = int(n**0.5)<nl><nl><tab>for i in xrange(1, sqrt_n + 1):<nl><tab><tab>if n % i == 0:<nl><tab><tab><tab>result += 1<nl><nl><tab>result *= 2<nl><nl><tab>if sqrt_n**2 == n:<nl><tab><tab>result -= 1<nl><nl><tab>return result<nl><nl><nl>n = int(raw_input(\"Enter a number: \"))<nl>d = devisors_number(n)<nl>print \"{0} has {1} devisors\".format(n, d)", "out": "Pythonのtテストケースについて、numberの約数の合計数を求めます。", "out_en": "find total number of divisors of number, for t test cases in python"}
{"in": "with open('r.0', 'r') as IRR, open('tt', 'w') as fd_w:<nl><tab>lines = []<nl><tab>for line in IRR:<nl><tab><tab>line = line.strip()<nl><tab><tab>if line:<nl><tab><tab><tab>lines.append(line)<nl><tab><tab>else:<nl><tab><tab><tab># empty line, found a complete block, test for status line<nl><tab><tab><tab>if 'status:<tab><tab> ASSIGNED PA' in lines:<nl><tab><tab><tab><tab>for line in lines:<nl><tab><tab><tab><tab><tab>fd_w.write(line + '<nl>')<nl><tab><tab><tab>lines = []", "out": "ファイルからの行の書き込み", "out_en": "Writing lines from a file"}
{"in": "mail.send_mail(sender=\"\",<nl><tab><tab><tab><tab> to=\"\",<nl><tab><tab><tab><tab> subject=\"\",<nl><tab><tab><tab><tab> body=\"\",<nl><tab><tab><tab><tab> html=\"your html\")", "out": "Google App EngineメールAPIで背景画像を設定する", "out_en": "Set background image in google app engine mail API"}
{"in": "from itertools import combinations<nl><nl>def find_sum_in_list(numbers, target, comboSize):<nl><tab>results = []<nl><tab>for combo in combinations(numbers, comboSize):<nl><tab><tab>if sum(combo) == target:<nl><tab><tab><tab>results.append(combo)<nl><tab>return results<nl><nl><nl>if __name__ == \"__main__\":<nl><tab>numbers = [10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300]<nl><tab>total = 1200<nl><tab>comboSize = 5<nl><tab>print find_sum_in_list(numbers, total, comboSize)", "out": "Pythonの再帰的な組み合わせを制限する方法", "out_en": "How to limit Python recursive combinations?"}
{"in": "dict((k, v) for (k, v) in somedict.iteritems() if not k.startswith('someprefix'))", "out": "Pythonでdictから特定のキーを削除する最速の方法", "out_en": "Fastest way of deleting certain keys from dict in Python"}
{"in": "output_list = list(itertools.product(*test_list))", "out": "Pythonが範囲のリストの組み合わせを返す", "out_en": "Python return combinations of a list of ranges?"}
{"in": "import cv2<nl><nl>def crop(img):<nl><tab>face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')<nl><tab>sub_face = img<nl><nl><tab>faces = face_cascade.detectMultiScale(img, 1.1, 5)<nl><tab>for (x,y,w,h) in faces:<nl><tab><tab>sub_face = img[y:y+h, x:x+w]<nl><nl><tab>return sub_face<nl><nl><nl>imageToCrop = cv2.imread('izz.jpg',0)<nl>croppedImage = crop(imageToCrop)<nl><nl>cv2.imshow('img',croppedImage)<nl>cv2.waitKey(0)<nl>cv2.destroyAllWindows()", "out": "カメラで顔領域を撮影する", "out_en": "Capture face area by camera"}
{"in": "foos = doc.find('foos')<nl>for foo in foos:<nl><tab>for text in foo.itertext():<nl><tab><tab>print text.strip(),<nl><tab>print", "out": "xmlタグのtext要素内のタグを抽出する", "out_en": "extract tag inside text element of an xml tag"}
{"in": "s_regs = sorted(regexes,key=lambda x:len(x))<nl>s_regs.reverse()<nl>regex = '|'.join(s_regs)", "out": "Python正規表現の順序の問題", "out_en": "Python regex ordering issue"}
{"in": "import BeautifulSoup<nl><nl>doc = '''<html><head><title>Page title</title></head><body><p id=\"firstpara\" align=\"center\">This is <i>paragraph</i> <a onclick=\"\">one</a>.<p id=\"secondpara\" align=\"blah\">This is <i>paragraph</i> <b>two</b>.</html>'''<nl>soup = BeautifulSoup.BeautifulSoup(doc)<nl><nl>for tag in soup.recursiveChildGenerator():<nl><tab>if isinstance(tag,BeautifulSoup.Tag) and tag.name not in ('a'):<nl><tab><tab>print(tag.string)<nl><tab>elif isinstance(tag,BeautifulSoup.Tag) and tag.name in ('a'):<nl><tab><tab>print(tag)", "out": "Python/BeautifulSoupを使用して、HTML EXCEPTアンカー/リンクのチャンクからすべてのタグを取り除くことはできますか?", "out_en": "Is it possible to use Python / BeautifulSoup to strip all tags from a chunk of HTML EXCEPT anchor / links?"}
{"in": "class SoundManager:<nl><tab>sounds = [] # list of sound objects<nl><nl><tab>@staticmethod<nl><tab>def playRandom():<nl><tab><tab>random.choice(SoundManager.sounds).play()", "out": "ランダムなサウンドを選択するパイゲーム", "out_en": "Choosing a random sound Pygame"}
{"in": "cherrypy.server.socket_host = '192.168.0.147'<nl>cherrypy.server.socket_port = 8080", "out": "CherryPyアプリをローカルにデプロイする方法", "out_en": "How to deploy a CherryPy app locally"}
{"in": "df.index.is_monotonic", "out": "Pandasデータフレームのインデックスがソートされているかどうかを確認する方法", "out_en": "How can I check if a Pandas dataframe's index is sorted"}
{"in": "import wx<nl><nl>class Frame(wx.Frame):<nl><tab>def __init__(self, title):<nl><tab><tab>wx.Frame.__init__(self, None, title=title, size=(300,200))<nl><nl><tab><tab>self.panel = wx.Panel(self)<nl><tab><tab>box = wx.BoxSizer(wx.VERTICAL)<nl><tab><tab>m_text = wx.StaticText(self.panel, -1, 'File Uploaded!')<nl><tab><tab>m_text.SetSize(m_text.GetBestSize())<nl><nl><tab><tab>box.Add(m_text, 0, wx.ALL, 10)<nl><tab><tab>self.panel.SetSizer(box)<nl><tab><tab>self.panel.Layout()<nl><nl><tab><tab>self.timer = wx.Timer(self)<nl><tab><tab>self.Bind(wx.EVT_TIMER, self.onClose, self.timer)<nl><tab><tab>self.timer.Start(5000)<nl><nl><tab>def onClose(self, event):<nl><tab><tab>self.Close()<nl><nl>app = wx.App(redirect=True)<nl>top = Frame('test')<nl>top.Show()<nl>app.MainLoop()", "out": "テキストを含むウィンドウをポップアップし、一定の時間が経過すると自動的に閉じる", "out_en": "pop up a window with text in it and automatically close it after certain time"}
{"in": "plt.figure(1)<nl>plt.hist(trials, bins=2, align=\"mid\",<nl><tab><tab> weights=np.zeros_like(trials) + 1. / len(trials))<nl><nl><nl># ------------------------------<nl># New lines to add tick marks as requested<nl>tick_locs = [0.25, 0.75]<nl>tick_lbls = ['0','1']<nl>plt.xticks(tick_locs, tick_lbls)<nl># ------------------------------<nl><nl>plt.ylim(0,1.0)<nl>plt.title(\"Bernoulli Distribution with p = \" + str(p))<nl>plt.xlabel(\"Outcome\")<nl>plt.ylabel(\"Probability\")<tab><nl>plt.show()", "out": "pyplotでビンを正しく表示する", "out_en": "Displaying bins correctly with pyplot"}
{"in": "last_state = False<nl>while True:<nl><tab>x,y = win32api.GetCursorPos()<nl><tab>state = x < 0<nl><tab>if state == last_state:<nl><tab><tab>continue<nl><tab>last_state = state<nl><tab>if state:<nl><tab><tab>print(\"2\")<nl><tab>else:<nl><tab><tab>print(\"1\")", "out": "カーソル位置が特定のx値と交差したときにアクションを実行する", "out_en": "Take action when the cursor position crosses a particular x value"}
{"in": "\\\\{(.*)\\\\}", "out": "QRegExブレースの間のすべてをハイライト表示するには", "out_en": "QRegEx to highlight everything between braces"}
{"in": "def makeImage (triangle, largura, altura):<nl><tab>\"\"\"<nl><tab>triangle: receives a tuple in the form: x1, y1, x2, y2, x3, y3, R, G, B, A<nl><tab>largura: image weight<nl><tab>altura: image height<nl><nl><tab>returns: numPy array of the triangle composed final image<nl><tab>\"\"\"<nl><tab>back = Image.new('RGBA', (largura,altura), (0,0,0,0))<nl><tab>poly = Image.new('RGBA', (largura,altura))<nl><tab>pdraw = ImageDraw.Draw(poly)<nl><nl><tab>pdraw.polygon([1,2,3,4,5,6], fill=(255,0,0,127))<nl><tab>back.paste(poly,mask=poly)<nl><nl><tab>back = back.convert('RGB')<nl><tab>backArr = asarray(back)<nl><tab>#back.show()<nl><nl><tab>return backArr", "out": "Matplotlib図形を境界/フレームまたは軸のないNumPy配列に変換します", "out_en": "Convert Matplotlib figure to NumPy array without any borders/frame or axis"}
{"in": "res = service.data().ga().get(ids='ga:' + profile_id, start_date='2014-01-01', end_date=t, metrics='ga:sessions', dimensions='ga:browser',sort='-ga:sessions' , max_results='5' ).execute()", "out": "AnalyticsレポートAPIからディメンションデータを取得する方法", "out_en": "How do I get dimension data from Analytics reporting api"}
{"in": "'''<nl>This is a multiline<nl>comment. I can type here whatever I want.<nl>'''", "out": "Pythonでの複数行コメント", "out_en": "Multiple line comment in python"}
{"in": "fd.seek(0)", "out": "Pythonによるファイルへの書き込みでは、ヌル文字が先頭に追加され", "out_en": "python writing to file prepends null characters"}
{"in": "import win32file # Ensure you import the module.<nl><nl>file_handle = win32file.CreateFile('filename.txt', win32file.GENERIC_READ, win32file.FILE_SHARE_DELETE | win32file.FILE_SHARE_READ | win32file.FILE_SHARE_WRITE, None, win32file.OPEN_EXISTING, win32file.FILE_ATTRIBUTE_NORMAL, None)", "out": "Python:ロックを作成せずにファイルを開く", "out_en": "Python: Opening a file without creating a lock"}
{"in": "import re<nl><nl>p = re.compile('\\d+(\\.\\d+)?')<nl><nl>a = raw_input('How much is 1 share in that company? ')<nl><nl>while p.match(a) == None:<nl><tab>print \"You need to write a number!<nl>\"<nl><tab>a = raw_input('How much is 1 share in that company? ')", "out": "Python-浮動小数点にisdigitを使う?", "out_en": "Python - Using isdigit for floats?"}
{"in": "# for python 3.x use 'tkinter' rather than 'Tkinter'<nl>import Tkinter as tk<nl>import datetime<nl>import math<nl>MINUTE = 60<nl>HOUR = 60*MINUTE<nl>class App():<nl><tab>def __init__(self):<nl><tab><tab>self.root = tk.Tk()<nl><tab><tab>self.done_time=datetime.datetime.now() + datetime.timedelta(seconds=HOUR/2) # half hour<nl><tab><tab>self.label = tk.Label(text=\"\")<nl><tab><tab>self.label.pack()<nl><tab><tab>self.update_clock()<nl><tab><tab>self.root.mainloop()<nl><nl><tab>def update_clock(self):<nl><tab><tab>elapsed = self.done_time - datetime.datetime.now()<nl><tab><tab>h,m,s,fractional_s = elapsed.seconds/3600,elapsed.seconds/60,elapsed.seconds%60<nl><tab><tab>fractional_seconds = math.floor(elapsed.microseconds/1000000.0*100)<nl><tab><tab>self.label.configure(text=\"%02d:%02d:%02d.%02d\"%(h,m,s))<nl><tab><tab>self.root.after(1000, self.update_clock)<nl><nl>app=App()", "out": "Tkinterのカウントダウンタイマーをアクティブに更新する", "out_en": "Making a Tkinter countdown timer update actively"}
{"in": "self.scrollbar.grid(column=6, row=5, rowspan=2,  sticky=N+S+W)", "out": "Tkinterでグリッド・レイアウトを使用してテキスト・ウィジェットをスクロールするためのスクロール・バー", "out_en": "Scrollbar to scroll Text widget, using Grid layout, in Tkinter"}
{"in": "import itertools<nl><nl>tasks_combinations = [[1, 2, 3], [2, 3, 4]]<nl>people_tasks = [[1, 3], [2, 3], [3, 4]]<nl><nl>people_tasks_product = map(set, (itertools.product(*people_tasks)))<nl><nl>for tasks_combination in tasks_combinations:<nl><tab>if set(tasks_combination) in people_tasks_product:<nl><tab><tab>print('Task combination {} is covered.'.format(tasks_combination))<nl><tab>else:<nl><tab><tab>print('Task combination {} is NOT covered.'.format(tasks_combination))", "out": "リスト内のすべての可能な組み合わせが、別のリスト内のオブジェクトの属性に表示されるかどうかをチェックします。", "out_en": "Check whether all possible combinations from a list appear in an attribute of objects in another list"}
{"in": "from urllib import request<nl>filename = '/Users/kyle/Desktop/html_test.html'<nl><nl>u = request.urlopen('http://www.ebay.com')<nl>with open(filename, 'wb') as f: #notice the 'b' here<nl><tab>f.write(u.read())<nl><nl>import webbrowser<nl>webbrowser.open_new(filename)", "out": "ブラウザでファイルを開けない", "out_en": "can't open file with browser"}
{"in": "import re<nl>filename = re.findall(\"filename=(\\S+)\", f[1]['Content-Disposition'])", "out": "ヘッダー内のContent-Dispositionからファイル名を取得する方法", "out_en": "How to get filename from Content-Disposition in headers"}
{"in": "import RPi.GPIO as GPIO<nl>GPIO.setwarnings(False)<nl>GPIO.setmode(GPIO.BCM)<nl>GPIO.setup(4,GPIO.OUT)<nl>GPIO.setup(17,GPIO.OUT)<nl>GPIO.setup(22,GPIO.OUT)<nl>GPIO.setup(23,GPIO.OUT)<nl>GPIO.output(4,1)<nl>GPIO.output(17,0)<nl>GPIO.output(22,1)<nl>GPIO.output(23,0)<nl>i=GPIO.input(4)<nl>j=GPIO.input(17)<nl>k=GPIO.input(22)<nl>l=GPIO.input(23)<nl>data=[i,j,k,l]<nl>ser.write(data)", "out": "Raspberry piのGPIOピンの状態を読み、シリアルポート経由で送信する", "out_en": "Read status of GPIO pins of Raspberry pi and send it through serial port"}
{"in": "data.groupby('Name').sum()['Score'].reset_index()", "out": "Pandasでのデータフレームの結合", "out_en": "Combine the dataframe in Pandas"}
{"in": "class Hangmanner:<nl><tab>correct_word = ''<tab><nl><tab>current_guess = ''<nl><nl><tab>def play_hangman(self, word):<nl><tab><tab>self.correct_word = word<nl><nl><tab><tab>self.current_guess = '_' * len(self.correct_word)<nl><nl><tab><tab>while self.current_guess != self.correct_word:<nl><tab><tab><tab>self.guess_letter(input(\"Please guess a letter: \"))<nl><nl><tab>def guess_letter(self, guessed_letter):<nl><tab><tab>for i in range(len(self.correct_word)):<nl><tab><tab><tab>if self.correct_word[i] == guessed_letter:<nl><tab><tab><tab><tab>if i == 0:<nl><tab><tab><tab><tab><tab>self.current_guess = self.correct_word[i] + self.current_guess[1:]<nl><tab><tab><tab><tab>else:<nl><tab><tab><tab><tab><tab>self.current_guess = self.current_guess[:i] + self.correct_word[i] + self.current_guess[i + 1:]<nl><tab><tab>print(self.current_guess)<nl><nl>if __name__ == \"__main__\":<nl><tab>hangmanner = Hangmanner()<nl><tab>hangmanner.play_hangman(\"test\")", "out": "Pythonでのhangman関数の実装", "out_en": "Implementing a hangman function in Python"}
{"in": "import MySQLdb<nl>db = MySQLdb.connect(host=\"localhost\",<nl><tab><tab><tab><tab><tab> user=\"user\",<nl><tab><tab><tab><tab><tab>  passwd=\"password\", <nl><tab><tab><tab><tab><tab>  db=\"database\") <nl>cur = db.cursor() <nl>cur.execute(\"SELECT common_name , genus , species  FROM table WHERE sequence LIKE 'MDPSSID%'\")", "out": "Pythonでデータベースを検索する", "out_en": "Searching through database with python"}
{"in": "server.set_debuglevel(True)", "out": "PythonでSSL付きのExcelシートを電子メールで送信する", "out_en": "Emailing an excel sheet with SSL in Python"}
{"in": "check_call(['gzip', fullFilePath])", "out": "gzip:Pythonのファイル", "out_en": "gzip a file in Python"}
{"in": "ret = np.zeros_like(data[0,:,:])<nl>for latIdx in xrange(grid.shape[1]):<nl><tab>for lonIdx in xrange(grid.shape[2]):<nl><tab><tab># check if we need to flip the column<nl><tab><tab>if grid[0,latIdx,lonIdx] > grid[-1,latIdx,lonIdx]:<nl><tab><tab><tab>ind = -1<nl><tab><tab>else:<nl><tab><tab><tab>ind = 1<nl><tab><tab>f = interpolate.interp1d(grid[::ind,latIdx,lonIdx], \\<nl><tab><tab><tab><tab>data[::ind,latIdx,lonIdx], \\<nl><tab><tab><tab><tab>kind=interp)<nl><tab><tab>ret[latIdx,lonIdx] = f(value)<nl>return ret", "out": "SciPyを使用して3dデータを補間する際のパフォーマンスを向上させる方法", "out_en": "How to improve performance when interpolating on 3d data with SciPy"}
{"in": "Chair.objects.filter(datetime__isnull=False)", "out": "特定のフィールドに対して「None」を持たないすべてのオブジェクトに対してクエリを実行する", "out_en": "Making a query for all objects that don't have `None` for a certain field"}
{"in": "import numpy as np<nl>W1 = np.arange(25*64).reshape(25, 64)<nl>W2 = np.arange(25*64).reshape(64, 25)<nl>b1 = np.arange(25)<nl>b2 = np.arange(64)<nl><nl>theta = np.concatenate([W1.flat, W2.flat, b1, b2])<nl>print(theta.shape)<nl># (3289,)", "out": "行列を列ベクトルに変換し、すべてをPythonで追加する方法", "out_en": "How to convert matrices to column vectors and append all together in python"}
{"in": "# Fast O(n) solution using a dictionary<nl>def solution(lst):<nl><tab>counts = {}<nl><nl><tab>for item in lst:<nl><tab><tab>if item in counts:<nl><tab><tab><tab>counts[item] += 1<nl><tab><tab>else:<nl><tab><tab><tab>counts[item] = 1<nl><nl><tab>for item in lst:<nl><tab><tab>if counts[item] == 1:<nl><tab><tab><tab>return item<nl><nl><tab>return -1<nl><nl>print(solution([1,2,1,3,2,5])) # prints 3<nl>print(solution([1,2,1,3,3,2,5])) # prints 5<nl>print(solution([1,2,1,3,3,2,5,5])) # prints -1<nl>print(solution([7])) # prints 7", "out": "Python:リスト内の最初の固有番号", "out_en": "Python: first unique number in a list"}
{"in": "print ('radius   area<tab> circumference')", "out": "最終出力の下に印刷出力を正しく表示する方法", "out_en": "How do i get the print outs to show up correctly under the final output"}
{"in": "def add_data (new_data, old_data, n): # keep n points<nl><tab>return (old_data + new_data)[-n:]", "out": "Pythonで2つの異なるソースからのオンラインデータをプロットするにはどうすればいいですか?", "out_en": "How can I plot online data coming from two different sources in python?"}
{"in": "for error in dtd.error_log.filter_from_errors():<nl><tab>print(error.message)<nl><tab>print(error.line)<nl><tab>print(error.column)", "out": "Pythonでlxml dtd.validate関数を使用してxmlファイルのエラー位置を取得する方法", "out_en": "How to get the error position of xml file with lxml dtd.validate function in Python?"}
{"in": "def root_pre(l):<nl><tab>root = \"\"<nl><tab>for t in zip(*l):<nl><tab><tab>if not all(t[0] == s for s in t):<nl><tab><tab><tab>break<nl><tab><tab>root += t[0]<nl><tab>ln = len(root)<nl><tab>pres = [s[ln:] for s in listData]<nl><tab>return root, pres<nl><nl>print(root_pre(listData))<nl>('black', ['ish', 'en', 'ed'])", "out": "PythonのデータリストでのルートID:", "out_en": "Root Identification in a list of Data in python:"}
{"in": "def test(the_list):<nl><tab>for i in range(len(the_list)):<nl><tab><tab>the_list[i] = the_list[i].lower()<nl><nl>the_list=[\"Python\", \"Programming\"]<nl>test(the_list)<nl>print the_list", "out": "リスト要素を関数に渡して変更する", "out_en": "Modify list elements by passing it to a function"}
{"in": "try:<nl><tab>import cPickle as pickle  # Improve speed<nl>except ValueError:<nl><tab>import pickle<nl><nl>file_temp = open('temp', 'w')<nl>pickle.dump(scenes, file_temp)<nl>file_temp.close()", "out": "MATLABのsave()のように変数をファイルに保存するPython", "out_en": "Python save variable to file like save() in MATLAB"}
{"in": "import subprocess<nl><nl>DETACHED_PROCESS = 0x00000008<nl><nl>subprocess.Popen(args,<nl><tab><tab><tab><tab> cwd=cwd,<nl><tab><tab><tab><tab> creationflags=DETACHED_PROCESS)", "out": "PySide GUIアプリケーション(py2exe)からSubprocessを使用して呼び出されたアプリケーションが動作しなくなった", "out_en": "Application called with Subprocess from PySide GUI application (py2exe) stopped working"}
{"in": "def OnRun(self,event):<nl><tab>path = \"/path/to/youtube-dl.py\"<nl><tab>url = \"http://www.youtube.com/\"<nl><tab>subprocess.Popen(path, url, \"--extract-audio\", \"--audio-format\", \"mp3\")", "out": "WxPythonで単純なボタンを使用してcmdコマンドを実行する", "out_en": "Run a cmd command with a simple button in wxpython"}
{"in": "def scanFiles(dir): <nl><tab>fout = open(\"animals.las\", \"w\")<nl><tab>for root, dirs, files in os.walk(dir):<nl><tab><tab>for file in files:<nl><tab><tab><tab>if '.las' in file:<nl><tab><tab><tab># read the file<nl><tab><tab><tab><tab>fin = open(file, \"r\")<nl><tab><tab><tab><tab>str2 = fin.read()<nl><tab><tab><tab><tab>fin.close()<nl><tab><tab><tab># call the function and get the changed text<nl><tab><tab><tab><tab>str3 = replace_words(str2, word_dic)<nl><tab><tab><tab># write changed text back out<nl><tab><tab><tab><tab>fout.write(str3)<nl><tab><tab><tab><tab>#time.sleep(1)<nl><tab>fout.close()", "out": "このスクリプトを変更して名前変更機能も含めるにはどうすればよいですか。", "out_en": "How can I change this script to also include a rename functionality?"}
{"in": "import os, datetime<nl><nl>folder_name = \"MY_PATH\"<nl>for file_name in os.listdir(folder_name):<nl><tab>file_name_full = os.path.join(folder_name, file_name)<nl><tab>if not os.path.isfile(file_name_full):<nl><tab><tab>continue<nl><tab>timestamp = os.path.getctime(file_name_full)<nl><tab>dt = datetime.datetime.fromtimestamp(timestamp)<nl><tab># print out the datestamp<nl><tab>print dt<nl><nl><tab># if you now want to put them into subfolders based on the year 2012 <nl><tab># you can do something like the following<nl><tab>yr = dt.year<nl><tab>subfolder_name = \"\"<nl><tab>if yr < 2012:<nl><tab><tab>subfolder_name = \"before 2012\"<nl><tab>else:<nl><tab><tab>subfolder_name = \"2012 and after\"<nl><tab>subfolder_name_full = os.path.join(folder_name, subfolder_name)<nl><tab>new_file_name_full = os.path.join(subfolder_name_full, file_name)<nl><tab># I assume your folders are premade. If not, you can do a quick-and-dirty mkdir here<nl><nl><tab>print \"Moving %s -> %s\" % (file_name_full, new_file_name_full)<nl><tab>os.rename(file_name_full, new_file_name_full)", "out": "Pythonでの作成日によるイメージソーター", "out_en": "Image sorter by created date in python"}
{"in": "print(('<tab>{:<' + str(SHOWLEN) + '.' <nl><tab>+ str(SHOWLEN) +'}  {:<}').format(value[1], value[0]))", "out": "str.format()で幅と精度の変数を使用する方法", "out_en": "How to use variables for width and precision in str.format()?"}
{"in": "doc.xpath('//*[contains(@style,\"background\") and contains(@style,\"url(\")]')", "out": "インラインスタイルのhtmlタグに背景イメージが使用されているかどうかを確認する", "out_en": "find if background image is used for any html tag with inline style"}
{"in": "cmd = 'ping 192.168.1.1'<nl>output = subprocess.check_output(cmd.split())", "out": "プログラムサブプロセス内のテキストファイルを取り込む別のプログラムのロード", "out_en": "loading another program that takes in a textfile in a program subprocess"}
{"in": "records = db_session.query(Resource).filter(<nl><tab><tab><tab>  Resources.data[\"lastname\"].astext == \"Doe\"<nl><tab><tab>  ).all()", "out": "Python SQLAlchemyとPostgres-JSON要素を問い合わせる方法", "out_en": "Python SQLAlchemy and Postgress - How to query a JSON element"}
{"in": "def groupings(a):<nl><tab> g = []<nl><tab> for val in a:<nl><tab><tab> if not g:<nl><tab><tab><tab> g.append(val)<nl><tab><tab> elif abs(g[-1] - val) <= 1.00001:<nl><tab><tab><tab> g.append(val)<nl><tab><tab> else:<nl><tab><tab><tab> yield g<nl><tab><tab><tab> g = []<nl><nl>print list(groupings(my_numpy_array))", "out": "NumPy配列内の連続した値のグループを識別する", "out_en": "Identify groups of consecutive values within NumPy array"}
{"in": "transformed = sig(x)", "out": "numpyのvectorの各要素に関数を適用する", "out_en": "applying a function to each element in vector in numpy"}
{"in": "import collections<nl>files_by_str = collections.defaultdict(list)<nl><nl>thestrings = []<nl>with open('Strings.txt') as f:<nl>  for line in f:<nl><tab>text = line.split('=', 1)[1]<nl><tab>text = text.strip().replace('\"', '')<nl><tab>thestrings.append(text)<nl><nl>import os<nl><nl>for root, dirs, files in os.walk('/top/dir/of/interest'):<nl>  for name in files:<nl><tab>path = os.path.join(root, name)<nl><tab>with open(path) as f:<nl><tab>  data = f.read()<nl><tab>  for text in thestrings:<nl><tab><tab>if text in data:<nl><tab><tab>  files_by_str[text].append(path)<nl><tab><tab>  break", "out": "ファイルセット内の文字列セットのインスタンスを検索するためのPythonスクリプト", "out_en": "Python Script to find instances of a set of strings in a set of files"}
{"in": "my_functions = []<nl><nl>def put_in_list(fn):<nl><tab>my_functions.append(fn)<nl><tab>return fn<nl><nl>@put_in_list<nl>def function1():<nl><tab>pass<nl><nl>@put_in_list<nl>def function2():<nl><tab>pass", "out": "静的に定義された関数のリストを動的に定義するPython的でエレガントな方法?", "out_en": "Pythonic, elegant way of dynamically defining a list of statically defined functions?"}
{"in": "import logging<nl><nl>logging.debug('Debug Message')<nl><nl>if some_error:<nl>   logging.error('Error Message')", "out": "Djangoのデバッグ・ツールバーでロギングを使用する方法は?", "out_en": "How do I use Logging in the Django Debug Toolbar?"}
{"in": "import multiprocessing<nl>import os<nl>import time<nl><nl>import cherrypy<nl><nl>def run_in_sub_proc(size):<nl><tab>for i in range(size):<nl><tab><tab>print os.getpid(), i<nl><tab><tab>time.sleep(1)<nl><nl>pool = multiprocessing.Pool(2)<nl><nl>class Root(object):<nl><tab>@cherrypy.expose<nl><tab>def index(self):<nl><tab><tab>pool.map_async(run_in_sub_proc, (3, 5))<nl><nl>if __name__ == '__main__':<nl><tab>cherrypy.engine.subscribe('stop', pool.join)<nl><tab>cherrypy.quickstart(Root())", "out": "マルチスレッドとともにマルチプロセッシングを使用する方法", "out_en": "How to use multiprocessing together with multithreading?"}
{"in": "numpy.random.normal()", "out": "Box-Muller法を使用した正規分布からの値の生成", "out_en": "Generating values from Normal distribution using Box-Muller method"}
{"in": "host = request.host<nl>host = host.split(':', 1)[0] # Strip off optional ':##' port number<nl>username = None<nl>if host.endswith('.yourdomain.com'):<nl><tab>username = host.split('.', 1)[0]", "out": "ユーザー名に接頭辞が付いたURLをマッピングする方法", "out_en": "how to map url with usernames prefixed?"}
{"in": "if ext == 'gz':<nl>   command = 'gunzip -c {} -k | pg_restore -U {} -h {} -p {}' \\<nl><tab><tab><tab> '-d {}'.format(file, user, server, port, new_dbname)<nl>elif ext == 'bz2':<nl>   command = 'bunzip2 -c {} -k | pg_restore -U {} -h {} -p {}' \\<nl><tab><tab><tab> '-d {}'.format(file, user, server, port, new_dbname)<nl>elif ext == 'zip':<nl>   command = 'unzip -p {} | pg_restore -U {} -h {} -p {} ' \\<nl><tab><tab><tab> '-d {}'.format(file, user, server, port, new_dbname)<nl>else:<nl>   command = 'pg_restore -U {} -h {} -p {} -d {} {}'.format(user,<nl><tab><tab><tab><tab>server, port, new_dbname, file)", "out": "pg_restoreを使用して自動的に解凍する方法はありますか?", "out_en": "Is there a way to unzip automatically with pg_restore?"}
{"in": "#!/usr/bin/python<nl>import rpy2.robjects as robjects<nl><nl>l = [1,2,3,4,5]<nl><nl># get ks.test via execute string as R statement<nl>test = robjects.r('ks.test')<nl># get a built-in functions variables directly<nl>pexp = robjects.r.pexp<nl><nl>l_vector = robjects.IntVector(l)<nl>result = test(l_vector, pexp)<nl>print result[result.names.index('p.value')]", "out": "rpy2でリストをRに渡して結果を返す方法", "out_en": "How to pass a list to R in rpy2 and get result back"}
{"in": "'''<nl>This is a multiline<nl>comment.<nl>'''", "out": "Pythonでの複数行コメント", "out_en": "Multiline comments in Python"}
{"in": "key1, key2 = random.sample(list(d), 2)<nl>d[key1], d[key2] = d[key2], d[key1]", "out": "ディクショナリ内の2つのランダム値をスワップします", "out_en": "Swap two random values in dictionary"}
{"in": "set(thingList1) & set(thingList2) & set(thingList3)", "out": "Pythonの3つのセットの共通部分?", "out_en": "intersection of three sets in python?"}
{"in": "import copy<nl>if 'career_business' in add_sal and 'career_business' in add_perc and \\<nl><tab>  add_sal['career_business'] == add_perc['career_business']:<nl>   add_all = copy.deepcopy( add_sal )<nl>   add_all['percent'] = add_perc['percent']", "out": "Python:キーの同一値による辞書のマージ", "out_en": "python: merging dictionaries by identical value of key"}
{"in": "sorted(itertools.chain(list1.itervalues(), list2.itervalues(),<nl><tab>list3.itervalues()), key=operator.itemgetter('timestamp'))", "out": "Pythonでは、3つのdictsを結合し、dictのキーの1つでソートする最も効率的な方法は何ですか?", "out_en": "In python, what's the most efficient way to combine 3 dicts and to sort by one of the dict's keys?"}
{"in": "import os<nl>import stat<nl><nl>executable = stat.S_IEXEC | stat.S_IXGRP | stat.S_IXOTH<nl>for filename in os.listdir('.'):<nl><tab>if os.path.isfile(filename):<nl><tab><tab>st = os.stat(filename)<nl><tab><tab>mode = st.st_mode<nl><tab><tab>if mode & executable:<nl><tab><tab><tab>print(filename,oct(mode))", "out": "LinuxでPythonを使用して実行可能ファイルを検索するにはどうすればよいですか。", "out_en": "How do I search for an executable file using python in linux?"}
{"in": "from ctypes import * <nl><nl>your_dll = cdll.LoadLibrary(\"your_dll.dll\") <nl><nl>PFloat = POINTER(c_float) <nl>PInt   = POINTER(c_int) <nl><nl>p_data<tab>= PFloat() <nl>p_classes = PInt() <nl>buff<tab>  = create_string_buffer(1024) <nl>n1<tab><tab>= c_int( 0 ) <nl>n2<tab><tab>= c_int( 0 ) <nl><nl>ret = your_dll.read_data( buff, byref(n1), byref(n2), byref(p_data), byref(p_classes) ) <nl><nl>print('Data:<tab>', p_data.contents) <nl>print('Classes: ', p_classes.contents)", "out": "Pythonでfloat**をSwigで使用する方法", "out_en": "How to use float ** in Python with Swig?"}
{"in": "a = 10e-50", "out": "Python、指数10進表記で数値をコーディングする", "out_en": "Python, code a number with exponential decimal notation"}
{"in": "from collections import defaultdict<nl>d = defaultdict(dict)<nl>for line in open('input_file','r'):<nl><tab>line = line.strip()<nl><tab>a,b = line.split(',')<nl><tab>node = a.split('=')[1] <nl><tab>key, value = b.split('=')<nl><tab>d[node][key] = value", "out": "txtファイルからPythonで辞書を作成するにはどうすればいいですか?", "out_en": "How can I create a dictionary in python from a txt file?"}
{"in": "b = a[:20]", "out": "タプルの大きなリストからタプルの小さなリストを作成する方法は?", "out_en": "How to make a smaller list of tuples from a large list of tuples?"}
{"in": "rules = app.url_map._rules<nl>for rule in rules:<nl><tab>print rule.endpoint, rule, rule.defaults", "out": "フラスコ:モジュール内の各ViewクラスのURLを取得する", "out_en": "Flask: Get URLs for each View class in module"}
{"in": "headers = {<nl><tab>\"X-Auth-Token\": \"dddddsssb04411b4c6a2\",<nl><tab>\"Access-Control-Allow-Origin\": \"*\",<nl>}<nl>r = requests.post(\"https://verylong/url\", headers=headers)", "out": "トークンを使用してCDN URLにヘッダーを追加するPython要求モジュール", "out_en": "Python Request Module To Add Header to CDN URL Using Token"}
{"in": "import hashlib<nl>[(fname, hashlib.md5(open(fname, 'rb').read()).digest()) for fname in fnamelst]", "out": "Pythonでファイルのチェックサムを作成する方法", "out_en": "How to create a checksum of a file in python"}
{"in": "QWidget#Form {background-image: url(test.jpg);}", "out": "背景としてのPyQt4イメージ", "out_en": "PyQt4 Image as Background"}
{"in": "for r in range(rows):<nl><tab>A[r,B[r,:]!=0] = np.dot(B[r , B[r,:]!=0], C[: , B[r,:]!=0].T)", "out": "Pythonで行列の特定の行にある0以外の要素にアクセスする", "out_en": "Accessing non-zero elements in specific row of matrix in python"}
{"in": "re.compile('(?<=}})\\s+(?={{)')", "out": "PythonでのTCLリストの解析", "out_en": "Parsing TCL lists in Python"}
{"in": "import urllib2<nl>from bs4 import BeautifulSoup<nl>url = urllib2.urlopen(\"http://www.example.com/\").read()<nl>soup = BeautifulSoup(url)<nl>for line in soup.find_all('a'):<nl><tab><tab>print(line.get('href'))", "out": "PythonでWebサイトを解析する", "out_en": "Parsing a website with Python"}
{"in": "def find_next(cur_dt):<nl><tab>import datetime as dt<nl><tab>t = [dt.time(5,30), dt.time(8,30), dt.time(13,0), dt.time(17,30)]<nl><nl><tab>cur_t = cur_dt.time()<nl><tab>cur_d = cur_dt.date()<nl><nl><tab>for i in range(len(t)):<nl><tab><tab>if t[i] > cur_t:<nl><tab><tab><tab>rt = [t[(j+i)%len(t)] for j in range(len(t))]<nl><tab><tab><tab>rd = [cur_d] * (len(t)-i) + [cur_d + dt.timedelta(days=1)]*i<nl><tab><tab><tab>return [dt.datetime.combine(rd[j],rt[j]) for j in range(len(rt))]<nl><nl><tab># everything happens tomorrow<tab><tab><nl><tab>return [dt.datetime.combine(cur_d + dt.timedelta(days=1), i) for i in t]", "out": "Pythonで将来の日時のシーケンスを生成し、setから最も近い日時を決定する方法", "out_en": "How to generate a sequence of future datetimes in Python and determine nearest datetime from set"}
{"in": "import numpy<nl>masses = numpy.array([[0,  0,  0,  0],<nl>[0,  1,  0,  0],<nl>[0,  2,  0,  0],<nl>[1,  0,  0,  0],<nl>[1,  1,  0,  1],<nl>[1,  2,  0,  1],<nl>[2,  0,  0,  0],<nl>[2,  1,  0,  0],<nl>[2,  2,  0,  0]])<nl><nl>nonZeroMasses = masses[numpy.nonzero(masses[:,3])] # Not really necessary, can just use masses because 0 mass used as weight will work just fine.<nl><nl>CM = numpy.average(nonZeroMasses[:,:3], axis=0, weights=nonZeroMasses[:,3])", "out": "Python:重心の計算", "out_en": "python: calculate center of mass"}
{"in": "from multiprocessing import Pool, cpu_count<nl><nl># ...<nl>all_files = [\"file%d\" % i for i in range(5)]<nl><nl><nl>def process_file(file_name):<nl><tab># process file<nl><tab>return \"finished file %s\" % file_name<nl><nl>pool = Pool(cpu_count())<nl><nl># this is a blocking call - when it's done, all files have been processed<nl>results = pool.map(process_file, all_files)<nl><nl># no more tasks can go in the pool<nl>pool.close()<nl><nl># wait for all workers to complete their task (though we used a blocking call...)<nl>pool.join()<nl><nl><nl># ['finished file file0', 'finished file file1',  ... , 'finished file file4']<nl>print results", "out": "Python、サブプロセス:(グループ内の)プロセスが終了したときに新しいプロセスを起動", "out_en": "python, subprocess: launch new process when one (in a group) has terminated"}
{"in": "driver.find_element_by_id()", "out": "Seleniumを使用してGoogleに検索テキストを入力する", "out_en": "Use Selenium to enter search text into Google"}
{"in": "waitTime=0.5<nl><nl>def is_ava():<nl><tab>global waitTime  # <--------<nl><tab>waitTime = waitTime + 0.1<nl><tab>print waitTime<nl><nl>if __name__ == '__main__':<nl><tab>is_ava()", "out": "UnboundLocalError:割り当て前にローカル変数が参照されています", "out_en": "UnboundLocalError: local variable referenced before assignment"}
{"in": "google-api-python-client", "out": "PythonのGoogle Data Transfer API", "out_en": "Google Data Transfer API in Python"}
{"in": "from django.contrib.admin.models import LogEntry<nl><nl>class LogEntryAdmin(admin.ModelAdmin):<nl><tab>readonly_fields = ('content_type', 'user', 'action_time')<nl><nl>admin.site.register(LogEntry, LogEntryAdmin)", "out": "django admin logEntryを読み取り専用にしますか?", "out_en": "Make django admin logEntry read only?"}
{"in": "tuple(tuple(tuple(l2) for l2 in l1) for l1 in inner_loop)", "out": "多次元配列から多次元タプル", "out_en": "Multidimensional array to multidimensional tuple"}
{"in": "from scrapy.contrib.spiders import CrawlSpider, Rule<nl>from scrapy.contrib.linkextractors.sgml import SgmlLinkExtractor<nl>from scrapy.selector import Selector<nl>from scrapy.http import Request<nl><nl>class people(CrawlSpider):<nl>  name=\"people\"<nl>  allowed_domains=[\"http://blog.sina.com.cn/\"]<nl>  start_urls=[\"http://blog.sina.com.cn/s/blog_53d7b5ce0100e7y0.html\"]<nl>  rules=(Rule(SgmlLinkExtractor(allow=(\"http://blog.sina.com.cn/\",)),  callback='parse_item', follow=True),<nl>#restrict the crawling in the articalContent section only<nl>  Rule(SgmlLinkExtractor(restrict_xpaths=('//div[contains(@class, \"articalContent\")]'))),<nl>  )<nl><nl>  def parse(self,response):<nl><tab>  links = Selector(text=response.body).xpath('//div[contains(@class, \"articalContent\")]//a//text()')<nl><tab>  for link in links:<nl><tab><tab>  print link.extract()", "out": "スクレイピーを使用した1レベル下のクロール", "out_en": "1-level down crawling using scrapy"}
{"in": "apples = [red, green]<nl>for type in apples:<nl><tab>for item in type:<nl><tab><tab>print item", "out": "Forループへの配列のリストの送信", "out_en": "Sending a list of arrays to a For loop"}
{"in": "d = {frozenset((1,2)): \"foo\"}<nl>print d.get(frozenset((2,1)))", "out": "Python辞書で(x,y)または(y,x)に一致するタプルを検索します。", "out_en": "Look up a tuple in a python dictionary matching (x,y) or (y,x)"}
{"in": "import zipfile<nl>from lxml import etree<nl><nl>z = zipfile.ZipFile('mydocument.ods')<nl><nl>data = z.read('content.xml')<nl>data = etree.XML(data)<nl><nl>etree.dump(data)", "out": "Python:lxmlを使用したOpen Office calcからのデータのインポート", "out_en": "Python: Import Data from Open Office calc with lxml"}
{"in": "import subprocess<nl><nl>ps = subprocess.Popen('ps -ef', shell=True, stdout=subprocess.PIPE)<nl>print ps.stdout.readlines()", "out": "Pythonを使用して現在のユーザのプロセスのリストを表示するにはどうすればいいですか?", "out_en": "How do I show a list of processes for the current user using python?"}
