{"in": "view.substr(view.line(view.sel()[0]))", "out": "Sublime Text 3プラグインの現在の行を取得します", "out_en": "Get current line in Sublime Text 3 plugin"}
{"in": "def compat5(L1, L2):<nl><tab>z = zip(L1, L2)<nl><tab>return not any(j1<k1 and j2>k2 for j1,j2 in z for k1,k2 in z)", "out": "Pythonリストで指定された互換性のある合計順序をチェックする", "out_en": "Checking compatible total orders given by a Python list"}
{"in": "BlogPost.objects.filter(q1 | q2).annotate(blog_times=Count('id')).order_by('blog_times')", "out": "Djangoクエリーの結果を一致数でソート", "out_en": "Sort Django query result by number of matches"}
{"in": "import feedparser<nl>d = feedparser.parse('http://www.reddit.com/r/Python/.rss')<nl>for entry in d.entries:<nl>  date = entry.published_parsed<nl>  if date.tm_year == 2015 and date.tm_mon == 4 and date.tm_mday >= 15 and date.tm_mday <= 16:<nl><tab>print entry.title", "out": "feedparserを使用して指定された日付内のエントリを解析します。", "out_en": "Parse entries that is within specified date using feedparser"}
{"in": "placeholders = []<nl>for plugin in project.projectplugin_set.all():<nl><tab>placeholders.append(plugin.placeholder_id)<nl>NewsEntry.objects.filter(content__in=placeholders).distinct()", "out": "django-cms placeholder outside cms-接続されている1つのモデルからのプレースホルダを使用して関連するモデルを取得する方法", "out_en": "django-cms placeholder outside cms - how to get related model using the placeholder from the one model that is connected?"}
{"in": "from pygithub3 import Github<nl><nl>username = raw_input(\"Please enter a Github username: \")<nl>password = raw_input(\"Please enter the account password: \")<nl><nl>gh = Github(login=username, password = password)<nl><nl>get_user = gh.users.get()<nl><nl>user_repos = gh.repos.list().all()<nl><nl>for repo in user_repos:<nl><tab>print repo.language", "out": "pygithub3 for Pythonを使用したリポジトリ情報の取得", "out_en": "Getting repository information using pygithub3 for Python"}
{"in": "from random import sample<nl><nl>set_a = set(sample(range(0, 50), 10))<nl>set_b = set(sample(range(0, 50), 10))<nl><nl>print set_a.intersection(set_b) # [3, 4]<nl>print set_a & set_b # sugar for the same thing", "out": "2つのリストを作成し、一致するものを比較する", "out_en": "Creating two lists and compare the matching"}
{"in": "import turtle as t<nl>polygon = [(0,0), (0,100), (100,0), (100,100)]<nl>t.goto(0,0)<nl>fp = None<nl>for p in polygon:<nl>  t.goto(p)<nl>  if not fp: fp=p<nl>t.goto(fp)<nl>t.up()<nl>t.goto(90,90)<nl>t.write(\"90,90\")<nl>t.dot(10)<nl>t.goto(50,80)<nl>t.write(\"50,80\")<nl>t.dot(10)<nl>t.done()", "out": "凸多角形内の点", "out_en": "Point in convex polygon"}
{"in": "import matplotlib.pyplot as plt<nl>d=[2,5,10,20,30,40,50,70,100,200]<nl>t0=[0.04,0.08,0.15,0.4,0.6,0.8,1.0,1.4,2.1,5.5]<nl>fig, ax = plt.subplots()<nl>plt.plot(d,t0,marker='o')<nl>ax.set_xticks(d)<nl>ax.set_yticks(t0)<nl>plt.show()", "out": "Python Matplotlib-プロットされたポイントに関連付けられたティックマークを表示", "out_en": "Python Matplotlib - Show Tick Marks associated to Plotted Points"}
{"in": "gen = (x for x in xyz if x not in a)<nl><nl>for x in gen:<nl><tab>print x", "out": "FORループとIF文を組み合わせるPython風の方法", "out_en": "Pythonic way to combine FOR loop and IF statement"}
{"in": "class Obj1(object):<nl><tab>def __init__(self):<nl><tab><tab>self.list_of_obj2 = []", "out": "Pythonのリストのリストに関する問題", "out_en": "Trouble With Lists of Lists in Python"}
{"in": "sys.stdout.flush()", "out": "タイマーを使用したPythonでの文字列のビットの表示", "out_en": "Showing bits of a string in python with a timer"}
{"in": "a = np.array([1,2,3])<nl>b = np.array([4])<nl>c = np.hstack([a,b])", "out": "numpy.nd配列を拡張する方法", "out_en": "How to extend a numpy.ndarray"}
{"in": "def make_form(exclude_user=True):<nl><tab>class Form(forms.ModelForm):<nl><tab><tab>class Meta:<nl><tab><tab><tab>model = Folder<tab><tab> <nl><tab><tab><tab>exclude = ['user'] if exclude_user else None<nl><tab>return Form<nl><nl>form_cls = make_form(request.user != folder.owner)", "out": "Django ModelForms・フィールドの変更", "out_en": "Modifying a Django ModelForms fields"}
{"in": "PySys_SetPath(\".\"); <nl>mymod = PyImport_ImportModule(\"your_DLL_name or Py_module_name\");", "out": "Pythonでのc dllのロード", "out_en": "Loading c dll in python"}
{"in": "import subprocess<nl>subprocess.Popen(['C:\\\\Users\\\\Me\\Desktop\\\\externalfileIwanttorun.exe'])", "out": "WindowsでPythonプログラムからパスを実行する方法は?", "out_en": "How to execute a path in Windows from Python program?"}
{"in": "coll = Elasticsearch()<nl>coll.update(index='stories-test',doc_type='news',id=hit.meta.id,<nl><tab><tab><tab><tab>body={\"doc\": {\"stanford\": 1, \"parsed_sents\": parsed }})", "out": "elasticsearch-pyを使用してドキュメントを更新する方法", "out_en": "How to update a document using elasticsearch-py?"}
{"in": "import re, ahocorasick,random,time<nl><nl># search N words from dict<nl>N=3<nl><nl>#file from http://norvig.com/big.txt<nl>with open(\"big.txt\",\"r\") as f:<nl><tab>text = f.read()<nl><nl>words = set(re.findall('[a-z]+', text.lower())) <nl>search_words = random.sample([w for w in words],N)<nl><nl>A = ahocorasick.Automaton()<nl>for i,w in enumerate(search_words):<nl><tab>A.add_word(w, (i, w))<nl><nl>A.make_automaton()<nl>#test time for ahocorasic<nl>start = time.time()<nl>print(\"ah matches\",sum(1 for i in A.iter(text))) <nl>print(\"aho done in \", time.time() - start)<nl><nl><nl>exp = re.compile('|'.join(search_words))<nl>#test time for re<nl>start = time.time()<nl>m = exp.findall(text)<nl>print(\"re matches\",sum(1 for _ in m))<nl>print(\"re done in \",time.time()-start)", "out": "テキストから顔文字を抽出する", "out_en": "Extract emoticons from a text"}
{"in": "INSTALLED_APPS = (<nl><tab>'django.contrib.auth',<nl><tab>'django.contrib.contenttypes',<nl><tab>'django.contrib.sessions',<nl><tab># 'django.contrib.sites',<nl><tab>'django.contrib.messages',<nl><tab>'django.contrib.staticfiles',<nl><tab>'purchaseapp', #this is my app<nl><tab># Uncomment the next line to enable the admin:<nl><tab>'django.contrib.admin',<nl><tab># Uncomment the next line to enable admin documentation:<nl><tab>'django.contrib.admindocs',<nl><tab># Use email as username https://github.com/dabapps/django-email-as-username<nl><tab> 'emailusernames',<nl>)", "out": "djangoでのテンプレートの自動読み込みが私のアプリでは動作しない", "out_en": "Automatic loading of templates in django is not working for my app"}
{"in": "import csv<nl><nl>def append_record_to_csv(dic, csvfile):<nl><tab>with open(csvfile, 'rb') as f:<nl><tab><tab># discover order of field names in header row<nl><tab><tab>fieldnames = next(csv.reader(f))   <nl><tab>with open(csvfile, 'ab') as f:<nl><tab><tab># assumes that dic contains only fieldnames in csv file<nl><tab><tab>dwriter = csv.DictWriter(f, fieldnames=fieldnames) <nl><tab><tab>dwriter.writerow(dic)", "out": "中間コピーを作成せずにcsvfileに行を追加する", "out_en": "Add rows to a csvfile without creating an intermediate copy"}
{"in": "os.rename(os.path.join(mypath, f), os.path.join(mypath, frenamed))", "out": "Pythonでファイル名を変更する方法", "out_en": "How do I rename a filename in python"}
{"in": "def reorder(s, word, delta):<nl>  words = s.split()<nl>  oldpos = words.index(word)<nl>  words.insert(oldpos+delta, words.pop(oldpos))<nl>  return ' '.join(words)<nl><nl>print reorder('The quick brown fox jumps over the lazy dog', 'quick', 2)", "out": "文字列内で単語を移動するにはどうすればいいですか。", "out_en": "How can I move a word within a string?"}
{"in": "from Tkinter import Tk, Button, RAISED<nl>from functools import partial<nl>root = Tk()<nl>buttons = [['1','2','3'],<nl><tab><tab>  ['4','5','6'],<nl><tab><tab>  ['7','8','9'],<nl><tab><tab>  ['*','0','#']]<nl><nl>def buttonClicked(buttonVal):<nl><tab>print(buttonVal)<nl><nl>for r in range(4):<nl><tab>for c in range(3):<nl><tab><tab>button = Button(root,<nl><tab><tab><tab><tab><tab><tab>relief = RAISED,<nl><tab><tab><tab><tab><tab><tab>padx = 10,<nl><tab><tab><tab><tab><tab><tab>text = buttons[r][c],<nl><tab><tab><tab><tab><tab><tab>command = partial(buttonClicked, buttons[r][c]))<nl><tab><tab>button.grid(row = r, column = c)<nl><nl>root.mainloop()", "out": "Tkinterを使用したダイヤルパッドの作成", "out_en": "Creating a Dialpad Using Tkinter"}
{"in": "# You might need to do this to get X as an ndarray (for example if X is a list)<nl>X = numpy.asarray(X)<nl><nl># Then you can simply do<nl>X[s, [0, 1, 2]]<nl><nl># Or more generally<nl>X_argmax = X[s, numpy.arange(X.shape[1])]", "out": "numpy.argmaxの結果からnumpy配列スライスを抽出しています", "out_en": "Extracting numpy array slice from numpy.argmax results"}
{"in": "windowicon = window.render_icon(gtk.STOCK_DIALOG_AUTHENTICATION, gtk.ICON_SIZE_MENU)<nl>window.set_icon(windowicon)", "out": "PyGTKストック画像のあるウィンドウのアイコンを設定", "out_en": "PyGTK set icon of window with stock image"}
{"in": "def get_int_input(prompt):<nl><tab>while True:<nl><tab><tab>s = raw_input(prompt)<nl><tab><tab>try:<nl><tab><tab><tab>i = int(s)<nl><tab><tab>except ValueError:<nl><tab><tab><tab>print \"Please enter an integer.\"<nl><tab><tab>else:<nl><tab><tab><tab>return i<nl><nl>def get_non_int_input(prompt):<nl><tab>while True:<nl><tab><tab>s = raw_input(prompt)<nl><tab><tab>try:<nl><tab><tab><tab>i = int(s)<nl><tab><tab>except ValueError:<nl><tab><tab><tab>return s<nl><tab><tab>else:<nl><tab><tab><tab>print \"Please don't enter an integer.\"", "out": "raw_inputメソッドを使用したユーザー入力のチェック", "out_en": "Checking user input via raw_input method"}
{"in": "import boto<nl>access_key = boto.config.get_value('Credentials', 'aws_access_key_id')<nl>secret_key = boto.config.get_value('Credentials', 'aws_secret_access_key')", "out": "Boto:Pythonコードのaws_access_key_idとaws_secret_access_keyをconfigから動的に取得する?", "out_en": "Boto: Dynamically get aws_access_key_id and aws_secret_access_key in Python code from config?"}
{"in": "def print_table(table):<nl><tab>col_width = [max(len(x) for x in col) for col in zip(*table)]<nl><tab>for line in table:<nl><tab><tab>print \"| \" + \" | \".join(\"{:{}}\".format(x, col_width[i])<nl><tab><tab><tab><tab><tab><tab><tab><tab>for i, x in enumerate(line)) + \" |\"<nl><nl>table = [(str(x), str(f(x))) for x in mylist]<nl>print_table(table)", "out": "Python形式の表形式出力", "out_en": "Python format tabular output"}
{"in": "new_key.publickey().exportKey(\"DER\")", "out": "python:RSAキー(PEM形式)を16進文字列に変換します。", "out_en": "python convert RSA key (in PEM format) to hex string"}
{"in": "def splitAppId(self, url):<nl><tab><tab>idMatch = re.search(r'/id([^/]+)\\?[^/]*$', url)<nl><tab><tab>return idMatch.group(1)", "out": "stringに一致するPython正規表現", "out_en": "Python regex to match string"}
{"in": "xs = [p[0] for p in pp]<nl>ys = [p[1] for p in pp]", "out": "リストからx値とy値を抽出する", "out_en": "Extract x and y values from a list"}
{"in": "import ConfigParser<nl><nl>class acc(ConfigParser.RawConfigParser, object):<nl><tab>def __init__(self, acc_file):<nl><tab><tab>super(acc, self).__init__()<nl><tab><tab>self.lol = 1<nl><tab><tab>print self.has_section(self.lol)<nl><nl>a=acc(1)", "out": "ConfigParserのサブクラスに属性_sectionsがありません", "out_en": "Subclass of ConfigParser has no attribute _sections"}
{"in": "import imp<nl>hest  = imp.load_source(\"Name\", Path)", "out": "PythonがGUI内でスクリプトをコンパイルする", "out_en": "Python compile a script within a GUI"}
{"in": "from haystack.management.commands import update_index<nl>update_index.Command().handle()", "out": "Haystack検索インデックスをDjango+Celeryで更新する", "out_en": "Updating a Haystack search index with Django + Celery"}
{"in": "b = a.reshape(10,48)<nl>a = b.reshape(10,4,4,3)", "out": "軸に沿ってnumpy配列をマージおよび分割する方法", "out_en": "How to merge and split numpy array along the axis?"}
{"in": "def f():<nl><tab>s = ('123'<nl><tab><tab> '456')<nl><tab>return s", "out": "引用符が3つ並んだコネクタ/Pythonの挿入が遅い", "out_en": "Connector/python slow insertion with tripled quotes"}
{"in": "if elem1.tag == 'Components':<nl><tab>temp = 0<nl><tab>for elem2 in list(elem1):<nl><tab><tab>if elem2.tag == 'Component':<nl><tab><tab><tab>for elem3 in list(elem2):<nl><tab><tab><tab><tab>if elem3.tag == 'ComponentID':<nl><tab><tab><tab><tab><tab>asset['CompID'+str(temp)] = elem3.text<nl><tab><tab><tab><tab>if elem3.tag == 'ComponentName':<nl><tab><tab><tab><tab><tab>asset['CompName'+str(temp)] = elem3.text<nl><tab><tab><tab><tab>if elem3.tag == 'Description':<nl><tab><tab><tab><tab><tab>asset['Description'+str(temp)] = elem3.text<nl><tab><tab><tab>temp+=1", "out": "タグが複数重複している場合に各xmlタグからテキストを取得する方法", "out_en": "How to grab text from each xml tag when the tags have multiple duplications"}
{"in": "result = df[df.pct_change < -0.015].reindex(filtered_dates, method='bfill')", "out": "パンダ各DatetimeIndex項目に対して最初にフィルタされた行を取得する効率的な方法", "out_en": "pandas efficient way to get first filtered row for each DatetimeIndex entry"}
{"in": "lookup = 'the dog barked'<nl><nl>with open(filename) as myFile:<nl><tab>for num, line in enumerate(myFile, 1):<nl><tab><tab>if lookup in line:<nl><tab><tab><tab>print 'found at line:', num", "out": "ファイルPythonの特定のフレーズの行番号を取得します", "out_en": "Get Line Number of certain phrase in file Python"}
{"in": "theModel.objects.filter(theString__in=[1,4,7])", "out": "django filter:タプルでフィルタできますか?", "out_en": "django filter : can filter with tuple?"}
{"in": "pen.isdown()", "out": "Python-単一キープレスを使用したタートルペンの状態の切り替え", "out_en": "Python -Switch state of turtle pen using single keypress"}
{"in": "positions = [<nl>  tcu.position_set.order_by('-id').values('latitude','longitude')[0]   <nl>  for tcu in request.user.tcu_set.prefetch_related('position_set')<nl>  ]", "out": "Djangoモデルからjsonデータをフィルター処理する", "out_en": "filter json data from Django model"}
{"in": "lxml.html", "out": "Pythonを使ってHTMLから目次を生成する", "out_en": "Generate a table of contents from HTML with Python"}
{"in": "all_events = [<nl><tab>200.0, 420.0, 560.0, 1100.0, 1900.0, 2700.0, 3400.0, 3900.0, 4234.2, 4800.0]<nl><nl>def get_events_by_hour(all_events):<nl><tab>return [<nl><tab><tab>len([x for x in all_events if int(x/3600.0) == hour]) <nl><tab><tab>for hour in xrange(24)<nl><tab>]<nl><nl>print get_events_by_hour(all_events)", "out": "不規則なタイムスタンプリストをリサンプル/ダウンサンプルするには?", "out_en": "How to resample / downsample an irregular timestamp list?"}
{"in": "ax2 = ax1.twinx()<nl>p1 = ax2.plot(ind, total_facilities, '--bo')<nl>p2 = ax1.bar(ind, pdb_facilities, width, color='gray',edgecolor = \"none\")<nl>plt.xlim([-1,len(total_facilities)])<nl>ax2.set_yscale('symlog')<nl>ax1.yaxis.tick_right()<nl>ax2.yaxis.tick_left()<nl>plt.show()", "out": "Y軸が2つのMatplotlibプロットで線をバーの前に配置", "out_en": "Arrange line in front of bars in Matplotlib plot with double y axes"}
{"in": "d = { k:None for k in  ('a:b','c:d','e:f','d:c','b:a','f:e') }<nl>for k in d.keys():<nl><tab>if '{}:{}'.format(k[2],k[0]) in d:<nl><tab><tab>d.pop(k)", "out": "Pythonは、文字列を逆にして重複をチェックします。", "out_en": "python check for duplicates by reversing strings"}
{"in": "cand = [[0, 0] for _ in range(4)]", "out": "乗算を使用してリストを生成すると、参照が生成されますか。", "out_en": "Does generating a list with multiplication produce references"}
{"in": "num_evens = {} <nl>for combination in itertools.product(*li):<nl><tab>even_counter = len([ y for y in combination if y & 1 == 0 ])<nl><tab>num_evens.setdefault(even_counter,[]).append(combination)<nl><nl>import pprint<nl>pprint.pprint(num_evens)", "out": "PythonでXリストを動的に作成する", "out_en": "Create x lists in python dynamically"}
{"in": "def checkuser(request):<nl><tab>if request.method == \"POST\":<nl><tab><tab>conn = Connection('localhost', 27017)<nl><tab><tab>db = conn['user-data']<nl><tab><tab>userTable = db[\"logins\"]<nl><nl><tab><tab>userToCheck = request.form['usertocheck']<nl><nl><tab><tab>#search for user to check if it already exists<nl><tab><tab>doesExist = str(userTable.find_one({\"username\": userToCheck}))<nl><tab><tab>conn.close()<nl><nl><tab><tab>if doesExist == \"None\":<nl><tab><tab><tab>return \"Username is available\"<nl><tab><tab>elif doesExist.find(\"ObjectId\") != -1:<nl><tab><tab><tab>return \"Username already taken.\"<nl><tab><tab>else:<nl><tab><tab><tab>return \"Error\"<nl><nl><nl>@app.route('/register/checkuser', methods=['POST'])<nl>def func():<nl><tab>return checkUser(request)", "out": "HTTP POSTメソッドを処理するための再利用可能な関数の公開", "out_en": "Exposing reusable functions to deal with HTTP POST methods"}
{"in": "world.browser.find_by_id(field).fill(value)", "out": "Djangoレタスとスプリンターでブラウザを開くが何も表示されない", "out_en": "Django with lettuce and splinter, opens the browser but doesn't show anything"}
{"in": "with open(\"c:/achip.txt\", \"rU\") as f:<nl>  columns = f.readline().strip().split()<nl>  sums = [0.0] * len(columns)<nl>  row_counts = [0] * len(columns)<nl><nl>  for line in f:<nl><tab>line = line.strip()<nl><tab>if not line:<nl><tab>  continue<nl><nl><tab>for col, v in enumerate(line.split()):<nl><tab>  if v != \"NA\":<nl><tab><tab>sums[col] += int(v)<nl><tab><tab>row_counts[col] += 1<nl><nl>with open(\"c:/chipdone.txt\", \"w\") as out:<nl>  for name, sum, rows in zip(columns, sums, row_counts):<nl><tab>print >>out, name,<nl><tab>if rows == 0:<nl><tab>  print >>out, \"NA\"<nl><tab>else:<nl><tab>  print >>out, sum / rows", "out": "Pythonのif elseループに関するヘルプ", "out_en": "Help with an if else loop in python"}
{"in": "AllocationSet(<nl><tab>Alloc( name=\"some name\", value=1.23 ),<nl><tab>Alloc( name=\"another name\", value=2.34 ),<nl><tab>Alloc( name=\"yet another name\", value=4.56 ),<nl>)", "out": "スペースを含むPythonメソッド引数", "out_en": "Python method arguments with spaces"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>delta_Array = np.array([0.01,0.02,0.03, 0.04, 0.05,<nl><tab><tab><tab><tab><tab><tab>0.06,0.07, 0.08, 0.09, 0.10])<nl>#Initialized to 0s. Actual values will be appended to matrix by function<nl>theta_Matrix = np.random.random() * np.random.rand(delta_Array.size, 8) <nl><nl>fig = plt.figure()<nl>p1 = plt.plot(delta_Array, theta_Matrix)<nl># make a legend for both plots<nl>leg = plt.legend(p1, '', loc=1)<nl><nl>plt.show()", "out": "PythonのMatplotlibを使用して、配列内のインデックスに対応する行列に値をプロットする", "out_en": "Plotting values in matrix corresponding to the index in an array with Matplotlib in Python"}
{"in": "class Gif(ndb.Model):<nl><tab>author = ndb.UserProperty()<nl><tab>link = ndb.StringProperty(indexed=False)<nl><tab># you store array of tag keys here you can also just make this<nl><tab># StringProperty(repeated=True)<nl><tab>tag = ndb.KeyProperty(repeated=True)<nl><nl><tab>@classmethod<nl><tab>def get_by_tag(cls, tag_name):<nl><tab><tab># a query to a repeated property works the same as if it was a single value<nl><tab><tab>return cls.query(cls.tag == ndb.Key(Tag, tag_name)).fetch()<nl><nl># we will put the tag_name as its key.id()<nl># you only really need this if you wanna keep records of your tags<nl># you can simply keep the tags as string too<nl>class Tag(ndb.Model):<nl><tab>gif_count = ndb.IntegerProperty(indexed=False)", "out": "Googleデータストアを使用した多対多データベースの検索", "out_en": "Searching a many to many database using google datastore"}
{"in": "def main():<nl><tab>intro()<nl><nl><tab>my_board = placeMyShips(emptyBoard())<nl><tab>my_hit_board = emptyBoard()<nl><tab>comp_board = placeCompShips(emptyBoard())<nl><tab>comp_hit_board = emptyBoard()<nl><nl><tab>myMoves(comp_board, my_hit_board)", "out": "Making simple game of Battleship(戦艦のメイキング・シンプル", "out_en": "Making simple game of Battleship"}
{"in": "import sys, os<nl><nl>sys.path.append('/Path/To/Django/Projects/')<nl>os.environ['DJANGO_SETTINGS_MODULE'] = 'myproject.settings'<nl><nl>from django.core.serializers import serialize<nl>from myproject.myapp import models<nl><nl>model_names = [] # a list of the names of the models you want to export<nl><nl>for model_name in model_names:<nl><tab>cls = getattr(models, model_name)<nl><tab>filename = model_name.lower() + \".json\"<nl><tab>file = open(filename, \"w\")<nl><tab>file.write(serialize(\"json\", cls.objects.all()))", "out": "Djangoを使用したBulkでのデータの保存", "out_en": "saving data in Bulk using Django"}
{"in": "query = \"\"\"<nl><tab>INSERT INTO user_profiles <nl><tab><tab>(user_id, json_source, user_timestamp) <nl><tab>VALUES <nl><tab><tab>(%s, %s, %s)<nl>\"\"\"<nl>cur.execute(query, (data[0], data[1].encode('utf-8'), data[2]))", "out": "Pythonでタブによる分割を使用すると、テキストに文字が追加され、MySQLでエラーが発生する", "out_en": "Using split by tab in Python adds a character to text which raises error in MySQL"}
{"in": "# beginner<nl><nl>def fac(n):<nl><tab>f = 1<nl><tab>i = 1<nl><tab>while i <= n:<nl><tab><tab>f *= i<nl><tab><tab>i += 1<nl><tab>return f<nl><nl># advanced beginner<nl><nl>def fac(n):<nl><tab>return n * fac(n - 1) if n > 1 else 1<nl><nl># intermediate<nl><nl>def fac(n):<nl><tab>return reduce(lambda x, y: x * y, range(1, n + 1))<nl><nl># advanced intermediate<nl><nl>import operator<nl>def fac(n):<nl><tab>return reduce(operator.mul, xrange(1, n + 1))<nl><nl># professional<nl><nl>import math<nl>print math.factorial(5)<nl><nl># guru<nl><nl>import scipy.misc as sc<nl>print sc.factorial(5, exact=True)", "out": "Pythonの階乗関数", "out_en": "Factorial function in Python"}
{"in": "m = gurobipy.model()<nl>m.setParam('TimeLimit', 5*60)", "out": "Pythonを使用してぐろびのタイムアウトを設定する方法", "out_en": "How to set a timeout for gurobi using python"}
{"in": "from legacy_module import *", "out": "Pythonでは、インポートされたモジュールの名前空間を保持せずに、別のモジュールからすべてのクラスをインポートするにはどうすればよいのでしょう。", "out_en": "In python, how do you import all classes from another module without keeping the imported module's namespace?"}
{"in": "f = open('filename.ext', 'rb')<nl>f.seek(255) # skip the first 255 bytes<nl>rest = f.read() # read rest", "out": "ファイルの先頭からバイト数を削除する", "out_en": "Remove number of bytes from beginning of file"}
{"in": "(moviesRDD<nl><tab>.join(ratingsRDD) # Join by key<nl><tab>.values() # Extract values<nl><tab>.map(lambda x: (x[1][0], x[0], x[1][1]))) # Reshape", "out": "Spark 2 RDD結合の問題", "out_en": "Spark two RDD join issue"}
{"in": "alldata = impdat.root.data<nl>datastruct = {}<nl>for names in impdat.rood.data.__members___:<nl><tab>datastruct[names] = eval('alldata.' + names + '[0][:]')", "out": "Pythonで.mat(バージョン8.1)構造体からデータにアクセスする", "out_en": "Accessing Data from .mat (version 8.1) structure in Python"}
{"in": "import threading<nl>import subprocess<nl><nl>class RepeatingTimer(threading._Timer):<nl><tab>def run(self):<nl><tab><tab>while True:<nl><tab><tab><tab>self.finished.wait(self.interval)<nl><tab><tab><tab>if self.finished.is_set():<nl><tab><tab><tab><tab>return<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>self.function(*self.args, **self.kwargs)<nl><nl><nl>def status():<nl><tab>print \"I'm alive\"<nl>timer = RepeatingTimer(1.0, status)<nl>timer.daemon = True # Allows program to exit if only the thread is alive<nl>timer.start()<nl><nl>proc = subprocess.Popen([ '/bin/sleep', \"5\" ])<nl>proc.wait()<nl><nl>timer.cancel()", "out": "サブプロセスの生成と実行中の進行状況の表示", "out_en": "showing progress while spawning and running subprocess"}
{"in": "import urllib, re<nl><nl>source = urllib.urlopen('http://www.cbssports.com/nba/draft/mock-draft').read()<nl><nl>## every image name is an abbreviation composed by capital letters, so...<nl>for link in re.findall('http://sports.cbsimg.net/images/nba/logos/30x30/[A-Z]*.png', source):<nl><tab>print link<nl><nl><nl><tab>## the code above just prints the link;<nl><tab>## if you want to actually download, set the flag below to True<nl><nl><tab>actually_download = False<nl><tab>if actually_download:<nl><tab><tab>filename = link.split('/')[-1]<nl><tab><tab>urllib.urlretrieve(link, filename)", "out": "Pythonを使用したWebページからの画像リンクの抽出", "out_en": "Extract image links from the webpage using Python"}
{"in": "notify-osd", "out": "カーソルが必要な場所にあるときだけ通知するようにXサーバにさせることができますか?", "out_en": "can I make X-server to notify me only when cursor exactly where I need?"}
{"in": "for file, n in num.iteritems():<nl><tab>print file, n", "out": "Python:コーパスファイル内の特定の単語のカウント", "out_en": "Python: counting specific words in file of corpus"}
{"in": "now  = time.strftime(\"%X\")<nl>peer = socket.getpeername()<nl>print(\"{} - {}\".format(now, peer))", "out": "Python複数の変数/関数が同じ行を返します", "out_en": "Python several variables/functions resutl same line"}
{"in": "sendPacket('\\x5f\\x00\\x00\\x00\\x01\\x00\\x07\\x01\\xcc\\x00\\x00\\x00\\x1f\\x8b')", "out": "変換せずにUDPパケット経由でバイトを送信する", "out_en": "Sending bytes via UDP packets without further conversion"}
{"in": "django.template.loader.get_template(template_name)", "out": "Djangoにテンプレートが存在するかどうかをチェックする方法は?", "out_en": "How to check if a template exists in Django?"}
{"in": "#!/usr/bin/env python<nl>from contextlib import closing<nl>from selenium.webdriver import Firefox # pip install selenium<nl><nl>url = \"http://example.com\"<nl><nl># use firefox to get page with javascript generated content<nl>with closing(Firefox()) as browser:<nl><tab>n = 1<nl><tab>while n < 10:<nl><tab><tab>browser.get(url) # load page<nl><tab><tab>link = browser.find_element_by_link_text(str(n))<nl><tab><tab>while link:<nl><tab><tab>   browser.get(link.get_attribute(\"href\")) # get individual 1,2,3,4 pages<nl><tab><tab>   #### save(browser.page_source)<nl><tab><tab>   browser.back() # return to page that has 1,2,3,next -like links<nl><tab><tab>   n += 1<nl><tab><tab>   link = browser.find_element_by_link_text(str(n))<nl><nl><tab><tab>link = browser.find_element_by_link_text(\"next\")<nl><tab><tab>if not link: break<nl><tab><tab>url = link.get_attribute(\"href\")", "out": "PythonとSeleniumを使って動的なWebページをスクレイプする", "out_en": "Using python with selenium to scrape dynamic web pages"}
{"in": "data = [<nl><tab>{'name':'John', 'color':'red'},<nl><tab>{'name':'Bob', 'color':'green'},<nl><tab>{'name':'Tom', 'color':'blue'}<nl>]<nl>colors = ['blue', 'red', 'green']<nl>result = []<nl><nl>for c in colors:<nl><tab>result.extend([d for d in data if d['color'] == c])<nl><nl>print result", "out": "Pythonで対応する値のリストと一致するディクショナリのリストを返す", "out_en": "Return a list of dictionaries that match the corresponding list of values in python"}
{"in": "self.showMaximized()", "out": "PyQtウィンドウの状態をPyQtで最大化する方法", "out_en": "How to make PyQt window state to maximised in pyqt"}
{"in": "if self.ammo and player_rect.colliderect(self.ammo.rect):<nl><tab><tab>self.ammo_amount += 50<nl><tab><tab>self.all_sprites_list.remove(self.ammo)<nl><tab><tab>self.ammo = None", "out": "Pythonとpygameでrects/spritesを削除する方法", "out_en": "How to delete rects/sprites with python and pygame"}
{"in": "bigrams = [word_list[i] + \" \" + wordlist[i+1] for i in range(len(wordlist)-1)]", "out": "回数を数えるということは、1回2語というのはどうやって数えるのですか?", "out_en": "Count frequence, how to take two word each time?"}
{"in": "from pprint import pformat<nl><nl>def application(environ, start_response):<nl><tab># show the environment:<nl><tab>output = ['<pre>']<nl><tab>output.append(pformat(environ))<nl><tab>output.append('</pre>')<nl><nl><tab>#create a simple form:<nl><tab>output.append('<form method=\"post\">')<nl><tab>output.append('<input type=\"text\" name=\"test\">')<nl><tab>output.append('<input type=\"submit\">')<nl><tab>output.append('</form>')<nl><nl><tab>if environ['REQUEST_METHOD'] == 'POST':<nl><tab><tab># show form data as received by POST:<nl><tab><tab>output.append('<h1>FORM DATA</h1>')<nl><tab><tab>output.append(pformat(environ['wsgi.input'].read()))<nl><nl><tab># send results<nl><tab>output_len = sum(len(line) for line in output)<nl><tab>start_response('200 OK', [('Content-type', 'text/html'),<nl><tab><tab><tab><tab><tab><tab><tab>  ('Content-Length', str(output_len))])<nl><tab>return output", "out": "mod_wsgiを使用したPython POSTデータ", "out_en": "Python POST data using mod_wsgi"}
{"in": "ld = {} # basic dictionary<nl># now open & read file<nl>with open('linked_id.txt') as fin:<nl><tab>for ln in fin: # process each line in the file<nl><tab><tab>k, v = ln.split() # split each line eg. k = 'ID1', v = 'ID2'<nl><tab><tab># make a dictionary entry - setdefault puts the k(ey) in and<nl><tab><tab># in this case set the value to a list, append then adds to <nl><tab><tab># the list by k(ey)<nl><tab><tab>ld.setdefault(k, []).append(v) <nl><nl>unq = [] # start an empty list<nl>for k, v in ld.items(): # process the dictionary elements<nl><tab>v.append(k)  # make the value list include the key<nl><tab>ll = sorted(v)  # sort the new list<nl><tab>if not ll in unq: # see if its in the unq (unique) list<nl><tab><tab>unq.append(ll) # if not add it<nl><nl>print(unq)  # show the unique sets", "out": "各行に2つのIDがリンクされているテキストファイル内のすべてのリンクされたIDを検索する", "out_en": "find all the linked IDs in a text file with each row has two IDs that are linked"}
{"in": "from operator import itemgetter<nl>from string import ascii_uppercase<nl><nl>data = [19, 14, 36]<nl><nl>labelled = zip(data, ascii_uppercase) # [(19, 'A'), (14, 'B'), (36, 'C')]<nl><nl>sorted_data = sorted(labelled, <nl><tab><tab><tab><tab><tab> key=itemgetter(0)) # [(14, 'B'), (19, 'A'), (36, 'C')]<nl><nl>labels = [pair[1] for pair in sorted_data] # ['B', 'A', 'C']", "out": "Pythonで未知のサイズリストの要素に名前を割り当てる", "out_en": "assign names to elements of unknown size list in python"}
{"in": "import sqlite3<nl><nl>def dict_factory(cursor, row):<nl><tab>d = {}<nl><tab>for idx, col in enumerate(cursor.description):<nl><tab><tab>d[col[0]] = row[idx]<nl><tab>return d<nl><nl>con = sqlite3.connect(\":memory:\")<nl>con.row_factory = dict_factory<nl>cur = con.cursor()<nl>cur.execute(\"select 1 as a\")<nl>print cur.fetchone()[\"a\"]", "out": "sqliteクエリからdictを取得するには?", "out_en": "How can I get dict from sqlite query?"}
{"in": "count = input(\"How many numbers do you want to input?\")<nl>numbers = [float(num) for num in raw_input(\"Input numbers, please...\").split()]<nl>if count != len(numbers):<nl>  raise SystemExit(\"You lied to me!\")", "out": "Pythonで1つの行にn個の整数を開きたい", "out_en": "i want to open n number of integer in one row in Python"}
{"in": "for pm in root.Document.Placemark:<nl><tab>point = [p for p in pm.getchildren() if p.tag.endswith('Point')]<nl><tab>if point:<nl><tab><tab>coords = point[0].coordinates.text<nl><tab>else:<nl><tab><tab>poly = [p for p in pm.getchildren() if p.tag.endswith('Polygon')]<nl><tab><tab>if poly:<nl><tab><tab><tab>coords = poly[0].outerBoundaryIs.LinearRing.coordinates.text<nl><tab>print pm.name, coords", "out": "KMLがdjangoを使って子要素をパースする", "out_en": "KML parsing child elements using django"}
{"in": "import matplotlib.pyplot as plt<nl>a = '\\\\frac{a}{b}'  #notice escaped slash<nl>plt.plot()<nl>plt.text(0.5, 0.5,'$%s$'%a)<nl>plt.show()", "out": "Pythonでlatex-formulaを出力する", "out_en": "Print latex-formula with python"}
{"in": "import os<nl>os.environ[\"DJANGO_SETTINGS_MODULE\"] = \"mysite.settings\"<nl><nl>from mysite.polls.models import Poll, Choice", "out": "モデルにアクセスするには何をインポートする必要がありますか?", "out_en": "What do I need to import to gain access to my models?"}
{"in": "urlFile = open(\"mailList.txt\", \"r+\")<nl>mailList = [i.strip() for i in urlFile.readlines()]", "out": "Python smtplibを使用して.txtファイルから複数の受信者に電子メールを送信する", "out_en": "Send Email to multiple recipients from .txt file with Python smtplib"}
{"in": "def custom_sort(population):<nl><tab>pop_dict = { ind.ID: ind for ind in population }<nl><nl><tab>start = []<nl><tab>nones = []<nl><tab>end = []<nl><tab>for ind in population:<nl><tab><tab>if ind.mate is None:<nl><tab><tab><tab>nones.append(ind)<nl><tab><tab>elif pop_dict[ind.mate] not in start:<nl><tab><tab><tab>start.insert(0, ind)<nl><tab><tab><tab>end.append(pop_dict[ind.mate])<nl><tab>return start + nones + end", "out": "Python:2つの属性に従ってリストをソートする", "out_en": "Python: Sort a list according to two attributes"}
{"in": "import math<nl>from decimal import Decimal<nl><nl>def s(x):<nl><tab>return (Decimal(0.298**k))/ Decimal(math.factorial(k))<nl><nl>prevSK = 0<nl>sum=0<nl>valueList = {}<nl>for k in (range(0,501)):<nl><nl><tab>try:<nl><tab><tab>a = (round(s(k),5))<nl><tab><tab>r = (round(s(k)/prevSK,5))<nl><tab><tab>print \"a{n}: {a}\".format(n=k, a=a)<nl><tab><tab>print \"r{n}: {r}\".format(n=k, r=r)<nl><tab><tab>valueList[k] = {\"a{n}\".format(n=k) : a, \"r{n}\".format(n=k) : r}<nl><tab><tab>prevSK = s(k)<nl><tab><tab>summa = sum=sum+a<nl><tab>except Exception, e:<nl><tab><tab>print e<nl><tab><tab>prevSK = (Decimal(s(k),))<nl><nl><tab>continue<nl><nl>print \"The sum is:\", summa", "out": "ラベル付け、ループ要素の番号付け+合計", "out_en": "labeling, numbering loop elements + summing them up"}
{"in": "s = \"534349511\"<nl>print ' '.join([s[i:i+2] for i in range(0,len(s),2)])", "out": "2桁ごとにスペースを入れて文字列の書式を設定する", "out_en": "Format a string with a space between every two digits"}
{"in": "DAB_FIELD_RENDERER = 'django_admin_bootstrapped.renderers.BootstrapFieldRenderer'", "out": "django-admin-ブートストラップによるDateField、TimeField、およびPointFieldの操作", "out_en": "django-admin-bootstrapped messing with DateField, TimeField and PointField"}
{"in": "sortedfreqlist = sorted(freqlist, key=lambda item: int(item[1]), reverse=True)", "out": "Pythonが頻度でファイルをソートする", "out_en": "Python sorting a file by frequency"}
{"in": "python-docx", "out": "python-docxを使用して既存のdocxに内容を追加する", "out_en": "add content to existing docx with python-docx"}
{"in": "tests=(<nl><tab>('fck','fc kopenhavn',True),<nl><tab>('fco','fc kopenhavn',False),<nl><tab>('irl','in real life',True),<nl><tab>('irnl','in real life',False),<tab><nl><tab>('ifk','ifk gotebork',True),   <nl><tab>('ifko','ifk gotebork',False),<tab><nl><tab>('aik','allmanna idrottskluben',True),<nl><tab>('aid','allmanna idrottskluben',True),<nl><tab>('manu','manchester united',True), <nl><tab>('fz','faz zoo',True), <nl><tab>('fzz','faz zoo',True),<nl><tab>('fzzz','faz zoo',False),<tab><nl><tab>)<nl><nl>def is_abbrev(abbrev, text):<nl><tab>abbrev=abbrev.lower()<nl><tab>text=text.lower()<nl><tab>words=text.split()<nl><tab>if not abbrev:<nl><tab><tab>return True<nl><tab>if abbrev and not text:<nl><tab><tab>return False<nl><tab>if abbrev[0]!=text[0]:<nl><tab><tab>return False<nl><tab>else:<nl><tab><tab>return (is_abbrev(abbrev[1:],' '.join(words[1:])) or<nl><tab><tab><tab><tab>any(is_abbrev(abbrev[1:],text[i+1:])<nl><tab><tab><tab><tab><tab>for i in range(len(words[0]))))<nl><nl>for abbrev,text,answer in tests:<nl><tab>result=is_abbrev(abbrev,text)<nl><tab>print(abbrev,text,result,answer)<nl><tab>assert result==answer", "out": "文字列が名前の省略名になり得るかどうかをチェックする", "out_en": "Check if a string is a possible abbrevation for a name"}
{"in": "print '<a href=\"%(url)s\">%(url)s</a>' % {'url': my_url}", "out": "名前付きパラメータの文字列書式設定", "out_en": "String formatting named parameters?"}
{"in": "mapper.connect('st','/st/submit_data',controller=storm, action='submit_data')", "out": "Cherrypyウェブアプリのルーティング(リソースのロードに失敗)", "out_en": "Routing Cherrypy web apps(fail to road resource)"}
{"in": "class NonscientificDecimalField(DecimalField):<nl><tab>\"\"\" Prevents values from being displayed with E notation, with trailing 0's<nl><tab><tab>after the decimal place  truncated. (This causes precision to be lost in<nl><tab><tab>many cases, but is more user friendly and consistent for non-scientist<nl><tab><tab>users)<nl><tab>\"\"\"<nl><tab>def value_from_object(self, obj):<nl><tab><tab>def remove_exponent(val):<nl><tab><tab><tab>\"\"\"Remove exponent and trailing zeros.<nl><tab><tab><tab>   >>> remove_exponent(Decimal('5E+3'))<nl><tab><tab><tab>   Decimal('5000')<nl><tab><tab><tab>\"\"\"<nl><tab><tab><tab>context = decimal.Context(prec=self.max_digits)<nl><tab><tab><tab>return val.quantize(decimal.Decimal(1), context=context) if val == val.to_integral() else val.normalize(context)<nl><nl><tab><tab>val = super(NonscientificDecimalField, self).value_from_object(obj)<nl><tab><tab>if isinstance(val, decimal.Decimal):<nl><tab><tab><tab>return remove_exponent(val)", "out": "DecimalFieldで末尾の0が一貫性なく表示される", "out_en": "A trailing zero appears inconsistently on my DecimalField"}
{"in": "import os<nl><nl>def upload(file_name_number,files_dict): <nl><nl><tab>filename = int(raw_input(file_name_number))<nl><tab>#as the key to dictionary is integer<nl><tab>if filename in files_dict:<nl><tab><tab># upload code here<nl><tab><tab>print \"dummy\"<nl><tab>else:<nl><tab><tab>print \"The selected number does not exist in current directory.\"<nl><tab><tab>upload(file_name_number,files_dict)#why are you calling this again<nl><tab>return filename<nl><nl>def create():<nl><tab>files_dict = showListAndSaveDict()<nl><tab>firstFile  = upload(\"Select the number of first file:\",files_dict)<nl><tab>secondFile = upload(\"Select the number of second file:\",files_dict)<nl><tab>thirdFile  = upload(\"Select the number of third file:\",files_dict)<nl><nl>def showListAndSaveDict():<nl><tab>files = [f for f in os.listdir('.') if os.path.isfile(f)]<nl><tab>files_dict = {}<nl><tab>i=0<nl><tab>for f in files:<nl><tab><tab>i = i+1<nl><tab><tab>print (str(i) + \" - \" + f)  <nl><tab><tab>files_dict[i] = f<nl><tab>return files_dict<nl><nl>create()", "out": "ファイル名の代わりに各ファイルに関連付けられた番号を使用してファイルをアップロードする", "out_en": "upload files using a number associated with each file instead of the name of the file"}
{"in": "year=['51-52', '53', '55' , '56' , '58', '59', '60', '61']<nl>photo=[[70,72,73], [64,65,68],[79,80,81,82],[74,77,78],[60,61,62],[84,85,87],[57,58,59],[53,54,55,56]]<nl><nl>for i in range(len(year)):<nl>   for j in range(len(photo[i])):<nl><tab>   print '<img src=\\\"http://files.getdropbox.com/u/100000/Akuja/%s/P10104%s.JPG>' % (year[i], photo[i][j])", "out": "Pythonの出力に変数を配置できません", "out_en": "Unable to put a variable in Python's print"}
{"in": "pyaudio.paInt16", "out": "PortAudio/PyAudioを使用して入力デバイスから増幅範囲を取得する", "out_en": "Get amplitude range from input device using PortAudio / PyAudio"}
{"in": "import logging<nl>class RequestsConnectionFilter(logging.Filter):<nl><tab>def filter(self, record):<nl><tab><tab>return False<nl>logging.getLogger('newrelic.lib.requests.packages.urllib3.connectionpool').addFilter(RequestsConnectionFilter())", "out": "Herokuのログを汚染するNew Relic/Celeryを阻止する", "out_en": "Stop New Relic / Celery From Polluting Logs on Heroku"}
{"in": "import warnings<nl>from sqlalchemy import exc as sa_exc<nl><nl>with warnings.catch_warnings():<nl><tab>warnings.simplefilter(\"ignore\", category=sa_exc.SAWarning)<nl><tab># code here...", "out": "sqlalchemyで警告を消す", "out_en": "Turn off a warning in sqlalchemy"}
{"in": "import cx_Oracle<nl><nl>dsn_tns = cx_Oracle.makedsn('my_ip_address_server_next_port', 0000, 'sid')<nl>db = cx_Oracle.connect('user', 'password', dsn_tns)<nl>curs = db.cursor()<nl>curs.callproc(\"dbms_output.enable\")<nl><nl>curs.callproc('where.my_package.ger_result', ['something',])<nl><nl>statusVar = curs.var(cx_Oracle.NUMBER)<nl>lineVar = curs.var(cx_Oracle.STRING)<nl>while True:<nl>  curs.callproc(\"dbms_output.get_line\", (lineVar, statusVar))<nl>  if statusVar.getvalue() != 0:<nl><tab>break<nl>  print lineVar.getvalue()", "out": "cx_OracleとSql*Plusで同じ結果を得るにはどうすればよいですか。", "out_en": "How I can make same results on cx_Oracle and Sql * Plus?"}
{"in": "#!/usr/bin/python<nl># -*- coding: utf-8 -*-<nl><nl><nl>from ctypes import windll, Structure, c_long, byref #windows only<nl><nl><nl>class RECT(Structure):<nl><tab>_fields_ = [<nl><tab>('left',<tab>c_long),<nl><tab>('top',<tab> c_long),<nl><tab>('right',   c_long),<nl><tab>('bottom',  c_long),<nl><tab>]<nl><tab>def width(self):  return self.right  - self.left<nl><tab>def height(self): return self.bottom - self.top<nl><nl><nl>def onTop(window):<nl><tab>SetWindowPos = windll.user32.SetWindowPos<nl><tab>GetWindowRect = windll.user32.GetWindowRect<nl><tab>rc = RECT()<nl><tab>GetWindowRect(window, byref(rc))<nl><tab>SetWindowPos(window, -1, rc.left, rc.top, 0, 0, 0x0001)", "out": "Pygameはウィンドウの位置を変えずにウィンドウを上にセットする", "out_en": "Pygame set window on top without changing it's position"}
{"in": "def export(modeladmin, request, queryset):<nl><tab>\"\"\"<nl><tab>not sure if this will work<nl><tab>\"\"\"<nl><tab>request.session['export_querset'] = queryset<nl><nl><tab>\"\"\"<nl><tab>if above does not work then just set this and check for it in view and u can make the queryset again if this is set <nl><tab>\"\"\"<nl><tab>request.session['export_querset'] = 1<nl><tab>return HttpResponseRedirect(\"/export/\")", "out": "Django:HttpResponseRedirectを使用してクエリー・セットを別のビューに渡す", "out_en": "Django: Passing a queryset to another view with HttpResponseRedirect"}
{"in": "chargeTypeName = models.CharField(max_length=6, blank=True)", "out": "Python Django rest framework Post Get Serializer", "out_en": "Python Django rest framework Post Get Serializer"}
{"in": "logger = logging.getLogger('my-logger')<nl>logger.propagate = False<nl># now if you use logger it will not log to console.", "out": "Pythonでコンソールロギングを無効にし、再度有効にするにはどうすればいいですか?", "out_en": "How to I disable and re-enable console logging in Python?"}
{"in": "subprocess.Popen(['ping www.google.com > /dev/null &'], shell=True, preexec_fn=os.setsid)", "out": "PythonのPopenでバックグラウンドプロセスを作成する", "out_en": "create background process with Python's Popen"}
{"in": "re_str = r\"\\?engine=(?P<eng>[\\w-]*?)&query=(?P<query>[=\\d\\+\\w-]*?)&subegine=(?P<sub>\\w*)\\s\"<nl>reg = re.compile(re_str)<nl>for line in file:<nl>  m = reg.search(line)<nl>  print \"Engine\", m.group(\"eng\")<nl>  print \"Query\", m.group(\"query\")<nl>  print \"Sub\", m.group(\"sub\")", "out": "引数ごとにApacheログのGET要求を解析する", "out_en": "Parse GET requests in Apache log by arguments"}
{"in": "items = ['Item'] * 6<nl>for i, item in enumerate(items, start=1):<nl><tab>number = (i + 1) / 2<nl><tab>print('{} {}'.format(number, item))", "out": "2回連続して表示される番号を印刷する", "out_en": "Print Successive Numbers That Appear Twice?"}
{"in": "service.start()<nl>worker_1.start()<nl>worker_1.join()<nl>service.terminate()", "out": "サーバとクライアントを同じファイル内で実行する-python", "out_en": "Run server and client in the same file - python"}
{"in": "from django.db.models import Count<nl>Article.objects.annotate(num_comments=Count('comment')).filter(num_comments__gt=10)", "out": "オブジェクトを参照するオブジェクトの数でオブジェクトをフィルタするにはどうすればよいですか。", "out_en": "How can I filter objects by how many objects reference them?"}
{"in": "ms.listSubscribe(<nl><tab>id=settings.MAILCHIMP_NEWSLETTER_LIST_ID,<nl><tab>email_address=self.user.email,<nl><tab>merge_vars={'FNAME': self.user.first_name,<nl><tab><tab>'LNAME': self.user.last_name,<nl><tab><tab>'GROUPINGS': [<nl><tab><tab><tab>{'id': 9917,<nl><tab><tab><tab>'groups': 'food service operator',},]},<nl><tab>double_optin=False,<nl><tab>update_existing=True,<nl>)", "out": "グループ化を設定しようとしたときにmailsnakeからエラーが返される", "out_en": "Getting error from mailsnake when trying to set groupings"}
{"in": "contour(im, levels=[245], colors='black', origin='image')", "out": "Pythonでイメージの外部輪郭またはシルエットを抽出する", "out_en": "Extract external contour or silhouette of image in Python"}
{"in": "import sys<nl>import selenium<nl>from selenium import webdriver<nl>from selenium.webdriver.common.keys import Keys   <nl><nl>driver = webdriver.Firefox()<nl>driver.get(\"http://website.aspx\")<tab><nl><nl>elem = driver.find_element_by_id(\"ctl00_ctl00\")<nl>elem.send_keys( '15' )<nl>elem.send_keys( Keys.RETURN )", "out": "フォームに入力してRでリンクを「クリック」するWebサイトをスクレイプするにはどうすればいいですか?", "out_en": "How to scrape a web-site filling out forms and 'clicking' on links with R?"}
{"in": "cygpath -w", "out": "cygwinを使用してPOSIXからWindowsに切り替える方法", "out_en": "how to switch from posix to windows with cygwin"}
{"in": "class StringError(Exception):<nl><tab>NO_E = 0<nl><tab>HAS_Z = 1<nl><nl>def string_checker(string):<nl><tab>if 'e' not in string:<nl><tab><tab>raise StringError('e not found in string', StringError.NO_E)<nl><tab>if 'z' in string:<nl><tab><tab>raise StringError('z not allowed in string', StringError.HAS_Z)<nl><tab>return string.upper()<nl><nl>s = 'testing'<nl>try:<nl><tab>ret = string_checker(s)<nl><tab>print 'String was okay:', ret<nl>except StringError as e:<nl><tab>print 'String not okay with an error code of', e.args[1]", "out": "値が欠落しているタプル", "out_en": "Tuple with missing value"}
{"in": "#Important assumption here... wordlist is sorted<nl><nl>base=wordlist[0]<tab><tab><tab><tab><tab>  #consider the first word in the list<nl>for word in wordlist:<tab><tab><tab><tab> #loop through the entire list checking if<nl><tab>if not word.startswith(base):<tab> # the word we're considering starts with the base<nl><tab><tab>print base<tab><tab><tab><tab><tab>#If not... we have a new base, print the current<nl><tab><tab>base=word<tab><tab><tab><tab><tab> #  one and move to this new one<nl><tab>#else word starts with base<nl><tab><tab>#don't output word, and go on to the next item in the list<nl>print base<tab><tab><tab><tab><tab><tab><tab>#finish by printing the last base", "out": "Python-リスト内の他の単語を含むすべての単語を削除する", "out_en": "Python- Remove all words that contain other words in a list"}
{"in": "with open('text.txt') as text:<nl><tab>with open('unique.txt', 'w') as output:<nl><tab><tab>seen = set()<nl><tab><tab>for line in text:<nl><tab><tab><tab>line_hash = hash(line)<nl><tab><tab><tab>if line_hash not in seen:<nl><tab><tab><tab><tab>output.write(line)<nl><tab><tab><tab><tab>seen.add(line_hash)", "out": "大容量テキストファイルの内容を一意にする方法", "out_en": "how to unique large text file content"}
{"in": "import numpy as np<nl>import ImageGrab<nl>import cv2<nl><nl>while(True):<nl><tab>printscreen_pil =  ImageGrab.grab()<nl><tab>printscreen_numpy =   np.array(printscreen_pil.getdata(),dtype=uint8)\\<nl><tab>.reshape((printscreen_pil.size[1],printscreen_pil.size[0],3)) <nl><tab>cv2.imshow('window',printscreen_numpy)<nl><tab>if cv2.waitKey(25) & 0xFF == ord('q'):<nl><tab><tab>cv2.destroyAllWindows()<nl><tab><tab>break", "out": "OpenCVおよびPythonでのスクリーンキャプチャ-2.7", "out_en": "Screen Capture with OpenCV and Python-2.7"}
{"in": "import webapp2<nl>from google.appengine.ext import ndb<nl><nl>def parent_key():<nl><tab>return ndb.Key('My','Entities')<nl><nl>class SmallModel(ndb.Model):<nl><tab>n = ndb.IntegerProperty(required=True)<nl><tab>stamp = ndb.DateTimeProperty(auto_now_add=True)<nl><nl>class MainHandler(webapp2.RequestHandler):<nl><tab>def get(self):<nl><tab><tab>self.response.write('Hello world. Simple form. <form method=\"post\"><input name=\"n\" type=\"number\"><input type=\"submit\"></form>')<nl><tab>def post(self):<nl><tab><tab>entity = SmallModel(parent=parent_key(),n=int(self.request.get('n')))<nl><tab><tab>entity.put()<nl><tab><tab>self.redirect('/list')<nl><nl>class List(webapp2.RequestHandler):<nl><tab>def get(self):<nl><tab><tab>self.response.out.write(\"here's a list:\")<nl><tab><tab>entities = SmallModel.query(ancestor=parent_key())<nl><tab><tab>for entity in entities.iter():<nl><tab><tab><tab>self.response.out.write(\" %s \" % entity.n)<nl><tab><tab>self.response.out.write(\"...end list.\")<nl><nl>app = webapp2.WSGIApplication([<nl><tab>('/', MainHandler),<nl><tab>('/list',List)<nl>], debug=True)", "out": "App Engine Dev Serverデータストアが十分な速度で更新されない", "out_en": "App Engine Dev Server datastore not updating fast enough?"}
{"in": "import subprocess<nl>p = subprocess.Popen(\"some_long_command\",stdout=subprocess.PIPE)<nl>for line in iter(p.stdout.readline, \"\"):<nl><tab>print line", "out": "Python 2.4で長時間実行されるosコマンドから読み込む必要があります。", "out_en": "Need to read from long running os command with Python 2.4"}
{"in": "shell=True", "out": "WindowsでのPythonサブプロセスの問題", "out_en": "Python subprocess issue on Windows"}
{"in": "import sys<nl><nl>for line in fileinput.input(file_full_path, inplace=True):<nl><tab>newline, count = re.subn(search_str, replace_str, line.rstrip())<nl><tab>sys.stderr.write(\"your message here\")<nl><tab>print newline", "out": "コンソールにメッセージを送信しながら、検索と置換にfileinput(Python)を使用する", "out_en": "Using fileinput (Python) for a search-and-replace while also sending messages to console"}
{"in": "time_waited = 0<nl>then = time.time()<nl>for p in processes:<nl><tab>if time_waited >= DURATION:<nl><tab><tab>p.join(0)<nl><tab><tab>p.terminate()<nl><tab>p.join(DURATION - time_waited)<nl><tab>time_waited = time.time() - then", "out": "タイムアウトを指定してPythonプロセスのグループに参加する", "out_en": "Join a group of python processes with a timeout"}
{"in": "import tkFileDialog<nl><nl>old_file = tkFileDialog.askopenfilename(filetypes=[('.csvfiles', '.csv')],<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>title='Old file selected first')", "out": "Python tkinterはタイトルバーの「open」を変更します。", "out_en": "Python tkinter change 'open' in the title bar"}
{"in": "import networkx as nx<nl><nl>G = nx.Graph()<nl>G.add_node(1,color='red')<nl>G.add_node(2,color='red')<nl>G.add_node(3,color='blue')<nl>G.add_node(4,color='blue')<nl><nl>G.add_edges_from([(1,2),(1,3),(3,4)])<nl><nl>for (u,v) in G.edges_iter():<nl><tab>if G.node[u]['color'] != G.node[v]['color']:<nl><tab><tab>print u,v", "out": "特定の基準を満たすnetworkxのエッジを検索する", "out_en": "finding edges in networkx that meet a certain criteria"}
{"in": "for k, i in enumerate(row):<nl><tab>print(str(k+1) + \".\" + \"\".join(i))", "out": "データベースから番号付きメニューリストを作成するfetch-Python", "out_en": "Creating a numbered menu list from a database fetch - Python"}
{"in": "app.register_blueprint(imported_plugin.plugin_handler, url_prefix=imported_config.FOO)", "out": "実行時にFlaskアプリに新しい「プラグイン」を追加", "out_en": "Add new \"plugin\" to Flask app in runtime"}
{"in": "os.walk(\"path\").next()[1]", "out": "Pythonでos.walkを使用して、入力として提供されたパスからdirsのリストを取得する方法", "out_en": "how to get the list of dirs from a path that is provided as input, in Python using os.walk"}
{"in": "url(r'^guideline/(?P<id>\\d+)/(?P<slug>[-\\w]+)/$', perma_post, name=\"cv_perma\")", "out": "DjangoでURLの末尾にストリング(title)を追加する方法は?", "out_en": "How to add a string (title) at the end of the url with Django?"}
{"in": "list(the_iterator)", "out": "ジェネレータまたはイテレータによって生成されたすべての要素を返すための標準メソッド", "out_en": "Standard method for returning all elements generated by a generator or iterator"}
{"in": "import BeautifulSoup<nl>from BeautifulSoup import BeautifulSoup<nl><nl>soup = BeautifulSoup(totstring)<nl><nl>body = soup.find(\"body\")<nl><nl>bodytext = body.text", "out": "ElementTreeを使用したPythonでのxml構文解析", "out_en": "xml parsing in python using ElementTree"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl>from mpl_toolkits.mplot3d import Axes3D<nl><nl><nl>data = np.array(data)<nl>length = data.shape[0]<nl>width = data.shape[1]<nl>x, y = np.meshgrid(np.arange(length), np.arange(width))<nl><nl>fig = plt.figure()<nl>ax = fig.add_subplot(1,1,1, projection='3d')<nl>ax.plot_surface(x, y, data)<nl>plt.show()", "out": "matplotlibを使用して「リストのリスト」から3dサーフェスをプロットします", "out_en": "Plot a 3d surface from a 'list of lists' using matplotlib"}
{"in": "team_member = Team.objects.get(id=team_member_id)<nl>if team_member.site.id == request.user.site_set.all().first().id:<nl>   print \"same site\"<nl>else:<nl>   print \"different site\"", "out": "ユーザがモデルインスタンスを「所有」しているかどうかを認証する方法", "out_en": "How to authenticate if a user \"owns\" a model instance"}
{"in": "import maya.cmds as mc<nl><nl>Xsl = (mc.ls (sl=1, sn=1))[0]<nl><nl>def toastFUNC (arg=0):<nl><tab>mc.animCurveEditor (curveEditor, e=1, lck=1)<nl><nl>mc.window(w=500)<nl>mc.paneLayout( configuration='vertical2', swp=1, ps=[2, 70, 0] )<tab><nl>mc.frameLayout(w=150, h=100, lv=0)<nl><nl>mc.outlinerEditor(mlc='modelList', slc='modelList', showReferenceNodes=0, showReferenceMembers=0,<tab>showAttributes=1, showSelected=0, highlightActive=1, showAnimCurvesOnly=0, autoExpand=1,<nl>showConnected=1, showDagOnly=0, ignoreDagHierarchy=1, expandConnections=0, showCompounds=0,   showNumericAttrsOnly=0,<nl>autoSelectNewObjects=0, doNotSelectNewObjects=1, transmitFilters=0, showSetMembers=1,<tab>setFilter='defaultSetFilter', lck=1, sec=toastFUNC)<nl><nl>mc.setParent('..')<nl><nl>mc.frameLayout(w=1, h=100, lv=0)<nl>curveEditor = mc.animCurveEditor(mlc='modelList', slc='modelList', dak=1, di=0, dat='off', lck=1)<nl>mc.setParent('..')<nl>mc.showWindow()", "out": "3dビューでオブジェクトの選択を物理的に解除した後、アウトライナ(Outliner)でオブジェクトを選択したままにしておくにはどうすればよいですか。", "out_en": "How can I keep an object selected in the outliner after physically deselecting it in the 3d view?"}
{"in": "d = {<nl><tab>\"data\": {<nl><tab><tab>\"id\": 2,<nl><tab><tab>\"name\": \"My TEST\",<nl><tab><tab>\"image\": \"1.jpg\",<nl><tab><tab>\"article\": [<nl><tab><tab><tab>{<nl><tab><tab><tab><tab>\"id\": 1,<nl><tab><tab><tab><tab>\"name\": \"TEST\"<nl><tab><tab><tab>}<nl><tab><tab>]<nl><tab>}<nl>}<nl><nl><nl>myitems=[{<nl><tab>'title': d[\"data\"]['name'],<nl><tab>'image': d[\"data\"]['image'],<nl><tab>'article_id': d[\"data\"]['article'][0]['id']<nl>}]<nl>print myitems<nl>[{'image': '1.jpg', 'article_id': 1, 'title': 'My TEST'}]", "out": "リレーションシップのあるPythonでJSONを構文解析する方法", "out_en": "How to Parsing JSON With Python in relationship"}
{"in": "import urllib.parse, urllib.request<nl><nl>params = { \"SendXML\": \"<company><User><Username>username</Username><Password>passweord</Password></User><Content Type=sms>..\" }<nl>url_string = \"http://api.company.com/SendMessageXml.ashx?%s\" % (urllib.parse.urlencode(params))<nl>s = \"\"<nl>with urllib.request.urlopen(url_string) as url:<nl><tab>s = url.read()<nl><nl>print s", "out": "URL内の空白", "out_en": "white spaces in url"}
{"in": "from datetime import datetime, timedelta<nl>Example.objects.filter(date_created__lte=datetime.utcnow() - <nl><tab><tab><tab><tab><tab><tab>  timedelta(days=6*30)).delete()", "out": "日付のDjango Queryset", "out_en": "Django Queryset for date"}
{"in": "import os, shutil<nl><nl>#Get the list of all folders present within the particular directory<nl>folder_list = os.walk('.').next()[1]<nl><nl>#Start zipping the folders<nl>for each_folder in folder_list:<nl><tab>shutil.make_archive(each_folder, 'zip', os.getcwd() + \"\\\\\" + each_folder)", "out": "shutilを使用して特定のフォルダのzipファイルを作成する方法", "out_en": "How to create zip of a specific folder using shutil"}
{"in": "def f(s):<nl><tab>for x in range(len(s)):<nl><tab><tab>if s[x] == 'o':<nl><tab><tab><tab>s = s[:x]+'e'+s[x+1:]<nl><tab>return s", "out": "Python 3.4ヘルプ-文字列内の文字を置き換えるためのスライシングの使用", "out_en": "Python 3.4 help - using slicing to replace characters in a string"}
{"in": "__import__('cmds.' + command_name)", "out": "App Engineにモジュールを動的にインポートする方法は?", "out_en": "How do I dynamically import a module in App Engine?"}
{"in": "root.geometry('200x200')<nl>root.mainloop()", "out": "tkinter:コンテンツのサイズを変更したときにウィンドウのサイズが変更されないようにするにはどうすればいいですか?", "out_en": "tkinter: How do I fix my window so that the window doesn't resize when my content resizes?"}
{"in": "def using_split2(line, _len=len):<nl><tab>words = line.split()<nl><tab>index = line.index<nl><tab>offsets = []<nl><tab>append = offsets.append<nl><tab>running_offset = 0<nl><tab>for word in words:<nl><tab><tab>word_offset = index(word, running_offset)<nl><tab><tab>word_len = _len(word)<nl><tab><tab>running_offset = word_offset + word_len<nl><tab><tab>append((word, word_offset, running_offset - 1))<nl><tab>return offsets", "out": "空白で文字列を分割し、単語のオフセットと長さを保持する方法", "out_en": "How to split a string on whitespace and retain offsets and lengths of words"}
{"in": "req = google.appengine.ext.webapp.Request(dict(os.environ))", "out": "データベースモデル内の要求オブジェクトを取得する", "out_en": "Get request object in a db model?"}
{"in": "#!/usr/bin/env python<nl>query = [\"football\", \"basketball\", \"martial arts\", \"baseball\"]<nl>lists = [[\"apple\", \"football\", \"basketball court\"], [\"ball\"], [\"martial-arts\", \"baseball\", \"banana\", \"food\", \"doctor\"]]<nl>from random import random<nl><nl>def fake_levenshtein(word1, word2):<nl><tab>return random()<nl><nl>def avg_list(l):<nl><tab><tab>return reduce(lambda x, y: x + y, l) / len(l)<nl><nl>for l in lists:<nl><tab>score = []<nl><tab>for w1 in l:<nl><tab><tab>for w2 in query:<nl><tab><tab><tab>score.append(fake_levenshtein(w1, w2))<nl><tab>print avg_list(score)", "out": "文字列を含む2つのリストの類似性スコア", "out_en": "Similarity score of two lists with strings"}
{"in": "import itertools<nl><nl>bin1 = [1,2]<nl>bin2 = [3,4]<nl>bin3 = [5,6]<nl><nl>print [[bin1[0],y] for y in bin3] + [[bin1[1],y] for y in bin2]", "out": "複数のビンから1つのアイテムを選択したときに、IF条件を使用してすべての組み合わせを返す", "out_en": "Return all possible combinations when selecting a single item from multiple bins, with an IF condition"}
{"in": "import glob<nl>import os<nl><nl>filelog_ext=\".log\" #log extension<nl>array = []<nl><nl>for filename in glob.iglob(os.path.join(path, filelog_ext)):<nl><tab>with open(filename) as f:<nl><tab><tab>array.extend(f)", "out": "複数のファイルのデータのリストを配列に格納する", "out_en": "Storing a list of data from multiple files in array"}
{"in": "QOUT=[1.0, 3.0, 1.0, 2.0]<nl>QIN=[2.0, 3.0, 5.0, 2.0]<nl>TIN=[10.0,12.0,13.0, 12.0]<nl><nl>V=[2.0, 4.0, 5.0]<nl><nl>T=[10.0, 11.0, 12.0]<nl><nl>for q_in, q_out in zip(QIN, QOUT):<nl><tab>C = [v + q_in - q_out for v in V]<tab><nl><tab>print C<nl><nl><tab>lineNum=0<tab><tab> <nl><tab>for t1 in range(len(TIN)):<nl><tab><tab>Tx=[]<nl><tab><tab>for c in range(len(C)): <nl><tab><tab><tab>for i in range(len(T)):   <nl><tab><tab><tab><tab>Tx.append((T[i]*C[c]+TIN[t1]*QIN[lineNum])/(C[c]+QIN[lineNum]))<nl><tab><tab>lineNum +=1<nl><tab><tab>print Tx", "out": "リストの要素をループして、範囲が異なる別のリストの要素に変更するにはどうすればいいですか。", "out_en": "How can I loop and change the elements of a list with the elements of another list that has a diferent range?"}
{"in": "n[n[:,0] > 0, :]", "out": "条件が指定されたマトリックスの高度なインデックス作成(Numpy)", "out_en": "Numpy advanced indexing on a matrix given a condition"}
{"in": "import re<nl><nl>a_pattern = re.compile(\"query\\:(.+?)\\,\")<nl>re.findall(a_pattern, 'query:text_you_want_to_extract,')", "out": "PythonでフォーマットされていないJSONデータを処理する方法", "out_en": "How To Deal With Un-Format Json Data In Python?"}
{"in": "with open(filename) as f:<nl>   lines=f.readlines()<nl><nl>d=dict()<nl>for line in lines:<nl>  line=line.strip()<nl>  if line:<nl><tab> (k,v)=line.split(\":\", 1)<nl><tab> d[k]=v<nl><nl>print(\"%s: %s\" % (d['Package'], d['Version']))", "out": "Pythonを使用して.txtファイル内の分離された文字列値を連結する方法はありますか。", "out_en": "Is there a way to concatenate separated string values in a .txt file using Python?"}
{"in": "import numpy as np<nl>import pandas as pd<nl><nl>### create sample data<nl>date = pd.date_range(\"2010-01-01\", periods=365*3)<nl>date = pd.Index(np.random.choice(date, 30000))<nl>order_id = np.random.randint(10, 1000, size=30000)<nl><nl>df = pd.DataFrame({\"date\":date, \"order_id\":order_id})<nl><nl>### group by year and date<nl>date = pd.Index(df[\"date\"])<nl>df2 = df[\"order_id\"].groupby([date.year, date]).count()<nl><nl>### shift all year to 2000<nl>date = df2.index.get_level_values(1)<nl>new_date = pd.Index(pd.io.date_converters.parse_date_fields(np.ones(len(date))*2000, date.month, date.day))<nl>year = df2.index.get_level_values(0)<nl>df2.index = pd.MultiIndex.from_arrays([year, new_date])<nl><nl>### plot<nl>p = df2.unstack(0).plot()<nl>p.xaxis.set_ticklabels(range(1, 13));", "out": "年に依存しないパンダでのプロット日", "out_en": "Plotting date in Pandas independent of year"}
{"in": "date = \"2010-11-22\"<nl>timestamps = set(['2011-02-22', '2011-02-05', '2011-02-04', '2010-12-14', '2010-12-13', '2010-12-12', '2010-12-11', '2010-12-07', '2010-12-02', '2010-11-30', '2010-11-26', '2010-11-23', '2010-11-22', '2010-11-16'])<nl>#then you can just update it like so<nl>timestamps.update(['2010-11-16']) #if its in there it does nothing<nl>timestamps.update(['2010-12-30']) # it does add it", "out": "Pythonリスト内の固有の項目", "out_en": "Unique items in python list"}
{"in": "with open('topon.txt') as infile:<nl>  for line in infile:<nl><tab>print line.split('.', 1)[0]", "out": "Pythonでの文の処理", "out_en": "Sentence processing in Python"}
{"in": "for r in result:<nl>  for d in dict:<nl><tab>if d['value'] == r:<nl><tab>   print \"ok\"", "out": "Python-辞書のリストの値", "out_en": "Python - value in list of dictionaries"}
{"in": "import os<nl>import glob<nl><nl>files = list(glob.glob(os.path.join(directory,'*.*')))", "out": "Pythonでユーザが指定したディレクトリのファイル名からリストを作成する方法", "out_en": "How to create a list from filenames in a user specified directory in python"}
{"in": "from copy import deepcopy<nl>list1.append(deepcopy(list2))", "out": "リストにリストを追加し、値を上書きする", "out_en": "Append list to list, overwrite values"}
{"in": "from multiprocessing import Process<nl>p = Process(target=myfunc1)<nl>p.start()<nl>p2 = Process(target=myfunc2)<nl>p2.start()<nl># and so on<nl>p.join()<nl>p2.join()<nl># the join means wait untill it finished", "out": "複数の機能を同時に実行する方法", "out_en": "how to run multiple functions at same time"}
{"in": "import os<nl>import shutil<nl><nl>os.nice(9)<nl>shutil.copy('/var/tmp/1', '/var/tmp/2')", "out": "Pythonでniceコマンドを使用する方法", "out_en": "How to use nice command in python?"}
{"in": "from scipy.optimize import fsolve<nl>import math<nl><nl>def equations(p):<nl><tab>x, y = p<nl><tab>return (x+y**2-4, math.exp(x) + x*y - 3)<nl><nl>x, y =  fsolve(equations, (1, 1))<nl><nl>print equations((x, y))", "out": "Pythonを使用して1対の非線形方程式を解く方法", "out_en": "How to solve a pair of nonlinear equations using Python?"}
{"in": "from time import time<nl>prevState = (False,time())<nl>while not self.done():<nl><tab>current = time()<nl><tab>if self._io_left_nav.button0 and (current-prevState[1])*1000>2: #For example, 2 ms<nl><tab><tab>if self._io_left_nav.button0 != prevState[0]:<nl><tab><tab><tab>print(\"repeats\")<nl><tab><tab>prevState = (self._io_left_nav.button0,time())", "out": "Pythonを使用してロボットボタンの状態を確認する方法", "out_en": "How to check the state of a robot button using python?"}
{"in": "print datetime.datetime.strptime(fecha2, '%m/%d/%y %H:%M')", "out": "Python時刻データが形式と一致しない", "out_en": "Python time data does not match format"}
{"in": "for student, student_data in student_quiz_scores.iteritems():<nl><tab>for i, average in enumerate(the_averages):<nl><tab><tab>print \"<nl>The average for quiz\",i+1,\"is:\",average<nl><tab><tab>if student_data[i]>average:<nl><tab><tab><tab>print student, \"got a\",student_data[i],\"which is\",(str(student_data[i]-average))+\"%\", \"higher than the average. :)\"<nl><tab><tab>else:<nl><tab><tab><tab>print student, \"got a\", student_data[i], \"which is\", (str(-student_data[i]+average))+\"%\", \"lower than the average. :(\"", "out": "辞書内のさまざまなキーに一度に機能を適用する", "out_en": "Applying a function to various keys in a dictionary at a time"}
{"in": "last_host = None<nl>hosts = []<tab><tab><tab><tab># the list of hosts<nl>host_responses = []<tab>   # the list of responses for each host<nl>responses = []<nl>for output in expandresults:<nl><tab>if output.val is not None:<nl><tab><tab>if output.hostname != last_host:<tab># new host<nl><tab><tab><tab>if last_host:<tab># only append host_responses after a new host<nl><tab><tab><tab><tab>host_responses.append(responses)<nl><tab><tab><tab>hosts.append(output.hostname)<nl><tab><tab><tab>responses = [output.val]<tab><tab># start the new list of responses<nl><tab><tab><tab>last_host = output.hostname<nl><tab><tab>else:<tab><tab><tab><tab><tab><tab><tab>   # same host, append the response<nl><tab><tab><tab>responses.append(output.val)<nl>host_responses.append(responses)<nl><nl>for host, responses in zip(hosts, host_responses):<nl><tab>self.WriteOut(host, ','.join(responses))", "out": "Pythonで、異なるクラスのいくつかの大きなデータ構造を調べます。メモリ使用量を削減しながら、必要なデータを結合して格納するにはどうすればよいですか。", "out_en": "Combing through several large data structures of different classes in Python; How can I combine and store data I need while reducing memory usage?"}
{"in": "from IPython.nbformat import current as nbf<nl><nl>nb = nbf.new_notebook()<nl><nl>cells = []<nl><nl>for var in my_list:<nl><tab># Assume make_image() saves an image to file and returns the filename<nl><tab>image_file = make_image(var)<nl><tab>text = \"Variable: %s<nl>![image](%s)\" % (var, image_file)<nl><tab>cell = nbf.new_text_cell('markdown', text)<nl><tab>cells.append(cell)<nl><nl>nb['worksheets'].append(nbf.new_worksheet(cells=cells))<nl><nl>with open('my_notebook.ipynb', 'w') as f:<nl><tab><tab>nbf.write(nb, f, 'ipynb')", "out": "レポート生成のためにipythonノートブックにセルをプログラム的に追加する", "out_en": "programatically add cells to an ipython notebook for report generation"}
{"in": "from subprocess import Popen, PIPE<nl><nl>scpt = '''<nl><tab>on run {x, y}<nl><tab><tab>return x + y<nl><tab>end run'''<nl>args = ['2', '2']<nl><nl>p = Popen(['osascript', '-'] + args, stdin=PIPE, stdout=PIPE, stderr=PIPE)<nl>stdout, stderr = p.communicate(scpt)<nl>print (p.returncode, stdout, stderr)", "out": "AppleScriptをPythonスクリプトに埋め込むにはどうすればいいですか?", "out_en": "How do I embed an AppleScript in in a Python script?"}
{"in": "info = XXX.objects.filter(a = 111) #return the list of QuerySet (objects)<nl>for item in info:<nl><tab>item.b = 111   # Object<nl><tab>item.save()", "out": "forループに項目を追加", "out_en": "append item in for loop"}
{"in": "import csv<nl>reader = csv.reader(open('output.csv', 'rb'))<nl>reader1 = csv.reader(open('output1.csv', 'rb'))<nl>writer = csv.writer(open('appended_output.csv', 'wb'))<nl>for row in reader:<nl><tab>row1 = reader1.next()<nl><tab>writer.writerow(row + row1)", "out": "Pythonを使用して、1つのcsvファイルの内容を別のcsvファイルに追加する", "out_en": "append content of one csv file to another using python"}
{"in": "h = lambda x: f(x)+g(x)", "out": "Python:ラムダ定義関数の追加", "out_en": "Python : addition of lambda defined functions"}
{"in": "self.CreateStatusBar(2)<nl>self.SetStatusText(\"A Custom StatusBar...\", 1)<nl>wx.CallLater(10000, self.SetStatusText, \"\", 1)", "out": "メニューとのインタラクションでwx.StatusBarテキストを管理する方法", "out_en": "How to manage wx.StatusBar text in interactions with menus"}
{"in": "import numpy as np<nl>from collections import Counter<nl><nl>a=['John', 'John', 'John', 'Mark', 'Mark', 'Mark', 'Joe']<nl>b= ['John', 'Mark', 'Joe', 'Joe', 'Joe', 'Jack']<nl>c= ['Mark', 'Joe', 'Jack', 'Jack', 'Tony']<nl><nl>ac = Counter(a)<nl>bc = Counter(b)<nl>cc = Counter(c)<nl><nl><nl>allLists = [list(), list(), list()]<nl><nl>allNames = set(ac.keys() + bc.keys() + cc.keys());<nl><nl>for name in allNames:<nl><nl><tab>aCount = ac[name];<nl><tab>bCount = bc[name];<nl><tab>cCount = cc[name];<nl><nl><tab>allCounts = np.array([aCount, bCount, cCount]);<nl><nl><tab>maxIndex = allCounts.argsort()[::-1][0];<nl><nl><tab>allLists[maxIndex] += [name];<nl><nl><nl>alist, blist, clist = allLists[:]<nl><nl>print alist, blist, clist", "out": "複数の辞書にわたって最高値を持つ各キーの辞書名を取得する方法", "out_en": "How to get the dictionary name for each key with the highest value across multiple dictionaries"}
{"in": "re.sub('<a[^>]+>(.*?)</a>', '\\\\1', text)", "out": "Python reを使用してリンクを削除する", "out_en": "Use Python re to get rid of links"}
{"in": "import os<nl>print os.environ['BUILD_NUMBER']", "out": "Pythonスクリプトでjenkinsプラグインを使用する方法は?", "out_en": "How to use jenkins plugin in python script?"}
{"in": "import matplotlib<nl>import numpy as np<nl>import matplotlib.cm as cm<nl>import matplotlib.pyplot as plt<nl>from scipy.interpolate import interp2d<nl><nl># http://en.wikipedia.org/wiki/File:Bilininterp.png<nl>xi = np.array([0.0, 1.0])<nl>yi = np.array([0.0, 1.0])<nl>zi = np.array([[0.0, 1.0], [1.0, 0.5]])<nl><nl># Another example<nl>xi = np.array([0.0, 0.25, 1.0])<nl>yi = np.array([0.0, 0.75, 1.0])<nl>zi = np.array([[0.0, 0.5, 1.0], [0.5, 0.7, 0.5], [1.0, 1.0, 1.0]])<nl><nl># I want 20 \"levels\" to be shown<nl>contour_breaks = 20<nl>ticks = np.linspace(zi.min(), zi.max(), contour_breaks, endpoint=True)<nl><nl># Attempt 4 (interp2d does to correct bilinear interpolation)<nl>fig = plt.figure()<nl>axes = fig.add_subplot(111, aspect='equal')<nl>f = interp2d(xi, yi, zi, kind='linear')<nl>xi2 = np.linspace(0., 1., 100)<nl>yi2 = np.linspace(0., 1., 100)<nl>zi2 = f(xi2, yi2)<nl>axes.contour(xi2, yi2, zi2, ticks[1:-1], colors='k')<nl>fill = axes.contourf(xi2, yi2, zi2, ticks, cmap=cm.jet)<nl>fig.colorbar(fill, ticks=ticks)<nl><nl># Show the plots<nl>plt.show()", "out": "Python/Matplotlib-双線形補間による輪郭線プロット", "out_en": "Python/Matplotlib - Contour Plot with Bilinear Interpolation"}
{"in": "ssh = paramiko.SSHClient()<nl>ssh.set_missing_host_key_policy(<nl><tab><tab><tab>paramiko.AutoAddPolicy())<nl><nl>ftp = ssh.open_sftp() <nl>ftp.get('remotefile', 'localfile')", "out": "Paramiko SFTPClient-不明なホストキーポリシーを設定していますか?", "out_en": "Paramiko SFTPClient - Setting missing host key policy?"}
{"in": "users = Table('users', metadata, autoload=True)", "out": "ピラミッドSqlAlchemyで2つのデータベースを使用する", "out_en": "Using two databases with Pyramid SqlAlchemy"}
{"in": "RoleFormSet = inlineformset_factory(UserRole, User.role.though)", "out": "多対多リレーションのインラインフォームセットへのペンダント", "out_en": "pendant to inline formsets for many-to-many relations"}
{"in": "cursor.execute(\"DELETE FROM test WHERE name=%s\", (Value,));", "out": "Pythonを使用してMySQLで値を入力して更新および削除する", "out_en": "Update and delete, with value typed, in MySQL using Python"}
{"in": "page_key = ndb.Key(Book, bookId, Chapter, chapterId, Page, pageId)<nl>page = page_key.get()", "out": "GAEで先祖を扱う", "out_en": "Working with ancestors in GAE"}
{"in": "#!/usr/bin/env python2.7<nl># -*- coding: utf-8 -*-<nl>\"\"\"Example of Flask and qrcode.<nl><nl>NOTE: by requirements image in memory!<nl>\"\"\"<nl><nl>__author__ = 'Daniel Leybovich <setarckos@gmail.com>'<nl>__version__ = (0, 0, 1)<nl><nl><nl>import os<nl>import sys<nl>import flask<nl>import qrcode<nl>import cStringIO<nl><nl><nl>app = flask.Flask(__name__)<nl><nl><nl>def random_qr(url='www.google.com'):<nl><tab>qr = qrcode.QRCode(version=1,<nl><tab><tab><tab><tab><tab>   error_correction=qrcode.constants.ERROR_CORRECT_L,<nl><tab><tab><tab><tab><tab>   box_size=10,<nl><tab><tab><tab><tab><tab>   border=4)<nl><nl><tab>qr.add_data(url)<nl><tab>qr.make(fit=True)<nl><tab>img = qr.make_image()<nl><tab>return img<nl><nl><nl>@app.route('/get_qrimg')<nl>def get_qrimg():<nl><tab>img_buf = cStringIO.StringIO()<nl><tab>img = random_qr(url='www.python.org')<nl><tab>img.save(img_buf)<nl><tab>img_buf.seek(0)<nl><tab>return flask.send_file(img_buf, mimetype='image/png')<nl><nl><nl>if __name__ == '__main__':<nl><tab>app.run(host='0.0.0.0', debug=True)", "out": "Pythonのqrcodeを使用して生成されたQRイメージをフラスコに提供する方法", "out_en": "How to serve a generated QR Image using python's qrcode on Flask"}
{"in": "value = my_list[0]<nl>if isinstance(value, list):<nl><tab>value = value[0]<nl><nl># use the value", "out": "任意のネストされたリストからの最初の非リスト値の読み取り", "out_en": "Reading first non-list value from the arbitrary nested list"}
{"in": "blar = re.search(\"Blar=(-?\\d+\\.\\d+)((?:,-?\\d+\\.\\d+)+)\", x)<nl>blar.groups()", "out": "Pythonでトークンの後にN個の数字を検索するための正規表現", "out_en": "Regex to find N numbers after some token in python"}
{"in": "cursor = r.table('timetests').filter(<nl><tab>lambda t: t['time'].during(r.now() - 3600, r.now())<nl><tab>).run(conn)", "out": "RethinkDBとPythonで1時間より新しいアイテムをフィルタする", "out_en": "Filter items newer than 1 hour with RethinkDB and Python"}
{"in": "import traceback<nl><nl>class MyClass(object):<nl>   def __init__(self):<nl><tab>   self.traceback = traceback.extract_stack()[-2]<nl><nl>obj = MyClass()<nl><nl>print 'Instantiated in {0}:{1}'.format(*obj.traceback)", "out": "オブジェクトがインスタンス化された場所を確認する方法", "out_en": "How can I find out where an object has been instantiated?"}
{"in": "import HTMLParser<nl>parser = HTMLParser.HTMLParser()<nl>unescaped_string = parser.unescape(html_escaped_string)", "out": "JSONレスポンスのアポストロフィを変換する際のトラブル", "out_en": "Trouble Converting Apostrophes in JSON response"}
{"in": "from PIL import Image<nl>import StringIO<nl>tempBuff = StringIO.StringIO()<nl>tempBuff.write(curimg)<nl>tempBuff.seek(0) #need to jump back to the beginning before handing it off to PIL<nl>Image.open(tempBuff)", "out": "jpeg文字列をPILイメージオブジェクトに変換しています", "out_en": "Converting jpeg string to PIL image object"}
{"in": "value = func_returning_a_tuple()[0]", "out": "タプルのアンパック:ダミー変数とインデックス", "out_en": "Tuple unpacking: dummy variable vs index"}
{"in": "import matplotlib.pyplot as plt<nl><nl>fig = plt.figure()<nl><nl># Add subplots<nl>nRows = 4<nl>nCols = 2<nl>nPlots = 7<nl>ax1 = fig.add_subplot(nRows,nCols,1)<nl>ax1.set_yscale('log')<nl>ax1.set_xscale('log')<nl><nl>for n in range(1, nPlots+1):<nl><tab>plt.subplot(nRows,nCols,n, sharex=ax1, sharey=ax1)<nl><nl># Turn off tick lables where needed. <nl>index = 0<nl>for r in range(1, nRows +1):<nl><tab> for c in range(1, nCols + 1):<nl><tab><tab> index += 1<nl><tab><tab> # Turn off y tick labels for all but the first column.<nl><tab><tab> if ((c != 1) and (index <= nPlots)):  <nl><tab><tab><tab> ax = plt.subplot(nRows, nCols, index, sharex=ax1, sharey=ax1)<nl><tab><tab><tab> plt.setp(ax.get_yticklabels(), visible=False)<nl><tab><tab>  # Turn off x tick lables for all but the bottom plot in each <nl><tab><tab>  # column. <nl><tab><tab> if ((nPlots - index) >= nCols):<nl><tab><tab><tab> ax = plt.subplot(nRows, nCols, index, sharex=ax1, sharey=ax1) <nl><tab><tab><tab> plt.setp(ax.get_xticklabels(), visible=False)<nl><nl>plt.subplots_adjust(wspace=0, hspace=0)<nl><nl>plt.show()", "out": "奇数のサブプロット用のMatplotlib/Pyplot共有座標軸", "out_en": "Matplotlib/Pyplot shared axis for odd number of subplots"}
{"in": "import pickle  <nl><nl>d = {'key1':'value1'}<nl>dd = {frozenset(d.items()):'my_value'}<nl><nl># Save to dumpfile<nl>pickle.dump(dd, open('dumpfile', 'wb'))<nl><nl># Load again from dumpfile<nl>dd = pickle.load(open('dumpfile', 'rb'))", "out": "文字列をfrozensetに戻すにはどうすればいいですか?", "out_en": "How do I convert a string back to frozenset?"}
{"in": "from apscheduler.scheduler import Scheduler<nl><nl>schedule = Scheduler()<nl>jobs = schedule.get_jobs() #jobs is a list of apscheduler jobs<nl>jobs_kwargs = map(lambda k: k.kwargs, jobs)", "out": "Pythonでオブジェクトのリストからオブジェクトプロパティのリストを取得する", "out_en": "Get a list of object properties from list of objects in python"}
{"in": "from Tkinter import *<nl><nl>def getpwd():<nl><tab>password = ''<nl><tab>root = Tk()<nl><tab>pwdbox = Entry(root, show = '*')<nl><tab>def onpwdentry(evt):<nl><tab><tab> password = pwdbox.get()<nl><tab><tab> root.destroy()<nl><tab>def onokclick():<nl><tab><tab> password = pwdbox.get()<nl><tab><tab> root.destroy()<nl><tab>Label(root, text = 'Password').pack(side = 'top')<nl><nl><tab>pwdbox.pack(side = 'top')<nl><tab>pwdbox.bind('<Return>', onpwdentry)<nl><tab>Button(root, command=onokclick, text = 'OK').pack(side = 'top')<nl><nl><tab>root.mainloop()<nl><tab>return password", "out": "Pythonでグラフィカルなダイアログを使用してユーザにパスワードを要求する最も簡単な方法は?", "out_en": "Simplest method of asking user for password using graphical dialog in Python?"}
{"in": "import gc<nl>gc.collect()", "out": "Python 2.5でGoogle App Engineのblobstoreにファイルとして書き込む適切な方法は?", "out_en": "What is the proper way to write to the Google App Engine blobstore as a file in Python 2.5"}
{"in": "backtonormal = urllib.unquote(thestring)", "out": "PythonでURLをクォートしたUTF-8文字列をアンクォートする方法", "out_en": "How to unquote URL quoted UTF-8 strings in Python"}
{"in": "request.args.get('variable')", "out": "Tipfyを使用したHTTP GET変数の取得", "out_en": "Getting HTTP GET variables using Tipfy"}
{"in": "import pprint<nl>import subprocess<nl><nl>df = subprocess.check_output('lsusb', shell=True)<nl>device_ids = []<nl>for line in filter(lambda s: s.startswith('Bus'), df.split('<nl>')):<nl><tab>businfo, id, _ = line.split(':')<nl><tab>id = id.split()[1]<nl><tab>device_ids.append(id)<nl><nl>pprint.pprint(device_ids)", "out": "usbシリアル番号を取得する方法python", "out_en": "How to get usb serial number python"}
{"in": "os.mkdir", "out": "関数パラメータに基づいたディレクトリの作成、Python", "out_en": "Creating a directory based on function parameters, Python"}
{"in": "data = file.readlines()", "out": "ファイルからデータを読み込み、リストのリストに格納するPython", "out_en": "reading data from a file and storing them in a list of lists Python"}
{"in": "# Success<nl>def is_element_present(self, id_type, id_locator):<nl><tab>driver = self.driver<nl><tab>element_found = True<nl><tab>driver.implicitly_wait(1)<nl><tab>try:<nl><tab><tab>element = WebDriverWait(driver, 0).until(<nl><tab><tab><tab>EC.presence_of_element_located((id_type, id_locator))<nl><tab><tab>)<nl><tab>except:<nl><tab><tab>element_found = False<nl><tab>driver.implicitly_wait(30)<nl><tab>return element_found", "out": "30秒のタイムアウトを待たずに要素がないことをテストする方法", "out_en": "How to test for absence of an element without waiting for a 30 second timeout"}
{"in": "import re<nl><nl>string = \"\"\"736.199070736:  LOG_MOD_L0_RECEIVE_TXBRP_CONTROL(0, <nl> 0x0075007f, <nl> 0x005500dd,  <nl> 0x000a00f5)\"\"\"<nl><nl>result = re.search(r'\\(.*\\)', string) # matches anything between parenthesis<nl><nl>result.group()<nl><nl>'(0, 0x0075007f, 0x005500dd,  0x000a00f5)'", "out": "Pythonで特定の文字列を出力するには?", "out_en": "How to print specific strings in python?"}
{"in": "figure(self.figures[fig].number)", "out": "matplotlib図形への参照辞書を反復する方法", "out_en": "How to Iterate a dictionary of references to matplotlib figures"}
{"in": "print main1.__file__", "out": "Pythonモジュールの変更がインポートされない", "out_en": "Python module changes aren't being imported"}
{"in": "datetime.strptime(x,\"%Y%m%d%H%M%S%f\")", "out": "Pythonの日付までの数値文字列", "out_en": "Python string of numbers to date"}
{"in": "marmot = Animal.objects(genus='Marmota').first()<nl>photo = marmot.photo.read()<nl>content_type = marmot.photo.content_type", "out": "mongoengineから画像を取得し、Pythonのhttpレスポンスとしてページに表示する", "out_en": "Retrieving an image from mongoengine and display it on a page as http reponse in python"}
{"in": "print DoGood._DoGood__prv # access a private attribute.", "out": "Pythonクラスのprivate属性で値を割り当てることができるのはなぜですか?", "out_en": "Why does a private attribute of python class allow me to assign a value?"}
{"in": "for line in lines:<nl><tab>x, y = line.split()<nl><tab>if int(x) > int(y): return True<nl>return False", "out": "forループ内の比較演算子", "out_en": "Comparison operator in a for-loop"}
{"in": "three_letters = [word for word in words if len(word) == 3]", "out": "リスト理解を使用して、リストから3文字の単語をすべて選択する", "out_en": "Use a list comprehension to select all three letter words from a list"}
{"in": "tuple([10*x for x in img.size])", "out": "タプルにスカラーを乗算する", "out_en": "Multiplying a tuple by a scalar"}
{"in": "for i in range(1, 4):<nl><tab>type_dict['type_%d' % i] = myTree.cssselect('element_type_%d' % i)", "out": "タグ付きデータから複数の要素タイプを選択するためのよりPython的な方法", "out_en": "More pythonic way to pick multiple element types from tagged data"}
{"in": "from win32com.client import constants<nl>import win32com.client<nl>speaker = win32com.client.Dispatch(\"SAPI.SpVoice\")<nl><nl>d = {'a':'alfa', 'b':'bravo', 'c':'charlie', 'd':'delta', 'e':'echo', 'f':'foxtrot',<nl> 'g':'golf', 'h':'hotel', 'i':'india', 'j':'juliett', 'k':'kilo', 'l':'lima',<nl> 'm':'mike', 'n':'november', 'o':'oscar', 'p':'papa', 'q':'quebec', 'r':'romeo',<nl> 's':'sierra', 't':'tango', 'u':'uniform', 'v':'victor', 'w':'whiskey', <nl> 'x':'x-ray', 'y':'yankee', 'z':'zulu'}<nl>speaker.speak(\"Hello.. Please write a line you want me to say\")<nl>print (\"Type your text now:\")<nl>inp = input()<nl>print (\"Outputting...\")<nl>result = ' '.join(d[c.lower()] for c in inp)<nl>speaker.speak(result)", "out": "単語を処理し、ABCをAlpha、Bravo、Charlieに翻訳する必要があります。", "out_en": "Working with words, and need to translate ABC to Alpha, Bravo, Charlie"}
{"in": "tempfile.mkdtemp()", "out": "Pythonで「一時ファイル」フォルダを使用する", "out_en": "using a \"temporary files\" folder in python"}
{"in": "def naming(instance, file_name):<tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab> <nl><tab>model_name = instance.__class__.__name__<nl><tab>return os.path.join(model_name, file_name)", "out": "djangoでupload_toを使用してディレクトリと関数を指定する方法", "out_en": "how to specify a directory and a function with upload_to in django"}
{"in": "def start_requests(self):<nl><tab>for i in range(1000):<nl><tab><tab>yield Request(\"http://www.example.com/bla-bla-bla/\" + str(i), self.parse_tv)", "out": "scrapeを使ってサイトを再帰的にクロールする", "out_en": "Crawling a site recursively using scrapy"}
{"in": "link_string = '<a href=\"/search/?q=%%23%s\"> %s </a>'", "out": "Pythonの%エスケープ文字", "out_en": "escape % character in Python"}
{"in": "class CategoryForm(forms.ModelForm):<nl><tab>class Meta:<nl><tab><tab>model = models.Category<nl><tab><tab>exclude = ()<nl><tab><tab>form = CategoryForm<nl><nl>class CategoryAdmin(admin.ModelAdmin):<nl><tab>list_display = ['department','name']<nl><tab>list_filter = ['department','name']<nl><nl><tab>def get_form(self, request, obj=None, **kwargs):<nl><tab><tab>form = super(CategoryAdmin, self).get_form(request, obj=None, **kwargs)<nl><tab><tab>form.base_fields['department'].queryset = Department.objects.filter(<nl><tab><tab><tab>name = request.user.customuser.department.name)<nl><tab><tab>return form", "out": "adminでdjangoモデル形式のrequest.userにアクセスする方法", "out_en": "how to access request.user in django modelform in admin"}
{"in": "import numpy as np<nl><nl>def some_function(x):<nl><tab>return 3*x<nl><nl>input = np.ones([10,26])<nl>input = np.hstack([input,np.empty([input.shape[0],1])])<nl>for row in input:<nl><tab>row[-1] = some_function(row[0])<nl><nl>output = input", "out": "Webトラフィックの数値を取得する方法とnumpy配列に列を追加する方法", "out_en": "How to get figure for web traffic + how to append column to numpy array?"}
{"in": "Group.objects.exclude(id__in=request.user.groups.all().values_list('id', flat=True))", "out": "ユーザーが所属していないすべてのグループをdjangoにリストする方法", "out_en": "How to list all the groups that a user does not belong to in django?"}
{"in": "arr = np.loadtxt('test.txt', ndmin=2)", "out": "ファイルが1次元しかない場合でも、np.loadtxtが多次元配列を返すようにするにはどうすればいいですか?", "out_en": "How to make np.loadtxt return multidimensional arrays even the file has only one dimensional?"}
{"in": "class ClassDict(object):<nl>  def __init__(self):<nl><tab>self.classes = {}<nl><nl>  def add(self, cls):<nl><tab>self.classes[cls.__name__] = cls<nl><nl>  def remove(self, cls):<nl><tab>if self.classes[cls.__name__] == cls:<nl><tab>  del self.classes[cls.__name__]<nl><tab>else:<nl><tab>  raise KeyError('%r' % cls)<nl><nl>  def __getitem__(self, key):<nl><tab>return self.classes[key]<nl><nl>  def __repr__(self):<nl><tab>return 'ClassDict(%s)' % (', '.join(self.classes),)<nl><nl>class C(object):<nl>  pass<nl><nl>class D(object):<nl>  pass<nl><nl>cd = ClassDict()<nl>cd.add(C)<nl>cd.add(D)<nl><nl>print cd<nl><nl>print cd['C']", "out": "Python-キーを使用してリストからクラスにアクセスする", "out_en": "Python - Access a class from a list using a key"}
{"in": "ws1 = wb.active<nl>ws2 = wb.create_sheet()", "out": "openpyxlを使用して1つのブックに2つのシートを同時に書き込む方法", "out_en": "How to write two sheets in a single workbook at the same time using openpyxl"}
{"in": "# copied directly from the docs<nl>from jinja2 import Environment, PackageLoader<nl><nl>env = Environment(loader=PackageLoader('yourapplication', 'templates'))<nl>template = env.get_template('mytemplate.html')<nl>print template.render(the='variables', go='here')", "out": "Pythonプログラム内でJinja2テンプレートを使用する方法", "out_en": "How can i use Jinja2 template inside python program"}
{"in": "from django.contrib import admin<nl>from django.contrib.admin import widgets<nl>from django.contrib.admin.sites import site<nl>from django import forms<nl><nl>class BlogRawIdWidget(widgets.ForeignKeyRawIdWidget):<nl><tab>def url_parameters(self):<nl><tab><tab>res = super().url_parameters()<nl><tab><tab>res['type__exact'] = 'PROJ'<nl><tab><tab>return res<nl><nl>class ProjectAdminForm(forms.ModelForm):<nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>super().__init__(*args, **kwargs)<nl><tab><tab>self.fields['blog'].queryset = Blog.objects.filter(type='PROJ')<nl><tab><tab>self.fields['blog'].widget = BlogRawIdWidget(rel=Project._meta.get_field('blog').rel, admin_site=site)<nl><nl><tab>class Meta:<nl><tab><tab># Django 1.8 convenience:<nl><tab><tab>fields = '__all__'<nl><tab><tab>model = Project<nl><nl>class ProjectAdmin(admin.ModelAdmin):<nl><tab>form = ProjectAdminForm<nl><tab>raw_id_fields = ('blog',)", "out": "Django raw_id_fieldに対するForeignKeyの選択肢を制限する方法", "out_en": "How to limit choices of ForeignKey choices for Django raw_id_field"}
{"in": "with open(\"filename_here\") as f:<nl><tab>content = f.readlines()<nl>print content", "out": "ファイルからhttpリンクを読み取り、リストに追加します。", "out_en": "read the http links from a file and append it to a list"}
{"in": "class ScheduledPayment(Base):<nl><tab>id = Column(Integer, primary_key=True)<nl><tab>invoice_id = Column(Integer)<nl><tab>is_canceled = Column(Boolean, default=False)<nl><nl><tab>__table_args__ = (<nl><tab><tab>Index('only_one_active_invoice', invoice_id, is_canceled,<nl><tab><tab><tab>  unique=True,<nl><tab><tab><tab>  postgresql_where=(~is_canceled)),<nl><tab>)", "out": "Postgresでsqlalchemyを使用して部分固有インデックスを作成する", "out_en": "Creating partial unique index with sqlalchemy on Postgres"}
{"in": "my_plot = pg.PlotWidget()<nl>my_layout.addWidget(my_plot)<nl>my_plot.plot(x, y)", "out": "新しいウィンドウを生成せずにPyQtGraphをQtに埋め込む", "out_en": "Embedding PyQtGraph in Qt without generating new Window"}
{"in": "import pandas<nl>import numpy<nl>my_series = pandas.Series([0,0,1,2,0,3,4,0,0])<nl>numpy.trim_zeros(my_series)", "out": "パンダ:系列から末尾のゼロを削除", "out_en": "Pandas: remove trailing zeros from series"}
{"in": "password = \"pass\"<nl>username = \"user\"<nl>transport.connect(username = username, password = password)", "out": "Pythonでsftpを使用したリモートマシンからのファイルのコピー", "out_en": "Copying files from Remote machine using sftp in python"}
{"in": "import re<nl><nl>with open(\"Tyger.txt\") as f:<nl><tab>words = re.findall(\"\\w+\", f.read())", "out": "Pythonリストから句読点を削除する", "out_en": "Taking punctuation out of a a python list"}
{"in": "[(i,j) for i,j in ((a-1,b), (a+1,b), (a,b-1), (a,b+1)) if 0<=i<MAXX and 0<=j<MAXy and X[i][j] is not None ]", "out": "2Dリストで直交する隣接を検索するためのリスト理解の作成", "out_en": "Creating a list comprehension to find orthogonal neighbours in 2D list"}
{"in": "import json<nl>for l in xrange(100):<nl><tab>try:<nl><tab><tab>with open('C:/Twitter/json/user_%d.json' % l, 'r') as f:<nl><tab><tab><tab>data = json.load(f)<nl><tab><tab><tab>#do stuff with obj<nl><tab>except IOError:<nl><tab><tab>pass", "out": "Python:シーケンスで見つからないファイルを処理する", "out_en": "Python: Handle Missing Files from a Sequence"}
{"in": "def transform_date(date_string, tzinfo):<nl><tab>fmt = '%Y-%m-%d'<nl><tab>date = datetime.strptime(date_string, fmt).replace(tzinfo=tzinfo)<nl><tab>return date", "out": "datetimeにtzinfoを挿入する", "out_en": "Insert a tzinfo into datetime"}
{"in": "q = taskqueue.Queue('slowQueue') <nl>task = taskqueue.Task(url='/worker/slow', params={'name': name})<nl>q.add(task)", "out": "Googleアプリケーションエンジンのデフォルト以外のキューへのタスクの追加", "out_en": "adding task to non-default queue in google app engine"}
{"in": "tuples = [(2,5),(8,9),(11,19),(22,43),(47,50)]<nl>#tuples = [(2,7),(9,14),(17,20)]<nl><nl>def result(tuple, value):<nl><tab>start = tuples[0][0] - 1<nl><tab>for idx in range(len(tuples) - 1):<nl><tab><tab>if tuples[idx][1] >= value + start:<nl><tab><tab><tab>break<nl><tab><tab>start = start + (tuples[idx+1][0] - tuples[idx][1] - 1)  <nl><tab>return value + start  <nl><nl>for i in range(1, 16):<nl><tab>print str(i) + ' ' + str(result(tuples, i))", "out": "異なるタプルの要素の合計", "out_en": "sum of elements from different tuples"}
{"in": "from . import abc", "out": "__init__のメソッドを内部モジュールにインポートする方法は?", "out_en": "How to import __init__'s method in inner module?"}
{"in": "set([a, b, c, a])", "out": "Pythonでリストをuniqifyする最速の方法", "out_en": "Fastest way to uniqify a list in Python"}
{"in": "import subprocess<nl>params = ['convert', 'pdf_file', 'jpg:-']<nl>image_data = subprocess.check_output(params)", "out": "サブプロセスで生成されたjpgsをメインスクリプトにキャプチャします", "out_en": "Capture jpgs produced in subprocess in main script"}
{"in": "for k,g in df.groupby(df['A'] - np.arange(df.shape[0])):<nl><tab>print g", "out": "連続する値のグループでパンダのデータフレームをスライスする", "out_en": "Slice pandas dataframe in groups of consecutive values"}
{"in": "def in_ipython():<nl><tab>try:<nl><tab><tab>__IPYTHON__<nl><tab>except NameError:<nl><tab><tab>return False<nl><tab>else:<nl><tab><tab>return True", "out": "Pythonスクリプトがipythonでインタラクティブに実行されていることを検出する", "out_en": "Detecting when a python script is being run interactively in ipython"}
{"in": "while 1:<nl><tab>print \"hello from stdout\"<nl><tab>sys.stdout.flush()<nl><tab>print >> sys.stderr, \"Hello from stderr\"<nl><tab>sleep(1)", "out": "upstartジョブでのPythonからのstdoutの取り込み", "out_en": "capturing stdout from python in an upstart job"}
{"in": "import os, time<nl><nl>allfiles = []<nl>now = time.time()<nl><nl># walk will return triples (current dir, list of subdirs, list of regular files)<nl># file names are relative to dir at first<nl>for dir, subdirs, files in os.walk(\"/storage/disk-1/Media/Video/TV\"):<nl><tab>for f in files:<nl><tab><tab>if not f.endswith(\".avi\"):<nl><tab><tab><tab>continue<nl><tab><tab># compute full path name<nl><tab><tab>f = os.path.join(dir, f)<nl><tab><tab>st = os.stat(f)<nl><tab><tab>if st.st_mtime < now - 3600*24*7:<nl><tab><tab><tab># too old<nl><tab><tab><tab>continue<nl><tab><tab>allfiles.append((f, st))", "out": "Pythonを使用して、ファイルシステムの検索に基づいてファイル情報オブジェクトの配列を取得するにはどうすればいいですか。", "out_en": "Using Python, how do I get an array of file info objects, based on a search of a file system?"}
{"in": "#! /usr/bin/python2<nl><nl>import sys<nl>from lxml import etree<nl><nl>result = etree.Element('root')<nl>parser = etree.XMLParser(remove_blank_text=True)<nl><nl># Add each file to the tree<nl>for xmlfile in sys.argv[1:]:<nl>  with open(xmlfile) as xmlfile:<nl><tab>btree = etree.parse(xmlfile, parser)<nl>  # Ensure that the resulting tree has the right root<nl>  result.tag = btree.getroot().tag<nl>  # Consider each 2nd-level item<nl>  for bchild in btree.xpath(\"/*/*\"):<nl><tab>tags = result.xpath(\"./%s\"%bchild.tag)<nl><tab>if len(tags) == 0:<nl><tab>  # Add <dog-list>, for example<nl><tab>  #print \"adding %s to %s\"%(bchild.tag, result.tag)<nl><tab>  result.append(bchild)<nl><tab>else:<nl><tab>  for bgrandchild in bchild:<nl><tab><tab># add <dog>, for example<nl><tab><tab>#print \"adding %s to %s\"%(bgrandchild.tag, tags[0].tag)<nl><tab><tab>tags[0].append(bgrandchild)<nl><nl>with open(\"output.xml\", \"w\") as output:<nl>  output.write(etree.tostring(result, pretty_print = True))", "out": "XMLファイルから既存のXMLファイルへのXMLデータの追加", "out_en": "Adding XML data from a XML file to an existing XML file"}
{"in": "many=True", "out": "django-notifications-hqからのNotificationQuerySetのシリアル化が機能しない", "out_en": "Serializing NotificationQuerySet from django-notifications-hq not working"}
{"in": "import re<nl>s = r'''<html><nl> <head><nl>  <script type=\"text/javascript\"><nl>  function redirecttoauth(sessionid, test) {<nl>   function body ...<nl>  }<nl>  </script><nl> </head><nl> <body><nl> </body><nl></html><nl>'''<nl><nl>start = r'function redirecttoauth\\(sessionid'<nl>end = r'}'<nl>result = re.search(r'%s(.*)%s' % (start, end), s, re.DOTALL).group(1)<nl>print(result)", "out": "html内の関数属性を取得する方法", "out_en": "How to get function attributes inside a html?"}
{"in": "hexstrings = [\"DE\", \"AD\", \"BE\", \"EF\"]   # big-endian 0xDEADBEEF<nl><nl>bytes = bytearray(int(x, 16) for x in hexstrings)<nl>bytes = bytearray.fromhex(\"\".join(hexstrings))<tab> # Python 2.6 may need u\"\"", "out": "バイト文字列のリストをbytearray(バイトストリーム)に変換する", "out_en": "Convert list of byte strings to bytearray (byte stream)"}
{"in": "# -*- Mode: Python -*-<nl># vi:si:et:sw=4:sts=4:ts=4<nl><nl>import subprocess<nl>import sys<nl>import select<nl><nl>p = subprocess.Popen([\"find\", \"/proc\"],<nl><tab>stdout=subprocess.PIPE, stderr=subprocess.PIPE)<nl><nl>stdout = []<nl>stderr = []<nl><nl>while True:<nl><tab>reads = [p.stdout.fileno(), p.stderr.fileno()]<nl><tab>ret = select.select(reads, [], [])<nl><nl><tab>for fd in ret[0]:<nl><tab><tab>if fd == p.stdout.fileno():<nl><tab><tab><tab>read = p.stdout.readline()<nl><tab><tab><tab>sys.stdout.write('stdout: ' + read)<nl><tab><tab><tab>stdout.append(read)<nl><tab><tab>if fd == p.stderr.fileno():<nl><tab><tab><tab>read = p.stderr.readline()<nl><tab><tab><tab>sys.stderr.write('stderr: ' + read)<nl><tab><tab><tab>stderr.append(read)<nl><nl><tab>if p.poll() != None:<nl><tab><tab>break<nl><nl>print 'program ended'<nl><nl>print 'stdout:', \"\".join(stdout)<nl>print 'stderr:', \"\".join(stderr)", "out": "Pythonのサブプロセス出力であるstdoutとstderrを通常どおりに作成し、出力を文字列として取得することはできますか。", "out_en": "Can you make a python subprocess output stdout and stderr as usual, but also capture the output as a string?"}
{"in": "averages = {}<tab># Create a new empty dictionary to hold the averages<nl>for key, values in scores.items(): <nl>  averages[key] = float(sum([int(i) for i in values])) / len(values)  <nl>  # Rather than store the averages in a local variable, store them in under the appropriate key in your new dictionary.", "out": "ディクショナリ内の値の平均を別のディクショナリに格納する-Python", "out_en": "Storing averages of values in a dictionary in a separate dictionary - Python"}
{"in": "from Tkinter import *<nl>from OpenGL.Tk import *<nl><nl>b=Opengl(height=100,width=100)<nl>root = b.master<nl>f = Frame(root, width=100, bg='blue')<nl>f.pack(side='left', fill='y')<nl>b.pack(side='right', expand=1, fill='both')<nl><nl>root.mainloop()", "out": "tkinter内の非トップレベルのopenglウィジェット", "out_en": "Non top-level opengl widget in tkinter"}
{"in": "data_file = raw_input(\"Please type name of input data! \")<nl>data = open(data_file)<nl><nl>new_list = list()<nl><nl>for line in data:<nl><tab>line = line.rstrip()<nl><tab>first_empty = line.find(\" \")<nl><tab>items_whole = line[first_empty + 1:]<nl><tab>items_list = items_whole.split()<nl><tab># Use a 'list comprehension' to convert the items list into a list of floats<nl><tab>floats_list = [float(i) for i in items_list]<nl><nl><tab># Use the built in 'sorted' method to sort the floats<nl><tab># If the sorted float list is the same as the original float list, then all the items are ascending<nl><tab>if floats_list == sorted(floats_list):<nl><tab><tab>print items_list<nl><tab><tab># Add the list of floats into the 'new_list' for any post processing<nl><tab><tab>new_list += [floats_list]", "out": "Python:値が連続的に大きくなっているファイルの行のみを抽出します。", "out_en": "Python: Only extract lines in a file where values are continuously getting bigger"}
{"in": "def cartprod(x,y):<nl><tab>nx = len(x)<nl><tab>ny = len(y)<nl><tab>for i in range(nx+ny):<nl><tab><tab>for j in range(max(0,i-ny+1), min(i+1,nx)):<nl><tab><tab><tab>yield (x[j],y[i-j])", "out": "最上位のアイテムが最初に結合されるようにデカルト積を反復する方法", "out_en": "How to iterate the cartesian product so top items combine first?"}
{"in": "bools = [True, True, False, True, True, False, True]<nl><nl>print ''.join(chr(ord('A') + i) if b else ' ' for i, b in enumerate(bools))", "out": "ブール値のリストを文字列に変換する", "out_en": "convert a list of booleans to string"}
{"in": "data = \"\"\"<nl>1 A 3 B 2 C 0 <nl><tab><tab>D 0<nl><tab>E 1 F 0<nl><tab>G 2 H 0<nl><tab>  I 0\"\"\"<nl><nl>def construct_nodes(data):<nl><tab>return dict((next(data), construct_nodes(data))<nl><tab><tab><tab><tab>for _ in xrange(int(next(data))))<nl><nl>print construct_nodes(iter(data.split()))", "out": "Python:テキストファイルからツリー状のデータを読み込み、辞書に格納する", "out_en": "Python: Read tree like data from text file and store in dictionary"}
{"in": "with open(\"file.txt\", \"r\") as in_file:<nl><tab>buf = in_file.readlines()<nl><nl>with open(\"file.txt\", \"w\") as out_file:<nl><tab>for line in buf:<nl><tab><tab>if line == \"; Include this text<nl>\":<nl><tab><tab><tab>line = line + \"Include below<nl>\"<nl><tab><tab>out_file.write(line)", "out": "特定の行の後に行を追加する", "out_en": "Adding lines after specific line"}
{"in": "class MyXMLRPCServer(SimpleXMLRPCServer.SimpleXMLRPCServer):<nl><tab>def process_request(self, request, client_address):<nl><tab><tab>self.client_address = client_address<nl><tab><tab>return SimpleXMLRPCServer.SimpleXMLRPCServer.process_request(<nl><tab><tab><tab>self, request, client_address)<nl><nl>server=SimpleXMLRPCServer.MyXMLRPCServer((host, port))", "out": "python xmlrpc serverのregested関数で要求のIPアドレスを取得する方法", "out_en": "how can I get the ip address of the request in a regested function of python xmlrpc server"}
{"in": "import sys;   # Why use ';'? It's so non-pythonic.<nl><nl>inp = sys.stdin.read().split()<tab># Take whitespaces as delimiter<nl>t = int(inp[0])<nl>readAt = 1<nl>for i in range (0,t):<nl><tab>x,y,z = map(int,inp[readAt:readAt+3])<tab># Read the next three elements<nl><tab>n = (2*z)/(x+y)<nl><tab>d = (y-x)/(n-5)<nl><tab>a = x-(2*d)<nl><tab>print n<nl><tab>#for j in range(0,n):<nl><tab>#<tab>sys.stdout.write(a+j*d)<nl><tab>#<tab>sys.stdout.write(' ')<nl><tab>#print ' '<nl><tab>print ' '.join([str(a+ti*d) for ti in xrange(n)]) # More compact and faster<nl><tab>readAt += 3   # Increment the index from which to start the next read", "out": "AP2用spojのパイソンNZEC", "out_en": "NZEC in python on spoj for AP2"}
{"in": "cgs = cg.sum()<nl>cgs.columns = ['number2']<nl>d = pd.concat([bg.sum(), cgs], axis=1)<nl>d.plot(kind='bar', stacked=True)", "out": "2つのパンダのグループバイオブジェクトから積み上げ棒グラフをプロットする", "out_en": "Plot a stacked bar graph from two pandas groupby objects?"}
{"in": "import ctypes as cs<nl>import numpy as np<nl><nl>#import dll library handle:<nl>tdll = cs.WinDLL(pathToDLL)<nl>#specify result and argument types<nl>tdll.TST.restype = None<nl>tdll.TST.argtypes = [cs.POINTER(cs.POINTER(cs.c_double*3)), cs.POINTER(cs.c_long)]<nl><nl>#call the dll function 'TST':<nl>Ar = (cs.c_double*3)()<nl>_A = cs.pointer(Ar)<nl>tdll.TST(cs.byref(_A), cs.byref(cs.c_long(3)))<nl>result = Ar[:]", "out": "Pythonでさらに処理するために、FORTRAN(DLL)でdouble配列を返します。", "out_en": "Return double array through FORTRAN (DLL) to process further in python"}
{"in": "import datetime, calendar<nl>date1 = datetime.date(year1, month1, day1) # month and day are 1-base<nl>date2 = datetime.date(year2, month2, day2)<nl>days_in_first_year = (datetime.date(year1,12,31)-date1).days<nl>days_in_last_year = (date2 - datetime.date(year2, 1, 1)).days<nl>if year1 != year2:<nl><tab>n_days_list = [days_in_first_year]<nl><tab>for year in range(year1+1, year2): n_days_list.append(365 + (1*calendar.isleap(year)))<nl><tab>n_days_list.append(days_in_last_year)<nl>else: n_days_list = [days_in_first_year + days_in_last_year]", "out": "Pythonで2つの日付間の1年の日数を計算する方法", "out_en": "How to Calculate the number of days in the year(s) between 2 dates in python"}
{"in": "QObject.sender", "out": "QAction用にpyqtでtriggered()シグナルを再実装する方法は?", "out_en": "How to reimplement triggered() signal in pyqt for a QAction?"}
{"in": "self.font = pygame.font.SysFont('Arial', 25)<nl><nl>def addText(self):<nl><tab>self.screen.blit(self.font.render('Hello!', True, (255,0,0)), (200, 100))<nl><tab>pygame.display.update()", "out": "これらの長方形に文字を追加する方法", "out_en": "how can I add text to these rectangles?"}
{"in": "if isinstance(MyNodeModel.your_property, StringProperty):<nl><tab>print(\"a string\")", "out": "neomodelの物件のタイプを確認する", "out_en": "Check the type of a property in neomodel"}
{"in": "m = np.array([x[:5] for x in d], dtype=object)", "out": "numpy配列の最初のいくつかの項目をpythonに含める方法", "out_en": "How to include the first few items of a numpy array with python"}
{"in": "matplotlib.pyplot.switch_backend('Agg')", "out": "Matplolibで画面に画像が表示されないようにするにはどうすればいいですか?パイソン", "out_en": "How to prevent images from appearing on the screen in Matplolib? Python"}
{"in": "from scipy.cluster import hierarchy<nl>def getNewick(node, newick, parentdist, leaf_names):<nl><tab>if node.is_leaf():<nl><tab><tab>return \"%s:%.2f%s\" % (leaf_names[node.id], parentdist - node.dist, newick)<nl><tab>else:<nl><tab><tab>if len(newick) > 0:<nl><tab><tab><tab>newick = \"):%.2f%s\" % (parentdist - node.dist, newick)<nl><tab><tab>else:<nl><tab><tab><tab>newick = \");\"<nl><tab><tab>newick = getNewick(node.get_left(), newick, node.dist, leaf_names)<nl><tab><tab>newick = getNewick(node.get_right(), \",%s\" % (newick), node.dist, leaf_names)<nl><tab><tab>newick = \"(%s\" % (newick)<nl><tab><tab>return newick<nl><nl>tree = hierarchy.to_tree(Z,False)<nl>getNewick(tree, \"\", tree.dist, leaf_names)", "out": "系統樹をニューイック形式で保存", "out_en": "Save dendrogram to newick format"}
{"in": "with open('filename.pickle', 'rb') as infile:<nl><tab>loaded_people = pickle.load(infile)<nl><tab>loaded_user = pickle.load(infile)<nl>#have them input their username<nl>#have them input their password<nl>if username_password.get(username) == password:<nl><tab>print 'OK, loaded'<nl><tab>like_people = loaded_data<nl><tab>username_password = loaded_user<nl>else:<nl><tab>raise Exception('nice try but no cigar')", "out": "pickleから情報をダンプ、ロード、読み出す方法", "out_en": "How to Dump, Load and Read info from pickle"}
{"in": "from Tkinter import * # Python 3.x: from tkinter import *<nl><nl>def hello(e=None):<nl><tab>print('Hello')<nl><nl>root = Tk()<nl>Button(root, text='say hello', command=hello).pack()<nl>root.bind('<Escape>', lambda e: root.quit())<nl>root.bind('h', hello)<nl>root.mainloop()", "out": "Pythonでキープレスをトレースする", "out_en": "Tracing keypresses in python"}
{"in": "from selenium import webdriver<nl>browser = webdriver.Firefox()<nl>browser.get('http://subscene.com/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407.aspx')<tab><tab><nl>browser.execute_script('WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(\"s$lc$bcr$downloadLink\", \"\", true, \"\", \"/english/How-I-Met-Your-Mother-Seventh-Season/subtitle-482407-dlpath-90698/zip.zipx\", false, true))')<nl>raw_input()", "out": "Python:javascriptボタンからダウンロードリンクを取得する", "out_en": "Python: Get download link from javascript button"}
{"in": "def location(x,y,dim_x,dim_y):<nl><tab>index = 1*(y==0) + 2*(y==dim_y-1) + 3*(x==0) + 6*(x==dim_x-1)<nl><tab>return [\"interior\",\"top\",\"bottom\",\"left\",\"top-left\",<nl><tab><tab><tab>\"bottom-left\",\"right\",\"top-right\",\"bottom-right\"][index]", "out": "グリッド(配列)上の位置を決定する効率的な方法", "out_en": "Efficient method to determine location on a grid(array)"}
{"in": "with mock.patch.object(Parent, 'test_method') as mock_method:<nl><tab>child = Child()<nl><tab>mock_param = mock.Mock()<nl><tab>child.test_method(mock_param)<nl><tab>mock_method.assert_called_with(mock_param)", "out": "オーバーライドされたベース・クラスのメソッドをモックするにはどうすればよいでしょうか。", "out_en": "How to mock a base class's method when it was overridden?"}
{"in": "array = [('item1',90),('item2',76),('item3',83),('item4',90)]<nl>srt = sorted(array,key=lambda x: x[1], reverse=True)<nl>rankings = []<nl>rank = 0<nl>from itertools import groupby<nl>for k,v in groupby(srt,lambda x: x[1]): # group by score<nl><tab>grp = [(rank,tup[0]) for tup in v] # get item tup[0] and put it in a tuple with the rank<nl><tab>rankings += grp<nl><tab>rank += len(grp) # increase rank for next grouping<nl>print(rankings)<nl>[(0, 'item1'), (0, 'item4'), (2, 'item3'), (3, 'item2')]", "out": "タプルの配列をランク付けする", "out_en": "Rank an array of tuples"}
{"in": "def sortOD(od):<nl><tab>res = OrderedDict()<nl><tab>for k, v in sorted(od.items()):<nl><tab><tab>if isinstance(v, dict):<nl><tab><tab><tab>res[k] = sortOD(v)<nl><tab><tab>else:<nl><tab><tab><tab>res[k] = v<nl><tab>return res", "out": "ネストされたOrderedDictをキーで再帰的にソートする", "out_en": "Sorting a nested OrderedDict by key, recursively"}
{"in": "a + b + c", "out": "2組のブラケットを使用してスライスする", "out_en": "Using 2 sets of brackets to slice"}
{"in": "AWS_S3_SECURE_URLS = True", "out": "amazon S3およびhttpsでのDjango-Storagesの使用", "out_en": "Using Django-Storages with amazon S3 and https"}
{"in": "__lt__()", "out": "Djangoモデルのオーダー", "out_en": "Ordering of Django models"}
{"in": "nargs='+'", "out": "Python:argparseが可変サイズのリストを取得する", "out_en": "Python: argparse taking a list of variable size"}
{"in": "def test(a):<nl><tab>return a<nl><nl>def invoker(*args):<nl><tab>print sum(args) # Prints 25<nl><tab>print args # Prints (10, 15)<nl><nl>invoker(test(10), test(15))", "out": "他の関数からの引数を持つ関数", "out_en": "Function with arguments from other function"}
{"in": "data[0]['f'] = var", "out": "Pythonで要素をjsonに追加する", "out_en": "Add element to a json in python"}
{"in": "def palindrome(s):<nl><tab>i = 0<nl><tab>while i <= len(s) / 2:<nl><tab><tab>if s[i] != s[-i - 1]:<nl><tab><tab><tab>return False<nl><tab><tab>i += 1<nl><tab>return True", "out": "whileループPythonを使用してパリンドロームをチェックする方法", "out_en": "How to check for palindrome using while loop python"}
{"in": "class NamedFunction:<nl><tab>def __init__(self, name, f):<nl><tab><tab>self.f = f<nl><tab><tab>self.name = name<nl><nl><tab>def __call__(self, *args, **kwargs):<nl><tab><tab>return self.f(*args, **kwargs)<nl><nl><tab>def __str__(self):<nl><tab><tab>return self.name<nl><nl><nl>f = NamedFunction(\"lambda: 'blah'\", lambda: 'blah')<nl>print(f())<nl>print(f)", "out": "関数の__str__を置き換える方法", "out_en": "How to replace __str__ for a function"}
{"in": "import socks, urllib2<nl>from sockshandler import SocksiPyHandler<nl>proxy_opener = urllib2.build_opener(SocksiPyHandler(socks.PROXY_TYPE_SOCKS5, \"IP\", 9050))<nl>print proxy_opener.open(\"http://whatismyip.org/\").read()", "out": "SocksiPyでモジュールを開けるにはどうすればいいですか?", "out_en": "How can I unwrap a module with SocksiPy?"}
{"in": "import pyperclip<nl>pyperclip.copy('The text to be copied to the clipboard.')", "out": "最初の文字以外の文字列を小文字に変更し、クリップボードにコピーします", "out_en": "Change string to lowercase except for first character and copy to clipboard"}
{"in": "class B():<nl><tab>def hello(self):<nl><tab><tab>print \"hello\"<nl><nl>class A():<nl>   @staticmethod<nl>   def newHello(self):<nl><tab>   A.oldHello(self) # Here the error<nl><tab>   print ' world'<nl><nl>   def inject(self):<nl><tab>   A.oldHello = B.hello<nl><tab>   B.hello = A.newHello<nl><nl>A().inject()<nl>B().hello()", "out": "Pythonの境界静的メソッド", "out_en": "how bounding static method in python?"}
{"in": "import matplotlib.pyplot as plt<nl><nl>a= [1,2,3,4,5,6,7,8,9]<nl>b= [5,3,4,5,3,2,1,2,3]<nl>plt.hist(a,9, weights=b)<nl>plt.show()", "out": "すでにビン化されているデータからのヒストグラム。ビンと頻度の値があります。", "out_en": "Histogram from data which is already binned, I have bins and frequency values"}
{"in": "from selenium import webdriver<nl>from bs4 import BeautifulSoup<nl><nl>driver = webdriver.Firefox()<nl>driver.get(url)<nl>driver.set_window_position(0, 0)<nl>driver.set_window_size(100000, 200000)<nl>driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")<nl>time.sleep(5) # wait to load<nl><nl># at this point, if you see the Firefox window that opened you will see the message<nl><nl># Anyway, if you manage to get pass trough that blocking, you could load BeautifulSoup this way: <nl>soup = BeautifulSoup(driver.page_source)", "out": "Pythonを使用したWebクローラによるhr efの抽出", "out_en": "Href extraction by Web crawler using Python"}
{"in": "import matplotlib.pyplot as plt<nl>from mpl_toolkits.mplot3d import Axes3D<nl>import numpy as np<nl>import itertools<nl><nl>#read in data from csv organised in columns labelled 'lat','lon','elevation'<nl>data = np.recfromcsv('elevation-sample.csv', delimiter=',')<nl><nl># create a 3d axis on a figure<nl>fig = plt.figure()<nl>ax = fig.add_subplot(111, projection='3d')<nl><nl># Find unique (i.e. constant) latitude points<nl>id_list = np.unique(data['lat'])<nl><nl># stride is how many lines to miss.  set to 1 to get every line<nl># higher to miss more<nl>stride = 5<nl><nl># Extract each line from the dataset and plot it on the axes<nl>for id in id_list[::stride]:<nl><tab>this_line_data = data[np.where(data['lat'] == id)]<nl><tab>lat,lon,ele = zip(*this_line_data)<nl><tab>ax.plot(lon,lat,ele, color='black')<nl><nl># set the viewpoint so we're looking straight at the longitude (x) axis<nl>ax.view_init(elev=45., azim=90)<nl><nl>ax.set_xlabel('Longitude')<nl>ax.set_ylabel('Latitude')<nl>ax.set_zlabel('Elevation')<nl>ax.set_zlim([0,1500])<nl><nl>plt.show()", "out": "Pythonとmatplotlibのラインを使用した地理データのプロット/マップ", "out_en": "Geographical data plot/map with lines in python and matplotlib"}
{"in": "from xml.dom.minidom import parseString<nl>import json<tab><tab><nl>def bar(somejson, key):<nl><tab>def val(node):<nl><tab><tab># Searches for the next Element Node containing Value<nl><tab><tab>e = node.nextSibling<nl><tab><tab>while e and e.nodeType != e.ELEMENT_NODE:<nl><tab><tab><tab>e = e.nextSibling<nl><tab><tab>return (e.getElementsByTagName('string')[0].firstChild.nodeValue if e <nl><tab><tab><tab><tab>else None)<nl><tab># parse the JSON as XML<nl><tab>foo_dom = parseString(xmlrpclib.dumps((json.loads(somejson),)))<nl><tab># and then search all the name tags which are P1's<nl><tab># and use the val user function to get the value<nl><tab>return [val(node) for node in foo_dom.getElementsByTagName('name') <nl><tab><tab><tab>if node.firstChild.nodeValue in key]<nl><nl>bar(foo, 'P1')<nl>[u'cccc', u'aaa', u'ss']<nl>bar(foo, ('P1','P2'))<nl>[u'cccc', u'cccc', u'aaa', u'ss']", "out": "キーで特定のjson値を検索するPythonの使い方は?", "out_en": "How can I use python finding particular json value by key?"}
{"in": "class OneFruit(object):<nl><tab>def add_color(self, color):<nl><tab><tab>self.color = color<nl><tab>def add_taste(self, taste):<nl><tab><tab>self.taste = taste<nl><nl>class Fruit(object):<nl><tab>def add_item(self, name):<nl><tab><tab>setattr(self, name, OneFruit())", "out": "文字列からサブクラスを作成する", "out_en": "Create a Subclass from a String"}
{"in": "cursor.execute(\"create table \" + config.table + \" (\" + \", \".join(config.cols) + \")\")", "out": "リストオブジェクト内にある列名をテーブルに追加する方法", "out_en": "how to add column name present in the list object into table"}
{"in": "X-CSRFToken", "out": "403 Ajaxを使用してポストDJANGOを送信することは禁止されています。", "out_en": "403 FORBIDDEN use ajax to send post DJANGO"}
{"in": "__init__.py", "out": "templategs「無効なタグライブラリ。モデルのロードに失敗しました", "out_en": "templategs \"not a valid tag library\", fails to load models"}
{"in": "#!/usr/bin/env python<nl>from contextlib import closing<nl>from selenium.webdriver import Firefox # pip install selenium<nl>from selenium.webdriver.support.ui import WebDriverWait<nl><nl># use firefox to get page with javascript generated content<nl>with closing(Firefox()) as browser:<nl><tab> browser.get(url)<nl><tab> button = browser.find_element_by_name('button')<nl><tab> button.click()<nl><tab> # wait for the page to load<nl><tab> WebDriverWait(browser, timeout=10).until(<nl><tab><tab> lambda x: x.find_element_by_id('someId_that_must_be_on_new_page'))<nl><tab> # store it to string variable<nl><tab> page_source = browser.page_source<nl>print(page_source)", "out": "PythonでJavascriptを使用して生成されたページを取得する", "out_en": "Get page generated with Javascript in Python"}
{"in": "sorted(set(itertools.chain.from_iterable(sequences)))", "out": "ユニークなアイテムの注文リストを入手するための最良/最もPython的な方法", "out_en": "Best / most pythonic way to get an ordered list of unique items"}
{"in": "class StrippedCharField(CharField):<nl><tab> \"\"\"Newforms CharField that strips trailing and leading spaces.\"\"\"<nl><tab> def clean(self, value):<nl><tab><tab> if value is not None:<nl><tab><tab><tab> value = value.strip()<nl><tab><tab> return super(StrippedCharField, self).clean(value)", "out": "Djangoフォームからスペースを除去する", "out_en": "Strip spaces from Django form"}
{"in": "trie = {\"a\": {\"b\": {\"e\": {},<nl><tab><tab><tab><tab><tab>\"f\": {},<nl><tab><tab><tab><tab><tab>\"g\": {\"l\": {},<nl><tab><tab><tab><tab><tab><tab>  \"m\": {},<nl><tab><tab><tab><tab><tab><tab>  \"n\": {}}},<nl><tab><tab><tab>  \"c\": {\"h\": {},<nl><tab><tab><tab><tab><tab>\"i\": {}},<nl><tab><tab><tab>  \"d\": {\"j\": {},<nl><tab><tab><tab><tab><tab>\"k\": {}}}}<nl><nl>target = 'achqr'<nl>sub_trie = trie<nl>longest_sequence = []<nl>for c in target:<nl><tab>sub_trie = sub_trie.get(c)<nl><tab>if sub_trie is None:  # the letter being looked for doesn't exist after this sequence<nl><tab><tab>break<nl><tab>longest_sequence.append(c)  # track the sequence since the trie is not reverse linked<nl>print(longest_sequence)", "out": "Pythonで辞書の辞書として表されるツリー内の単語を検索する検索するにはどうすればいいですか?", "out_en": "How to search for a word in a tree represented as a dictionary of dictionaries in python?"}
{"in": "wtype=np.dtype([('x',x.dtype),('y',y.dtype),('z',z.dtype)])<nl>w=np.empty(len(x),dtype=wtype)<nl>w['x']=x<nl>w['y']=y<nl>w['z']=z", "out": "numpy 1D配列をスタックして構造化された配列にする", "out_en": "numpy Stacking 1D arrays into structured array"}
{"in": "def md5(fname):<nl><tab>hash = hashlib.md5()<nl><tab>with open(fname, \"rb\") as f:<nl><tab><tab>for chunk in iter(lambda: f.read(4096), b\"\"):<nl><tab><tab><tab>hash.update(chunk)<nl><tab>return hash.hexdigest()", "out": "ファイルのMD5チェックサムを生成する", "out_en": "Generating a MD5 checksum of a file?"}
{"in": "import MySQLdb<nl>import os<nl>import time<nl>from stat import ST_MTIME<nl><nl>TIME_TO_SLEEP = 1<tab><tab>  # to avoid CPU burning<nl><nl>mydb = MySQLdb.connect(host=\"IP_add\", user=\"uname\", passwd=\"pass\", db=\"DB_name\")<nl>cursor = mydb.cursor()<nl>last_date = 0<nl>while True:<tab><tab><tab><tab><tab><tab># or what you want as stop condition<nl><tab>time.sleep(TIME_TO_SLEEP)<nl><tab>stat = os.stat(filename)<nl><tab>if stat[ST_MTIME] > last_date: # check the last modification date<nl><tab><tab>last_date = stat[ST_MTIME] # if more recent, store the last date<nl><tab><tab>with open(filename) as f:   # open the file<nl><tab><tab><tab>sql = f.read()<tab><tab> # put the content in the sql data base<nl><tab><tab><tab>if sql:<nl><tab><tab><tab><tab>cursor.execute(sql)<nl><tab><tab><tab><tab>mydb.commit()<nl><nl>mydb.close()", "out": "Pythonスクリプトを実行して、1秒ごとに既知の場所に生成される新しい.txtファイルからinfo.を読み込む", "out_en": "Running a Python Script to read info. from a new .txt file being generated at a known location every 1 sec"}
{"in": "data = {<nl><tab>'name'<tab>   : 'thomas',<nl><tab>'id'<tab><tab> : 'bonjour',<nl><tab>'city'<tab>   : 'cerfontaine',<nl><tab>'auth_token' : YOUR_AUTH_TOKEN_HERE<nl>}", "out": "ダッシュボードを起動するためのAPIキー", "out_en": "Api key for dashing dashboard"}
{"in": "with open('file_a','r') as fa:  # open file a --> read the files into lists<nl><tab>list_a = fa.read().splitlines()<nl>with open('file_b','r') as fb:  # open file b --> read the files into lists<nl><tab>list_b = fb.read().splitlines()<nl><nl># get element in list_b if list_a contain the element(only first 24 characters)<nl>match_list = [n for n in list_b if n[:24] in list_a]<nl><nl>with open('file_c','w+') as fc:  # write the matching list to the new file<nl><tab>fc.write('<nl>'.join(match_list))", "out": "2つのテキストファイルを一致させ、一致するものを検索して元のコンテンツに置き換える方法", "out_en": "How to match two text files, find matches and replace with original content?"}
{"in": "import numpy as np<nl>import theano<nl>import theano.tensor as tt<nl><nl><nl>def numpy_v1(a, b):<nl><tab>ainvb = np.zeros((3, 2, 4))<nl><tab>for i in range(4):<nl><tab><tab>ainvb[:, :, i] = a / b[:, i].T<nl><tab>return ainvb<nl><nl><nl>def numpy_v2(a, b):<nl><tab>return a[:, :, None] / b<nl><nl><nl>def compile_theano_v1():<nl><tab>a, b = tt.matrices('a', 'b')<nl><tab>return theano.function([a, b], a[:, :, None] / b)<nl><nl><nl>def main():<nl><tab>dt = np.dtype(np.float32)<nl><nl><tab>a = [[12, 3],<nl><tab><tab> [2, 4],<nl><tab><tab> [2, 4], ]<nl><nl><tab>b = [[12, 3, 2, 3],<nl><tab><tab> [2, 4, 4, 5]]<nl><nl><tab>a = np.asarray(a, dtype=dt)<nl><tab>b = np.asarray(b, dtype=dt)<nl><tab>print(a.shape)<nl><tab>print(b.shape)<nl><nl><tab>theano_v1 = compile_theano_v1()<nl><nl><tab>numpy_v1_ainvb = numpy_v1(a, b)<nl><tab>numpy_v2_ainvb = numpy_v2(a, b)<nl><tab>theano_v1_ainvb = theano_v1(a, b)<nl><nl><tab>assert np.allclose(numpy_v1_ainvb, numpy_v2_ainvb)<nl><tab>assert np.allclose(numpy_v2_ainvb, theano_v1_ainvb)<nl><nl><nl>main()", "out": "行列が別の行列の行で分割され、テアノにループがない", "out_en": "matrix divided by rows of another matrix, without a loop in theano"}
{"in": "connect(checkbox, SIGNAL(stateChanged(int)), button, SLOT(buttonStateChanged(int)));", "out": "pyqtでチェックボックスがオンになるまでボタンを無効にする方法", "out_en": "How to disable button until check box is checked in pyqt?"}
{"in": "if name in exons:<nl><tab>y = exons[name]<nl><tab>minDist = 99999 # large number<nl><tab>minIdx = None<nl><tab>minNum = None<nl><tab>for i, (low,high) in enumerate(y):<nl><tab><tab>dlow = abs(low - ppos1)<nl><tab><tab>dhigh = abs(high - ppos1)<nl><tab><tab>dist = min(dlow, dhigh)<nl><tab><tab>if dist < minDist:<nl><tab><tab><tab>minDist = dist<nl><tab><tab><tab>minIdx = i<nl><tab><tab><tab>minNum = 0 if dlow < dhigh else 1<nl><tab>print(y[minIdx])<nl><tab>print(y[minIdx][minNum])", "out": "指定された位置に最も近い数値セットを検索する", "out_en": "Finding nearest set of numbers given a position"}
{"in": "if stateid in states:<nl><tab>print(states[stateid])", "out": "dictキーと値のマッチングに問題がある", "out_en": "Having trouble matching dict key with value"}
{"in": "import re<nl>scores = [\"Bob Foo - 10 / 10<nl>\",<nl><tab><tab>  \"John Smith - 5 / 10<nl>\",<nl><tab><tab>  \"Bob Foo - 7 / 10<nl>\",<nl><tab><tab>  \"Jack T - 6 / 10<nl>\",<nl><tab><tab>  \"Jack T - 4 / 10<nl>\",<nl><tab><tab>  \"Bob Foo - 9 / 10<nl>\"]<nl><nl># First, split the names and scores up<nl>scores = [re.match('(\\S+ \\S+) - (\\d+)', score).groups() for score in scores]<nl>#print (scores)<nl><nl># Convert the number string into an integer<nl>scores = [[score[0], int(score[1])] for score in scores]<nl>#print (scores)<nl><nl># Create a dictionary, keyed by the name<nl>names = set(score[0] for score in scores)<nl>scores = {<nl><tab>name: [score[1] for score in scores if name == score[0]]<nl><tab>for name in names<nl>}<nl># print (scores)<nl><nl># Compute the average for each name<nl>scores = {<nl><tab>name: sum(score)/len(score)<nl><tab>for name, score in scores.items()<nl>}<nl>print (scores)", "out": "Python 3でリスト内の文字列から平均を検索する", "out_en": "Finding averages from strings in a list in Python 3"}
{"in": "import json<tab><nl><nl>j = \"\"\"[<nl>  {\"Event\":\"start\",\"EventDateTime\":\"2015-09-15T03:45:16.681428Z\"},<nl>  {\"Event\":\"process\",\"EventDateTime\":\"2015-09-15T03:45:16.681428Z\"},<nl>  {\"Event\":\"end\",\"EventDateTime\":\"2015-09-15T03:45:16.681428Z\"}<nl>]\"\"\"<nl><nl>j = json.loads(j)<nl>for item in j:<nl><tab>print '%s\\t%s' % (item['Event'], item['EventDateTime'])", "out": "PythonでJSON配列を構文解析して区切り文字列を作成する", "out_en": "Parsing JSON array in Python to create a delimited string"}
{"in": "ax2.patch.set_visible(True)", "out": "2つの軸が再配置されたmatplotlibの背景を設定する方法", "out_en": "How to set background of matplotlib with two rearranged axes?"}
{"in": "from itertools import izip_longest<nl>with open(\"filea.csv\") as source1,open(\"fileb.csv\")as source2,open(\"filec.csv\",\"a\") as dest2:<nl><tab>zipped = izip_longest(source1,source2) # use izip_longest which will add None as a fillvalue where we have uneven length files<nl><tab>for line in zipped:<nl><tab><tab>if line[1]: # if we have two lines to join<nl><tab><tab><tab>dest2.write(\"{},{}<nl>\".format(line[0][:-1],line[1][:-1]))<nl><tab><tab>else: # else we are into the longest file, just treat line as a single item tuple<nl><tab><tab><tab> dest2.write(\"{}\".format(line[0]))", "out": "Pythonで1つのcsvファイルを別のcsvファイルに追加する方法", "out_en": "How to append one csv file to another with python"}
{"in": "for word in commonWords :<nl><tab>text = text.replace(' '+word+' ', ' ')", "out": "特定のセットに含まれるすべての単語を置換する(ただし、その単語が別の単語内に含まれていない場合に限る)", "out_en": "Replacing all occurrences of words from a given set, but only if the word is not contained within another word"}
{"in": "[main_list[x] for x in indexes]", "out": "特定のインデックスを持つ項目をPythonリストから選択する", "out_en": "Picking out items from a python list which have specific indexes"}
{"in": "import urllib<nl>import string<nl>import random<nl>import os<nl><nl>filename_charset = string.ascii_letters + string.digits<nl>filename_length = 10<nl>file_save_dir = '/home/user/download/'<nl><nl>filename = ''.join(random.choice(filename_charset)<nl><tab><tab><tab><tab>   for s in range(filename_length))<nl><nl>urllib.urlretrieve (\"http://www.example.com/image.png\", <nl><tab><tab><tab><tab><tab>os.path.join(file_save_dir, filename + '.png'))", "out": "python/djangoでURLを使用してイメージを保存する方法", "out_en": "How to save an Image using URL in python/django"}
{"in": "def save(self, **kwargs):<nl><tab>from django.utils.text import slugify<nl><nl><tab>self.slug = slugify(self.user.username)<nl><tab>super(UserProfile, self).save()", "out": "ユーザーからのslugfieldの生成", "out_en": "generating slugfield from User"}
{"in": "import json<nl>import re<nl><nl>def parse(v):<nl><tab># Remove newlines and replace \"=\" with \":\"<nl><tab>v1 =  v.replace('=', ':').replace(\"<nl>\", \"\")<nl><tab># Enclose strings in double quotes<nl><tab>v2 = re.sub(r'(\\d*[a-zA-Z][a-zA-Z0-9]*)', r'\"\\g<1>\"', v1)<nl><tab># If you want booleans<nl><tab>v3 = re.sub(r'\"(true|false)\"', r'\\g<1>', v2)<nl><tab># Create lists<nl><tab>return json.loads(re.sub(r\"{([^:]+)}\", r'[\\g<1>]', v3))", "out": "擬似Json文字列をPythonオブジェクトに変換する", "out_en": "Convert pseudo Json string into a Python object"}
{"in": "values = [None]*1000", "out": "Pythonで定義済みの長さを持つリストを定義する方法", "out_en": "how to define a list with predefined length in Python"}
{"in": "def application(env, start_response):<nl><tab>start_response('200 OK', [('Content-Type','text/html')])<nl><tab>return \"Hello World\"", "out": "nginxとuWSGIは、Pythonで認証データを取得します。", "out_en": "nginx and uWSGI obtain authentication data in Python"}
{"in": "from django.db.models import CharField<nl>from django.db.models import  Q<nl><nl>fields = [f for f in table._meta.fields if isinstance(f, CharField)]<nl>queries = [Q(**{f.name: SEARCH_TERM}) for f in fields]<nl><nl>qs = Q()<nl>for query in queries:<nl><tab>qs = qs | query<nl><nl>table.objects.filter(qs)", "out": "検索,テーブル内のすべてのフィールドをdjangoで", "out_en": "searching all fields in a table in django"}
{"in": "instancemodelname = ContentType.objects.get(app_label=\"myappname\", model=\"mymodelname\")<nl>b = instancemodelname.model_class()(account_username='testtestest')<nl>b.save()", "out": "Django/Pythonでは、データベースの保存関数を再利用可能にする(文字列からmodelnameとappnameを取得するようにする)ために、コンテンツ・タイプやその他の方法を使用しています。", "out_en": "Django / Python, Make database save function re-usable (so that it takes modelname and appname from strings), using contenttypes or some other method?"}
{"in": "count = 0<nl>for item in items:<nl><tab>if item == 'Boston Americans':<nl><tab><tab>count += 1<nl>print count", "out": "リスト内の出現回数をカウントする別の方法", "out_en": "Another way to count occurrence in a list"}
{"in": "from django.db.models import Q<nl>from django.db.models.query import QuerySet<nl>import operator<nl><nl>def django_admin_keyword_search(model, keywords, search_fields):<nl><tab>\"\"\"Search according to fields defined in Admin's search_fields\"\"\"<nl><tab>all_queries = None<nl><nl><tab>for keyword in keywords.split(' '):  #breaks query_string into 'Foo' and 'Bar'<nl><tab><tab>keyword_query = None<nl><nl><tab><tab>for field in search_fields:<nl><tab><tab><tab>each_query = Q(**{field+'__icontains':keyword})<nl><nl><tab><tab><tab>if not keyword_query:<nl><tab><tab><tab><tab>keyword_query = each_query<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>keyword_query = keyword_query | each_query<nl><nl><tab><tab>if not all_queries:<nl><tab><tab><tab>all_queries = keyword_query<nl><tab><tab>else:<nl><tab><tab><tab>all_queries = all_queries & keyword_query<nl><nl><tab>result_set = model.objects.filter(all_queries).distinct()<nl><nl><tab>return result_set", "out": "Django Admin検索エンジンango Admin検索エンジンを使用する", "out_en": "Using Django Admin search engine in my own views"}
{"in": "dir = 'C:\\Users\\Shankar\\Documents\\Other'<nl>if os.path.exists(dir):<nl><tab>shutil.rmtree(dir)<nl>os.makedirs(dir)", "out": "Python-フォルダがすでに存在する場合は上書きする", "out_en": "Python - Overwriting Folder If It Already Exists"}
{"in": "f = open('workfile', 'r')<nl>for num,line in enumerate(f):<nl><tab>print(num+\" \"+line)", "out": "Pythonで文字列の先頭に行番号を追加する", "out_en": "Prepend line number to string in python"}
{"in": "nreceive = True#nreceive = Not Received<nl>ticks = 0<nl>f = None<nl>while nreceive and ticks < 101:#try to get the info 100 times or until it's received<nl><tab>ticks+=1<nl><tab>try:<nl><tab><tab>f = mysocket.makefile('rb')<nl><tab><tab>if not f == None:<nl><tab><tab><tab>nreceive = False<nl><tab>except:<nl><tab><tab>pass<nl>data = f.read(1024)", "out": "クライアントがPythonでデータを受信しない", "out_en": "Client Not Receiving Data in Python"}
{"in": "session['user_id']", "out": "ピラミッドログインユーザ", "out_en": "Pyramid login user"}
{"in": "from sqlalchemy.sql.expression import bindparam<nl>stmt = addresses.update().\\<nl><tab>where(addresses.c.id == bindparam('_id')).\\<nl><tab>values({<nl><tab><tab>'user_id': bindparam('user_id'),<nl><tab><tab>'email_address': bindparam('email_address'),<nl><tab>})<nl><nl>conn.execute(stmt, [<nl><tab>{'user_id': 1, 'email_address' : 'jack@yahoo.com', '_id':1},<nl><tab>{'user_id': 1, 'email_address' : 'jack@msn.com', '_id':2},<nl><tab>{'user_id': 2, 'email_address' : 'www@www.org', '_id':3},<nl><tab>{'user_id': 2, 'email_address' : 'wendy@aol.com', '_id':4},<nl>])", "out": "WHEREを使用したSQLAlchemy Coreでの一括更新", "out_en": "Bulk update in SQLAlchemy Core using WHERE"}
{"in": "keys_list = map(str, keys_list)<nl># or keys_list = [str(key) for key in keys_list]", "out": "Python:jsonから生成されたキー・リストからuを取り除く", "out_en": "Python: Get rid of u's from the keys list generated from json"}
{"in": "import pygame, sys<nl>from pygame.locals import *<nl><nl>SCREEN_X=400<nl>SCREEN_Y=400<nl>#Screen size<nl><nl>SPRT_RECT_X=0  <nl>SPRT_RECT_Y=0<nl>#This is where the sprite is found on the sheet<nl><nl>LEN_SPRT_X=100<nl>LEN_SPRT_Y=100<nl>#This is the length of the sprite<nl><nl>screen = pygame.display.set_mode((SCREEN_X, SCREEN_Y)) #Create the screen<nl>sheet = pygame.image.load('C:\\YOURFILE') #Load the sheet<nl><nl>sheet.set_clip(pygame.Rect(SPRT_RECT_X, SPRT_RECT_Y, LEN_SPRT_X, LEN_SPRT_Y)) #Locate the sprite you want<nl>draw_me = sheet.subsurface(sheet.get_clip()) #Extract the sprite you want<nl><nl>backdrop = pygame.Rect(0, 0, SCREEN_X, SCREEN_Y) #Create the whole screen so you can draw on it<nl><nl>screen.blit(draw_me,backdrop) #'Blit' on the backdrop<nl>pygame.display.flip()<nl>#Draw the sprite on the screen", "out": "Pythonでは、スプライトシートからスプライトイメージを選択するにはどうすればか?", "out_en": "How do you select a sprite image from a sprite sheet in python?"}
{"in": "def pairwise(iterable):<nl><tab>it = iter(iterable)<nl><tab>last = next(it)+next(it)<nl><tab>for curr in it:<nl><tab><tab>yield last, curr<nl><tab><tab>last = last[1]+curr<nl><nl><nl>def valid_pair((last, curr)):<nl><tab>return last[0] in valid and last[1] in valid and curr in valid", "out": "後続の文字のトリプルのカウンタを作成します", "out_en": "Create counter for triples of subsequent letters"}
{"in": "# -*- coding: utf-8 -*-<nl>\"\"\"<nl>Description of example<nl>\"\"\"<nl><nl>import pyqtgraph as pg<nl>from pyqtgraph.Qt import QtCore, QtGui<nl>import numpy as np<nl><nl>pg.mkQApp()<nl><nl>axis = pg.DateAxisItem(orientation='bottom')<nl>pw = pg.PlotWidget(axisItems={'bottom': axis})<nl>pw.setWindowTitle('pyqtgraph example: DateTimeAxis')<nl>pw.show()<nl>pw.setXRange(1383960000, 1384020000) <nl><nl>## Start Qt event loop unless running in interactive mode or using pyside.<nl>if __name__ == '__main__':<nl><tab>import sys<nl><tab>if (sys.flags.interactive != 1) or not hasattr(QtCore, 'PYQT_VERSION'):<nl><tab><tab>QtGui.QApplication.instance().exe", "out": "支店からDateAxisItemへのアクセス方法", "out_en": "How to access DateAxisItem from a branch"}
{"in": "def gen_alphaLabels(donotInclude):<nl><tab>for i in range(65,91):<nl><tab><tab>char = chr(i)<nl><tab><tab>if char not in donotInclude:<nl><tab><tab><tab>yield char", "out": "ジェネレータ関数での値のスキップ", "out_en": "Skipping over values in a generator function"}
{"in": "text = 'abcdefa'<nl>pattern = re.compile('a|c')<nl>[(m.group(), m.start()) for m in pattern.finditer(text)]", "out": "Pythonで文字位置のリストを取得する方法", "out_en": "How to get a list of character positions in Python?"}
{"in": "file = str(QFileDialog.getExistingDirectory(self, \"Select Directory\"))", "out": "Pyqtでディレクトリダイアログを使用する方法", "out_en": "how to have a directory dialog in Pyqt"}
{"in": "re.sub(\"\\((\\w*) (\\w*)\\)\", r\"\\1\", t)", "out": "正規表現を使用して木の葉を削除する(Python)", "out_en": "Delete leaves in a tree with regex (Python)"}
{"in": "values, vectors = scipy.sparse.linalg.eigs(P, k=1, sigma=1)", "out": "行列の特定の固有値に対応する固有ベクトルを見つけるにはどうすればいいですか?", "out_en": "How do I find out eigenvectors corresponding to a particular eigenvalue of a matrix?"}
{"in": "from collections import defaultdict<nl><nl>words = \"apple banana apple strawberry banana lemon\"<nl><nl>d = defaultdict(int)<nl>for word in words.split():<nl><tab>d[word] += 1", "out": "Pythonでの項目頻度カウント", "out_en": "item frequency count in python"}
{"in": "from netCDF4 import Dataset<nl><nl># a dictionary of lists that hold all the datasets from a given day<nl>grouped_datasets = {}<nl><nl>for f in listdir(path):<nl><tab>if isfile(join(path,f)):<nl><tab><tab>full_path = join(path,f)<nl><tab><tab>f = Dataset(full_path, 'r')<nl><tab><tab>basetime = f.variables['base_time'][:]<nl><tab><tab>altitude = f.variables['alt'][:]<nl><tab><tab>temp = f.variables['tdry'][:]<nl><tab><tab>actual_date =  strftime(\"%Y-%m-%d %H:%M:%S\", gmtime(basetime))<nl><tab><tab>measurement_day =  strftime(\"%Y-%m-%d\", gmtime(basetime))<nl><nl><tab><tab># if we haven't encountered any datasets from this day yet...<nl><tab><tab>if measurement_day not in grouped_datasets:<nl><tab><tab><tab># add that day to our dict<nl><tab><tab><tab>grouped_datasets[measurement_day] = []<nl><nl><tab><tab># now append our dataset to the correct day (list)<nl><tab><tab>grouped_datasets[measurement_day].append(f)", "out": "日ごとにファイルをグループ化する", "out_en": "group a bunch of files by day"}
{"in": "def limitSizeDay(*args):<nl><tab>value = dayValue.get();<nl><tab>if len(value) > 2: dayValue.set(value[:2]);<nl><nl>dayValue = StringVar();<nl>dayValue.trace('w', limitSizeDay);<nl><nl>day_entry1=Entry(List1, bg=\"#282B2B\", fg=\"white\", width=2, textvariable=dayValue);<nl>day_entry1.place(x=77, y=58);", "out": "(Python)入力ボックスを最大2文字に制限する方法", "out_en": "(Python) How to limit an entry box to 2 characters max"}
{"in": "__import__(attackerControlledString)", "out": "構成ファイルからシェル/Pythonコマンドを注入することはできますか?", "out_en": "Is it possible to inject shell/python commands from a configuration file?"}
{"in": "g = Github(token)<nl>user = g.get_user()<nl>repo = user.create_repo(full_name)", "out": "PyGithubを使用して新しいリポジトリを作成する方法", "out_en": "How to create a new repository with PyGithub"}
{"in": "for i in range(len(table_data)):<nl>  for j in range(len(table_data[i])):<nl><tab>table_data[i][j] = len(table_data[i][j])", "out": "文字列値のリストをそれらの文字列の長さの整数のリストに変換する", "out_en": "Turning a list of string values into a list of integers for the length of those strings"}
{"in": "import os<nl>from os.path import join, isdir, islink, isfile<nl><nl>def mywalk(top, topdown=True, onerror=None, ignore_list=('.ignore',)):<nl><tab>try:<nl><tab><tab># Note that listdir and error are globals in this module due<nl><tab><tab># to earlier import-*.<nl><tab><tab>names = os.listdir(top)<nl><tab>except Exception, err:<nl><tab><tab>if onerror is not None:<nl><tab><tab><tab>onerror(err)<nl><tab><tab>return<nl><tab>if len([1 for x in names if x in ignore_list]):<nl><tab><tab>return <nl><tab>dirs, nondirs = [], []<nl><tab>for name in names:<nl><tab><tab>if isdir(join(top, name)):<nl><tab><tab><tab>dirs.append(name)<nl><tab><tab>else:<nl><tab><tab><tab>nondirs.append(name)<nl><nl><tab>if topdown:<nl><tab><tab>yield top, dirs, nondirs<nl><tab>for name in dirs:<nl><tab><tab>path = join(top, name)<nl><tab><tab>if not islink(path): <nl><tab><tab><tab>for x in mywalk(path, topdown, onerror, ignore_list):<nl><tab><tab><tab><tab>yield x<nl><tab>if not topdown:<nl><tab><tab>yield top, dirs, nondirs", "out": "ディレクトリを無視できるPythonウォーカー", "out_en": "A Python walker that can ignore directories"}
{"in": "g = df.groupby(\"ID\")<nl>s = g[\"Based on\"].apply(lambda group: group.values)<nl>s.to_frame()", "out": "Python Pandas groupbyオブジェクトdtypeの割り当て", "out_en": "Python Pandas groupby assignment of object dtypes"}
{"in": "class Track:<nl><tab>def __init__(self, artist, title, album=None):<nl><tab><tab>self._artist = str(artist)<nl><tab><tab>self._title = str(title)<nl><tab><tab>self._album = album<nl><nl><tab>def __str__(self):<nl><tab><tab>return self.artist + \" \" + self.title + \" \" + self.album<nl><tab>#example for artist<nl><tab>@property<nl><tab>def artist(self):<nl><tab><tab>return self._artist<nl><tab>@artist.setter<nl><tab>def artist(self, artist):<nl><tab><tab>if artist != type(\"string\"):#ensure that value is of string type.<nl><tab><tab><tab>raise ValueError<nl><tab><tab>else:<nl><tab><tab><tab>self._artist = artist<nl><tab>#this way you could properly make setters and getter for your attributes<nl><tab>#same ofr the other stuff<nl><nl>Track = Track(\"Andy\", \"Me\", \"Self named\")", "out": "Pythonでオブジェクトと文字列を使用してクラスを定義する", "out_en": "Defining a class using objects and strings with python"}
{"in": "n=int(raw_input('n='))<nl>for i in range(1,n+1):<nl><tab>for j in range(1,n+1):<nl><tab><tab>if j==1 or j==n or j==i:<nl><tab><tab><tab>print'#',<nl><tab><tab>else:<nl><tab><tab><tab>print' ',<nl><nl><tab>print", "out": "次のパターンをPython言語で出力します。", "out_en": "Print the following pattern in Python language"}
{"in": "small_list_set = set(small_list)<nl>for line in big_list:<nl><tab>for item in line:<nl><tab><tab>if item in small_list_set:<nl><tab><tab><tab>bucket.append(line)", "out": "2つの非常に大きなリスト間の重複を検索する最速のアルゴリズム", "out_en": "Fastest algorithm for finding overlap between two very large lists?"}
{"in": "string = 'strings'<nl><nl>new_D = {'r': 1, 's': 1, 't': 1, 'r' : 3, 'i' : 4 }<nl><nl>sum_of_chars = 0<nl>for character in string:<nl><tab>if character in new_D:<nl><tab><tab>sum_of_chars += new_D[character]<nl><tab>else:<nl><tab><tab>sum_of_chars += 1 # Default?<nl><nl>print(sum_of_chars)", "out": "Pythonでディクショナリ内の各文字列インデックスマッチングキーの値を取得する方法", "out_en": "How to get value for each string index matching key in dictionary in Python"}
{"in": "pylab.get_backend()", "out": "Pythonでmatplotlibのグラフを対話的に表示する", "out_en": "Interactively Display graphs in matplotlib in python"}
{"in": "def test_overlap(dt1_st, dt1_end, dt2_st, dt2_end):<nl><tab>return not (dt1_st < dt2_end and dt1_end >dt2_st)", "out": "N組のリストで日付が重複しているかどうかを調べる", "out_en": "Find if dates are overlapping in a list of N pairs"}
{"in": "xlrd.xldate.xldate_from_date_tuple", "out": "xlrdを使用してPythonの日付をExcelの日付に変換する方法(属性xlrd.xldate_from_date_tupleは存在しません)", "out_en": "How to convert from Python date to Excel date using xlrd (attribute xlrd.xldate_from_date_tuple does not exist)"}
{"in": "x['C'] = x['B'].replace(to_replace=r'\\b'+x['A']+r'\\b', value='',regex=True)", "out": "他の列に表示されている単語を削除します。パンダ", "out_en": "Remove words that appear in other column, Pandas"}
{"in": "import urllib3<nl>c = urllib3.HTTPSConnectionPool('10.0.3.168', port=9001, cert_reqs='CERT_NONE',<nl><tab><tab><tab><tab><tab><tab><tab><tab>assert_hostname=False)<nl>c.request('GET', '/')", "out": "urllib3による証明書の検証を無視する", "out_en": "Ignore certificate validation with urllib3"}
{"in": "Content-Type", "out": "Python3ではJSONデータを誤って処理するが、Python2では処理)", "out_en": "Bottle mishandling JSON data in Python3, but not Python2"}
{"in": "def puzzle(s,a,b):<nl><tab>if a*b != len(s):<nl><tab>   print \"Not possible\"<nl><tab>   return<nl><tab>start =0<nl><tab>end = b+1<nl><tab>output =\"\"<nl><tab>for i in range(0,a):<nl><tab><tab>output= output+s[start: end]+\"<nl>\"<nl><tab><tab>start = end+1<nl><tab><tab>end = end+b<nl><tab>print output", "out": "Python 3で文字列を一定の間隔で分割する方法", "out_en": "How to split string at regular intervals in Python 3"}
{"in": "return render_to_response('base_index.html', locals(), csrfContext)", "out": "csrfContextを使用した変数の受け渡しに関するヘルプ", "out_en": "Help with passing variables w/ csrfContext"}
{"in": "name = input(\"Insert the name you want to delete: \")<nl># let's strip excessive whitespace and change to lower case:<nl>name = name.strip().lower()<nl>book = \"data.txt\"<nl><nl># use 'with' construct to ensure that file is closed after use:<nl>with open(book, 'r') as f: <nl><tab>lines = f.read().splitlines()<nl><nl>filtered = []<nl>for line in lines:<nl><tab>try: # guard against incorrect record, e.g. 'Guido, 1956'<nl><tab><tab>name_, sex, year = line.split(',')<nl><tab>except ValueError:<nl><tab><tab>print(\"cannot unpack this line:\", line)<nl><tab><tab>continue<nl><tab>if name == name_.strip().lower():<nl><tab><tab>continue # we don't want this line, so we skip it<nl><tab>filtered.append(line) # line is ok, we keep it<nl><nl># join list of lines into one string and write to the file:<nl>with open(book, 'w') as f:<nl><tab>f.write('<nl>'.join(filtered))", "out": "ファイルPythonの文字列リストから特定の文字列を削除する", "out_en": "Delete a specific string from a list of strings in a file python"}
{"in": "re.sub(r'<p>(?=[A-Z]{2,})','<i>',MyText)", "out": "re.sub(python)マッチした文字列の置換部分", "out_en": "re.sub (python) substitute part of the matched string"}
{"in": "if self.isCellEditControlShown:<nl><tab># _active_row and _active_col are set in the event handler...<nl><tab>cellEditor = self.GetCellEditor(self._active_row, self._active_col)<nl><tab>textControl = cellEditor.GetControl()<nl><tab>textControl.Paste()", "out": "wxPython:グリッドセルにpasteを実装する方法", "out_en": "wxPython: how to implement paste in a grid cell?"}
{"in": "import time, Image<nl><nl>import cv2<nl>from livestreamer import Livestreamer<nl><nl># change to a stream that is actually online<nl>livestreamer = Livestreamer()<nl>plugin = livestreamer.resolve_url(\"http://twitch.tv/flosd\")<nl>streams = plugin.get_streams()<nl>stream = streams['mobile_High']<nl><nl># download enough data to make sure the first frame is there<nl>fd = stream.open()<nl>data = ''<nl>while len(data) < 3e5:<nl><tab>data += fd.read()<nl><tab>time.sleep(0.1)<nl>fd.close()<nl><nl>fname = 'stream.bin'<nl>open(fname, 'wb').write(data)<nl>capture = cv2.VideoCapture(fname)<nl>imgdata = capture.read()[1]<nl>imgdata = imgdata[...,::-1] # BGR -> RGB<nl>img = Image.fromarray(imgdata)<nl>img.save('frame.png')<nl># img.show()", "out": "twitch.tvストリームの最初のフレームのダウンロード", "out_en": "Downloading the first frame of a twitch.tv stream"}
{"in": "cipher = {}<nl>for f in open('mapping.txt'):<nl>  org, cip = f.split()<nl>  cipher[ord(org)] = cip<nl><nl><nl>inpt = input('Enter string: ')<nl><nl>inpt = inpt.translate(cipher)<nl>print('Message: ' + inpt)", "out": "txtファイルから情報を含む文字列を暗号化する方法", "out_en": "How to cipher a string with info from a txt file?"}
{"in": "if condition:<nl><tab>return redirect('/dashboard/')<nl>else:<nl><tab>return super(UserFormView, self).get(request)", "out": "Django:FormView:初期ロジックを追加する方法", "out_en": "Django: FormView: How to add initial logic?"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl><nl>shifts = np.linspace(1, 50, 25)[:, np.newaxis]<nl>x = np.arange(50)[np.newaxis, :]<nl>data = np.exp(-(x - shifts)**2 / 50) * shifts<nl><nl>fig, (ax1, ax2) = plt.subplots(2, 1)<nl><nl>im1 = ax1.imshow(data, interpolation='none', cmap='viridis')<nl>fig.colorbar(im1, ax=ax1, label='raw values')<nl><nl>norm_data = (data - np.min(data, axis=1)[:, np.newaxis]) / np.ptp(data, axis=1)[:, np.newaxis]<nl>im2 = ax2.imshow(norm_data, interpolation='none', cmap='viridis')<nl>fig.colorbar(im2, ax=ax2, label='normalized by row')", "out": "Matplotlibの\"imshow\"を使用して、heamapの値を行方向にスケールする方法は?", "out_en": "How to scale values in the heamap in row direction using Matplotlib's \"imshow\"?"}
{"in": "#!/usr/bin/env python<nl>import wx<nl>class MyFrame(wx.Frame):<nl><tab>def __init__(self, parent, ID, title):<nl><tab><tab>wx.Frame.__init__(self, parent, ID, title, wx.DefaultPosition)<nl><tab><tab>Buttons = []<nl><tab><tab>Buttons.append(wx.Button(self,-1, \"Approve Location\"))<nl><tab><tab>Buttons.append(wx.Button(self,-1, \"Approve Item\"))<nl><tab><tab>Buttons.append(wx.Button(self,-1, \"Change Qty\"))<nl><tab><tab>Buttons.append(wx.Button(self,-1, \"Approve\"))<nl><tab><tab>sizer = wx.GridBagSizer(5,3)<nl><tab><tab>sizer.Add(Buttons[0], (0, 5), (1,1), wx.EXPAND)<nl><tab><tab>sizer.Add(Buttons[1], (1, 4), (1,1), wx.EXPAND)<nl><tab><tab>sizer.Add(Buttons[2], (1, 5), (1,1), wx.EXPAND)<nl><tab><tab>sizer.Add(Buttons[3], (2, 5), (1,1), wx.EXPAND)<nl><tab><tab>self.SetSizerAndFit(sizer)<nl><tab><tab>self.Centre()<nl>class MyApp(wx.App):<nl><tab>def OnInit(self):<nl><tab><tab>frame = MyFrame(None, -1, \"Gridbagsizer\")<nl><tab><tab>frame.Show(True)<nl><tab><tab>self.SetTopWindow(frame)<nl><tab><tab>return True<nl>if __name__ == \"__main__\":<nl><tab>app = MyApp(0)<nl><tab>app.MainLoop()", "out": "WxPythonの物のワニ", "out_en": "alligment of objects in wxpython"}
{"in": "import sys<nl>from PyQt5.QtGui import *<nl>from PyQt5.QtWidgets import *<nl>from PyQt5.QtCore import *<nl><nl>class Window(QWidget):<nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>QWidget.__init__(self, *args, **kwargs)<nl><nl><tab><tab>self.label = QLabel(\"Test\", self)<nl><tab><tab>self.label.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)<nl><tab><tab>self.label.setAlignment(Qt.AlignCenter)<nl><tab><tab>self.label.setStyleSheet(\"QLabel {background-color: red;}\")<nl><nl><tab><tab>self.button = QPushButton(\"Test\", self)<nl><nl><tab><tab>self.layout = QGridLayout()<nl><tab><tab>self.layout.addWidget(self.label, 0, 0)<nl><tab><tab>self.layout.addWidget(self.button, 0, 1)<nl><nl><tab><tab>self.setLayout(self.layout)<nl><tab><tab>self.show()<nl><nl>app = QApplication(sys.argv)<nl>win = Window()<nl>sys.exit(app.exec_())", "out": "PyQt5:ラベルを中央揃えにする", "out_en": "PyQt5: Center align a label"}
{"in": "input_file=\"input_{0}.in\".format(case)<nl><nl>os.system=(\"./a.out {0}\".format(input_file))", "out": "Pythonの入力ファイルを使用したスクリプトの実行", "out_en": "running a script with an input file in python"}
{"in": "input = open(\"sparse.csv\").read().split() # split by newlines and spaces<nl>i = iter(input)<nl>for date in i:<nl><tab>if date != \"nan\":<nl><tab><tab>value = i.next()<nl><tab><tab># process pairs", "out": "読み込む,スパースcsvファイルをパンダに", "out_en": "reading sparse csv file into pandas"}
{"in": "import cv<nl>resim = cv.LoadImage('image.jpg')<nl>capture = cv.CaptureFromFile('video.avi')<nl>while(1):<nl><tab>frame = cv.QueryFrame(capture)<nl><tab>cv.SetImageROI(frame,(100,100,resim.width,resim.height))<nl><tab>cv.Add(frame,resim,frame)<nl><tab>cv.ResetImageROI(frame)<nl><tab>cv.ShowImage('frame',frame)<nl><tab>if cv.WaitKey(33)==27:<nl><tab><tab>break", "out": "画像とビデオの結合", "out_en": "Merge picture with video"}
{"in": "en-ner-person.bin", "out": "Javaでテキスト内の名前エンティティを検索する方法", "out_en": "How to find a name Entity in a text in java"}
{"in": "import cPickle<nl># save the classifier<nl>with open('my_dumped_classifier.pkl', 'wb') as fid:<nl><tab>cPickle.dump(gnb, fid)<tab><nl><nl># load it again<nl>with open('my_dumped_classifier.pkl', 'rb') as fid:<nl><tab>gnb_loaded = cPickle.load(fid)", "out": "sckit-learnで分類子をディスクに保存", "out_en": "Save classifier to disk in scikit-learn"}
{"in": "class MARGINS(ctypes.Structure):<nl>  _fields_ = [(\"cxLeftWidth\", c_int),<nl><tab><tab><tab>  (\"cxRightWidth\", c_int),<nl><tab><tab><tab>  (\"cyTopHeight\", c_int),<nl><tab><tab><tab>  (\"cyBottomHeight\", c_int)<nl><tab><tab><tab> ]<nl>margins = MARGINS(1, 2, 1, 1)<nl><nl>dwm.DwmExtendFrameIntoClientArea(handel, ctypes.byref(margins))", "out": "Windows 7のMARGINS構造体(Python)", "out_en": "Windows 7 MARGINS structure in Python"}
{"in": "find_elements_by_xpath('//div[@class=\"myclass\"]/a').get_attribute(\"content\")", "out": "Seleniumを使用して別のタグ内のカスタム・タグを検索する方法", "out_en": "How to find a custom tag within another tag using Selenium"}
{"in": "pygame.draw.polygon(screen, black, [[300,400],[150,100],[450,300]],6)", "out": "Pythonでポリゴンを描画する方法", "out_en": "How do I draw a polygon in python?"}
{"in": "re.sub(\"(?<=[^a-zA-Z])pi(?=[^a-zA-Z])\", \"(math.pi)\", \"2pi3 + supirse\")", "out": "Pythonはre.subマッチの一部だけを置き換えます。", "out_en": "Python replace only part of a re.sub match"}
{"in": "intlist = range(1,10)<nl>randomeven = random.choice([i for i in intlist if i % 2 == 0])", "out": "特定の述部を満たすランダム値を選択するPython的な方法", "out_en": "pythonic way of selecing a random value that satisfies a certain predicate"}
{"in": "toolzip = zipfile.ZipFile(myzipfile,  'r')<nl>names = toolzip.namelist()<nl>for n in names:<nl><tab>data = toolzip.read(n)<nl><tab># do something with data", "out": "Windows上でPythonを使用して、禁止されたファイル名を含むzipアーカイブを抽出するにはどうすればよいですか。", "out_en": "How can I extract a zip archive that contains a forbidden file name on Windows using Python?"}
{"in": "class Test(object):<nl><tab>def __new__(*args):<nl><tab><tab>return False", "out": "Pythonオブジェクトを変数に設定する", "out_en": "Set python object to variable"}
{"in": "BMesh.calc_volume", "out": "Python:多面体を作成し、そのセクションを取得する", "out_en": "Python: Create a polyhedron and get its section"}
{"in": "import networkx as nx<nl># weighted MultiGraph<nl>M = nx.MultiGraph()<nl>M.add_edge(1,2,weight=7)<nl>M.add_edge(1,2,weight=19)<nl>M.add_edge(2,3,weight=42)<nl><nl># create weighted graph from M<nl>G = nx.Graph()<nl>for u,v,data in M.edges_iter(data=True):<nl><tab>w = data['weight']<nl><tab>if G.has_edge(u,v):<nl><tab><tab>G[u][v]['weight'] += w<nl><tab>else:<nl><tab><tab>G.add_edge(u, v, weight=w)<nl><nl>print G.edges(data=True)<nl># [(1, 2, {'weight': 26}), (2, 3, {'weight': 42})]", "out": "Networkx:マルチグラフをウェイト付きエッジの単純なグラフに変換します。", "out_en": "Networkx : Convert multigraph into simple graph with weighted edges"}
{"in": "jpeg.read(2)<nl>b = jpeg.read(1)<nl>try:<nl><tab>while (b and ord(b) != 0xDA):<nl><tab><tab>while (ord(b) != 0xFF): b = jpeg.read(1)<nl><tab><tab>while (ord(b) == 0xFF): b = jpeg.read(1)<nl><tab><tab>if (ord(b) >= 0xC0 and ord(b) <= 0xC3):<nl><tab><tab><tab>jpeg.read(3)<nl><tab><tab><tab>h, w = struct.unpack(\">HH\", jpeg.read(4))<nl><tab><tab><tab>break<nl><tab><tab>else:<nl><tab><tab><tab>jpeg.read(int(struct.unpack(\">H\", jpeg.read(2))[0])-2)<nl><tab><tab>b = jpeg.read(1)<nl><tab>width = int(w)<nl><tab>height = int(h)<nl>except struct.error:<nl><tab>pass<nl>except ValueError:<nl><tab>pass", "out": "Python3-jpeg次元情報の解析", "out_en": "Python3 - parsing jpeg dimension info"}
{"in": "# calcuate normalization factor<nl>factor = 1.0 / sum(in_degree_dist.itervalues())<nl><nl># sort the dictionary<nl>sorted_in_degree_dist = OrderedDict((key, in_degree_dist[key] * factor)<nl><tab>for key in sorted(in_degree_dist))<nl><nl># or <nl>sorted_in_degree_dist = OrderedDict((key, value * factor)<nl><tab>for key, value in sorted(in_degree_dist.iteritems()))", "out": "Pythonでの辞書のソートと要約", "out_en": "sorting and summing up a dictionary in python"}
{"in": "l.set_option(ldap.OPT_HOST_NAME, settings.AD_DNS_NAME)", "out": "UWWsGiは、基礎となるDjangoアプリケーションからのLDAPS要求に影響を与えますか。", "out_en": "Does UWSGI influence LDAPS Requests from an underlying Django app?"}
{"in": "names = []<nl>values = []<nl>data = []<nl>with open('yourfile') as lines:<nl><tab>for line in lines:<nl><tab><tab>first, rest = line.split(' ', 1)<nl><nl><tab><tab>if first == 'name':<nl><tab><tab><tab>names.append(rest)<nl><nl><tab><tab>elif first == 'values':<nl><tab><tab><tab>floats = map(float, rest.split())<nl><tab><tab><tab>values.append(tuple(floats))<nl><nl><tab><tab>elif first == 'data':<nl><tab><tab><tab>int_str, floats_str = rest.split(' ', 1)<nl><tab><tab><tab>floats = map(float, floats_str.split())<nl><tab><tab><tab>data.append( (int(int_str),) + tuple(floats) )", "out": "Pythonでファイルから別の配列にデータを読み込む", "out_en": "Read data from file into different arrays in python"}
{"in": "# List files in directory and upload them to bucket<nl>for filename in all_files:<nl><tab>#skip all directory entries which are not a file<nl><tab>if not os.path.isfile(filename):<nl><tab><tab>  continue<tab><nl><tab>k = Key(bucket)<nl><tab>k.key = os.path.basename(filename)<nl><tab>k.set_contents_from_filename(filename, cb=percent_cb, num_cb=10)", "out": "ファイル名からパスを除去", "out_en": "Strip path from filename"}
{"in": "x = [[a, b, c], [d, e, f], [g, h, i]]<nl>itertools.product(*x)", "out": "さまざまな長さの引数の渡されるリスト", "out_en": "Passing list of arguments of varying length"}
{"in": "for x in doclist:<nl><tab>if x == '[':<nl><tab><tab>count=count+1<nl><tab>elif count == 1:<nl><tab><tab>response=raw_input(\"Please enter %s\" % x)<nl><tab><tab>count=count-1<nl><tab>else:<nl><tab><tab>pass", "out": "ループのロー入力(Raw Input)", "out_en": "Raw Input on for loops"}
{"in": "def listfiles(directory):<nl><tab>return [f for f in os.listdir(directory) <nl><tab><tab><tab>  if os.path.isdir(os.path.join(directory, f))]", "out": "Pythonでは、ディレクトリ内のファイルではなく、すべてのディレクトリを取得する方法はありますか。", "out_en": "Is there a way to get all the directories but not files in a directory in Python?"}
{"in": "d1 = mysql.connect(database1)<nl>d2 = mysql.connect(database2)<nl><nl>with d2 as c2: # new transaction<nl><tab>c2.execute(\"SELECT f1, f2, f3 FROM table\")<nl><tab>with d1 as c1:<nl><tab><tab>c1.executemany(\"INSERT INTO table (f1, f2, f3) VALUES (%s, %s, %s)\", c2)", "out": "既存のデータに影響を与えることなく、既存のデータベースにデータを追加する方法", "out_en": "How to append data to an existing database, without affecting the data already present?"}
{"in": "before = ['JACKIE:34', 'MATT:444', 'CEN:12', 'PETE:12', 'RANDY:92', 'MITCH:2', 'JAN:2']<nl>after = [(name, int(value)) for name, value in (x.split(':') for x in before)]<nl>print after", "out": "Pythonによるリストからタプルへの変換", "out_en": "Python conversion from list to tuple"}
{"in": "# Using extended slice notation to reverse the string<nl>if str(n) == str(n)[::-1]:<nl><tab>print \"Palindrome!\"", "out": "回文数生成プログラム", "out_en": "program to generate palindromic number"}
{"in": "response.xpath('//li[@class=listclass\"]/div[not(contains(@class,\"divclass\"))]/text()').extract()", "out": "Scrapy:divのリストからdivを解析する", "out_en": "Scrapy: parse a div from a list of divs"}
{"in": "class AlgoMixin(object):<nl>  # Does not end in \"Test\"; not a subclass of unittest.TestCase.<nl>  # You may prefer \"AbstractBase\" or something else.<nl><nl>  def test_empty(self):<nl><tab>result = self.function(make_empty_graph())<nl><tab>self.assertTrue(result)<nl><nl>class TestF(AlgoMixin, unittest.TestCase):<nl>  function = staticmethod(f)<nl>  # Doesn't need to be in setup, nor be an instance attribute.<nl>  # But doesn't take either self or class parameter, so use staticmethod.<nl><nl>  def test_random(self):<nl><tab>pass  # Specific test for algorithm 'f'.", "out": "Pythonテストケースをノーズテストで分解する方法", "out_en": "How to factorise python test cases with nosetests"}
{"in": "import zipfile<nl><nl>fh = open(targetzip, 'rb')<nl>z = zipfile.ZipFile(fh)<nl>for name in z.namelist():<nl><tab>z.extract(name, extractto)<nl>fh.close()", "out": "zipファイルを解凍するための簡単なスクリプト", "out_en": "A simple Script to extracting a zip file"}
{"in": "branches = [ref for ref in repo.refs.keys(\"refs/heads/\") if<nl><tab><tab><tab>any((True for commit in repo.get_walker(include=[repo.refs[ref]])<nl><tab><tab><tab><tab> if commit.id == YOURSHA))]", "out": "Python dulwichを使用して、どのブランチに特定のgitコミットshaが含まれているかをチェックする", "out_en": "Check which branches contain a specific git commit sha using Python dulwich?"}
{"in": "test = props.find('S/[@N=\"SamAccountName\"]')", "out": "Windows XML出力のPython ETREE構文解析", "out_en": "Python ETREE parsing of a windows XML output"}
{"in": "def isAnagram(str1, str2):<nl><tab>str1_list = list(str1)<nl><tab>str1_list.sort()<nl><tab>str2_list = list(str2)<nl><tab>str2_list.sort()<nl><nl><tab>return (str1_list == str2_list)", "out": "単語リストのアナグラムを検索する", "out_en": "Find anagrams for a list of words"}
{"in": "if (<nl><tab>(\"this phrase\" in textfile or \"that phrase\" in textfile) and not (<nl><tab>\"not this phrase\" in textfile or \"not that phrase\" in textfile)<nl>):<nl><tab>return True", "out": "Pythonで特定の文字列のテキストファイルをチェックする", "out_en": "Checking text files for certain strings in python"}
{"in": "import collections<nl>import itertools<nl><nl>d = collections.defaultdict(list)<nl>for indices in itertools.product(*map(range, a.shape)):<nl><tab>d[a[indices]].append(indices)", "out": "Python:numpy配列の要素にインデックスを付けるには?", "out_en": "Python: How to index the elements of a numpy array?"}
{"in": "from scipy.signal import argrelmax<nl>f = xf[scipy.signal.argrelmax(yf[0:N/2])]<nl>Af = np.abs(yf[argrelmax(yf[0:N/2])])", "out": "Pythonを使用したFFT係数", "out_en": "FFT coefficients using python"}
{"in": "A.objects.filter(name='abc').prefetch_related('ab_set')", "out": "多対多フィールドなしで多対多テーブルに関連するプリフェッチを使用する", "out_en": "Use prefetch related many to many table without many to many field"}
{"in": "date_str = '2014-06-18 13:06:00.349565827'<nl><nl># split off the seconds & microseconds<nl>beginning, sec = date_str.rsplit(':', 1) <nl><nl># Use string formatting to recreate a rounded timestamp<nl>date = dateutil.parser.parse('{}:{:02.6f}'.format(beginning, float(sec)))", "out": "NSとTruncateを使用したPythonのタイムスタンプの丸め", "out_en": "Getting Python to round Timestamp with NS versus Truncate"}
{"in": "import csv<nl><nl>f1 = file('C:\\File1.csv', 'rb')<nl>f2 = file('C:File2.csv', 'rb')<nl>f3 = file('C:\\output_file.csv', 'wb')<nl>c1 = csv.reader(f1)<nl>c2 = csv.reader(f2)<nl>c3 = csv.writer(f3)<nl>masterlist = [row[0] for row in c2]<nl><nl>for hosts_row in c1:<nl><tab>if hosts_row[0] not in masterlist:<nl><tab><tab>print hosts_row<nl><tab><tab>c3.writerow(hosts_row)", "out": "2つのCSVを比較して、欠落した値(異なる行)をファイルpythonに書き込む", "out_en": "Comparing two CSV and writing the missing values(in different rows) to a file python"}
{"in": "import math<nl>import csv<nl><nl>x = 2.0<nl>with open('out.csv', 'wb') as f:<nl><tab>writer = csv.writer(f, delimiter=',')<nl><tab>while x < 100.0:<nl><tab><tab>print x, '\\t', math.log(x)/math.log(2)<nl><tab><tab>writer.writerow([x, math.log(x)/math.log(2)])<nl><tab><tab>x = x + x", "out": "テーブルをCSVファイルにエクスポートする", "out_en": "Export a table in CSV file"}
{"in": "from Tkinter import *<nl>import ttk<nl>import time<nl>import threading<nl><nl>def start():<nl><tab>start_stop.config(text=\"QUIT\", command=stop)<nl><tab>thread = threading.Thread(target=progBar, args=())<nl><tab>thread.daemon = True<nl><tab>thread.start()<nl><nl>def progBar():<nl><tab>for i in xrange(5):<nl><tab><tab>pbar_det.step(19.99)<nl><tab><tab>master.update()<nl><tab><tab># Busy-wait<nl><tab><tab>time.sleep(1)<nl><tab>master.quit()<nl><nl>def stop():<nl><tab>master.quit()<nl><nl>master = Tk()<nl><nl>start_stop = Button(master, text='START', command=start)<nl>start_stop.grid(row=0, column=1, pady=2, padx=2, sticky=E+W+N+S)<nl><nl>pbar_det = ttk.Progressbar(master, orient=\"horizontal\", length=600, mode=\"determinate\")<nl>pbar_det.grid(row=0, column=0, pady=2, padx=2, sticky=E+W+N+S)<nl><nl>master.mainloop()", "out": "ボタンを押してプログラムを終了するにはどうすればいいですか?", "out_en": "How to close the program by pressing button?"}
{"in": "drop=False, inplace=True", "out": "複合キーを持つNumpy配列。両方でサブセットを検索します。", "out_en": "Numpy arrays with compound keys; find subset in both"}
{"in": "def generateTuples(N, M):<nl>  done = 0<nl>  counters = {}<nl>  for C in range(3, N + 3):<nl><tab>for B in range(2, C):<nl><tab>  for A in range(1, B):<nl><tab><tab>if (counters.get('A%i' % A, 0) < M and<nl><tab><tab><tab>counters.get('B%i' % B, 0) < M and<nl><tab><tab><tab>counters.get('C%i' % C, 0) < M):<nl><tab><tab>  yield (A, B, C)<nl><tab><tab>  counters['A%i' % A] = counters.get('A%i' % A, 0) + 1<nl><tab><tab>  counters['B%i' % B] = counters.get('B%i' % B, 0) + 1<nl><tab><tab>  counters['C%i' % C] = counters.get('C%i' % C, 0) + 1<nl><tab><tab>  done += 1<nl><tab><tab>  if done >= N:<nl><tab><tab><tab>return<nl><nl>for (A, B, C) in generateTuples(8, 3):<nl>  print (A, B, C)", "out": "特定のプロパティを持つ一意のタプルのリストを生成するアルゴリズム", "out_en": "Algorithm for generating list of unique tuples with specific properties"}
{"in": "# a is some list<nl>b2 = [0]*len(a[0])<nl>for x in a:<nl><tab>for y in range(len(x)):<nl><tab><tab> b2[y] += x[y]<nl>print(b2)", "out": "リストのリスト内の要素をPythonでカスタマイズするにはどうすればいいですか?", "out_en": "How can I do the summatory of elements in a list of lists in python?"}
{"in": "for test in suite:<nl><tab>print test._tests", "out": "TestSuiteからTestCaseのリストを抽出する方法を教えてください。", "out_en": "How can I extract a list of TestCases from a TestSuite?"}
{"in": "import sys<nl>from PySide.QtGui import QApplication, QGraphicsScene, QGraphicsView<nl>from PySide.QtWebKit import QGraphicsWebView<nl><nl>if __name__ == '__main__':<nl><tab>app = QApplication(sys.argv)<nl><nl><tab>item = QGraphicsWebView()<nl><tab>item.load('front.svg')<nl><tab>view = QGraphicsView()<nl><tab>scene = QGraphicsScene()<nl><tab>scene.addItem(item)<nl><tab>view.setScene(scene)<nl><tab>view.show()<nl><tab>sys.exit(app.exec_())", "out": "PySide-QSvgWidgetが埋め込みSVGファイルを正しく表示しない", "out_en": "PySide - QSvgWidget renders embedded SVG files incorrectly"}
{"in": "def read_or_write_file(self, file, section, passed_option = None,<nl><tab><tab><tab><tab><tab>  value = None, read = True):<nl><nl><tab>config = ConfigParser.RawConfigParser()<nl><tab>with open(file) as configfile:<nl><tab><tab>config.readfp(configfile)<tab><nl><nl><tab>if read:<nl><tab><tab>options = config.options(section)<nl><nl><tab><tab>for option in options:<nl><tab><tab><tab>file_settings[option] = config.get(section, option)<nl><nl><tab>else:<nl><tab><tab>config.set(section, passed_option, value)<nl><nl><tab><tab>with open(file, 'w') as configfile:<nl><tab><tab><tab>config.write(configfile)", "out": "PythonでINIファイルの読み取りと書き込みを行う方法", "out_en": "How To Read and Write to a INI file in Python"}
{"in": "pattern = '<td.*?bgcolor=\"#ff9900\".*?>(.*?)</th>'<nl>re.findall(pattern, html)", "out": "Python:属性が一致した場合にhtmlタグ間のデータを取得してリストに入れる", "out_en": "Python: Get data between html tags if an attribute matches and put it into a list"}
{"in": "with open('test.txt') as input_data:<nl><tab>for line in input_data:<nl><tab>   match = re.search(r' is (.*) test ', line)<nl><tab>   if match:<nl><tab><tab>  print(line)<nl><tab><tab>  print(match.group(1))", "out": "Pythonが特定のテキストを1行から読み込む", "out_en": "Python read certain text from a single line"}
{"in": "res = [word for word in simpleTokenize(string) if word not in stopwords]", "out": "別のリストの値に基づいてリストから値を抽出する最も効率的な方法は?", "out_en": "What's the most efficient way to filter values out of a list based on the values in another list"}
{"in": "run('''python -c \"import os;os.mkdir('some dir')\" ''')", "out": "ファブリックを使用して、任意のホスト、複数のプラットフォーム、Linux、およびWindows上にフォルダ/ディレクトリを作成する方法", "out_en": "How to use fabric to create a folder/directory on arbitrary host, multiple platforms, Linux and Windows?"}
{"in": "import urllib2<nl>def download(url, file):<nl><tab>dataset = urllib2.urlopen(url)<nl><tab>CHUNK = 16 * 1024<nl><tab>with open(file, 'wb') as dl:<nl><tab><tab>while True:<nl><tab><tab><tab>peice = dataset.read(CHUNK)<nl><tab><tab><tab>if not peice: break<nl><tab><tab><tab>dl.write(peice)<nl><nl>download(r'http://dds.cr.usgs.gov/emodis/Africa/historical/TERRA/2012/comp_056/AF_eMTH_NDVI.2012.047-056.QKM.COMPRES.005.2012059143841.zip',r'AF_eMTH_NDVI.2012.047-056.QKM.COMPRES.005.2012059143841.zip')", "out": "Pythonを使用してファイルをダウンロードする", "out_en": "Download a file using Python"}
{"in": "from collections import defaultdict<nl>import re<nl>params = {<nl><tab>'a': 'b',<nl><tab>'c': 'd',<nl><tab>'foo[bar]': 'element1',<nl><tab>'foo[baz]': 'element2',<nl><tab>'foo[qis]': 'element3',<nl><tab>'foo[borfarglan][bofgl]': 'element4',<nl><tab>'foo[borfarglan][bafgl]': 'element5',<nl>}<nl><nl>def split(string, brackets_on_first_result = False):<nl><tab>matches = re.split(\"[\\[\\]]+\", string)<nl><tab>matches.remove('')<nl><tab>return matches<nl><nl>def mr_parse(params):<nl><tab>results = {}<nl><tab>for key in params:<nl><tab><tab>if '[' in key:<nl><tab><tab><tab>key_list = split(key)<nl><tab><tab><tab>d = results<nl><tab><tab><tab>for partial_key in key_list[:-1]:<nl><tab><tab><tab><tab>if partial_key not in d:<nl><tab><tab><tab><tab><tab>d[partial_key] = dict()<nl><tab><tab><tab><tab>d = d[partial_key]<nl><tab><tab><tab>d[key_list[-1]] = params[key]<nl><tab><tab>else:<nl><tab><tab><tab>results[key] = params[key]<nl><tab>return results<nl>print mr_parse(params)", "out": "Pythonで辞書のようなURLパラメータをパースする", "out_en": "Parsing dictionary-like URL parameters in Python"}
{"in": "if any(test5 in subindex for subindex in index):<nl><tab>print True", "out": "リストのリストで項目を検索する方法", "out_en": "How to search for an item in a list of lists?"}
{"in": "d = ws.cell(row = 4, column = 2)<nl>print d.value", "out": "Pythonで行、列の名前からExcelの値を検索する方法", "out_en": "how to find the excel value from row, col names in python?"}
{"in": "test = 'tester.rtf'<nl>out_file = open(test,'w')<nl>out_file.write(\"\"\"{\\\\rtf1<nl>This is \\\\b Bold  \\\\b0\\line\\<nl>}\"\"\")<nl>out_file.close() #thanks to the comment below", "out": "Pythonからフォーマットされたテキストを書く方法はありますか?", "out_en": "Is there a way to write formatted text from Python?"}
{"in": "s.sprintf( <nl>  \"import imp<nl>\" <nl>  \"imp.load_source('%s', r'%s')\", modname, script_path); <nl>PyRun_SimpleString(s.c_str());", "out": "C apiを使用してファイルをフルパスでインポートする方法", "out_en": "How to import a file by its full path using C api?"}
{"in": "def file_len(fname):<nl><tab>with open(fname) as f:<nl><tab><tab>for line in f:<nl><tab><tab><tab>if line.strip() == \"{A   B}\":<nl><tab><tab><tab><tab>break<nl><tab><tab>return sum(1 for line in f)", "out": "特定の行の後の行数をカウントする方法", "out_en": "How to count number of lines after a certain line"}
{"in": "new_line = (T1.get(\"1.0\",'end-1c'))", "out": "get()はPythonで2つの引数を取る", "out_en": ".get() taking two arguments in python"}
{"in": "my_var = (#some_variable +<nl><tab><tab> some_other_var)", "out": "インラインコメントを作成するにはどうすればいいですか(バックスラッシュを使用しないで別の行に続けます)?", "out_en": "How can I create inline comments (without using backslash to continue on another line)?"}
{"in": "request.FILES", "out": "アップロードされたファイルをキーを渡さずに解析しています", "out_en": "Parsing uploaded files without passing key"}
{"in": "import os<nl>def get_immediate_subdirectories(a_dir):<nl><tab>return [name for name in os.listdir(a_dir)<nl><tab><tab><tab>if os.path.isdir(os.path.join(a_dir, name))]", "out": "Pythonの直接のサブディレクトリをすべて取得する", "out_en": "get all of the immediate subdirectories in python"}
{"in": "from collections import Counter<nl><nl>def selectUnique(x):<nl><tab>count = Counter((i[1], i[2]) for i in x)<nl><tab>out = [i for i in x if count[(i[1], i[2])] == 1]<nl><tab>return out", "out": "特定のインデックスの値に基づいて、タプルのリストから重複を削除します。", "out_en": "Remove duplicates from list of tuples based on value at certain index"}
{"in": "import networkx as nx<nl><nl>G = nx.DiGraph()<nl>G.add_nodes_from([\"Start\", \"a\", \"b\", \"c\", \"End\"])<nl>G.add_edges_from([(\"Start\", \"a\"), (\"Start\", \"c\"), (\"a\", \"b\"), (\"b\", \"a\"), (\"c\", \"End\")])<nl><nl>total_num_nodes = G.number_of_nodes()<nl><nl>if len(nx.shortest_path(G, source=\"Start\")) < total_num_nodes:<nl><tab>print \"<nl>This FSM has inaccessible states\"<nl>else:<nl><tab>print \"<nl>All nodes reachable from 'Start'\"<nl><nl>H = G.reverse()<nl>if len(nx.shortest_path(H, source=\"End\")) < total_num_nodes:<nl><tab>print \"<nl>This FSM has dead-end states\"<nl>else:<nl><tab>print \"<nl>All nodes have a path to reach the 'End' state\"", "out": "「開始」状態から「終了」状態へのFSM内の各状態の到達可能性を検証する", "out_en": "Validate reachability of each state in a FSM from a 'start' state and to an 'end' state"}
{"in": "browser.profile.path", "out": "selenium webdriverオブジェクトに指定されたフォルダの名前を確認する方法", "out_en": "How to find the name of the folder given to selenium webdriver object?"}
{"in": "def create_table():<nl><tab>curname = None<nl><tab>for amount in xrange(2500):<nl><tab><tab>name = best(amount)<nl><tab><tab>if name != curname:<nl><tab><tab><tab>if curname is not None:<nl><tab><tab><tab><tab>print \"%d-%d %s\" % (minamt, amount-1, curname)<nl><tab><tab><tab>curname = name<nl><tab><tab><tab>minamt = amount<nl><tab>print \"%d-%d %s\" % (minamt, amount-1, curname)", "out": "関数の戻り値からテーブルを作成する", "out_en": "Create a table from a function's return values"}
{"in": "response = urllib2.urlopen(url)<nl>CHUNK = 16 * 1024<nl>with open(file, 'wb') as f:<nl>   while True:<nl><tab>  chunk = response.read(CHUNK)<nl><tab>  if not chunk: break<nl><tab>  f.write(chunk)", "out": "urllib2を使用して大きなバイナリファイルをファイルにストリーミングする", "out_en": "Stream large binary files with urllib2 to file"}
{"in": "yield context.transaction(lambda: increment_counter(acc.key(), 5))", "out": "Datastore Plus(NDB)でのトランザクションへの引数の提供", "out_en": "Providing arguments to transactions in Datastore Plus (NDB)"}
{"in": "path = 'C:\\Users\\Kenny\\Desktop\\TTUM'<nl>listing = os.listdir(path)<nl><nl>for infile in listing:<nl><tab>dir_item_path = os.path.join(path, infile)<nl><tab>fh = open(dir_item_path,'r')<nl><tab>Fname = infile <nl><tab>Lname = Fname.split('.')[0]<nl><tab>name = Lname + \".csv\"<nl><tab>process_file = open(name,\"wb\")<nl><tab>newfile = csv.writer(process_file)<nl><tab>for line in fh.readlines():<nl><tab><tab> space_remove = re.sub(r\"\\s+\",\",\",line.rstrip())<nl><tab><tab> split_Line = space_remove.split(\" \")<nl><tab><tab> newfile.writerow(split_Line)<nl><tab>process_file.close()", "out": "Pythonでディレクトリからファイルを読み込む", "out_en": "Reading file from a directory in Python"}
{"in": "Input.readLines()", "out": "ソケット転送時のデータミス", "out_en": "Data miss in socket transfer"}
{"in": "#updated<nl>L = []<nl>for index, line in enumerate(open('data.txt')):<nl><tab>if index <= 4: #skip first 5 lines<nl><tab><tab>continue<nl><tab>else:<nl><tab><tab> L.append(line.split()[2]) #split on whitespace and append value from third columns to list.<nl>print(L)<nl>#[6.0, 5.0, 7.0]", "out": "テキストファイル内の特定の行および列のデータの読み取り", "out_en": "Reading a specific row & columns of data in a text file"}
{"in": "from datetime import timedelta<nl>from time import sleep<nl><nl>while True:<nl><tab>try:<nl><tab><tab>hours, minutes, seconds = input('Enter hours, minutes, seconds (with a comma in between): ')<nl><tab>except (ValueError, TypeError):<tab># other errors<nl><tab><tab>print(\"Error 1, please ...\")<nl><tab><tab>continue<nl><tab>except NameError:<nl><tab><tab>print(\"Error 2\")<nl><tab><tab>continue<nl><tab>else:<nl><tab><tab>print(\"All good\")<nl><tab><tab>break<nl><nl>total = timedelta(hours=hours, minutes=minutes, seconds=seconds)<nl>for passed_seconds in range(int(total.total_seconds())):<nl><tab>print total - timedelta(seconds=passed_seconds)<nl><tab>sleep(1)", "out": "Pythonのカウントダウンプログラムの問題", "out_en": "Trouble with a Python Countdown Program"}
{"in": "axes.set_autoscale_on(True)<nl>axes.autoscale_view(True,True,True)<nl>axes.set_ylim(0, 11) # 11 -> max(yvalues) + 1", "out": "matplotlibのマージンを使用した自動尺度", "out_en": "Autoscale with margin in matplotlib"}
{"in": "result = default.copy()<nl>result.update((k, v) for k, v in user.iteritems() if v is not None)", "out": "Python dictからNone値を削除する", "out_en": "Delete None values from Python dict"}
{"in": "import nose2<nl><nl>test_run = nose2.discover(argv = ['-s', 'path-to-tests'], exit = False)<nl>if test_run.result.wasSuccessful():<nl><tab>do_something()<nl>else:<nl><tab>do_something_else()", "out": "ノーズ2の試運転結果はどうやって確認するのですか?", "out_en": "How to check test run results in nose2?"}
{"in": "import foo<nl>foo.arbit = 'new value'", "out": "Python別のモジュールでのモジュール変数の変更", "out_en": "Python Changing module variables in another module"}
{"in": "import re<nl><nl>mult = {'h': 60*60, 'mn': 60}<nl>res = sum(int(num) * mult.get(val, 1) for num, val in re.findall('(\\d+)(\\w+)', '1h 34mn 2s'))<nl># 5642", "out": "PythonでH mn s形式の時刻から値を抽出する", "out_en": "Extract values from H mn s format time in python"}
{"in": "from os import listdir<nl>from os.path import isfile, join<nl>subString = \"xyz\"<nl>mypath = \"/tmp\"<nl>onlyGoodfiles = [f for f in listdir(mypath) if isfile(join(mypath, f)) and subString in f]", "out": "ディレクトリ内で名前の一部として特定の文字列を含むファイルを検索する", "out_en": "Finding a file with a particular string as part of its name in a directory"}
{"in": "controllers.py", "out": "フラスコとAngular Webアプリケーションのルーティング", "out_en": "Flask and Angular Web Application Routing"}
{"in": "context = {'lang': 'fr_FR'}<nl>id_report = printsock.report(dbname, uid, pwd, model, ids, {'model': model, 'report_type':'webkit', 'id':id_of_report, 'webkit_header':[id_of_webkit_header,\"name_of_webkit_header\"], 'report_name':'webkit.account.invoice', 'lang':'fr_FR','tz':'Europe/Paris'}, context)", "out": "Odoo 7 Webkit請求書のレポート印刷", "out_en": "Odoo 7 Webkit Report printing for Invoice"}
{"in": "list(set(list1)-set(list2))", "out": "他のリストに基づいてPythonでリストから項目を削除する方法", "out_en": "How to remove the items from list in python based on other list"}
{"in": "nsmap = {'xmlns': 'urn:tva:metadata:2010'}<nl><nl>for info in root.xpath('//xmlns:ProgramInformation', namespaces=nsmap):<nl><tab>print info.get('programId') # retrieve crid<nl><tab>print info.find('.//xmlns:Title', namespaces=nsmap).text # retrieve title<nl><tab>print info.find('.//xmlns:Genre/xmlns:Name', namespaces=nsmap).text # retrieve genre", "out": "特定のXMLの例でXPATHを理解するためのヘルプが必要", "out_en": "Need help understanding XPATH in a specific XML example"}
{"in": "ax1[:set_yticks]([0.2,0.4,0.6,0.8,1.0])<nl>ax1[:set_yticklabels]([\"-40dB\",\"-30dB\",\"-20dB\",\"-10dB\",\"0dB\"])", "out": "Julia PyPlotの極座標プロットで半径ティックを変更する方法", "out_en": "How to change radial ticks in julia PyPlot polar plot?"}
{"in": "def object_to_dict(obj, found=None):<nl><tab>if found is None:<nl><tab><tab>found = set()<nl><tab>mapper = class_mapper(obj.__class__)<nl><tab>columns = [column.key for column in mapper.columns]<nl><tab>get_key_value = lambda c: (c, getattr(obj, c).isoformat()) if isinstance(getattr(obj, c), datetime) else (c, getattr(obj, c))<nl><tab>out = dict(map(get_key_value, columns))<nl><tab>for name, relation in mapper.relationships.items():<nl><tab><tab>if relation not in found:<nl><tab><tab><tab>found.add(relation)<nl><tab><tab><tab>related_obj = getattr(obj, name)<nl><tab><tab><tab>if related_obj is not None:<nl><tab><tab><tab><tab>if relation.uselist:<nl><tab><tab><tab><tab><tab>out[name] = [object_to_dict(child, found) for child in related_obj]<nl><tab><tab><tab><tab>else:<nl><tab><tab><tab><tab><tab>out[name] = object_to_dict(related_obj, found)<nl><tab>return out", "out": "SqlAlchemy ormの結果をdictに変換", "out_en": "Convert SqlAlchemy orm result to dict"}
{"in": "nan_mask = np.isnan(matrix)<nl>matrix[nan_mask] = np.random.randint(0, 2, size=np.count_nonzero(nan_mask))", "out": "numpy配列での欠落した値のランダムな置換", "out_en": "Replacing missing values with random in a numpy array"}
{"in": "def func(rawData):<nl><tab>sum = 0<nl><tab>for i in rawData[::-1]:<nl><tab><tab>sum += i<nl><tab><tab>sum <<= 8<nl><nl><tab>sum >>= 8<nl><tab>return sum", "out": "python3で可変長バイト(8未満)をlong long intに高速に変換するにはどうすればよいですか?", "out_en": "How to turn variable length bytes(less than 8) to long long int faster in python3?"}
{"in": "button = tkinter.Button(row6, text = 'Send', height = 2, width = 20, relief = 'raised', cursor = 'hand1', font = ('times', 14, 'bold'))", "out": "Tkinterで要素の正確な高さを設定する方法", "out_en": "how to set the exact height of an element in Tkinter?"}
{"in": "polls_list = Event.objects.filter(inserttime__gt=timezone.now()).order_by('-inserttime')", "out": "ビュー内のモデルからレコードをフィルタする方法", "out_en": "How to filter records from a model within view?"}
{"in": "Item.query.join(Item.users).filter(User.name == 'bob')<nl>Item.query.join(Item.users).filter(User.name == 'bob', Item.name == 'shark')", "out": "フラスコ・sqlalchemyの制約に基づいて多対多のクエリーを実行する方法は?", "out_en": "How to query many-to-many based on some constraints in flask sqlalchemy?"}
{"in": "def sortedfilter(in_fname, filter_fname, out_fname):<nl><tab>with open(in_fname) as inf, open(filter_fname) as fil, open(out_fname, 'w') as outf:<nl><tab><tab>ins = inf.next()<nl><tab><tab>try:<nl><tab><tab><tab>for fs in fil:<nl><tab><tab><tab><tab>while ins < fs:<nl><tab><tab><tab><tab><tab>outf.write(ins)<nl><tab><tab><tab><tab><tab>ins = inf.next()<nl><tab><tab><tab><tab>while ins == fs:<nl><tab><tab><tab><tab><tab>ins = inf.next()<nl><tab><tab>except StopIteration:<nl><tab><tab><tab># reached end of inf before end of fil<nl><tab><tab><tab>pass<nl><tab><tab>else:<nl><tab><tab><tab># reached end of fil first, pass rest of inf through<nl><tab><tab><tab>file_output.writelines(file_input.readlines())", "out": "Pythonでの大きなファイルの重複の削除の最適化", "out_en": "Optimizing removing duplicates in large files in Python"}
{"in": "plot = ggplot.ggplot(new_df, ggplot.aes(x='weekday', y='ENTRIESn_hourly')) +\\<nl>ggplot.geom_bar(stat='identity') +\\<nl>ggplot.ggtitle('NYC Subway ridership by day of week') +\\<nl>ggplot.xlab('Week day (0=Sunday)') +\\<nl>ggplot.ylab('Entries')", "out": "パンダを操作する方法DataFrameを使用してggplotヒストグラムをプロットする", "out_en": "How to manipulate pandas DataFrame to plot ggplot histogram"}
{"in": "import numpy as np<nl>import scipy as sp<nl>from scipy.interpolate import interp1d<nl><nl>x1 = sorted([1., 0.88, 0.67, 0.50, 0.35, 0.27, 0.18, 0.11, 0.08, 0.04, 0.04, 0.02])<nl>y1 = [0., 13.99, 27.99, 41.98, 55.98, 69.97, 83.97, 97.97, 111.96, 125.96, 139.95, 153.95]<nl><nl>new_length = 25<nl>new_x = np.linspace(x.min(), x.max(), new_length)<nl>new_y = sp.interpolate.interp1d(x, y, kind='cubic')(new_x)", "out": "Pythonを使用したスプライン補間", "out_en": "Spline Interpolation with Python"}
{"in": "def data():<nl>   name = input(\"Please enter the customer's name.\")<nl>   temp_phone = int(input(\"Please enter the customer's Phone Number.\"))<nl>   while len.str(temp_phone) != 11:<nl><tab><tab>temp_phone = int(input(\"Please enter the customer's Phone Number.\"))<nl>   phone = temp_phone<nl>   temp_groupno = int(input(\"Please enter the number of diners in the group (maximum 20 diners)\"))<nl>   while  not (1 <= groupno <=20):<nl><tab><tab>temp_groupno = int(input(\"Please enter the number of diners in the group (maximum 20)\"))<nl>   group = temp_groupno<nl><nl>   temp_score = int(input(\"Please enter the rating of the meal (between 1 and 10)\"))<nl>   while not (1 <= temp_score <= 3):<nl><tab><tab>temp_score = int(input(\"Please enter the rating of the meal - between 1 & 10.\"))<nl>   score = temp_score<nl>   return {'name': name, 'phone': phone, 'group': group, 'score': score}<nl><nl>customers = []<nl>customers.append(data())<nl>customers.append(data())<nl>print(customers)", "out": "TypeError:data()に必要な4つの位置引数がありません:'n'、'p'、'gn'、および's'", "out_en": "TypeError: data() missing 4 required positional arguments: 'n', 'p', 'gn', and 's'"}
{"in": "#!/usr/bin/env python<nl><nl>import sys<nl>import dbus<nl>from PyQt4.QtGui import QApplication<nl>from dbus.mainloop.qt import DBusQtMainLoop<nl><nl>class DBus_Answer():<nl><tab>def __init__(self, text):<nl><tab><tab>self.answer = text<nl><tab><tab>bus_loop = DBusQtMainLoop(set_as_default=True)<nl><tab><tab>self.bus = dbus.SessionBus()<nl><tab><tab>self.bus.add_signal_receiver(self.my_func,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> dbus_interface=\"im.pidgin.purple.PurpleInterface\",<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> signal_name=\"ReceivedImMsg\")<nl><nl><tab>def my_func(self, account, sender, message, conversation, flags):<nl><tab><tab>obj = self.bus.get_object(\"im.pidgin.purple.PurpleService\", \"/im/pidgin/purple/PurpleObject\")<nl><tab><tab>purple = dbus.Interface(obj, \"im.pidgin.purple.PurpleInterface\")<nl><tab><tab>purple.PurpleConvImSend(purple.PurpleConvIm(conversation), self.answer)<nl><nl>app = QApplication(sys.argv)<nl>run = DBus_Answer(\"Slam\")<nl>app.exec_()", "out": "PythonプログラムでDBusを使用する", "out_en": "Using DBus in python program"}
{"in": "driver.find_element_by_id(\"txtfld\").get_attribute(\"value\")", "out": "textfileldのパイソンセレン保存価値", "out_en": "python selenium save value of textfileld"}
{"in": "import re<nl>import locale<nl><nl># Remove anything not a digit, comma or period<nl>no_cruft = re.sub(r'[^\\d,.-]', '', st)<nl><nl># Split the result into parts consisting purely of digits<nl>parts = re.split(r'[,.]', no_cruft)<nl><nl># ...and sew them back together<nl>if len(parts) == 1:<nl><tab># No delimeters found<nl><tab>float_str = parts[0]<nl>elif len(parts[-1]) != 2:<nl><tab># >= 1 delimeters found. If the length of last part is not equal to 2, assume it is not a decimal part<nl><tab>float_str = ''.join(parts)<nl>else:<nl><tab>float_str = '%s%s%s' % (''.join(parts[0:-1]),<nl><tab><tab><tab><tab><tab><tab><tab>locale.localeconv()['decimal_point'],<nl><tab><tab><tab><tab><tab><tab><tab>parts[-1])<nl><nl># Convert to float<nl>my_float = float(float_str)", "out": "異なるセパレータを使用して文字列を解析して浮動小数点数にする", "out_en": "Parse a string to floats with different separators"}
{"in": "import asizeof<nl><nl>N = 1000000<nl>print asizeof.asizeof(range(N)) / N<nl># -> 20 (python 2.5, WinXP, 32-bit Linux)<nl># -> 33 (64-bit Linux)", "out": "Pythonのリスト(タプル)には、要素ごとに何バイトありますか?", "out_en": "How many bytes per element are there in a Python list (tuple)?"}
{"in": "for row in reader:<nl><tab>print(\"Time Stamp: %s - Temperature ?C: %.2f - Humidity: %%: %.2f\" % (row[0], float(row[1]), float(row[2])))", "out": "Pythonでは数値を切り捨てることができません", "out_en": "Can't truncate a number with Python"}
{"in": "-lpython24", "out": "C++でのSWIGの使用", "out_en": "using SWIG with C++"}
{"in": "with open(\"filename\", \"rtU\") as f:<nl><tab>columns = f.readline().strip().split(\" \")<nl><tab>numRows = 0<nl><tab>sums = [0] * len(columns)<nl><nl><tab>for line in f:<nl><tab><tab># Skip empty lines<nl><tab><tab>if not line.strip():<nl><tab><tab><tab>continue<nl><nl><tab><tab>values = line.split(\" \")<nl><tab><tab>for i in xrange(len(values)):<nl><tab><tab><tab>sums[i] += int(values[i])<nl><tab><tab>numRows += 1<nl><nl><tab>for index, summedRowValue in enumerate(sums):<nl><tab><tab>print columns[index], 1.0 * summedRowValue / numRows", "out": "Pythonを使用してファイル内の複数の列の平均を求める方法", "out_en": "How to find the average of multiple columns in a file using python"}
{"in": "savetxt(fname='newPicksData.txt', X=new_picks.astype(int), fmt ='%.0f<nl>')", "out": "整数のみのnumpy 2D配列をtxtファイルに書き込む方法", "out_en": "How to write a only integers numpy 2D array on a txt file"}
{"in": "import clr<nl>clr.AddReference('ClassLibrary1')<nl>from ClassLibrary1 import MmsValue<nl>from System import UInt32<tab><nl><nl>uint32_mmsValue = MmsValue.__new__.Overloads[UInt32](MmsValue, 1)", "out": "IronPythonから符号なし整数引数を持つ.NETメソッドを呼び出す方法", "out_en": "How to invoke a .Net method with unsigned integer argument from IronPython"}
{"in": "import tarfile, io<nl>byte_array = client.read_bytes()<nl>file_like_object = io.BytesIO(byte_array)<nl>tar = tarfile.open(fileobj=file_like_object)<nl># use \"tar\" as a regular TarFile object<nl>for member in tar.getmembers():<nl><tab>f = tar.extractfile(member)<nl><tab>print(f)", "out": "Python 3でバイトバッファからメモリ内にTarFileオブジェクトを構築する方法は?", "out_en": "How to construct a TarFile object in memory from byte buffer in Python 3?"}
{"in": "sys.path.insert(0, '/usr/local/lib')<nl>sys.path.insert(0, os.path.expanduser('~/lib'))", "out": "Pypyにサードパーティ製モジュールを認識させる", "out_en": "Getting Pypy to recognize third party modules"}
{"in": "s = ','.join(info)<nl>f.write(s + '<nl>')", "out": "Pythonがリストフォーマットでファイルに書き出す", "out_en": "Python write to file in list format"}
{"in": "try:<nl><tab>open(filename, 'w').close()<nl><tab>os.unlink(filePath)<nl><tab>print('Filename is valid.')<nl>except OSError:<nl><tab>print('Filename is not valid.')", "out": "ファイル名が有効かどうかをチェックします", "out_en": "Check if a filename is valid"}
{"in": "#!/usr/bin/python<nl>import os.path<nl>path = '/dir1/dir2/dir3/file.exe'<nl>name = os.path.basename(path)<nl>print name", "out": "文字列を逆方向に読み込み、最初に'/'で終了する", "out_en": "read string backwards and terminate at first '/'"}
{"in": "def findColor():<nl><tab>pic=takePicture()<nl><tab>for pix in getPixels(pic):<nl><tab><tab>r = getRed(pix)<nl><tab><tab>g = getGreen(pix)<nl><tab><tab>b = getBlue(pix)<nl><tab><tab>print(r,g,b)", "out": "RGB値の検索", "out_en": "Finding RGB values"}
{"in": "class RecordProcessor(object):<nl><tab>def __init__(self, recs):<nl><tab><tab>self.recs = recs<nl><tab><tab>self.processed_rec_count = 0<nl><tab>def __call__(self):<nl><tab><tab>for r in self.recs:<nl><tab><tab><tab>if r.sender('sender_of_interest'):<nl><tab><tab><tab>   self.processed_rec_count += 1<nl><tab><tab><tab>   # process record r...<nl><tab><tab><tab>   yield r  # processed record<nl><nl>def process_all_records(files):<nl><tab>for f in files:<nl><tab><tab>fd = open(f,'r')<nl><tab><tab>recs_p = RecordProcessor(read_records(fd))<nl><tab><tab>write_records(recs_p)<nl><tab><tab>print 'records processed:', recs_p.processed_rec_count", "out": "ジェネレータで処理する要素数の追跡", "out_en": "Tracking how many elements we process in generator"}
{"in": "x = 0<nl>while x < len(days):<nl><tab>print (\"{0:20} \\t {1:20}\".format(days[x], str(gals[x])))<nl><tab>x += 1", "out": "SyntaxError:初心者には無効な構文です", "out_en": "SyntaxError: invalid syntax for a beginner"}
{"in": "import requests<nl>username = \"SomeUser\"<nl>password = \"SomePass\"<nl>r = requests.get(\"https://a.b.c:7895/resource/path?param1=foo\",auth=(username,password),verify=False)", "out": "python3を使用してSSL経由でBasicAuth RESTクエリーを作成する方法", "out_en": "How do I make a BasicAuth REST query over SSL with python3"}
{"in": "your_list = [[int(j) for j in i.split()] for i in ' '.join(data).split('<>')]", "out": "リストをPythonのリストに分割する", "out_en": "breaking a list in to lists in python?"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl>import matplotlib.animation as animation<nl><nl>x = np.linspace(0,2*np.pi,100)<nl><nl>fig = plt.figure()  <nl>sub = fig.add_subplot(111, xlim=(x[0], x[-1]), ylim=(-1, 1))<nl>PLOT, = sub.plot([],[])<nl><nl>def animate(i):<nl><tab>PLOT.set_data(x[:i], np.sin(x[:i]))<nl><tab># print(\"test\")<nl><tab>return PLOT,<nl><nl>ani = animation.FuncAnimation(fig, animate, frames=len(x), interval=10, blit=True)<nl>plt.show()", "out": "Python Matplotlib FuncAnimationは1フレームだけを描画します", "out_en": "Python Matplotlib FuncAnimation only draws one frame"}
{"in": "import urllib<nl>import urllib2<nl>import simplejson<nl><nl>url = 'http://en.wikipedia.org/w/api.php'<nl>values = {'action' : 'query',<nl><tab><tab>  'prop' : 'revisions',<nl><tab><tab>  'titles' : 'Jennifer_Aniston',<nl><tab><tab>  'rvprop' : 'content',<nl><tab><tab>  'format' : 'json'}<nl><nl>data = urllib.urlencode(values)<nl>req = urllib2.Request(url, data)<nl>response = urllib2.urlopen(req)<nl>json = response.read()", "out": "ウィキペディアのデータページを検索する", "out_en": "Query Wikipedia data page"}
{"in": "MyButton1 = Button(master, text=\"BUTTON1\", width=10, command=callback)<nl>MyButton1.grid(row=0, column=0)<nl><nl>MyButton2 = Button(master, text=\"BUTTON2\", width=10, command=callback)<nl>MyButton2.grid(row=1, column=0)<nl><nl>MyButton3 = Button(master, text=\"BUTTON3\", width=10, command=callback)<nl>MyButton3.grid(row=2, column=0)", "out": "Pythonでボタンの位置を設定する", "out_en": "Setting the position on a button in Python?"}
{"in": "import locale<nl>import sys<nl><nl>def my_views(request):<nl><tab># before <nl><tab>reload(sys)<nl><tab>sys.setdefaultencoding(\"utf-8\")", "out": "Django:save()でUnicodeEncodeErrorなしでファイルをアップロードする方法は?", "out_en": "Django: How to upload file without UnicodeEncodeError on save()?"}
{"in": "keyPass = input(\"Create Admin Password > \")<nl><nl>with open(pathName, 'w') as db_file:<nl><tab>db_file.write(json.dumps({\"Admin\": keyPass}))<nl><nl>with open(pathName, 'w') as db_file:<nl><tab>json.dump({\"Admin\": keyPass}, db_file)", "out": "PythonでのJsonファイル処理:入力をファイルに書き込む", "out_en": "Json File Handling in Python: Writing input to file"}
{"in": "import Skype4Py<nl>import time<nl>from pytify import Spotify<nl><nl># Create Skype object<nl>skype = Skype4Py.Skype()<nl>skype.Attach()<nl><nl># Create Spotify object<nl>spotify = Spotify()<nl>spotifyPlaying = spotify.isPlaying()<nl><nl># Create handler for when Skype call status changes<nl>def on_call_status(call, status):<nl>  if status == Skype4Py.clsInProgress:<nl><tab># Save current spotify state<nl><tab>global spotifyPlaying<nl><tab>spotifyPlaying = spotify.isPlaying()<nl><nl><tab>if spotify.isPlaying():<nl><tab>  print \"Call started, pausing spotify\"<nl><tab>  # Call started, pause Spotify<nl><tab>  spotify.stop()<nl><nl>  elif status == Skype4Py.clsFinished:<nl><tab># Call finished, resume Spotify if it was playing<nl><tab>if spotifyPlaying and not spotify.isPlaying():<nl><tab>  print \"Call finished, resuming spotify\"<nl><tab>  spotify.playpause()  <nl><nl>skype.OnCallStatus = on_call_status<nl><nl>while True:<nl>  time.sleep(10)", "out": "Skypeで電話がかかってきたときにSpotifyを停止する方法", "out_en": "How to programatically pause spotify when a call comes in on skype"}
{"in": "import transaction<nl><nl>def redirect_to_trial(trans, obj=None, parent=None):<nl><tab>if obj.id not in parent:<nl><tab><tab>request = getattr(obj, 'REQUEST', None)<nl><tab><tab>if request:<nl><tab><tab><tab>trial_url = obj.__parent__.__parent__.absolute_url()<nl><tab><tab><tab>request.response.redirect(trial_url)<nl><nl>@grok.subscribe(ISite, IObjectRemovedEvent)<nl>def on_site_delete(obj, event):<nl><tab>kwargs = dict(<nl><tab><tab>obj = obj,<nl><tab><tab>parent = event.oldParent,<nl><tab>)<nl><tab>transaction.get().addAfterCommitHook(redirect_to_trial, kws=kwargs)", "out": "Plone:オブジェクトの削除に対する反応", "out_en": "Plone: reacting to object removal"}
{"in": "R = numpy.arctan2(A[...,1],A[...,0])", "out": "最後の軸のみをインデックスして操作します", "out_en": "Operation by indexing only last axis"}
{"in": "h = int(raw_input(\"Please enter the height of the triangle: \"))<nl>for i in mytri(h):<nl><tab>print \" \" * (h * 2), i<nl><tab>h -= 1", "out": "フォーマットのパスカルの三角形", "out_en": "Formatting Pascal's triangle"}
{"in": "class Hello(object):<nl><tab>def __init__(self):<nl><tab><tab>self.x = None<nl><tab><tab>self.y = None<nl><tab><tab>self.z = None<nl><tab>def is_all_set(self):<nl><tab><tab>return all(getattr(self, attr) is not None for attr in self.__dict__)", "out": "Pythonでインスタンスの値をチェックする方法", "out_en": "How to check the values in a instance with Python?"}
{"in": "import pandas as pd<nl>import matplotlib.pyplot as plt<nl><nl>df = pd.DataFrame({'color': ['blue','blue','yellow','blue','yellow'], 'area': [2,2,3,4,4]})<nl>fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2,2)<nl>#Hide upper left corner plot and create two new subplots<nl>ax1.axis('off')<nl>ax = fig.add_subplot(2,4,1)<nl>ax0 = fig.add_subplot(2,4,2)<nl>#Plot<nl>ax3.plot([[2,2], [3,6]])<nl>ax4.plot([[3,6], [2,2]])<nl>df.area.hist(by=df.color, ax=(ax,ax0)) #Pass both new subplots", "out": "パンダのDataFrame.hist(by=)を使用して特定の軸にプロットする方法", "out_en": "How to plot in a specific axis with DataFrame.hist(by=) in pandas"}
{"in": "def int_to_rgb(n):<nl><tab>b = (n & 0xff0000) >> 16<nl><tab>g = (n & 0x00ff00) >> 8<nl><tab>r = (n & 0x0000ff)<nl><tab>return (r, g, b)", "out": "整数からバイトへの変換", "out_en": "Integer to byte conversion"}
{"in": "areas = array([[1, 1, 2, 2],\\<nl><tab><tab>[0, 1, 0, 1],\\<nl><tab><tab>[3, 0, 1, 4],\\<nl><tab><tab>[0, 3, 1, 1]])<nl><nl>def is_in_area(x,y, area_num):<nl><tab>return areas[round(x), round(y)] == area_num", "out": "2D numpy配列の矩形でない領域内にポイントがあるかどうかを検出する方法", "out_en": "how to detect if a point lies in a non-rectangular region in a 2D numpy array?"}
{"in": "import urllib.request<nl>external_ip = urllib.request.urlopen('http://ifconfig.me/ip').read()", "out": "Python SocketServer-独自のIPを取得", "out_en": "Python SocketServer - Get own IP"}
{"in": "word = u'F??NF'", "out": "Pythonでの?の操作", "out_en": "working with ? in python"}
{"in": "def tup321(tup):<nl><tab>return (tup[0] + 3, tup[1] * 2, tup[2] / 2)", "out": "任意の長さのタプルに異なる式を適用する関数を作成する方法", "out_en": "How to make a function that applies different formulas to any length of tuple?"}
{"in": "b =['52.5%', '62.4%', '91.8%', '21.5%']<nl>b.sort(key = lambda a: float(a[:-1]))", "out": "パーセンテージのリストを並べ替える", "out_en": "sort a list of percentages"}
{"in": "import git<nl>repo = git.Repo(\"path/of/repo/\")<nl><nl># the below gives us all commits<nl>repo.commits()<nl><nl># take the first and last commit<nl><nl>a_commit = repo.commits()[0]<nl>b_commit = repo.commits()[1]<nl><nl># now get the diff<nl>repo.diff(a_commit,b_commit)", "out": "gitpythonを使用して、現在のコミットと最後のコミットのgit diffを行う方法", "out_en": "how to do a git diff of current commit with last commit using gitpython?"}
{"in": "output = StringIO.StringIO()<nl>base.save(output, format='PNG')<nl>return [output.getvalue()]", "out": "WSGIアプリケーションからメモリー内のPILイメージを戻す方法", "out_en": "How to return in-memory PIL image from WSGI application"}
{"in": "self.prog.setCancelButton(None)", "out": "PyQt4 ProgressダイアログからCancelボタンを削除", "out_en": "Remove Cancel button from PyQt4 Progress Dialog"}
{"in": "vsprintf('The first 4 letters of the english alphabet are: %s, %s, %s and %s', ['a', 'b', 'c', 'd']);", "out": "javascriptでのPython文字列のフォーマット", "out_en": "python string formatting in javascript"}
{"in": "[point_geom.x, point_geom.y]", "out": "ポイントジオメトリをリストに変換", "out_en": "Convert Point Geometry to list"}
{"in": "raise cherrypy.HTTPRedirect(\"http://www.yahoo.com\")", "out": "turbogears/cherrypyアプリケーションから外部URLをブラウズする方法", "out_en": "how to browse to a external url from turbogears/cherrypy application?"}
{"in": "for kitten in kittens:<nl><tab>then = kitten.date<nl><tab>now = datetime.datetime.now()<nl><tab>tdelta = now - then<nl><nl>if tdelta.total_seconds() > 300:<nl><tab>kitten.delete()", "out": "Googleデータストアの日時をPythonの日時と比較する方法は?", "out_en": "How to compare a google datastore datetime to python datetime?"}
{"in": "import subprocess<nl><nl>s = \"\"\"/usr/local/sbin/kamctl fifo profile_get_size myprofile | awk -F ':: ' '{print $2}'\"\"\"<nl><nl>p = subprocess.Popen(s, shell=True, stdout=subprocess.PIPE)<nl><nl>out, err = p.communicate()<nl><nl>print 'out: %r' % out<nl>print 'err: %r' % err<nl>print 'status: %r' % p.returncode", "out": "Pythonスクリプトを使用したcmdlineからの出力の処理", "out_en": "Processing output from cmdline via a Python script"}
{"in": "[artist for artist in myJson['Artists'] if artist['profile']['age'] == 7]", "out": "Pythonで以下のjson dictを効率的に検索し、listや他のdictに格納するにはどうすればよいでしょうか?", "out_en": "How to efficiently search in the following json dict in python and store into list or another dict?"}
{"in": "import matploltib.pyplot as plt<nl>import seaborn<nl><nl>import mylib<nl><nl>a4_dims = (11.7, 8.27)<nl>df = mylib.load_data()<nl>fig, ax = plt.subplots(figsize=a4_dims)<nl>seaborn.voilinplot(ax=ax, data=df, **violin_options)", "out": "seaborn.violin_plotのフィギュアサイズを変更する方法は?", "out_en": "How do I change the figure size for a seaborn.violin_plot?"}
{"in": "a.encrypt(m).encode('hex')", "out": "暗号文を16進文字列として出力するにはどうすればよいですか。", "out_en": "How can you print cipher text as a hex string?"}
{"in": "import sys<nl>import trace<nl><nl># create a Trace object, telling it what to ignore, and whether to<nl># do tracing or line-counting or both.<nl>tracer = trace.Trace(<nl><tab>ignoredirs=[sys.prefix, sys.exec_prefix],<nl><tab>trace=0,<nl><tab>count=1)<nl><nl># run the new command using the given tracer<nl>tracer.run('main()')<nl><nl># make a report, placing output in /tmp<nl>r = tracer.results()<nl>r.write_results(show_missing=True, coverdir=\"/tmp\")", "out": "Pythonでのメソッドロギング", "out_en": "Method logging in Python"}
{"in": "0.22321428571428600000;0.44642857142857100000;0.66964285714285700000;0.89285714285714300000;1.11607142857143000000;1.33928571428571000000;1.56250000000000000000;1.78571428571429000000;2.00892857142857000000;2.23214285714286000000;2.45535714285714000000;2.67857142857143000000;2.90178571428571000000;3.12500000000000000000;3.34821428571428000000;3.57142857142857000000;3.79464285714286000000;4.01785714285714000000;4.24107142857143000000;4.46428571428571000000;4.68750000000000000000;4.91071428571428000000;5.13392857142857000000;5.35714285714286000000;5.58035714285714000000;5.80357142857143000000;6.02678571428571000000;6.25000000000000000000;6.47321428571428000000;6.69642857142857000000;6.91964285714285000000;7.14285714285714000000", "out": "matplotlib x軸のグループ値matplotlib xじくのぐるーぷ", "out_en": "matplotlib grouping values of x axis"}
{"in": "import os<nl>from subprocess import Popen, PIPE<nl><nl>p = Popen(\"some_program.exe\", stdin=PIPE)<nl>p.communicate(os.linesep.join([\"name\", \"age\"]))", "out": "Pythonを介したWindows実行可能ファイルコマンドラインGUIとの通信", "out_en": "Communicating with a windows executables commandline gui via python"}
{"in": "def put(d, keys, item):<nl><tab>if \".\" in keys:<nl><tab><tab>key, rest = keys.split(\".\", 1)<nl><tab><tab>if key not in d:<nl><tab><tab><tab>d[key] = {}<nl><tab><tab>put(d[key], rest, item)<nl><tab>else:<nl><tab><tab>d[keys] = item<nl><nl>def get(d, keys):<nl><tab>if \".\" in keys:<nl><tab><tab>key, rest = keys.split(\".\", 1)<nl><tab><tab>return get(d[key], rest)<nl><tab>else:<nl><tab><tab>return d[keys]", "out": "ドット表記で辞書を確認する", "out_en": "Checking a Dictionary using a dot notation string"}
{"in": "import csv<nl>import sys<nl><nl>writer = csv.csvwriter(sys.stdout)<nl>writer.writerow(iterable_containing_my_strings)", "out": "Pythonで文字列のリストをCSVに変更するにはどうすればいいですか?", "out_en": "How can I change a list of strings into CSV in Python?"}
{"in": "filename = request.GET[ 'yourfilename' ]<nl><nl>from django.core.files.uploadedfile import SimpleUploadedFile<nl>file_contents = SimpleUploadedFile(\"%s\" %(filename), request.raw_post_data)<nl><nl>modelinstance.picture.save(filename, file_contents, True)", "out": "ajaxを介してDjango model ImageFieldにアップロードされたファイルの保存", "out_en": "Saving file uploaded via ajax to Django model ImageField"}
{"in": "def main():<nl><tab># take input from the user<nl><tab>num = float(input(\"Enter a number: \"))<nl><tab>if (num%1 != 0):<nl><tab><tab>print(\"Bad entry, only integers are accepted.\")<nl><tab><tab>return <nl><nl><tab>num = int(num)<nl><tab>factorial = 1<nl><tab>if num > 100:<nl><tab><tab>print(\"Bad entry. It should be an integer less than or equal to 100!\")<nl><tab><tab>print(\"Please try again: \")<nl><tab>elif num == 0:<nl><tab><tab>print(\"The factorial of 0 is 1\")<nl><tab>elif num < 0:<nl><tab><tab>print(\"Bad entry. It should be an integer superior than or equal to 0!\")<nl><tab><tab>print(\"Please try again: \")  <nl><tab>else:<nl><tab><tab>for i in range(1,num + 1):<nl><tab><tab><tab>factorial = factorial*i<nl><tab><tab>print(\"The factorial of\",num,\"is\",factorial)<nl><nl>main()", "out": "Pythonプログラムがクラッシュしないようにする方法", "out_en": "How can i stop my python program from crashing"}
{"in": "from pylab import *<nl><nl>import time<nl><nl>ion()<nl><nl>tstart = time.time()<tab><tab><tab>   # for profiling<nl>x = arange(0,2*pi,0.01)<tab><tab><tab># x-array<nl>line, = plot(x,sin(x))<nl><nl>for i in arange(1,200):<nl><tab>line.set_ydata(sin(x+i/10.0))  # update the data<nl><tab>draw()<tab><tab><tab><tab><tab><tab> # redraw the canvas<nl><nl><nl>print 'FPS:' , 200/(time.time()-tstart)", "out": "Pythonでリアルタイムにプロットを更新する", "out_en": "Updating a plot in python in real time"}
{"in": "args = [id, nya]<nl>Check2('SoapMethodName', *args)", "out": "Pythonで複数の変数をSUDSデータとして渡す方法は?", "out_en": "How to pass multiple variables as SUDS data in python?"}
{"in": "message = sendgrid.Mail()<nl>message.add_filter('templates', 'enable', '1')<nl>message.add_filter('templates', 'template_id', 'TEMPLATE-ALPHA-NUMERIC-ID')", "out": "sendgridテンプレートをPythonアプリと統合する方法は?", "out_en": "How to integrate sendgrid templates with python app?`"}
{"in": "application = tornado.web.Application([<nl><tab>(r'/blah', BlahHandler),<nl><tab>], **settings)<nl><nl># Create an HTTP server listening on localhost, port 8080.<nl>http_server = tornado.httpserver.HTTPServer(application)<nl>http_server.listen(8080, address='127.0.0.1')", "out": "Tornado Webサーバーをローカルで実行するにはどうすればいいですか?", "out_en": "How do you run the Tornado web server locally?"}
{"in": "import xmltodict<nl>import json<nl><nl>json.dumps(xmltodict.parase(txt))", "out": "Pythonを使用してテキスト領域でXmlを構文解析し、jsonを返すにはどうすればよいでしょうか。", "out_en": "How do I parse Xml in a textarea using python and return json?"}
{"in": "import numpy as np<nl><nl>a = np.array([1,2,3])<nl>b = np.array([None, a, a, a])[1:]<nl><nl>print b.dtype, b[0].dtype, b[1].dtype<nl># object int32 int32", "out": "数値配列のNumpyオブジェクト配列", "out_en": "Numpy object array of numerical arrays"}
{"in": "times = ncfile.createDimension('time', len(timerange))", "out": "範囲を指定した寸法の作成", "out_en": "Creating a dimension with a range"}
{"in": "import os<nl><nl>with open('file.txt') as f:<nl><tab>for line in f:<nl><tab><tab>newname, file, checksum = line.split()<nl><tab><tab>if os.path.exists(file):<nl><tab><tab><tab>try:<nl><tab><tab><tab><tab>os.rename(file, os.sep.join([os.path.dirname(file), newname]))<nl><tab><tab><tab>except OSError:<nl><tab><tab><tab><tab>print \"Got a problem with file {}. Failed to rename it to {}.\".format(file, newname)", "out": "フォルダ内のファイルの名前をテキストファイルから変更する", "out_en": "Renaming files in folder from a text file"}
{"in": "def addWordHistory(words):<nl><tab>current = [wordhistory, 0]<nl><tab>for word in words:<nl><tab><tab>if current[0] is None:<nl><tab><tab><tab>current[0] = dict()<nl><tab><tab>children = current[0]<nl><tab><tab>if word in children:<nl><tab><tab><tab>children[word][1] += 1<nl><tab><tab>else:<nl><tab><tab><tab>children[word] = [None, 1]<nl><tab><tab>current = children[word]", "out": "Python:関数でのグローバル変数の参照と逆参照", "out_en": "Python: reference and dereference of global variables in functions"}
{"in": "import os<nl>import time<nl><nl>PING_HOST='10.10.10.10' # some host on the other side of the VPN<nl><nl>while True:<nl><tab>retcode = os.system('ping -c 1 %s' % PING_HOST)<nl><nl><tab>if retcode:  <nl><tab>   # perform action for lost connection<nl><tab>   logging.warn(\"Lost visibility with %s\" % PING_HOST)<nl><nl><tab>time.sleep(10) # sleep 10 seconds", "out": "VPN接続の継続的チェック:Python", "out_en": "Continuous check for VPN Connectivity - Python"}
{"in": "student_queryset = Students.objects.filter(Teacher__TeacherName__contains = 'Sara')", "out": "Python django:別のテーブルの基準に基づいてテーブルをフィルタリングする", "out_en": "Python django: filtering a table based on a criteria on another table"}
{"in": "Components = ['SAVE_DOCUMENT', 'GET_DOCUMENT', 'DVK_SEND', 'DVK_RECEIVE', 'GET_USER_INFO', 'NOTIFICATIONS', 'ERROR_LOG', 'SUMMARY_STATUS']<nl>missed = [x for x in Components if x + \"_STATUS\" not in locals() or x + \"_DESC\" not in locals()]<nl>if missed:<nl><tab>print \"Missing components: {0:}\".format(missed)<nl><tab>sys.exit(StateUnknown)", "out": "変数が存在するかどうかを確認するにはどうすればいいですか。", "out_en": "How can I check to see if a variable exists?"}
{"in": "class YourProtocol(protocol.Protocol):<nl><nl><tab>def connectionMade(self):<nl><tab><tab>self._peer = self.transport.getPeer()<nl><nl><tab>def connectionLost(self):<nl><tab><tab>print 'Lost connection from', self._peer", "out": "ツイストで接続が失われた後にクライアントのIPアドレスを取得する方法", "out_en": "How to get the client IP address after got connection lost in twisted"}
{"in": "def __parse64(self, path_file):<nl><tab>file_data = open(path_file, 'rb').read(-1) <nl><tab>#This slurps the whole file as binary.<nl><tab>self.encoded_string_file = b64.b64encode(file_data)", "out": "Pythonによる'readAsDataURLの実装", "out_en": "python implementation of 'readAsDataURL"}
{"in": "if __name__ == '__main__':<nl><tab>obj = GetOneMachineDataFromDatabase()<nl><nl><tab>make_transient(obj)<nl><tab>obj._oid = None<nl><tab>_session.add(obj)<nl><tab># this include a flush() and create a new primary key<nl><tab>_session.commit()", "out": "make_transient()を使用してSQLAlchemyにマップされたオブジェクトを複製する方法", "out_en": "How to use make_transient() to duplicate an SQLAlchemy mapped object?"}
{"in": "patterns = \"\"\"NP: {<DT|PP\\$>?<JJ>*<NN>}<nl><tab>{<NNP>+}<nl><tab>{<NN>+}<nl>\"\"\"", "out": "NLTKを使用したチャンクによる関係の抽出", "out_en": "Relation extraction via chunking using NLTK"}
{"in": "import numpy as np<nl>from matplotlib.patches import Circle<nl>from matplotlib.collections import PatchCollection<nl>import matplotlib.pyplot as plt<nl>from matplotlib import cm<nl>from matplotlib import animation<nl><nl>fig, ax = plt.subplots()<nl><nl>patches = []<nl># create circles with random sizes and locations<nl>N = 10 # number of circles<nl>x = np.random.rand(N)<nl>y = np.random.rand(N)<nl>radii  = 0.1*np.random.rand(N)<nl>for x1,y1,r in zip(x, y, radii):<nl><tab>circle = Circle((x1,y1), r)<nl><tab>patches.append(circle)<nl><nl># add these circles to a collection<nl>p = PatchCollection(patches, cmap=cm.prism, alpha=0.4)<nl>ax.add_collection(p)<nl><nl>def animate(i):<nl><tab>colors = 100*np.random.rand(len(patches)) # random index to color map<nl><tab>p.set_array(np.array(colors)) # set new color colors<nl><tab>return p,<nl><nl>ani = animation.FuncAnimation(fig, animate, frames=50, interval=50)<nl><nl>plt.show()", "out": "matplotlibでパッチ円のアニメーションの色を効率的に変更する方法", "out_en": "How to efficiently alter the color in an animation of patches circles in matplotlib?"}
{"in": "from math import sin, cos, pi<nl>import matplotlib.pyplot as plt<nl><nl>x,y = [cos((i*pi)/500) for i in range(1000)], [sin((i*pi)/500) for i in range(1000)]<nl>plt.plot(x,y)<nl>plt.show()", "out": "円の作成方法", "out_en": "How to create a circle?"}
{"in": "def getMaxSubArrays(x):<nl><tab>y=x-np.mean(x)<nl><tab>z=y/y.max()<nl><tab>maxSubArrays=[]<nl><tab>subFound=False<nl><tab>begin=0<nl><tab>for i in range(len(z)):<nl><tab><tab>if z[i]>0.75 and subFound==False:<nl><tab><tab><tab>subFound=True<nl><tab><tab><tab>begin=i<nl><tab><tab>elif z[i]<=0.75 and subFound==True:<nl><tab><tab><tab>subFound=False<nl><tab><tab><tab>maxSubArrays.append((begin,i))<nl><tab>for subarray in maxSubArrays:<nl><tab><tab>print \"subarray found: index \",subarray[0],\" to \",subarray[1], x[subarray[0]:subarray[1]]<nl><tab>return maxSubArrays", "out": "グラフで最大間隔を見つける方法", "out_en": "How to find maximum interval in a graph?"}
{"in": "if isinstance(payload, list):<nl><tab>for m in payload:<nl><tab><tab>print str(m).split()<nl><nl>else:<nl><tab>print str(m).split()", "out": "文字列形式の電子メールのペイロード、Python", "out_en": "payload of an email in string format, python"}
{"in": "call([\"command\", \"argument\", raw_input(\"enter file name:  \")])", "out": "関数の引数としてraw_inputを組み込む方法", "out_en": "How do I incorporate a raw_input as an argument in a function"}
{"in": "how_many = len(combobox.cget('values'))", "out": "ttkコンボボックスを使用してforループを作成する方法", "out_en": "How write a for loop with ttk combobox"}
{"in": "import json<nl><nl>input_json = \"\"\"<nl>[<nl><tab>{<nl><tab><tab>\"type\": \"1\",<nl><tab><tab>\"name\": \"name 1\"<nl><tab>},<nl><tab>{<nl><tab><tab>\"type\": \"2\",<nl><tab><tab>\"name\": \"name 2\"<nl><tab>},<nl><tab>{<nl><tab><tab>\"type\": \"1\",<nl><tab><tab>\"name\": \"name 3\"<nl><tab>}<nl>]\"\"\"<nl><nl># Transform json input to python objects<nl>input_dict = json.loads(input_json)<nl><nl># Filter python objects with list comprehensions<nl>output_dict = [x for x in input_dict if x['type'] == '1']<nl><nl># Transform python object back into json<nl>output_json = json.dumps(output_dict)<nl><nl># Show json<nl>print output_json", "out": "Pythonでjson配列をフィルタリングする方法", "out_en": "how to filter json array in python"}
{"in": "from collections import defaultdict<nl>from datetime import datetime, timedelta<nl><nl>week_ago = datetime.now() - timedelta(days=7)<nl><nl>author_recent_ratings = dict(Entry.objects.filter(pub_date__gt=week_ago)<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>  .order_by('pub_date')<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>  .select_related()<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>  .values_list('author', 'rating'))<nl><nl>recent_by_rating = defaultdict(list)<nl>for author, rating in author_recent_ratings.iteritems():<nl><tab>recent_by_rating[rating].append(author)", "out": "Djangoは最新の評価に基づいてすべての著者をリストする", "out_en": "Django list all authors by most recent rating"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>rows, cols = 480, 640<nl>rgb_img = np.zeros((rows, cols, 3), dtype=np.uint8)<nl><nl>rgb_img[:rows//2, :cols//2] = 255<nl><nl>center_slice = rgb_img[1:-1, 1:-1]<nl>left_slice = rgb_img[1:-1, :-2]<nl>right_slice = rgb_img[1:-1, 2:]<nl>up_slice = rgb_img[:-2, 1:-1]<nl>down_slice = rgb_img[2:, 1:-1]<nl><nl>all_equal = (np.all(center_slice == left_slice, axis=-1) &<nl><tab><tab><tab> np.all(center_slice == right_slice, axis=-1) &<nl><tab><tab><tab> np.all(center_slice == up_slice, axis=-1) &<nl><tab><tab><tab> np.all(center_slice == down_slice, axis=-1))<nl><nl>plt.subplot(211)<nl>plt.imshow(rgb_img, interpolation='nearest')<nl>plt.subplot(212)<nl>plt.imshow(all_equal, interpolation='nearest')<nl>plt.show()", "out": "PythonとNumpyを使用して、カスタムneighboutカーネルでRGBイメージをコンボルブする", "out_en": "Convolve an RGB image with a custon neighbout kernel using Python and Numpy"}
{"in": "#!/usr/bin/env python<nl># -*- coding: utf-8 -*-<nl><nl>import odf<nl>from odf.opendocument import OpenDocumentText<nl>from odf.element import Element<nl>from odf.text import P<nl>from odf.math import Math<nl>from namespaces import MATHNS<nl><nl><nl>def main():<nl><tab>doc = OpenDocumentText()<nl><tab>p = P(text=u'text')<nl><tab>df = odf.draw.Frame( zindex=0, anchortype='as-char')<nl><tab>p.addElement(df)<nl><tab>doc.text.addElement(p)<nl><nl><tab>formula =u'c=sqrt(a^2+b^2)'<nl><tab>math = Math()<nl><tab>annot = Element(qname = (MATHNS,u'annotation'))<nl><tab>annot.addText(formula, check_grammar=False)<nl><tab>annot.setAttribute((MATHNS,'encoding'), 'StarMath 5.0', check_grammar=False)<nl><tab>math.addElement(annot)<nl><tab>do = odf.draw.Object()<nl><tab>do.addElement(math)<nl><tab>df.addElement(do)<nl><nl><tab>outputfile = u'result'<nl><tab>doc.save(outputfile, True)<nl><nl>if __name__ == '__main__':<nl><tab>main()", "out": "odfpyを使用してodtドキュメントに数式を追加する方法", "out_en": "How to add math formulas in odt document using odfpy?"}
{"in": "request.responseHeaders.setRawHeaders(<nl><tab>'Content-Disposition', ['attachment; filename=\"foo\"'])", "out": "Twisted HTTP Serverでファイルを強制的にダウンロードする方法", "out_en": "How to Force File Download on Twisted HTTP Server?"}
{"in": "soup = BeautifulSoup(content, 'lxml')", "out": "ウェブサイトでキーワードを検索するために、lxml Parserと組み合わせてBeautiful soupを使用するにはどうすればいいですか?", "out_en": "How can I use Beautiful soup in combination with lxml Parser to find a keyword in a website?"}
{"in": "S = [1,2,3,4,5,6]<nl>result = [ (x,y) for x in S for y in S if y%x==0]", "out": "Pythonによる集合リレーションの実装", "out_en": "Python implementation of set relations"}
{"in": "with open('test.txt', 'w') as f:<nl><tab>f.write('{0:10} {1:10}'.format('one', 'two'))", "out": "Pythonで、ファイルへの保存時に文字列をフォーマットする方法", "out_en": "In Python, how to format string while saving in a file"}
{"in": "from pylab import *<nl>from matplotlib.path import Path<nl>import matplotlib.patches as patches<nl><nl>data = np.random.rand(100,4)<nl><nl>verts = [(0.3, 0.7), (0.3, 0.3), (0.7, 0.3), (0.7, 0.7)]<nl><nl>path1 = Path(verts)<nl>index = path1.contains_points(data[:,:2])<nl><nl>print data[index, :2]<nl><nl>plot(data[:,0],data[:,1], 'b.')<nl>patch = patches.PathPatch(path1, facecolor='orange', lw=2)<nl>gca().add_patch(patch)<nl>plot(data[index,0], data[index,1], 'r.')<nl>show()", "out": "散布図に対象領域を描画し、matplotlibに含まれる点を印刷する", "out_en": "Drawing a region of interest in a scatter plot and printing the points contained in matplotlib"}
{"in": "import numpy as np<nl>import qutip as qt<nl><nl>N = 2<nl>M = 2<nl><nl>Jp = qt.tensor(qt.qeye(M), qt.jmat(J, '+'))   # J+<nl>Jm = qt.tensor(qt.qeye(M), qt.jmat(J, '-'))   # J-<nl><nl># angular momentum<nl>Jx = (Jp + Jm) / 2.0<nl><nl># initial state<nl>rho0 = qt.tensor(qt.basis(M,0), qt.basis(N+1,N))<nl><nl>R = (1j*0.5*np.pi*Jx).expm()  # rotation transform<nl>rho = R * rho0", "out": "PythonのQuTiPで量子論的オブジェクトの指数関数を取得する方法", "out_en": "How to take an exponential of a quantum object in Python's QuTiP"}
{"in": "import wx<nl><nl>class MyApp(wx.App):<nl><nl>  def __init__(self):<nl><tab>wx.App.__init__(self, redirect=False)<nl><nl>  def OnInit(self):<nl><tab>self.rootView = wx.Frame(parent=None, id=-1, title=\"Wire Frame\",<nl><tab>  pos=(150, 150), size=(350, 250))<nl><tab>self.rootView.Show()<nl><tab>self.SetTopWindow(self.rootView)<nl><tab>dlg = wx.MessageDialog(self.rootView, \"Hi\", \"title\", wx.OK|wx.ICON_ERROR)<nl><tab>#dlg.ShowModal()<nl><tab>if dlg.ShowModal() != wx.ID_OK:<nl><tab><tab>dlg.Destroy()<nl><tab>return True<nl><nl>if __name__ == \"__main__\":<nl>  app = MyApp()<nl>  app.MainLoop()", "out": "wxPython-wx.MessageDialogがクリックなしで表示されなくなる", "out_en": "wxPython - wx.MessageDialog disappears without click"}
{"in": "import cgi<nl><nl>data = cgi.FieldStorage()<nl><nl>make = data.getvalue('make')<nl>model = data.getvalue('model')<nl><nl>print ( 'Content-type:text/html\\r<nl>\\r<nl>' )<nl>print ( '''<!DOCTYPE HTML><html lang = \"en\"><nl><tab><tab><head><nl><tab><tab><tab><meta charset=\"UTF-8\"><nl><tab><tab><tab><title>Python Response</title><nl><tab><tab></head><nl><tab><tab><body><nl><tab><tab><tab><h1>, ''' + make + ', ' + model + ''',</h1><nl><tab><tab><tab><a href = \"get.html\">Back</a><nl><tab><tab></body><nl><tab><tab></html>''' )", "out": "Python CGIでのHTTP GETパラメータに関する問題", "out_en": "Issue with HTTP GET Parameters in Python CGI"}
{"in": "my_str = \"\".join(reversed(my_str))", "out": "ライブラリモジュールやダミー変数を使用しないPythonの文字列/リストの反転", "out_en": "Python string/list reversal without using any library module or Dummy variable"}
{"in": "stringToQueryLevel1 = ['why this', 'why this code', 'why this code is complex']<nl>for item in stringToQueryLevel1:<nl><tab>print ' ' in item", "out": "re.match()を使用したSubstringの検索", "out_en": "Using re.match() to find Substring"}
{"in": "[Python]", "out": "大量のバイトに対するビット操作", "out_en": "Bit-operations on large number of bytes"}
{"in": "import time, os<nl>os.environ['TZ'] = \"Asia/Kolkata\"   # timezone you want to display graphs in<nl>time.tzset()", "out": "python-rrdtool、UTCタイムゾーンでのグラフの作成方法", "out_en": "python-rrdtool, how to create graphs in UTC time zone"}
{"in": "db.User.collection.ensure_index(\"name\", 300)", "out": "MongoKitでの回収のためにTTLインデックスを設定するには?", "out_en": "How to set TTL index for collection in MongoKit?"}
{"in": "im2 = cv2.imread(imgPath)<nl>im = cv2.cvtColor(im2, cv2.COLOR_BGR2GRAY)<nl>surfDetector = cv2.FeatureDetector_create(\"SURF\")<nl>surfDescriptorExtractor = cv2.DescriptorExtractor_create(\"SURF\")<nl>keypoints = surfDetector.detect(im)<nl>(keypoints, descriptors) = surfDescriptorExtractor.compute(im,keypoints)", "out": "PythonでOpenCVを使用して記述子を抽出した例はありますか?", "out_en": "Does anyone have any examples of using OpenCV with python for descriptor extraction?"}
{"in": "class Application(UtilApplication):<nl><nl><tab>def __init__(self):<nl><tab><tab>self.configFiles = ['/usr/local/etc/foo/bar.conf']<nl><tab><tab>UtilApplication.__init__(self)", "out": "starpy用の代替構成ファイル、アスタリスク・インターフェース・ライブラリー", "out_en": "Alternate configuration file for starpy, asterisk interface library"}
{"in": "whatname = \"\"<nl>list_of_names = []<nl><nl>def regc():<nl><tab>global whatname<nl><tab>whatname = raw_input(\"Please introduce your clients first and last name.\")<nl><tab>list_of_names.append(whatname)<nl><tab>contactsav()", "out": "プログラムからデータを保存し、プログラムを再度開いたときに再アクセスして表示/編集できるようにするにはどうすればいいですか。Python", "out_en": "How do i store data from my program and be able to reaccess and see/edit it when i reopen it? Python"}
{"in": "hist(hmag, 30, range=[6.5, 12.5], facecolor='gray', align='mid')", "out": "ヒストグラムmatplotlibのデフォルトのx範囲の変更", "out_en": "changing default x range in histogram matplotlib"}
{"in": "for t in w:<nl><tab>l.append(t.replace(\".\",\"\"))", "out": "リストから文字を削除する際のさまざまな出力-Python", "out_en": "Different outputs in removing characters from a list - Python"}
{"in": "import operator<nl>primers_unsorted.sort(key=operator.itemgetter(' Construct Number', ' Part Number'))<nl><nl>for row in primers_unsorted:<nl><tab>print(row)", "out": "Pythonでサブソートを行う方法", "out_en": "How to do sub-sorting in python?"}
{"in": "cherrypy.tools.sessions", "out": "クライアントからの複数のajaxをcherrypyで同時に処理する方法", "out_en": "How to process multiple ajax from client in cherrypy simultaneously"}
{"in": "post_data = [('name','Gladys'),]<tab> # a sequence of two element tuples<nl>result = urllib2.urlopen('http://example.com', urllib.urlencode(post_data))<nl>content = result.read()", "out": "djangoを使用してPOST要求を送信する方法", "out_en": "How to send a POST request using django?"}
{"in": "criterion = df['year_week'].map(lambda x: len(x)< 6)<nl>df[criterion].index.values", "out": "パンダのデータを複雑な操作でサブセット化する", "out_en": "Subsetting data in pandas with complex operations"}
{"in": "parser.ParseFile(open('sample.xml', 'rb'))", "out": "python 3でのexpat構文解析", "out_en": "Expat parsing in python 3"}
{"in": "from os.path import dirname, join<nl>myfile = open(join(dirname(__file__), \"mydatafile.txt\"))", "out": "カスタムモジュールでテキストファイルを開くことができません", "out_en": "Text file not openable in custom module"}
{"in": "sys.stdin", "out": "常に実行されているPythonアプリケーションに引数を渡す", "out_en": "Passing argument to constantly running Python application"}
{"in": "class ModelFoo(Base):<nl><tab>__tablename__ = 'foo'<nl><tab>id = Column(\"id\", Integer, primary_key=True, autoincrement=True)<nl><tab>os = Column(String, nullable=False)<nl><tab>platform = Column(String)<nl><tab>search_cols = [\"os\", \"value\"]<nl><nl>for k, v in list(Base._decl_class_registry.items()):<nl><tab>if (hasattr(v, \"search_cols\")):<nl><tab><tab>cols = [getattr(v, val) for val in v.search_cols]<nl><tab><tab>query = sess.query(*cols)<nl><tab><tab>solr.add(query.all())", "out": "sqlalchemyテーブルの列にマークを付ける", "out_en": "marking columns in sqlalchemy tables"}
{"in": "plt.axvspan(x, x2, facecolor='g', alpha=0.5)", "out": "matplotlib:背景色を変更することはできますか?", "out_en": "matplotlib: is a changing background color possible?"}
{"in": "for tablename in cur.execute('SELECT name FROM sqlite_master WHERE type=\"table\";'):<nl><tab>if tablename[0].startswith('conn_'):<nl><tab><tab>execute_some_query_using_this_table()", "out": "Python SQLite3特定のテーブルだけを抽出する方法", "out_en": "Python SQLite3 How to extract specific tables only"}
{"in": "k=0<nl>yterms = []<nl>while k<=SEG:<nl><tab>yterm = H + aa*m.cosh(xterms[k]/aa) -aa*m.cosh(DIS/aa)<nl><tab>yterms.append(yterm)<nl><tab>k+=1<nl>print yterms", "out": "以前に生成されたタプルを使用して新しいタプルを生成する方法", "out_en": "How to used a previously generated tuple to generate a new tuple"}
{"in": "re.findall('ATA((...)*?)AGA', mydna)", "out": "特定の部分文字列のみを選択する方法", "out_en": "How to select only certain Substrings"}
{"in": "word = \"because\"<nl>print(word[0])  # Prints \"b\"<nl>print(word[1])  # Prints \"e\"<nl>print(word[2])  # Prints \"c\"<nl>print(word[3])  # Prints \"a\"<nl>print(word[4])  # Prints \"u\"<nl>print(word[5])  # Prints \"s\"<nl>print(word[6])  # Prints \"e\"", "out": "単語全体を複数の文字変数に変更することはできますか?", "out_en": "Is it possible to change a whole word into multiple letter variables?"}
{"in": "import matplotlib.pyplot as plt<nl>import pandas as pd<nl><nl>df = pd.read_csv('t.txt', delim_whitespace=True, header=None, parse_dates={'Dates': [1, 2]})<nl><nl>plt.figure()<nl>l_h = []<nl>for identifier in df[0].unique():<nl><tab>h, = plt.plot(df[df[0]==identifier]['Dates'], df[df[0]==identifier][3], label=identifier)<nl><tab>l_h.append(h)<nl>plt.legend(handles=l_h)<nl>plt.show()", "out": "Pythonで折れ線グラフをプロットする方法は?", "out_en": "How can i plot line chart in python?"}
{"in": "import datetime<nl><nl>#parse json to get offset(import json; json.load(resonse); etc.)<nl>#offset is gmtoffset + dstoffset<nl>datetime.datetime.utcnow() + datetime.timedelta(seconds = offset)", "out": "gmtoffsetから現地時間を計算する方法", "out_en": "how to calculate the local time from gmtoffset"}
{"in": "adds = map((lambda (j, f, a):<nl>  j.join([f.format(i) for i in parse.options[a]]) if parse.options[a] else ''),<nl>  ((' ', ' -not -path \"{0}\" ', 'exclude'),<nl>  (' -or ', '-path \"{0}\"', 'include')))", "out": "マップで引数リストとして項目を渡す方法", "out_en": "How to pass items as args lists in map?"}
{"in": "def authGSSServerInit(service):<nl><tab>\"\"\"<nl><tab>Initializes a context for GSSAPI server-side authentication with the given service principal.<nl><tab>authGSSServerClean must be called after this function returns an OK result to dispose of<nl><tab>the context once all GSSAPI operations are complete.<nl><nl><tab>@param service: a string containing the service principal in the form 'type@fqdn'<nl><tab><tab>(e.g. 'imap@mail.apple.com').<nl><tab>@return: a tuple of (result, context) where result is the result code (see above) and<nl><tab><tab>context is an opaque value that will need to be passed to subsequent functions.<nl><tab>\"\"\"", "out": "authGSSServerInitがキータブから間違ったエントリを検索する", "out_en": "authGSSServerInit looks for wrong entry from keytab"}
{"in": "from matplotlib import pylab as pl<nl><nl>pl.subplot(211)<nl>pl.plot(date, series1, color='black')<nl>pl.plot(date, series2, color='blue')<nl>pl.subplot(212)<nl>pl.plot(date, series3, color='red')<nl>pl.show()", "out": "Python:パンダを使用して各サブプロットに複数のシリーズをプロットする", "out_en": "Python: Using Pandas to plot more than one series in each subplot"}
{"in": "p = re.compile(r':((\\\\:|[^:])+):')<nl>print p.match(\":abc'e12\\:3\\:text:\").group(0)", "out": "Python regexはエスケープされたcharにマッチします。", "out_en": "Python regex match escaped char"}
{"in": "class UserProfileadmin(admin.ModelAdmin):<nl><tab>def formfield_for_foreignkey(self, db_field, request, **kwargs):<nl><tab><tab>if db_field.name == 'hub':<nl><tab><tab><tab>kwargs['queryset'] = Airports.objects.filter(hub=True)<nl><tab><tab>return super(UserProfileadmin, self).formfield_for_foreignkey(db_field, request, **kwargs)", "out": "Django adminブール値に基づくドロップダウン", "out_en": "Django admin dropdowns based on a boolean"}
{"in": "def func(arg1, arg2):<nl><tab>\"\"\"Summary line.<nl><nl><tab>Extended description of function.<nl><nl><tab>Parameters<nl><tab>----------<nl><tab>arg1 : int<nl><tab><tab>Description of arg1<nl><tab>arg2 : str<nl><tab><tab>Description of arg2<nl><nl><tab>Returns<nl><tab>-------<nl><tab>bool<nl><tab><tab>Description of return value<nl><nl><tab>\"\"\"<nl><tab>return True", "out": "PEP8で書かれたPython docstringからのAPIの作成", "out_en": "Making API from Python docstrings written in PEP8"}
{"in": "test3 =((154L, u'SG'), (15L, u'SG3'), (1564L, u'SG'))<nl><nl>print(numpy.asarray(test3, dtype='<U4'))<nl><nl>[[u'154' u'SG']<nl> [u'15' u'SG3']<nl> [u'1564' u'SG']]", "out": "タプルをnumpy配列に変換すると、データが壊れます。", "out_en": "Convert a tuple to a numpy array corrupts the data"}
{"in": "from collections import Counter<nl>from string import punctuation<nl><nl>counter = Counter()<nl>with open('/tmp/content_data') as f:<nl>  for line in f:<nl><tab>counter.update(word.strip(punctuation) for word in line.split())<nl><nl>result = dict(counter)<nl><nl># note: because we have<nl>#   isinstance(counter, dict)<nl># you may as well leave the result as a Counter object<nl><nl>print result", "out": "Pythonを使用してテキストファイル内の単語数を検索する", "out_en": "Find the count of the words in the text file using python"}
{"in": "query = raw_input(\"enter binary number \")<nl><nl>try:<nl><tab>is_bin = int(query,2)<nl><tab>is_bin = True<nl><tab>print \"correct number\"<nl>except ValueError:<nl><tab>is_bin = False<nl><tab>print \"not a binary number\"", "out": "Pythonで入力を制限して、0または1だけを許可するにはどうすればいいですか?", "out_en": "How do I limit an input in python so it will only allow 0 or 1's?"}
{"in": "paraText = soup.find( text = re.compile ('Running Time:') )<nl>print paraText.findNext('dd')", "out": "findNextSiblingsの使い方がわからない", "out_en": "Trouble understanding how to use findNextSiblings"}
{"in": "for match in matches:<nl><tab>first_names.append(match[0])<nl><tab>last_names.append(match[1])", "out": "regex、findall、およびgroupsを使用したPythonパターンマッチング", "out_en": "Python pattern matching with regex, findall and groups "}
{"in": "def crawler():<nl><tab>while True:<nl><tab><tab>x = tasks.get()<nl><tab><tab>try:<nl><tab><tab><tab>print \"Crawler: \",x<nl><tab><tab>finally:<nl><tab><tab><tab>tasks.task_done()", "out": "geventブロックredisのソケット要求", "out_en": "gevent block redis' socket request"}
{"in": "import matplotlib.pyplot as plt<nl>import networkx as nx<nl>import random<nl><nl>G = nx.gnp_random_graph(10,0.3)<nl>for u,v,d in G.edges(data=True):<nl><tab>d['weight'] = random.random()<nl><nl>edges,weights = zip(*nx.get_edge_attributes(G,'weight').items())<nl><nl>pos = nx.spring_layout(G)<nl>nx.draw(G, pos, node_color='b', edgelist=edges, edge_color=weights, width=10.0, edge_cmap=plt.cm.Blues)<nl>plt.savefig('edges.png')", "out": "networkxでの重みによる辺の色付け", "out_en": "Colouring edges by weight in networkx"}
{"in": "cbaxes = fig.add_axes([1, 0.15, 0.03, 0.7])<nl>plt.colorbar(img, label=r\"Height (cm)\",format='%1.1f', ax=ax1, cax=cbaxes)", "out": "第2 Y軸でのカラーバーの使用", "out_en": "Using colorbar with secondary y axis"}
{"in": "def find_difference(list_of_files, block_size=1000):<nl><tab>fs=[open(f,'rb') for f in list_of_files]<nl><tab>while True:<nl><tab><tab>first=True<nl><tab><tab>for f in fs:<nl><tab><tab><tab>if first:<nl><tab><tab><tab><tab>first=False<nl><tab><tab><tab><tab>s1=f.read(block_size)<nl><tab><tab><tab><tab>end=(s1==b'')<nl><tab><tab><tab><tab>continue<nl><tab><tab><tab>s2=f.read(block_size)<nl><tab><tab><tab>if s1!=s2:<nl><tab><tab><tab><tab>return True<nl><tab><tab><tab>if end and (s2!=b''):<nl><tab><tab><tab><tab>end=False<nl><tab><tab>if end:<nl><tab><tab><tab>return False", "out": "python3で2つ以上のファイルを比較する", "out_en": "Comparing more than 2 files in python3"}
{"in": "set_hint_string('append', '')", "out": "pynotifyで共通のタイトルを持つ通知をマージする方法", "out_en": "How to merge notifications with a common title in pynotify?"}
{"in": "# Do everything needed to start the game<nl># For dramatic pacing, any of these might be scheduled to be<nl># called in a second or so, using pyglet.clock.schedule_once<nl>world.add(player)<nl>camera.to_follow(player)<nl>world.add(scoredisplay)<nl><nl># Finally, remove the main menu from the world<nl># This will stop showing it on screen<nl># and it will remove its keyboard event handler<nl>world.remove_item(self)", "out": "pygletでシーンを切り替える", "out_en": "Switching scenes with pyglet"}
{"in": "class Server(object):<nl><tab>_cp_config = {<nl><tab><tab>'tools.sessions.on': True,<nl><tab><tab>'tools.auth.on': True<nl><tab>}   <nl><tab>auth = AuthController()<tab>  <nl><tab>@cherrypy.expose<nl><tab>@require()<nl><tab>def index(self):<nl><tab><tab>f = open (\"file.txt\",\"r\")<nl><tab><tab>link = f.read()<nl><tab><tab>f.close()<nl><tab><tab>myText = \"Hello World\" <nl><tab><tab>html = \"\"\"<nl><tab><tab><html><nl><tab><tab><tab><body><nl><tab><tab><tab><tab><p>%s</p><tab><tab>  <nl><tab><tab><tab><tab><a href=\"%s\" ><img src=\"images/go_online.png\"></a><nl><tab><tab><tab></body><nl><tab><tab></html><nl><tab><tab>\"\"\" %(myText, link)<tab><tab><nl><tab><tab>return html<nl><tab>index.exposed = True", "out": "python変数をhtml変数に渡す方法は?", "out_en": "How to pass python variable to html variable?"}
{"in": "d1 = datetime.datetime.now() + datetime.timedelta(minutes=15)<nl>d2 = datetime.datetime.now() + datetime.timedelta(hours=1)", "out": "Pythonでは、今から15分後、今から1時間後の日時を作成するにはどうすればよいでしょうか。", "out_en": "In Python, how do I make a datetime that is 15 minutes from now? 1 hour from now?"}
{"in": "import curses<nl>import time<nl><nl>scr = curses.initscr()<nl>while True:<nl><tab>try:<nl><tab><tab>scr.addstr(0, 0, str(time.time()))<nl><tab><tab>scr.refresh()<nl><tab>except KeyboardInterrupt: break<nl>curses.endwin()", "out": "cursesを使用してコマンド・ラインで文を繰り返し表示するにはどうすればよいですか。", "out_en": "How do I show a statement repeatedly on the command line using curses?"}
{"in": "import pygame,sys<nl>from pygame import *<nl><nl>WIDTH = 480<nl>HEIGHT = 480<nl>WHITE = (255,255,255) #RGB<nl>BLACK = (0,0,0) #RGB<nl><nl>pygame.init()<nl>screen = display.set_mode((WIDTH,HEIGHT),0,32)<nl>display.set_caption(\"Name of Application\")<nl>screen.fill(WHITE)<nl>timer = pygame.time.Clock()<nl>pos_on_screen, radius = (50, 50), 20<tab><nl>while True:<nl><tab>for event in pygame.event.get():<nl><tab><tab>if event.type == QUIT:<nl><tab><tab><tab>pygame.quit()<nl><tab><tab><tab>sys.exit()<nl><tab>timer.tick(60) #60 times per second you can do the math for 17 ms<nl><tab>draw.circle(screen, BLACK, pos_on_screen, radius)<nl><tab>display.update()", "out": "Pythonで17ミリ秒ごとに画面にポイントを描画する?", "out_en": "drawing a point on the screen every 17ms in Python?"}
{"in": "lxml.etree.Comment()", "out": "lxmlを使ってコメント要素をプログラム的にインスタンス化するにはどうすればよいでしょうか。", "out_en": "How can I instantiate a comment element programatically using lxml?"}
{"in": "class Category(models.Model):<nl><tab>name = models.CharField('Name', max_length=255)<nl><nl><tab>class Meta:<nl><tab><tab>db_table = 'tbl_category'<nl><nl>class Entry(models.Model):<nl><tab>category = models.ForeignKey(Category, db_column='id_tbl_category')<nl><tab>contents = models.TextField('Contents')<nl><nl><tab>class Meta:<nl><tab><tab>db_table = 'tbl_entry'", "out": "Djangoテーブル名と外部キーフィールドをカスタマイズする方法", "out_en": "Django how to customize table name and foreign key field"}
{"in": "class single_return_format(object):<nl><nl><tab>def __init__(self, func):<nl><tab><tab>self._func = func<nl><nl><tab>def __get__(self, instance, owner):<nl><tab><tab>return SimpleFormMethod(instance, self._func)<nl><nl><nl>class SimpleFormMethod(object):<nl><nl><tab>def __init__(self, instance, func):<nl><tab><tab>self._instance = instance<nl><tab><tab>self._func = func<nl><nl><tab>def __call__(self, *args, **kwargs):<nl><tab><tab>return self._func(self._instance, *args, **kwargs)<nl><nl><tab>@property<nl><tab>def standard_format(self):<nl><tab><tab>return lambda *args, **kwargs: (self._func(self._instance, *args, **kwargs), )<nl><nl><nl>class _SomeClass(object):<nl><nl><tab>def __init__(self):<nl><tab><tab>self._amount_to_add = 1<nl><nl><tab>@single_return_format<nl><tab>def add_one(self, x):<nl><tab><tab>return x+self._amount_to_add<nl><nl><nl>obj = _SomeClass()<nl>assert obj.add_one(3) == 4<nl>assert obj.add_one.standard_format(3) == (4, )", "out": "Pythonデコレータを使用してメソッドにメソッドを追加する", "out_en": "Using Python decorators to add a method to a method"}
{"in": "from multiprocessing import Process<nl>import os<nl><nl>def info(title):<nl><tab>print title<nl><tab>print 'module name:', __name__<nl><tab>print 'parent process:', os.getppid()<nl><tab>print 'process id:', os.getpid()<nl><nl>def f(name):<nl><tab>os.setuid(1000)<nl><tab>info('function f')<nl><tab>print 'hello', name<nl><tab>os.system('id')<nl><nl>if __name__ == '__main__':<nl><tab>info('main line')<nl><tab>p = Process(target=f, args=('bob',))<nl><tab>p.start()<nl><tab>p.join()", "out": "Pythonでは、異なるユーザの下でサブプロセスを呼び出すにはどうすればよいのでしょうか?", "out_en": "In Python how to call subprocesses under a different user?"}
{"in": "cx_Oracle.connect(u'hr/XXXXX@local_xe')", "out": "Pythonでcx_Oracleを使用したOracleデータベースへの接続", "out_en": "Connecting to Oracle database using cx_Oracle on Python"}
{"in": "return (resp.text, resp.status_code, resp.headers.items())", "out": "Flaskからrequests.Responseオブジェクトを返します。", "out_en": "Return a requests.Response object from Flask"}
{"in": "s.decode('string_escape')", "out": "r'\\x74op'のような16進ASCII混合文字列をPythonの'top'に変換します。", "out_en": "convert hex ascii mixed string like r'\\x74op' to 'top' in python"}
{"in": "import urllib2<nl>import BeautifulSoup<nl>import MySQLdb<nl><nl>f = urllib2.urlopen('http://www.python.org/')<nl>soup=BeautifulSoup.BeautifulSoup(f.read())<nl>title=soup.find('title')<nl>print(title.string)<nl><nl>connection=MySQLdb.connect(<nl><tab>host='HOST',user='USER',<nl><tab>passwd='PASS',db='MYDB')<nl>cursor=connection.cursor()<nl><nl>sql='''CREATE TABLE IF NOT EXISTS foo (<nl><tab><tab>   fooid int(11) NOT NULL AUTO_INCREMENT,<nl><tab><tab>   title varchar(100) NOT NULL,<nl><tab><tab>   PRIMARY KEY (fooid)<nl><tab>   )'''<nl>cursor.execute(sql)<nl><nl>sql='INSERT INTO foo (title) VALUES (%s)'<nl>args=[title.string]<nl>cursor.execute(sql,args)<nl>cursor.close()<nl>connection.close()", "out": "Pythonスクリプトでtitleタグの内容を取得する", "out_en": "Getting contents of title tags with Python script"}
{"in": "for s in self.level.sprites:<nl>  spritelayer.fill((0), s.rect)", "out": "pygameアルファレイヤを効率的にクリアするにはどうすればいいですか。", "out_en": "How do I clear a pygame alpha layer efficiently?"}
{"in": "from google.appengine.api import users<nl>from google.appengine.api.namespace_manager import set_namespace<nl><nl>class ClientClass(webapp.RequestHandler):<nl>  def get(self):<nl><tab># For this example let's assume the user_id is your unique id.<nl><tab># You could just as easily use a parameter you are passed.<nl><tab>user = users.get_current_user()<nl><tab>if user:<nl><tab>   # If there is a user, use their queue.  Otherwise the global queue.<nl><tab>   set_namespace(user.user_id())<nl><nl><tab>item = QueueItem.pop()<nl><tab>self.response.out.write(str(item))<nl><nl><tab>QueueItem.push('The next task.')", "out": "名前空間をサポートするFIFOキューの実装方法", "out_en": "How to implement a FIFO queue that supports namespaces"}
{"in": "def get_queryset(self):<nl><tab>qs = super(SomeObjectDataTableView, self).get_queryset()<nl><tab>return qs.select_related().annotate(items_count=Count('items'))", "out": "ジャンゴ・eztablesによる集約", "out_en": "Aggregation with django-eztables"}
{"in": "from scipy import misc<nl>import glob<nl><nl>for image_path in glob.glob(\"/home/adam/*.png\"):<nl><tab>image = misc.imread(image_path)<nl><tab>print image.shape<nl><tab>print image.dtype", "out": "PNGファイルをNumpyにインポートしますか?", "out_en": "Importing PNG files into Numpy?"}
{"in": "import cv2<nl>img = cv2.imread(\"lenna.png\")<nl>crop_img = img[200:400, 100:300] # Crop from x, y, w, h -> 100, 200, 300, 400<nl># NOTE: its img[y: y + h, x: x + w] and *not* img[x: x + w, y: y + h]<nl>cv2.imshow(\"cropped\", crop_img)<nl>cv2.waitKey(0)", "out": "Pythonを使用してOpenCVでイメージをトリミングする方法", "out_en": "How to crop an image in OpenCV using Python"}
{"in": "def microtime(dt):<nl><tab>time.mktime(dt.timetuple()) + dt.microsecond / 1000000.0", "out": "Pythonが特定の日付からマイクロタイムを取得する", "out_en": "Python get micro time from certain date"}
{"in": "__getattribute__()", "out": "Pythonでアクセスをハッシュにするにはどうすればよいでしょうか。", "out_en": "How do you make an access a hash in python?"}
{"in": "test = raw_input(\"Put in a word\")", "out": "入力(raw_input)を変数に格納して後でPython 2.7.9で使用するにはどうすればいいですか?", "out_en": "How to store an input(raw_input) in a variable to use it later in Python 2.7.9?"}
{"in": "def get_items(cheapness):<nl><tab>\"\"\" Return a list of (item, (price, count)) tuples that are the given<nl><tab>cheapness. Note that the second element of the tuple is another tuple. \"\"\"<nl><nl><tab>if cheapness == 'CHEAP':<nl><tab><tab>return [(item, (price,count)) for (item, (price,count)) in inventory.items() if price < 20]<nl><tab>elif cheapness == 'MODERATE':<nl><tab><tab>return [(item, (price,count)) for (item, (price,count)) in inventory.items() if price > 20 and price < 100]<nl><tab>elif cheapness == 'EXPENSIVE':<nl><tab><tab>return [(item, (price,count)) for (item, (price,count)) in inventory.items() if price > 100]", "out": "これをリストとして返す方法", "out_en": "How do I return this as a list"}
{"in": "#!/usr/bin/env python<nl><nl>import pygtk<nl>pygtk.require('2.0')<nl>import gtk<nl><nl>class ComboBoxExample:<nl><tab>def __init__(self):<nl><tab><tab>window = gtk.Window()<nl><tab><tab>window.connect('destroy', lambda w: gtk.main_quit())<nl><tab><tab>combobox = gtk.combo_box_new_text()<nl><tab><tab>window.add(combobox)<nl><tab><tab>combobox.append_text('Select a pie:')<nl><tab><tab>combobox.append_text('Apple')<nl><tab><tab>combobox.append_text('Cherry')<nl><tab><tab>combobox.append_text('Blueberry')<nl><tab><tab>combobox.append_text('Grape')<nl><tab><tab>combobox.append_text('Peach')<nl><tab><tab>combobox.append_text('Raisin')<nl><tab><tab>combobox.connect('changed', self.changed_cb)<nl><tab><tab>combobox.set_active(0)<nl><tab><tab>window.show_all()<nl><tab><tab>return<nl><nl><tab>def changed_cb(self, combobox):<nl><tab><tab>model = combobox.get_model()<nl><tab><tab>index = combobox.get_active()<nl><tab><tab>if index:<nl><tab><tab><tab>print 'I like', model[index][0], 'pie'<nl><tab><tab>return<nl><nl>def main():<nl><tab>gtk.main()<nl><tab>return<nl><nl>if __name__ == \"__main__\":<nl><tab>bcb = ComboBoxExample()<nl><tab>main()", "out": "Python GTKコンボボックスへのシグナルの追加", "out_en": "Python GTK adding signal to a combo box"}
{"in": "lines = open('wordprob.txt','r').readlines()<nl>words = open('StdWord.txt','r').readlines()<nl>for i,line in enumerate(lines):<nl><tab><tab>v = [eval(s) for s in line.split()]<nl><tab><tab>if v[0] > v[1]:<nl><tab><tab><tab><tab>print words[i].strip()", "out": "Pythonで2つのファイルを並行してきれいにループする方法", "out_en": "How to cleanly loop over two files in parallel in Python"}
{"in": "bikes['dayflag'] = (bikes.ts.dt.hour > 5) & (bikes.ts.dt.hour <18)", "out": "パンダを使用して昼/夜のフラグを作成する", "out_en": "Using Pandas to create a day/ night flag"}
{"in": "i=0<nl><nl>while i < len(text):<nl><tab>print text[i]<nl><tab>i += 1", "out": "whileループを使用して、文字列から一度に1文字ずつ出力する", "out_en": "Printing one character at a time from a string, using the while loop"}
{"in": "import os<nl>os.sys.path.append(os.path.dirname(os.path.realpath(__file__))+ '/../../')", "out": "パッケージ内の「メイン」モジュールからパッケージモジュールをインポートする方法", "out_en": "How to import package modules from in-package \"main\" module"}
{"in": "from subprocess import Popen, PIPE, STDOUT<nl><nl>#do some stuff <nl>data = do_some_computation_from_file<nl><nl>#prepare your executable using subprocess.Popen<nl>exe = Popen(['your_executable'], stdout=PIPE, stdin=PIPE, stderr=STDOUT)<nl><nl>#pass in the computed data to the executable and grap the result<nl>result = exe.communicate(input=data)[0]", "out": "Pythonがターミナルでパラメータとして渡された実行可能ファイルにデータを送信する", "out_en": "Python send data to an executable passed as parameter in terminal"}
{"in": "for i_t in range(0, np.shape(t)[1]):<nl><tab>ax.clear()<nl><tab>plt.hold(True)<nl><tab>#<tab>plot limits<nl><tab>ax.set_xlim(-(max(q0) + bodies[-1].L), +(max(q0) + bodies[-1].L))<nl><tab>ax.set_ylim(-(max(q0) + bodies[-1].L), +(max(q0) + bodies[-1].L))<nl><tab>for i in range(0, N):<nl><tab><tab>ax.plot(x_matrix[i_t, i], y_matrix[i_t, i], 's', color=colors[0, i])<nl><nl><tab>plt.pause(0.0001)", "out": "double forループを使用したmatplotlibでのアニメーションプロット", "out_en": "animation plot in matplotlib with double for loop"}
{"in": "import csv<nl>foo_in = open('bar.csv', 'rU')<nl>readfoo = csv.reader(foo_in)<nl><nl>for row in readfoo:<nl><tab>spam = row[0]<nl><tab>eggs = row[1]<nl><tab>foobar = row[2]<nl><tab>new_data = dict()<nl><tab>new_data.setdefault(spam, {})<nl><tab>new_data[spam].setdefault(eggs, []).append(foobar)<nl><tab>print new_data", "out": "CSVから2つの辞書を作成するか、3行から辞書を作成する", "out_en": "Creating either 2 dictionaries from CSV or creating dictionary from 3 rows"}
{"in": "from urllib2 import Request, urlopen<nl>from pyPdf import PdfFileWriter, PdfFileReader<nl>from StringIO import StringIO<nl><nl>url = \"http://www.silicontao.com/ProgrammingGuide/other/beejnet.pdf\"<nl>writer = PdfFileWriter()<nl><nl>remoteFile = urlopen(Request(url)).read()<nl>memoryFile = StringIO(remoteFile)<nl>pdfFile = PdfFileReader(memoryFile)<nl><nl>for pageNum in xrange(pdfFile.getNumPages()):<nl><tab><tab>currentPage = pdfFile.getPage(pageNum)<nl><tab><tab>#currentPage.mergePage(watermark.getPage(0))<nl><tab><tab>writer.addPage(currentPage)<nl><nl><nl>outputStream = open(\"output.pdf\",\"wb\")<nl>writer.write(outputStream)<nl>outputStream.close()", "out": "pyPdfでpdfのURLを開く", "out_en": "Opening pdf urls with pyPdf"}
{"in": "import ipdb; ipdb.set_trace()", "out": "Python版のMatlab/Octaveキーボード関数?", "out_en": "Python - equivalent of Matlab/Octave keyboard function?"}
{"in": "import contextlib<nl>import selenium.webdriver as webdriver<nl>import lxml.html as LH<nl>import lxml.html.clean as clean<nl><nl>url=\"http://www.yahoo.com\"<nl>ignore_tags=('script','noscript','style')<nl>with contextlib.closing(webdriver.Firefox()) as browser:<nl><tab>browser.get(url) # Load page<nl><tab>content=browser.page_source<nl><tab>cleaner=clean.Cleaner()<nl><tab>content=cleaner.clean_html(content)<tab><nl><tab>with open('/tmp/source.html','w') as f:<nl><tab>   f.write(content.encode('utf-8'))<nl><tab>doc=LH.fromstring(content)<nl><tab>with open('/tmp/result.txt','w') as f:<nl><tab><tab>for elt in doc.iterdescendants():<nl><tab><tab><tab>if elt.tag in ignore_tags: continue<nl><tab><tab><tab>text=elt.text or ''<nl><tab><tab><tab>tail=elt.tail or ''<nl><tab><tab><tab>words=' '.join((text,tail)).strip()<nl><tab><tab><tab>if words:<nl><tab><tab><tab><tab>words=words.encode('utf-8')<nl><tab><tab><tab><tab>f.write(words+'<nl>')", "out": "Seleniumを使用してWebページからすべての可視テキストを取得する", "out_en": "Getting all visible text from a webpage using Selenium"}
{"in": "max_len = 0<nl>max_key = \"\"<nl>for key in d:<nl><tab>cur_len = len(d[key])<nl><tab>if cur_len>max_len:<nl><tab><tab>max_key = key<nl><tab><tab>max_len = cur_len<nl>print max_key", "out": "辞書の中で最も長い値のリストを持つキーを見つけるにはどうすればいいですか?", "out_en": "How do you find which key in a dictionary has the longest list of values?"}
{"in": "def group(self, user):<nl><tab>groups = []<nl><tab>for group in user.groups.all():<nl><tab><tab>groups.append(group.name)<nl><tab>return ' '.join(groups)<nl>group.short_description = 'Groups'<nl><nl>list_display = ('username', 'email', 'first_name', 'last_name', 'is_staff', 'group')<nl># The last argument will display a column with the result of the \"group\" method defined above", "out": "管理インターフェイスにユーザグループを表示しますか?", "out_en": "Display user group in admin interface?"}
{"in": "with open(\"input.csv\", \"r\") as input_file:<nl><tab>header = input_file.readline()[:-1] #this is to remove trailing '<nl>'<nl><tab>header += \",Table exists?\"<nl><tab>output_lines = [header]<nl><nl><tab>for line in input_file:<nl><tab><tab> output_lines.append(line[:-1])<nl><tab><tab> if 'table' in line.split(\",\")[3]:<nl><tab><tab><tab> output_lines[-1]+=\",table exists\"<nl><tab><tab> else:<nl><tab><tab><tab> output_lines[-1]+=\",No table found\"<nl><nl>with open(\"output.csv\", \"w\") as output_file:<nl><tab>output_file.write(\"<nl>\".join(output_lines))", "out": "csvの最後の列にif関数に関連する要素の結果を追加する", "out_en": "Appending results of an element related if function to the last column of a csv"}
{"in": "graphdays = [pivot_table[(m)].astype(float).values for m in range(1, len(Days)+1)]<nl>days_dict = OrderedDict(list(zip(Days, graphdays)))", "out": "リストからOrderedDictを作成する", "out_en": "Making OrderedDict out of Lists"}
{"in": "import pyglet<nl><nl>key = pyglet.window.key<nl><nl>win = pyglet.window.Window()<nl>keyboard = key.KeyStateHandler()<nl>win.push_handlers(keyboard)<nl><nl>print keyboard[key.UP] and keyboard[key.LEFT]", "out": "pygletでの2つの同時キーの検出(Python)", "out_en": "detecting two simultaneous keys in pyglet (python)"}
{"in": "if self._log.GetNumberOfLines() > MAX_LINES:<nl><tab><tab>if self._log.GetLineText(DELETION_POINT) != DELETION_LINE:<nl><tab><tab><tab>start = self._log.XYToPosition(0, DELETION_POINT)<nl><tab><tab><tab>self._log.SetInsertionPoint(start)<nl><tab><tab><tab>self._log.WriteText(DELETION_LINE)<nl><tab><tab>while (self._log.GetNumberOfLines() > MAX_LINES):<nl><tab><tab><tab>start = self._log.XYToPosition(0, DELETION_POINT+1)<nl><tab><tab><tab>len = self._log.GetLineLength(DELETION_POINT+1)<nl><tab><tab><tab>self._log.Remove(start, start+len+1)", "out": "TextCtrlの中央から線分を削除する", "out_en": "Deleting lines from the middle of a TextCtrl"}
{"in": "from time import *<nl><nl># make a time string<nl>t = strftime('%H%M%S', localtime())<nl><nl># convert time string to unix time (seconds since epoch)<nl>mktime(localtime()[:3] + strptime(t, '%H%M%S')[3:])", "out": "Pythonが時刻からPosix時刻を生成する", "out_en": "python generate Posix time from time of day"}
{"in": "import win32com.client <nl>import os<nl>import re<nl>rootdir ='C:\\Users\\IdaLim\\Desktop\\docs'<tab> <nl>try:<nl><tab>app = win32com.client.Dispatch('Word.Application')<nl><tab>app.Visible = True<nl><tab>for subdir, dirs, files in os.walk(rootdir):<nl><tab><tab>for file in files:<nl><tab><tab><tab>fullpath = os.path.join(*[subdir, file])<nl><tab><tab><tab>if file.endswith(\".doc\"):<nl><tab><tab><tab><tab>out_name = file.replace(\"doc\", r\"txt\")<nl><tab><tab><tab><tab>in_file = os.path.abspath(rootdir + \"\\\\\" + file)<nl><tab><tab><tab><tab>out_file = os.path.abspath(rootdir + \"\\\\\" + out_name)<nl><tab><tab><tab><tab>doc = app.Documents.Open(in_file)<nl><tab><tab><tab><tab>content = doc.Content.Text<nl><tab><tab><tab><tab>print 'Exporting', out_file<nl><tab><tab><tab><tab>doc.SaveAs(out_file, FileFormat=7)<nl><tab><tab><tab><tab>doc.Close()<nl>except Exception, e:<nl><tab>print e<nl>finally:<nl><tab>app.Quit()", "out": "Pythonを使用して.docファイルからプレーンテキストを取得する方法", "out_en": "How to retrieve plain text from .doc files using Python?"}
{"in": "savefig()", "out": "numpyを使用して3dを2dでプロットしますか?", "out_en": "Plot 3d in 2d with numpy?"}
{"in": "letters = raw_input(\"Please enter forbidden letters\")<nl>words = set(open(\"p.txt\", \"r\").read().split())<nl>for word in words:<nl>  if all(letter not in word for letter in letters):<nl><tab>print word", "out": "文字列の文字を含まない単語を検索する方法", "out_en": "How to find words that have no characters of an string?"}
{"in": "import Polygon, numpy<nl><nl># Here I extracted and combined some contours and created a convex hull from it.<nl># Now I wanna check whether a contour acquired differently intersects with this hull or not.<nl><nl>for contour in contours:  # The result of cv2.findContours is a list of contours<nl><tab>contour1 = contour.flatten()<nl><tab>contour1 = numpy.reshape(contour1, (int(contour1.shape[0]/2),-1))<nl><tab>poly1 = Polygon.Polygon(contour1)<nl><nl><tab>hull = hull.flatten()  # This is the hull is previously constructued<nl><tab>hull = numpy.reshape(hull, (int(hull.shape[0]/2),-1))<nl><tab>poly2 = Polygon.Polygon(hull)<nl><nl><tab>if (poly1 & poly2).area()<= some_max_val:<nl><tab><tab>some_operations", "out": "2D曲線ndarraysの交点", "out_en": "Intersection of 2D numpy ndarrays"}
{"in": "# x = range(6)<nl>x = [\"this\", \"is\", \"an\", \"example\", \"list\"]<nl><nl>for prv, nxt in zip(x, x[1:]):<nl><tab>print prv, nxt", "out": "リストから連続した要素を選択する方法", "out_en": "How to select sequential elements from a list?"}
{"in": "PairRDDFunctions.join()", "out": "Sparkでのデータセットの結合", "out_en": "Joining data sets in Spark"}
{"in": "def my_function(*args):<nl>   if len(args) == 0:<nl><tab>   return x[y[args[0]]]<nl>   return [x[y[a]] for a in args]", "out": "dictとlistから引数を展開しています", "out_en": "Unpacking arguments from dict and list"}
{"in": "result=[dictionary[k] for k in keys if k in dictionary]", "out": "キーをリストとして持つディクショナリ値を取得する方法", "out_en": "How to get dictionary values having its keys as a list"}
{"in": "from traits.api import Instance, Str, HasTraits<nl><nl>class Person(HasTraits):<nl><tab>name = Str(\"hooked\")<nl><nl>class Chair(HasTraits):<nl><tab>sitting = Instance(Person, kw = {})<nl><nl>t = Chair()<nl>print t.sitting.name", "out": "Enthought特性のデフォルトインスタンスのインスタンス化", "out_en": "Instantiating a default instance for an Enthought trait"}
{"in": "s = 'caaat caat cat kittycaat, rack, smaaack'<nl>x = 0<nl>for i in s.split():<nl><tab>if i.count('a') > x:<nl><tab><tab>x = i.count('a')<nl><tab><tab>word = i<nl>print word", "out": "aの数が多いリストで単語を検索する", "out_en": "Searching the word in a list with more a's"}
{"in": "for k in wlist:<nl><tab>if k != i:<nl><tab><tab>k.send(data)", "out": "Pythonソケット送信データ", "out_en": "Python socket send data"}
{"in": "def change_window(browser):<nl><tab>\"\"\"<nl><tab>Simple window switcher without the need of playing with ids.<nl><tab>@param browser: Current browser instance<nl><tab>\"\"\"<nl><tab>curr = browser.current_window_handle<nl><tab>all_handles = browser.window_handles<nl><tab>for handle in list(set([curr]) - set(all_handles)):<nl><tab><tab>return browser.switch_to_window(handle)", "out": "Selenium IDE構文をPython Webdriverに変換する", "out_en": "Convert Selenium IDE Syntax to Python Webdriver"}
{"in": "firstList = [1,2,3]<nl>secondList=[]<nl><nl>counter = len(firstList)-1<nl><nl>while counter >= 0:<nl><tab>secondList.append(firstList[counter])<nl><tab>counter -= 1", "out": "whileループを使用してリストを逆にする方法", "out_en": "How do I reverse a list using while loop?"}
{"in": "five_image = (display_image,)", "out": "タプルへの値の割当て", "out_en": "Assigning a value to a tuple"}
{"in": "from collections import Counter<nl>import sys<nl>from random import randint<nl><nl># Python 2/3 compatibility<nl>if sys.hexversion >= 0x3000000:<nl><tab>inp = input<nl><tab>rng = range<nl>else:<nl><tab>inp = raw_input<nl><tab>rng = xrange<nl><nl>def get_int(prompt):<nl><tab>while True:<nl><tab><tab>try:<nl><tab><tab><tab>return int(inp(prompt))<nl><tab><tab>except ValueError:<nl><tab><tab><tab>pass<nl><nl>def main():<nl><tab>sides = get_int(\"How many sides does your die have? \")<nl><tab>times = get_int(\"How many times do you want to roll? \")<nl><tab>results = Counter(randint(1, sides) for roll in rng(times))<nl><nl>if __name__==\"__main__\":<nl><tab>main()", "out": "シミュレータでサイコロを振る辺は無制限", "out_en": "Unlimited sides to dice in simulator"}
{"in": "for line in file:<nl><tab>if username == line.strip():<nl><tab>   validusername = True<nl><tab>   break", "out": "readlineなしでテキストファイル内の行数を取得する", "out_en": "Getting number of lines in a text file without readlines"}
{"in": "\" Play a WAVE file. \"<nl><nl>import pyaudio<nl>import wave<nl>import sys<nl><nl>chunk = 1024<nl><nl>if len(sys.argv) < 2:<nl><tab>print \"Plays a wave file.<nl><nl>\" +\\<nl><tab><tab>  \"Usage: %s filename.wav\" % sys.argv[0]<nl><tab>sys.exit(-1)<nl><nl>wf = wave.open(sys.argv[1], 'rb')<nl><nl>p = pyaudio.PyAudio()<nl><nl># open stream<nl>stream = p.open(format =<nl><tab><tab><tab><tab>p.get_format_from_width(wf.getsampwidth()),<nl><tab><tab><tab><tab>channels = wf.getnchannels(),<nl><tab><tab><tab><tab>rate = wf.getframerate(),<nl><tab><tab><tab><tab>output = True)<nl><nl># read data<nl>data = wf.readframes(chunk)<nl><nl># play stream<nl>while data != '':<nl><tab>stream.write(data)<nl><tab>data = wf.readframes(chunk)<nl><nl>stream.close()<nl>p.terminate()", "out": "Windows(XPからWindows 7)でのPythonによるオーディオ再生", "out_en": "Windows (XP to Windows 7) audio playback with python?"}
{"in": "class MyMixIn(object):<nl><tab>def op_custom(self):<nl><tab><tab>print(\"foo\")<nl><nl>class MyOperation(models.Model, MyMixIn):<nl><tab>def op_normal(self):<nl><tab><tab>print(\"bar\")", "out": "他のモジュールからDjangoクラスに新しいメソッドを追加する方法は?", "out_en": "How to add new method to Django class from other modules?"}
{"in": "def myrepl(match):<nl><tab>num = int(match.group(1))<nl><tab># Do something here<nl><tab>return str(num) # this will replace the $url[2]<nl><nl>mystr = \"this is $url[2] a string\"<nl><nl>print re.sub(r'\\$url\\[([0-9])\\]', myrepl, mystr, flags=re.IGNORECASE)", "out": "Pythonでの正規表現の置換", "out_en": "RegEx replace in Python"}
{"in": "def _accumulate_stress(betweenness,S,P,sigma,s):<nl><tab>delta = dict.fromkeys(S,0)<nl><tab>while S:<nl><tab><tab>w = S.pop()<nl><tab><tab>for v in P[w]:<nl><tab><tab><tab>delta[v] += (1.0+delta[w])<nl><tab><tab>if w != s:<nl><tab><tab><tab>betweenness[w] += sigma[w]*delta[w]<nl><tab>return betweenness", "out": "Networkxを使用して頂点が属する最短パスの数を計算する高速な方法", "out_en": "Faster way to calculate the number of shortest paths a vertex belongs to using Networkx"}
{"in": "import numpy as np<nl>import pylab as pl<nl>from matplotlib.colors import hsv_to_rgb<nl><nl>V, H = np.mgrid[0:1:100j, 0:1:300j]<nl>S = np.ones_like(V)<nl>HSV = np.dstack((H,S,V))<nl>RGB = hsv_to_rgb(HSV)<nl>pl.imshow(RGB, origin=\"lower\", extent=[0, 360, 0, 1], aspect=150)<nl>pl.xlabel(\"H\")<nl>pl.ylabel(\"V\")<nl>pl.title(\"$S_{HSV}=1$\")<nl>pl.show()", "out": "matplotlib内の2d HSVカラースペース", "out_en": "2d hsv color space in matplotlib"}
{"in": "x = struct.pack(4*'B' + 'HB'[ALPHA<256] + 4*'B', *data)", "out": "Pythonで整数のリストをバイナリ「文字列」に変換する", "out_en": "Converting list of integers into a binary \"string\" in python"}
{"in": "\"<nl>This is a Google style docs.<nl>...<nl>...<nl>Raises:<nl><tab>TypeError: 1. foo() missing 1 required positional argument.<nl><tab><tab><tab>   2. key must be a numeric value.<nl><tab><tab><tab>   3. ...<nl><tab>KeyError:  1. bar key is missing.<nl><tab><tab><tab>   2. ...<nl>\"", "out": "類似した例外をdocstringにグループ化するにはどうすればいいですか?", "out_en": "How should I group similar exceptions in a docstring?"}
{"in": "def strtr(strng, replace):<nl><tab>buffer = []<nl><tab>i, n = 0, len(strng)<nl><tab>while i < n:<nl><tab><tab>match = False<nl><tab><tab>for s, r in replace.items():<nl><tab><tab><tab>if strng[i:len(s)+i] == s:<nl><tab><tab><tab><tab>buffer.append(r)<nl><tab><tab><tab><tab>i = i + len(s)<nl><tab><tab><tab><tab>match = True<nl><tab><tab><tab><tab>break<nl><tab><tab>if not match:<nl><tab><tab><tab>buffer.append(strng[i])<nl><tab><tab><tab>i = i + 1<nl><tab>return ''.join(buffer)", "out": "phpのPython用strtr", "out_en": "php's strtr for python"}
{"in": "import argparse<nl>parser = argparse.ArgumentParser(add_help=False)<nl>parser.add_argument('-t', '--test', action=\"store_true\")<nl>parser.add_argument('params', nargs='+')<nl>args = parser.parse_args()<nl>if args.test is True:<nl><tab>intro = None<nl>elif args.params:<nl><tab>pass  # process the params here<nl>else:<nl><tab>pass  # no params whatsoever", "out": "argparseで欠落した引数を処理する方法", "out_en": "How to handle missing arguments in argparse?"}
{"in": "class ValidationForm(forms.Form):<nl><tab>email = forms.EmailField(label = 'Email', error_messages = {'invalid': 'Your Email Confirmation Not Equal With Your Email'})<nl><tab>email_confirmation = forms.EmailField(label = 'Email Confirmation')<nl><nl><tab>def clean_email(self):<nl><tab>   if email != email_confirmation:<nl><tab><tab>  raise ValidationError(self.fields['email'].error_messages['invalid'])<nl><tab>   return email", "out": "Django-Formにカスタム・エラー・メッセージを追加する方法は?", "out_en": "Django - How to add custom error message in Form?"}
{"in": "try:<nl><tab>WindowsError<nl>except NameError:<nl><tab>WindowsError = None", "out": "Windows上のWindowsエラーをインポートできません", "out_en": "Shutil cannot import WindowsError on windows"}
{"in": "def resizeConsoleEvent(self, resizeObject):<nl><tab>if not self.keyPressDown and not self.blockResizing:<nl><tab><tab># calculate maximum columns and lines based on a '|' character<nl><tab><tab>font = self.ui.console.currentFont()<nl><tab><tab>fmetric = QtGui.QFontMetrics(font)<nl><tab><tab>fontPixelWidth = fmetric.width(\"|\")<nl><tab><tab>fontPixelHeight = fmetric.height()<nl><tab><tab>availableWidthPixels = int(self.ui.console.geometry().width())<nl><tab><tab>availableHeightPixels = int(self.ui.console.geometry().height())<nl><tab><tab># Calculate columns and lines w/ adjustments for rounding<nl><tab><tab>self.consoleColumns = int(availableWidthPixels / fontPixelWidth) + 1<nl><tab><tab>self.consoleLines = int(availableHeightPixels / fontPixelHeight) - 3<nl><nl><tab><tab># resize the pyte screen I'm using with the calculated information<nl><tab><tab>self.shell.resizeConsole(self.consoleLines, self.consoleColumns)<nl><nl><tab><tab># block double resize event<nl><tab><tab>self.keyPressDown = False<nl><tab><tab>return False<nl><tab>else:<nl><nl><tab><tab>return True", "out": "widthとheight(ピクセル単位)を列に変換してPythonライブラリpyteで使用するにはどうすればいいですか?", "out_en": "How do I convert width and height (in pixels) to columns for use with the python library pyte?"}
{"in": "import re<nl>infilename = 'file2.txt'<nl>outfilename = 'file.txt'<nl><nl>with open(infilename, 'r') as infile, open(outfilename, 'w') as outfile:<nl><tab>for line in infile:<nl><tab><tab>line = line.rstrip('<nl>').split('\\t')<nl><tab><tab>line = [val if val else '-9' for val in line]<nl><tab><tab>outfile.write('\\t'.join(line) + '<nl>')", "out": "Pythonで欠落したデータを数値で置き換える", "out_en": "Replacing missing data with a number in python"}
{"in": "from requests_oauthlib import OAuth1<tab><nl><nl>client_key = ''<nl>client_secret = ''<nl>resource_owner_key = ''<nl>resource_owner_secret = ''<nl><nl>def query(queryurl):<nl><tab><tab>headeroauth = OAuth1(client_key, client_secret, resource_owner_key,<nl><tab><tab>resource_owner_secret, signature_type = 'auth_header')<nl><nl><tab><tab>return requests.get(queryurl, auth = headeroauth)<nl><nl>query('http://website.com')", "out": "Python 3用に動作するOAuthライブラリはありますか?", "out_en": "Is there a working OAuth library for Python 3?"}
{"in": "result = commands.getoutput('zcat ' + fullpath + ' |wc -l')", "out": "Pythonへのinsertシェルコマンドについて", "out_en": "About insert shell commands into python"}
{"in": "announcements = Announcement.objects.all().filter(date_start__gte = datetime.now())", "out": "日時フィールドでオブジェクトをフィルタする方法", "out_en": "How to filter objects on datetime fields?"}
{"in": "ep =  1412673904406<nl><nl>from datetime import datetime<nl><nl>print datetime.fromtimestamp(ep/1000).strftime(\"%A\")<nl>Tuesday<nl><nl><nl>def ep_to_day(ep):<nl><tab>return datetime.fromtimestamp(ep/1000).strftime(\"%A\")", "out": "Pythonがエポック時間を曜日に変換する", "out_en": "Python convert epoch time to day of the week"}
{"in": "import urllib2<nl>import StringIO<nl>from zipfile import ZipFile<nl>import csv<nl><nl>baseUrl = \"http://api.worldbank.org/v2/en/indicator/ny.gdp.pcap.cd?downloadformat=csv\"<nl>remoteCSV = urllib2.urlopen(baseUrl)<nl><nl>sio = StringIO.StringIO()<nl>sio.write(remoteCSV.read())<nl><tab># We create a StringIO object so that we can work on the results of the request (a string) as though it is a file.<nl><nl>z = ZipFile(sio, 'r')<nl><tab># We now create a ZipFile object pointed to by 'z' and we can do a few things here:<nl><nl>print z.namelist()<nl><tab># A list with the names of all the files in the zip you just downloaded<nl><tab># We can use z.namelist()[1] to refer to 'ny.gdp.pcap.cd_Indicator_en_csv_v2.csv'<nl><nl>with z.open(z.namelist()[1]) as f:<nl># Opens the 2nd file in the zip<nl><tab>csvr = csv.reader(f)<nl><tab>for row in csvr:<nl><tab><tab>print row", "out": "世界銀行のデータセットからCSVファイルをダウンロードする方法", "out_en": "How to download a CSV file from the World Bank's dataset"}
{"in": "import sys<nl>import sqlite3<nl><nl>print 'python version:', sys.version<nl>print 'PySQLite version:', sqlite3.version<nl>print 'sqlite3 version:', sqlite3.sqlite_version<nl>print<nl><nl>conn = sqlite3.connect('shane.sqlite')<nl>conn.isolation_level = None  # CHANGED<nl><nl>with conn:<nl><tab>conn.execute(\"create table example (A, B);\")<nl><nl>with conn:<nl><tab>conn.execute(\"insert into example values (?, ?);\", (0,200))<nl><nl><tab>conn.execute(\"savepoint spTest;\")<nl><tab>conn.execute(\"insert into example values (?, ?);\", (1,201))<nl><tab>conn.execute(\"insert into example values (?, ?);\", (2,202))<nl><tab>conn.execute(\"rollback to savepoint spTest;\")  # CHANGED<nl><nl><tab>conn.execute(\"insert into example values (?, ?);\", (5,205))", "out": "python sqlite3でセーブポイントを使用する", "out_en": "Using savepoints in python sqlite3"}
{"in": "import re<nl>with open(\"filename\") as f:<nl><tab>for line in f:<nl><tab><tab>if re.match(r\"^\\d+.*$\",line):<nl><tab><tab><tab>print line", "out": "数字で始まる行を読み込む", "out_en": "Read lines starting with numbers"}
{"in": "import random<nl><nl>words = [line.strip() for line in open('/etc/dictionaries-common/words')]<nl>print(random.choice(words))", "out": "Pythonで単語リストからランダムな単語を返す", "out_en": "Return a random word from a word list in python"}
{"in": "class C(object):<nl><nl><tab>def __init__(self, Type='generic', X=None, Y=None):<nl><tab><tab>X = X or 5<nl><tab><tab>Y = Y or 500<nl><tab><tab>self.X, self.Y = {<nl><tab><tab><tab>\"generic\": (X, Y),<nl><tab><tab><tab>\"short\": (1, Y),<nl><tab><tab><tab>\"long\": (10, Y),<nl><tab><tab><tab>\"large\": (X, 2000),<nl><tab><tab><tab>\"small\": (X, 100),<nl><tab><tab>}[Type]<nl><nl><tab>def __str__(self):<nl><tab><tab>return \"X={0} Y={1}\".format(self.X, self.Y)<nl><nl><nl>print(C())<nl>print(C('short'))<nl>print(C('long'))<nl>print(C('large'))<nl>print(C('small'))<nl>print(C('small', 10))<nl>print(C('small', 20, 20))", "out": "Pythonメソッドのデフォルト", "out_en": "defaults of method python"}
{"in": "(q,qq,qqq)=mystring.split()", "out": "スペースの検出と変数への適用", "out_en": "Detecting spaces and applying to a variable"}
{"in": "n = 100<nl>numbers = range(2,100)<nl>results = []<nl>while len(numbers) > 0:<nl><tab>results.append(numbers[0])<nl><tab>numbers = [number for number in numbers if number % results[-1] != 0]<nl>print len(results)", "out": "エラトステネスのふるいを用いて、2からnまでのすべての素数を求めよ。", "out_en": "Find all the primes from 2 to n, using the Sieve of Eratosthenes"}
{"in": "from itertools import groupby<nl><nl>money = money_tx.objects.order_by('-tx_date')<nl>plans = investment_plan.objects.select_related()<nl>result = []<nl><nl>for date, group in groupby(money, lambda x: x.tx_date):<nl><tab>plans_for_date = set(x.investment_plan_id for x in group)<nl><tab>for plan in plans:<nl><tab><tab>data = {'ORG': plan.organization.organization_name,<nl><tab><tab><tab><tab>'INV_PLAN': plan.plan_code,<nl><tab><tab><tab><tab>'DATE': date,<nl><tab><tab><tab><tab>'PRESENT': (plan.id in plans_for_date)}<nl><tab><tab>result.append(data)<nl><nl>print result", "out": "Pythonを使用したDjangoモデルでのフィールドの「固有アイテム」のピックアップ", "out_en": "pickup \"unique item\" of a field in a django model using python"}
{"in": "faulthandler.dump_traceback_later(3, repeat=True)", "out": "10秒後のPython pdbブレークポイント", "out_en": "Python pdb breakpoint after 10 seconds"}
{"in": "ranges = (<nl><tab>(8700, 12600),<nl><tab>(15700, 17600),<nl><tab>(18750, 22350),<nl><tab>(23700, 27250),<nl><tab>(106950, 115300),<nl>)<nl><nl>newSndIdx = 0<nl><nl>for start, end in ranges:<nl><tab>for i in range(start, end + 1):<nl><tab><tab>sampleValue = getSampleValueAt(sound, i)<nl><tab><tab>setSampleValueAt(newSnd, newSndIdx, sampleValue)<nl><tab><tab>newSndIdx += 1<nl><tab>newSndIdx += 500", "out": "if文と1つのforループを使用してこれを実行するにはどうすればいいですか?", "out_en": "How would make this run with an if statement and one for loop?"}
{"in": "try:<nl><tab>result = simulate(open(\"myfile\"))<nl>except SimulationException as sim_exc:<nl><tab>print \"error parsing stream\", sim_exc<nl>else:<nl><tab>if result:<nl><tab><tab>print \"result pass\"<nl><tab>else:<nl><tab><tab>print \"result fail\"<nl><nl># execution continues from here, regardless of exception or not", "out": "Pythonでは、変数がNone、True、Falseのいずれであるかをテストする方法", "out_en": "In Python how should I test if a variable is None, True or False"}
{"in": "file_local = open( folder_path + file_id + '.pdf', 'wb' )", "out": "PythonでダウンロードしたPDFファイルをAcrobatで開くことができない", "out_en": "PDF files downloaded with Python cannot be opened in acrobat"}
{"in": "file.seek(0)", "out": "python:すべてのファイルにAnalyticsコードを挿入します。", "out_en": "python insert Analytics code into all files"}
{"in": "os.system('php -f file.php')", "out": "PythonからのPHPの呼び出し", "out_en": "Calling PHP from Python"}
{"in": "from lockfile.pidlockfile import PIDLockFile<nl>from lockfile import AlreadyLocked<nl><nl>pidfile = PIDLockFile(\"/var/run/mydaemon.pid\", timeout=-1)<nl>try:<nl><tab>pidfile.acquire()<nl>except AlreadyLocked:<nl><tab>try:<nl><tab><tab>os.kill(pidfile.read_pid(), 0)<nl><tab><tab>print 'Process already running!'<nl><tab><tab>exit(1)<nl><tab>except OSError:  #No process with locked PID<nl><tab><tab>pidfile.break_lock()<nl><nl>#pidfile can now be used to create DaemonContext", "out": "古いPIDファイルが存在する場合、python-daemonコンテキストの起動に失敗する", "out_en": "python-daemon context fails to start when a stale PID file is present"}
{"in": "import sys <nl><nl>fileTemps = 'temps'<nl><nl>with open(fileTemps, 'rw') as fd:<nl><tab>temps = fd.readlines()<nl><nl>if temps.__len__() >= 15:<nl><tab>temps.pop(0)<nl><nl>temps.append(' '.join(sys.argv[1:]) + '<nl>')<nl><nl>with open(fileTemps, 'w') as fd:<nl><tab>for l in temps:<nl><tab><tab>fd.write(l)", "out": "Pythonで最後の15個の値をファイルに格納する", "out_en": "Store 15 last values on a file on Python"}
{"in": "def print_divide(x,y):<nl><tab>try:<nl><tab><tab>print x/y<nl><tab>except ZeroDivisionError:<nl><tab><tab>pass", "out": "条件が満たされた後のAvoid IF文", "out_en": "Avoid IF statement after condition has been met"}
{"in": "def tail_pg():<nl><tab>log = sudo('ls -t /var/lib/pgsql/9.3/data/pg_log/| head -n 1')<nl><nl><tab>print type(log), log<nl><tab>sudo('tail -n 25 -f %s' % log, pty=True)", "out": "Python Fabric出力を変数に保存", "out_en": "Python Fabric Save Output to Variable"}
{"in": "map_by_state = collections.defaultdict(list)<nl><nl>for state, address in zip (statefloatingselfips, selfips):<nl><tab>map_by_state[state].append(address)", "out": "2つのリストを結合したzipを使用して作成された辞書", "out_en": "dictionary created using zip with combining two list"}
{"in": "def closest_common_ancestor(ds1, ds2):<nl><nl><tab><tab>while ds1 != None:<nl><tab><tab><tab><tab>dd = ds2<nl><tab><tab><tab><tab>while dd != None:<nl><tab><tab><tab><tab><tab><tab>if ds1 == dd:<nl><tab><tab><tab><tab><tab><tab><tab><tab>return dd<nl><tab><tab><tab><tab><tab><tab>dd = dd.parent<nl><tab><tab><tab><tab>ds1 = ds1.parent<nl><tab><tab>return None", "out": "Pythonでカスタマイズされた方法でのツリートラバース?", "out_en": "Tree traversal in a customised way in Python?"}
{"in": "import urllib<nl>content = urllib.urlopen('http://www.google.com/').read()", "out": "Python:ファイルを読み込む(外部サーバから)", "out_en": "Python: Read a file (from an external server)"}
{"in": "OrderedDict((k, v) for k, v in zip(list_1, list_2) if v is not None)", "out": "2つのリストの条件付きzip", "out_en": "Conditional zip of two lists"}
{"in": "import rarfile<nl>import os.path<nl><nl>extracted_dir_name = \"samples/sample\"<tab># Directory with extracted files<nl>file = rarfile.RarFile(\"samples/sample.rar\", \"r\")<nl><nl># list file information<nl>for info in file.infolist():<nl><tab> print info.filename, info.date_time, info.file_size<nl><nl><tab> # Compare with extracted file here<nl><tab> extracted_file = os.path.join(extracted_dir_name, info.filename)<nl><tab> if info.file_size != os.path.getsize(extracted_file):<nl><tab><tab> print \"Different size!\"", "out": "archiwum.rarの内容と、Windows 7上のフォルダ内の.rarから抽出したデータを比較します。", "out_en": "Compare archiwum.rar content and extracted data from .rar in the folder on Windows 7"}
{"in": "class Shows(models.Model) :<nl><tab>title = models.TextField(primary_key=True)<nl><tab>description = models.TextField()  <nl><tab>image = models.TextField()<nl><tab>class Meta:<nl><tab><tab>db_table = 'shows'<nl><tab>def __str__(self):<nl><tab><tab>return self.title  <nl><nl><nl>class Episode(models.Model) :<nl><tab>show = models.ForeignKey(Show, related_name=\"episodes\")<nl><tab>title = models.TextField(primary_key=True)<nl><tab>link = models.TextField()  <nl><tab>show_title = models.ForeignKey(Shows)<nl><nl><tab>class Meta: <nl><tab><tab>db_table = 'episodes'<nl><tab>def __str__(self):<nl><tab><tab>return self.title", "out": "Djangoモデル、後方参照との1対多の関係[how]", "out_en": "Django models, one to many relationship with back reference [how]"}
{"in": "df_new = df.groupby('video_id').agg({\"ios_id\": {\"count\": \"count\",<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"distinct\": \"unique\"},<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> \"feed_position\": np.average,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> \"time_watched\": np.sum,<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab> \"video_length\": np.sum})", "out": "1つのgroupby列で集約オプションを実行して、2つの列出力を得る方法", "out_en": "How to perform aggregate options on one groupby column, giving two column outputs"}
{"in": "# How to load a text file as a corpus.<nl>import nltk<nl>from nltk.corpus import PlaintextCorpusReader<nl>from nltk.corpus.util import LazyCorpusLoader<nl>afrikaans = LazyCorpusLoader('afrikaans', PlaintextCorpusReader, r'(?!\\.).*\\.txt')<nl>afrikaans.sents()[1]<nl>af = nltk.Text(afrikaans.words())<nl>af.concordance(\"mense\")", "out": "nltkコーパスとしてアフリカーンス語の単語を含むテキストファイルにアクセスする方法", "out_en": "How to access a text file with Afrikaans language words as a nltk corpus"}
{"in": "for i in range(4):<nl><tab>ax.plot([VecStart_x[i], VecEnd_x[i]], [VecStart_y[i],VecEnd_y[i]],zs=[VecStart_z[i],VecEnd_z[i]])", "out": "Matplotlibを使用して簡単な3D線分を作成する方法", "out_en": "How can I make a simple 3D line with Matplotlib?"}
{"in": "request = urllib2.Request('http://localhost:8080/manager/deploy?path=/war_file', data=war_file_contents)", "out": "Pythonを使用したtomcatへのwarの配備", "out_en": "deploying a war to tomcat using python"}
{"in": "grt.root.wb.doc.physicalModels[0].catalog.schemata[0].tables[1].columns[7].flags.append('UNSIGNED')", "out": "MySQL Workbenchスクリプトシェルでの列フラグの変更", "out_en": "Change column flags in MySQL Workbench scripting shell"}
{"in": "import maya.OpenMaya as OpenMaya<nl><nl>def projectPoint(worldPnt, camPnt, depth):<nl><tab>'''<nl><tab>@param worldPnt - MPoint of point to project. (WorldSpace)<nl><tab>@param camPnt - MPoint of camera position. (WorldSpace)<nl><tab>@param depth - Float value of distance.<nl><tab>Returns list of 3 floats.<nl><tab>'''<nl><tab>#Get vector from camera to point and normalize it.<nl><tab>mVec_pointVec = worldPnt - camPnt<nl><tab>mVec_pointVec.normalize()<nl><nl><tab>#Multiply it by the depth and the camera offset to it.<nl><tab>mVec_pointVec *= depth<nl><tab>mVec_pointVec += OpenMaya.MVector(camPnt.x, camPnt.y, camPnt.z)<nl><nl><tab>return [mVec_pointVec.x, mVec_pointVec.y, mVec_pointVec.z]", "out": "深度値を使用して2Dポイントを3Dに投影します。Maya Python API", "out_en": "Project a 2D Point to 3D using a depth value. Maya Python API"}
{"in": "l1 = [['a','b'],['b','c'],[]]<nl>l2 = [0,1,3]<nl>l3 = [l1[i] + [x] for i, x in enumerate(l2)]", "out": "リストのリストと2番目のリストを組み合わせて1つのリストのリストにする方法", "out_en": "How to combine a list of lists with a second list into a single list of lists?"}
{"in": "from matplotlib.pyplot import imshow, colorbar<nl><nl>data = [[0.0,0.2],[0.5,1.0]]<nl>imshow(data)<nl><nl>cb = colorbar()<nl>cb.ax.plot([0,1],[cb.norm(0.3),cb.norm(0.3)],'r')<nl>cb.ax.plot([0,1],[cb.norm(0.8),cb.norm(0.8)],'r')", "out": "colorbar pythonでプロットする方法", "out_en": "how can I plot on colorbar python"}
{"in": "response = render(request, template, context)<nl>response.set_cookie('my_cookie', 'my_cookie_value')<nl>return response", "out": "Django:一時セッションに加えて、クラス・ベースのビューで(永続的な)Cookieを設定する方法は?", "out_en": "Django: How to set a (permanent) cookie, in addition to temp session, in Class based views?"}
{"in": "def get_resolution(filename):<nl><tab>with open(filename, \"rb\") as f:<nl><tab><tab>data = f.read()<nl><tab>if data[0:2] != b\"\\xff\\xd8\":<nl><tab><tab>raise ValueError(\"Not JPEG.\")<nl><tab>if data[2:4] != b\"\\xff\\xe0\":<nl><tab><tab>return None<nl><tab>else:<nl><tab><tab>if data[13] == b\"\\x00\":<nl><tab><tab><tab>unit = \"no unit\"<nl><tab><tab>elif data[13] == b\"\\x01\":<nl><tab><tab><tab>unit = \"dpi\"<nl><tab><tab>elif data[13] == b\"\\x02\":<nl><tab><tab><tab>unit = \"dpcm\"<nl><tab><tab>else:<nl><tab><tab><tab>raise ValueError(\"Bad JFIF\")<nl><tab><tab>x = 256 * ord(data[14]) + ord(data[15])<nl><tab><tab>y = 256 * ord(data[16]) + ord(data[17])<nl><tab>return {\"unit\":unit, \"resolution\":(x, y)}", "out": "Python(Windows)でイメージファイルの詳細を抽出する方法", "out_en": "How to extract image file details in Python (Windows)?"}
{"in": "class MyForm(forms.Form):<nl><tab>email = forms.EmailField(required=False)<nl><tab>cell = forms.CharField(required=False, max_length=20)<nl><nl><tab>def clean(self):<nl><tab><tab>cleaned_data = super(MyForm, self).clean()<nl><tab><tab>if cleaned_data.get('email') and cleaned_data.get('cell'):<nl><tab><tab><tab>raise forms.ValidationError(\"Please select either E-mail address or cell number, but not both\")<nl><tab><tab>return cleaned_data", "out": "DjangoでのJavaScript検証後にPythonビューにポストする", "out_en": "Post to Python view after Javascript validation in Django"}
{"in": "import urllib2<nl>import json<nl>response = urllib.request.urlopen('https://api.ripple.com/v1/accounts/rssc7gemsZBsseHxyb5NmjfYpJD6aUJirq/balances')<nl>html = response.read()<nl>json_data = json.loads(html)", "out": "APIで情報を処理して返す(JSONとPythonの間で)にはどうすればよいのでしょう?", "out_en": "How to process and return information in API (JSON to Python and back)?"}
{"in": "w = root.winfo_reqwidth()<nl>h = root.winfo_reqheight()<nl>ws = root.winfo_screenwidth()<nl>hs = root.winfo_screenheight()<nl>x = (ws/2) - (w/2)<nl>y = (hs/2) - (h/2)<nl>root.geometry('+%d+%d' % (x, y)) ## this part allows you to only change the location", "out": "ウィンドウのセンタリングpython tkinter", "out_en": "Centering window python tkinter"}
{"in": "import numpy as np<nl><nl>def F(c,D,x):<nl><tab>\"\"\"Assume c and x are numpy arrays of equal size and D is a scalar\"\"\"<nl><tab># differencing of the concentration field<nl><tab>deltac = np.diff(c)<nl><tab>deltax = np.diff(x)<nl><nl><tab>return -D * deltac / deltax", "out": "Fickの拡散の第一法則を細胞膜を通過する水の移動のシミュレーションに適用しようとする試み", "out_en": "Trying to implement Fick's first law of diffusion in a simulation of water movement across cell membrane"}
{"in": "import asyncmongo<nl>import tornado.web<nl><nl>class Handler(tornado.web.RequestHandler):<nl><nl><tab>@tornado.web.asynchronous<nl><tab>def get(self, id):<nl><tab><tab>self.id = id<nl><tab><tab>self.db = asyncmongo.Client(pool_id='mypool', host='localhost', <nl><tab><tab><tab>port=27107, dbname='mydb')<nl><nl><tab><tab>self.db.users.find_one({'username': self.current_user}, <nl><tab><tab><tab>callback=self.on_user)<nl><nl><tab>def on_user(self, response, error):<nl><tab><tab>if error:<nl><tab><tab><tab>raise tornado.web.HTTPError(500)<nl><tab><tab>self.user = response<nl><tab><tab>self.db.documents.find_one({'id': self.id, 'user': self.user}, <nl><tab><tab><tab>callback=self.on_document)<nl><nl><tab>def on_document(self, response, error):<nl><tab><tab>if error:<nl><tab><tab><tab>raise tornado.web.HTTPError(500)<nl><tab><tab>self.render('template', first_name=self.user['first_name'],<nl><tab><tab><tab>document=response)", "out": "Tornadoを使用した非同期要求での複数のデータベース呼び出し", "out_en": "Multiple Database calls in an asynchronous request with Tornado"}
{"in": "import datetime<nl>from System import DateTime<nl>datetime.datetime(DateTime.Now)", "out": "NET DateTimeからIronPython DateTimeに変換する方法は?", "out_en": "How do I convert from a .NET DateTime to an IronPython datetime?"}
{"in": "step1 = Popen(['ip','addr','show','br0'],stdout=PIPE)<nl>step2 = Popen(['grep','inet6'],stdout=PIPE,stdin=step1.stdout)<nl>step3 = Popen(['sed','-e','/fe80/d','-e','s/ *inet6 *//g','-e','s/\\/64.*$//g'],stdout=PIPE,stdin=step2.stdout)<nl>step4 = Popen(['tail','-n1'],stdout=PIPE,stdin=step3.stdout)<nl>step4.communicate()[0]", "out": "LinuxでインタフェースのIPv6アドレスを取得する方法", "out_en": "How to get the IPv6 address of an interface under linux"}
{"in": "str(inventor1.encode(\"UTF-8\") if inventor1 else inventor1)", "out": "AttributeError:'NoneType'オブジェクトにはlxml-pythonの'encode'属性がありません", "out_en": "AttributeError: 'NoneType' object has no attribute 'encode' with lxml-python"}
{"in": "def walk_on_the_beach(sig, t, interval=1000):<nl><tab>\"\"\"<nl><tab>:param sig: signal.<nl><tab>:param t: threshold.<nl><tab>:param interval: interval between next value check (ms).<nl><tab>\"\"\"<nl><tab>last_value = 0<nl><tab>interval_flag = True<nl><tab>interval_iterator = 0<nl><tab>markers = np.zeros(np.size(sig))<nl><tab>for i in np.arange(np.size(sig)):<nl><tab><tab>absolute = np.abs(last_value - sig[i])<nl><tab><tab>last_value = sig[i]<nl><tab><tab>if interval_flag:<nl><tab><tab><tab>if absolute > t:<nl><tab><tab><tab><tab>markers[i] = np.max(sig)<nl><tab><tab><tab><tab>interval_flag = False<nl><tab><tab>else:<nl><tab><tab><tab>if interval_iterator == interval:<nl><tab><tab><tab><tab>interval_flag = True<nl><tab><tab><tab><tab>interval_iterator = 0<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>interval_iterator += 1<nl><nl><tab>return markers<nl><nl>py.plot(time_scale[:100000], walk_on_the_beach(filtered, 0.02))", "out": "信号をマークする", "out_en": "Marking a signal"}
{"in": "[[row[i] for row in data] for i in range(len(data[0]))]", "out": "numpyやzip(あるいは他のインポート)を使わずに行列を転置する方法", "out_en": "How to transpose a matrix without using numpy or zip (or other imports)"}
{"in": "output = open('/home/user/test/wsservice/data.pkl', 'wb')", "out": "pickleにデータを格納中にIOエラーが発生しました", "out_en": "IO Error while storing data in pickle"}
{"in": "class HttpResponseSeeOther(HttpResponseRedirect):<nl><tab>status_code = 303<nl><nl>return HttpResponseSeeOther('/other-url/')", "out": "Djangoで303 Http Responseを生成する方法", "out_en": "How to produce a 303 Http Response in Django?"}
{"in": "distance = [self.dx - self.x - offsetx, self.dy - self.y - offsety]", "out": "pygameの弾丸物理はスクロールによって混乱した", "out_en": "pygame bullet physics messed up by scrolling"}
{"in": "json.loads(request.body.decode('utf-8'))", "out": "json.loadsは、PythonでAngularJSによってポストされたバイナリJSONでは動作しない", "out_en": "json.loads doesn't work with binary JSON posted by AngularJS in Python"}
{"in": "import cx_Oracle<nl>conn_to = cx_Oracle.connect('user', '...', 'dbserver:1521/ENGR') <nl><nl>cur_to = conn_to.cursor()<nl><nl>insert_sql = 'insert into tc values (:val, xmltype(:xmlval))' # need to wrap with xmltype() !<nl><nl>cur_to.setinputsizes(val=cx_Oracle.CLOB, xmlval=cx_Oracle.CLOB) # need to set to cx_Oracle.CLOB!<nl>s =  ('<xml>' + '<inner/>' * 550 + '</xml>')<nl>cur_to.execute(insert_sql, val = s, xmlval = s)<nl><nl>conn_to.commit()", "out": "cx_Oracle大容量のXMLType値を挿入", "out_en": "cx_Oracle insert large XMLType value"}
{"in": "title = text.encode('utf8')", "out": "非UTFシンボルでのMySQLdbによるUtf8エンコード", "out_en": "Utf8 encoding with MySQLdb on non-utf symbols"}
{"in": "telconn.sendline(password + '<nl>')", "out": "Pythonスクリプトを使用したLinux PCからWindows PCへのTelnet", "out_en": "telnet from linux pc to windows pc using python script"}
{"in": "items = Item.all().order('name').fetch(10)<nl>headers = ['Name', 'Price', 'Quantity']<nl>viewitems = [[getattr(x, h) for h in headers] for x in items]<nl><nl>template_values = {'items': viewitems,<nl><tab><tab><tab><tab>   'headers': headers}<nl>render('Views/table.html', self, template_values)", "out": "Django:配列のインデックスとして変数を使用する", "out_en": "Django: using variables as array indices?"}
{"in": "parse.y", "out": "SQLコマンドを含む文字列の解析/トークン化", "out_en": "Parsing/Tokenizing a String Containing a SQL Command"}
{"in": "def printList(l, dict1):<nl><tab>for l1 in l:<nl><tab><tab>if dict1.has_key(l1):<nl><tab><tab><tab>print \"withinrange\"<nl><tab><tab>else:<nl><tab><tab><tab>print \"outsiderange\"<nl><nl>file = open(\"test1.txt\")<nl>textfile = file.readlines()<nl>dict={'sca4': [['BM1', 17], ['BM2', 33]], 'sca6': [['GM2', 46], ['GM2', 67], ['BM',17]]}<nl>dict1 = {}<nl>l =[]<nl>key = ''<nl>for line in textfile:<nl><tab>if not line.strip():<nl><tab><tab>continue<nl><tab>col1, col2, col3 = line.strip().split(\" \")<nl><tab>if not (key == col1):<nl><tab><tab>printList(l, dict1)<nl><tab><tab>l =[]<nl><tab><tab>key = col1<nl><tab><tab>dict1 = {}<nl><tab>for value_list in dict.get(col1, []):<nl><tab><tab>#print value_list[1]<nl><tab><tab>if not (value_list[1] in l):<nl><tab><tab><tab>l.append(value_list[1])<nl><tab><tab>if ((int(col2) <= value_list[1]) and (value_list[1] <= int(col3))):<nl><tab><tab><tab>dict1[value_list[1]] = 'correct'<nl>printList(l, dict1)", "out": "dictの複素数値が特定の条件に一致するかどうかをチェックする", "out_en": "Check if complex values of dict matches certain criteria"}
{"in": "self.response.out.write(today.strftime(\"\"\"<html><body><p style='color:#3E3535'>%A, %d %B</p>\"\"\"))", "out": "if文の構文が無効です", "out_en": "if statement invalid syntax"}
{"in": "matrix = [[0 for i in range(7)] for j in range(7)]<nl>with open('t.dat.txt', 'r') as source:<nl><tab>for line in source:<nl><tab><tab>i, j, value = line.split()<nl><tab><tab>i, j = int(i), int(j)<nl><tab><tab>matrix[i - 1][j - 1] = float(value)", "out": "txtファイルから行列/配列を作成するにはどうすればいいですか?", "out_en": "How can I create a matrix/array from a txt file?"}
{"in": "import xmlrpclib, httplib<nl><nl>class TimeoutTransport(xmlrpclib.Transport):<nl><tab>timeout = 10.0<nl><tab>def set_timeout(self, timeout):<nl><tab><tab>self.timeout = timeout<nl><tab>def make_connection(self, host):<nl><tab><tab>h = httplib.HTTPConnection(host, timeout=self.timeout)<nl><tab><tab>return h<nl><nl>t = TimeoutTransport()<nl>t.set_timeout(20.0)<nl>server = xmlrpclib.Server('http://time.xmlrpc.com/RPC2', transport=t)", "out": "xmlrpclibクライアント要求のタイムアウト", "out_en": "Timeout for xmlrpclib client requests"}
{"in": "__init__.py", "out": "Python-ディレクトリからのモジュールのロード", "out_en": "Python - loading module from directory"}
{"in": "for FundingOppSynopsis in root.findall('FundingOppSynopsis'): <nl><tab>IDs = [int(category.text) for category in FundingOppSynopsis.findall('EligibilityCategory')]<nl><tab>if 99 not in IDs:<nl><tab><tab>root.remove(FundingOppSynopsis)", "out": "ElementTreeを使ったPython XML構文解析:同じ名前を持つ要素の値を見つける方法", "out_en": "Python XML parsing with ElementTree: How to find values of elements with the same name?"}
{"in": "def rem(a):<nl><tab>copy = a[:]<nl><tab>for value in set(copy):<nl><tab><tab>copy.remove(value)<nl><tab>return copy", "out": "Pythonで重複する値をすべて含むリストを返す", "out_en": "Return a list with every duplicate value in Python?"}
{"in": "class VForm(forms.ModelForm):<nl><nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>super(VForm, self).__init__(*args, **kwargs)<nl><nl><tab><tab>if self.instance.field == 'Y':<nl><tab><tab><tab>self.fields['field2'] = forms.ChoiceField(<nl><tab><tab><tab><tab>choices=[(self.instance.field,<nl><tab><tab><tab><tab><tab><tab>  self.instance.field),], required=True)", "out": "Djangoフォームでレコードを読み取り専用にする方法は?", "out_en": "How to make a record read-only in a Django form?"}
{"in": "f = open('file.txt', 'rb')<nl><nl>stream = f.readlines()", "out": "PythonでXMODEMを使用してファイルを送信する", "out_en": "send file using XMODEM in python"}
{"in": "print(\"Content-Type: text/html<nl><nl>\")<nl>print(\"\"\"<html><nl> <head></head><nl> <body><nl> <form name='success' action='nav.py' method='post'><nl><tab> <input type='hidden' name='linkB' value='Add Assets' /><nl> </form><nl> <script type='text/javascript'><nl><tab> document.success.submit()<nl> </script><nl> </body>\"\"\")", "out": "現在のcgi-scriptから別のpython cgi-scriptにポストします。", "out_en": "Post to another python cgi-script from the current cgi-script"}
{"in": "import wx.lib.agw.speedmeter", "out": "パネルとしてWxPythonアプリケーションにtkinterウィジェットをインポートする", "out_en": "import a tkinter widget in wxpython application as a panel"}
{"in": "FileC = FileA.append(FileB ,ignore_index = True)", "out": "同じ数の機能を持つ2つのcsvファイルを結合するPython", "out_en": "Combine 2 csv files with same no. of features Python"}
{"in": "import sys<tab><tab> # top-level<nl><nl>3 + 4<tab><tab><tab>  # top-level<nl><nl>x = 0<tab><tab><tab>  # top-level<nl><nl>def f():<tab><tab>   # top-level<nl><tab>import os<tab>  # not top-level!<nl><tab>return 3<tab>   # not top-level<nl><nl>if x:<tab><tab><tab>  # top-level<nl><tab>print 3<tab><tab># not top-level<nl>else:<nl><tab>print 4<tab><tab># not top-level, but executes as part of an if statement<nl><tab><tab><tab><tab>   # that is top-level<nl><nl>class TopLevel(object): # top-level<nl><tab>x = 3<tab><tab>  # not top-level, but executes as part of the class statement<nl><tab>def foo(self): # not top-level, but executes as part of the class statement<nl><tab><tab>print 5<tab># not top-level", "out": "Pythonのトップレベルステートメントとは?", "out_en": "What is a top-level statement in Python?"}
{"in": "import os<nl>import sys<nl>import django<nl>sys.path.append('/path/to/django_project')<nl>from django_project import *<nl>os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django_project.settings')<nl>django.setup()", "out": "スタンドアロンのDjango ORM-デフォルト設定が認識されない", "out_en": "Standalone Django ORM - default settings not recognized"}
{"in": "from music21 import *<nl>s = converter.parse(filepath)<nl># assuming key changes are the same in all parts, just get the first part<nl>p = s.parts[0]<nl>pFlat = p.flat<nl>keySigs = pFlat.getElementsByClass('KeySignature')<nl>for k in keySigs:<nl><tab>print k.measureNumber", "out": "MusicXMLでのキー変更のメジャー番号の抽出", "out_en": "Extracting measure number of key change in MusicXML"}
{"in": "from itertools import islice<nl>for x in islice(L, 1, None): # start=1, stop=None<nl><tab>print(x)", "out": "特定のポイントからイテレータを作成する", "out_en": "Create an iterator from a certain point"}
{"in": "print x.rjust(40) + x.ljust(40)", "out": "Pythonでのスペースの問題", "out_en": "spacing issue in python"}
{"in": "data.append(dict(zip(('name', 'surname', 'phone', 'address', 'email', 'etc'),<nl><tab><tab><tab><tab><tab> line.split(\";\", 6))))", "out": "この例をPythonスタイルで作成するにはどうすればよいでしょう。", "out_en": "How write this example in python style?"}
{"in": "class TalkAdmin(admin.ModelAdmin):<nl><nl><tab>list_display = ['title', 'get_speakers', 'date']<nl><nl><tab>def get_speakers(self, obj):<nl><tab><tab>speakers = obj.speakers.all().order_by('name').values_list('name', flat=True)<nl><tab><tab>return ', '.join(speakers)", "out": "多対多リレーションの値をアルファベット順に並べ替えてから、最初の項目をlist_displayする", "out_en": "Alphabetically order values in a Many-to-Many relation, then list_display the first item"}
{"in": "request.session.pop('message')", "out": "Djangoでリクエスト・QueryDictからキーを削除する方法", "out_en": "How to remove key from request QueryDict in Django?"}
{"in": "import os<nl>dir = os.path.dirname(__file__)<nl>path = raw_input()<nl>if os.path.isabs(path):<nl><tab>print \"input path is absolute\"<nl>else:<nl><tab>path = os.path.join(dir, path)<nl><tab>print \"absolute path is %s\" % path", "out": "Pythonで相対パスを解決する方法", "out_en": "How to resolve relative paths in python?"}
{"in": "Type.objects.filter(type=typeImInterestedIn)", "out": "データベース(Django)のモデルからの値", "out_en": "Values from models from Database (Django)"}
{"in": "n = gdb.nodes.create(**nodeDict)", "out": "neo4jrestclientを使用して、Pythonディクショナリからプロパティを持つノードを作成する方法", "out_en": "How to use neo4jrestclient to make a node with properties from a python dictionary?"}
{"in": "templates/AndroidManifest.xml.tmpl", "out": "kivyでの標準および大画面の画面サポート", "out_en": "screen support in kivy set to normal and large screens"}
{"in": "base = b'\\x80abc'.decode(FSENCODING, \"replace\")", "out": "Python 2 UnicodeからPython 3への移植", "out_en": "Porting Python 2 Unicode to Python 3"}
{"in": "if __name__=='__main__':<nl><tab>from timeit import Timer<nl><tab>t = Timer(lambda: superMegaIntenseFunction(10))<nl><tab>print t.timeit(number=1)", "out": "関数に変数を渡すときにPythonのtimeitを使用する方法", "out_en": "How to use python timeit when passing variables to functions?"}
{"in": "hash-timestamp", "out": "有効期限付きのEtagの作成方法", "out_en": "How create an Etag with an expire date"}
{"in": "Teams = ['Boston Americans','World Series Not Played in 1904','New York Giants',<nl><tab><tab> 'Chicago White Sox','Chicago Cubs','Chicago Cubs','Pittsburgh Pirates',<nl><tab><tab> 'Philadelphia Athletics']<nl>Year = [1903,1904,1905,1906,1907,1908,1909,1910]<nl><nl>l = zip(Teams, Year)<nl>d = {}<nl>for e in l:<nl><tab>if e[0] not in d:<nl><tab><tab>d[e[0]] = [e[1]]<nl><tab>else:<nl><tab><tab>d[e[0]].append(e[1])<nl><nl>#Max Item<nl>s = sorted(d.items(), key=lambda x: len(x[1]))[-1]<nl>print(\"%s - %s\" % (s[0], len(s[1])))<nl><nl># Entire list<nl>for k, v in sorted(d.items(), key=lambda x: -len(x[1])):<nl><tab>print(\"%s - %s\" % (k, len(v)))", "out": "ディクショナリ:ディクショナリ内の最大項目から最小項目までのリスト全体を印刷します。", "out_en": "Dictionary: Print entire list from max to min items in a dictionary"}
{"in": "df = df[~df['addzip'].str.contains(\"[a-zA-Z]\").fillna(False)]", "out": "Pandas Python:ASCII文字を含むDF行の削除", "out_en": "Pandas Python: Delete Rows of DF That Have ASCII Letters"}
{"in": "catalog = getToolByName(context, 'portal_catalog')<nl>for brain in catalog(portal_type='MyType'):<nl><tab>obj = brain.getObject()<nl><tab>if obj._ordering == 'unordered':<nl><tab><tab>obj.setOrdering(u'')<nl><tab>order = obj.getOrdering()<nl><tab>for id in obj._tree:<nl><tab><tab>if id not in order._order():<nl><tab><tab><tab>order.notifyAdded(id)", "out": "注文されていないフォルダをPloneで注文されたフォルダに移行する方法", "out_en": "How do you migrate an unordered folder to an ordered in Plone"}
{"in": "sys.stdout = codecs.getwriter('utf8')(sys.stdout.buffer, 'strict')<nl>sys.stderr = codecs.getwriter('utf8')(sys.stderr.buffer, 'strict')", "out": "Twitterデータの抽出中にUnicodeEncodeErrorが発生しました", "out_en": "UnicodeEncodeError is occurring while extracting Twitter data"}
{"in": "import time<nl>import threading<nl>import win32ui, win32gui, win32com, pythoncom, win32con<nl>from win32com.client import Dispatch<nl><nl>class IeThread(threading.Thread):<nl><tab>def run(self):<nl><tab><tab>pythoncom.CoInitialize()<nl><tab><tab>ie = Dispatch(\"InternetExplorer.Application\")<nl><tab><tab>ie.Visible = 0<nl><tab><tab>ie.Navigate('http://website/file.xml')<nl><nl>def PushButton(handle, label):<nl><tab>if win32gui.GetWindowText(handle) == label:<nl><tab><tab>win32gui.SendMessage(handle, win32con.BM_CLICK, None, None)<nl><tab><tab>return True<nl><nl>IeThread().start()<nl>time.sleep(3)  # wait until IE is started<nl>wnd = win32ui.GetForegroundWindow()<nl>if wnd.GetWindowText() == \"File Download - Security Warning\":<nl><tab>win32gui.EnumChildWindows(wnd.GetSafeHwnd(), PushButton, \"&Save\");<nl><tab>time.sleep(1)<nl><tab>wnd = win32ui.GetForegroundWindow()<nl>if wnd.GetWindowText() == \"Save As\":<nl><tab>win32gui.EnumChildWindows(wnd.GetSafeHwnd(), PushButton, \"&Save\");", "out": "IEを使用してPythonからファイルをダウンロードしています", "out_en": "Downloading file using IE from python"}
{"in": "import time<nl>import serial<nl><nl># configure the serial connections (the parameters differs on the device you are connecting to)<nl>ser = serial.Serial(<nl><tab>port='COM2',<nl><tab>baudrate=9600,<nl><tab>timeout=1,<nl><tab>parity=serial.PARITY_ODD,<nl><tab>stopbits=serial.STOPBITS_TWO,<nl><tab>bytesize=serial.SEVENBITS<nl>)<nl>ser.isOpen()<nl># Reading the data from the serial port. This will be running in an infinite loop.<nl><nl>while 1 :<nl><tab><tab># get keyboard input<nl><tab><tab>bytesToRead = ser.inWaiting()<nl><tab><tab>data = ser.read(bytesToRead)<nl><tab><tab>time.sleep(1)<nl><tab><tab>print(data)", "out": "Pythonを使用したRS 232ポートからの読み取り", "out_en": "Reading from RS 232 port using python"}
{"in": "db = server['test']<nl>for doc in db:<nl><tab>print doc<nl><tab>for key in db[doc].keys():<nl><tab><tab>print key", "out": "couchdb-pythonを使ってcouchdb文書のフィールド・セットをイントロスペクションする方法", "out_en": "how to introspect a couchdb document for its set of fields via couchdb-python"}
{"in": "parent.children_set.all()", "out": "ジャンゴ関係を逆方向にたどる方法は?", "out_en": "django how to following relationships backwards?"}
{"in": "import wx<nl><nl>class main(wx.Frame):<nl><tab>def __init__(self):<nl><tab><tab>wx.Frame.__init__(self, None, -1, \"Testing an app\")<nl><tab><tab>self.Maximize()<nl><tab><tab>panel = wx.Panel(self, -1)<nl><tab><tab>textList = wx.StaticText(panel, -1, \"Text1\")<nl><tab><tab>self.listBox = wx.ListBox(panel, -1, choices=[\"Some large text\", \"another large text\"], size=(400, 400))<nl><tab><tab>text = wx.StaticText(panel, -1, \"Content\")<nl><tab><tab>self.text = wx.TextCtrl(panel, -1, \"\", style=wx.TE_READONLY|wx.TE_MULTILINE, size=(500, 500))<nl><nl><tab><tab>listbox = wx.BoxSizer(wx.HORIZONTAL)<nl><tab><tab>listbox.Add(textList)<nl><tab><tab>listbox.Add(self.listBox)<nl><nl><tab><tab>textbox = wx.BoxSizer(wx.HORIZONTAL)<nl><tab><tab>textbox.Add(text)<nl><tab><tab>textbox.Add(self.text)<nl><nl><tab><tab>sizer = wx.BoxSizer(wx.HORIZONTAL)<nl><tab><tab>sizer.Add(listbox)<nl><tab><tab>sizer.Add(textbox)<nl><tab><tab>panel.SetSizer(sizer)<nl>  # Some stuff here...<nl>if __name__ == \"__main__\":<nl><tab>app = wx.App()<nl><tab>frame = main().Show()<nl><tab>app.MainLoop()", "out": "WxPythonウィジェットを画面に表示します", "out_en": "Shows WxPython widgets on the Screen"}
{"in": "start=re.sub(r'(\\+.*)|(\\-.*)$', '', startTime)", "out": "datetimeのフォーマット時にタイムゾーンが検出されない", "out_en": "Time zone is not detected when formating datetime"}
{"in": "class GameForm(forms.ModelForm): <nl><tab><tab>name = forms.CharField(max_length=15, label='Name') <nl><tab><tab>url = forms.URLField(label='URL', initial='http://') <nl><tab><tab>cats = forms.ModelMultipleChoiceField(widget=forms.CheckboxSelectMultiple(),required=True)<nl><tab><tab>class Meta: <nl><tab><tab><tab><tab>model = Game <nl><tab><tab><tab><tab>fields = ('name','url','cats')", "out": "ManyToManyFieldをチェックボックスとしてレンダリングする方法", "out_en": "How can I render a ManyToManyField as checkboxes?"}
{"in": "for x, y in itertools.izip(l, l[1:]): print x, y", "out": "リスト内のスライディングウィンドウペアに対するPythonの反復処理", "out_en": "Pythonic iteration over sliding window pairs in list?"}
{"in": "datetime.date", "out": "timezone-aware datetime.dateオブジェクトを使用できますか。", "out_en": "Can I have a timezone-aware datetime.date object?"}
{"in": "dict(zip([\"key1\",\"key2\",\"key3\"], [\"val1\",\"val2\",\"val3\"]))", "out": "2つのリスト(1つはキー、もう1つは値)をPythonのdictにマージする", "out_en": "Merge two lists,one as keys, one as values, into a dict in Python"}
{"in": "def grouper(iterable, n, fillvalue=None):<nl><tab>\"Collect data into fixed-length chunks or blocks\"<nl><tab># grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx<nl><tab>args = [iter(iterable)] * n<nl><tab>return izip_longest(fillvalue=fillvalue, *args)<nl><nl>from itertools import izip_longest # required by grouper<nl>i = [0, 0, 0, 0, 15, 28, 28, 28, 27, 27, 35, 44, 43, 43, 42, 39]<nl>lowest = None<nl>highest = None<nl>for z,q in grouper(i, 2):<nl><tab>v = z-q<nl><tab>if v < lowest:<nl><tab><tab>lowest = v<nl><tab>if v > highest:<nl><tab><tab>highest = v<nl>print(lowest)<nl>print(highest)", "out": "Pythonで連続する値の差を計算してarraylistを反復処理する", "out_en": "Iterate through arraylist calculating the difference of consecutive values in python"}
{"in": "f = open('/tmp/output', 'wb')", "out": "Pythonファイルへの書き込みバイト数", "out_en": "Python Write bytes to file"}
{"in": "from twisted.internet import protocol, reactor<nl>from twisted.protocols.basic import LineReceiver<nl><nl>class Echo(LineReceiver):<nl><tab>def dataReceived(self, data):<nl><tab><tab>self.transport.write(data)<nl><nl><tab>def connectionLost(self, reason):<nl><tab><tab>print 'Client connection lost. Reason:<nl>{r}<nl>'.format(r=reason)<nl><tab><tab>LineReceiver.connectionLost(self, reason)<nl><tab><tab>reactor.stop()<nl><nl>class EchoFactory(protocol.Factory):<nl><tab>def buildProtocol(self, addr):<nl><tab><tab>return Echo()<nl><nl>reactor.listenTCP(8000, EchoFactory())<nl>reactor.run()", "out": "真実の声明を破る方法", "out_en": "How to break a while true statement"}
{"in": "User.phone_number << contacts", "out": "PeeweeでIN演算子を使用する方法", "out_en": "How to do an IN operator in peewee"}
{"in": "list = [\"simon\", \"tom\", \"sarah\", \"peter\", \"jane\"]<nl>word = input()<nl>if word.lower() in list:<nl><tab>print('Ok')<nl><tab>#continue with rest of program<nl>else:<nl><tab> print('No, sorry')", "out": "Pythonユーザ入力で特定の単語だけを受け入れる方法", "out_en": "Python How to accept only certain words with user input"}
{"in": "import matplotlib.pyplot as plt<nl>import matplotlib.ticker as ticker<nl>import numpy as np<nl><nl>fig = plt.figure()<nl>ax = fig.add_subplot(1,1,1)<nl><nl>mu, sigma=100, 15<nl>x=mu + sigma*np.random.randn(1000000)<nl>n, bins, patches=ax.hist(x, 50, facecolor='green', alpha=0.75)<nl><nl>ax.yaxis.set_major_formatter(ticker.FuncFormatter(lambda y, pos: ('%.2f')%(y*1e-3)))<nl>ax.set_ylabel('Frequency (000s)')<nl><nl>plt.show()", "out": "Matplotlibヒストグラム(頻度は千)", "out_en": "Matplotlib histogram, frequency as thousands"}
{"in": "import os<nl>import shutil<nl>import glob<nl><nl>src = 'source_folder'<nl>name = 'D_folder_name'<nl><nl>#In your case this would be something like C:\\\\A<nl>top = 'root_folder for destination'<nl><nl>for root, dirs, files in os.walk(top):<nl><tab>if name in dirs:<nl><tab><tab>for filename in glob.glob(os.path.join(src, '*.*')):<nl><tab><tab><tab>shutil.copy(filename, os.path.join(root,name))", "out": "Windowsコマンドプロンプトで、ユーザーが指定した名前を持つ複数のディレクトリに1つ(または複数)のファイルをコピーします。", "out_en": "In Windows command prompt, copy one file (or multiple files) to multiple directories that have a user specified name"}
{"in": "xrange(len(strval))", "out": "enumerateを使用せずに同じ結果を得る方法", "out_en": "How do I get same result without using enumerate?"}
{"in": "from matplotlib.patches import Rectangle<nl>import numpy as np<nl>import pylab as P<nl><nl>xs = np.arange(0,10,0.1)<nl>line1 = P.plot(xs,np.sin(xs),\"r-\", label=\"lower limit\")[0]<nl>line2 = P.plot(xs,np.sin(xs-1)+3,\"b-\", label=\"upper limit\")[0]<nl>P.fill_between(xs,np.sin(xs), np.sin(xs-1)+3,color='green', alpha=0.5, label=\"test\")<nl>rect = Rectangle((0, 0), 1, 1, fc=\"g\", alpha=0.5)<nl>P.legend([line1, line2, rect], [\"lower limit\", \"upper limit\", \"green area\"])<nl>P.show()", "out": "グラフの下の色付き領域にラベルを付ける", "out_en": "Labelling a coloured area under a graph"}
{"in": "while(self.d(resourceId=\"android:id/text1\").text!='Hawaii'):<nl><tab><tab>self.d.press('down');<nl>self.d.press('enter')", "out": "ボタンをクリックできますが、次のページがネイティブのAndroidアプリケーションでロードされません。", "out_en": "Able to click on button but next page is not loading in my native android application"}
{"in": "#!/usr/bin/python<nl>import sys<nl>import zlib<nl>f = open(sys.argv[1], \"rb\")<nl>g = open(sys.argv[2], \"wb\")<nl>z = zlib.decompressobj()<nl>while True:<nl><tab>buf = z.unconsumed_tail<nl><tab>if buf == \"\":<nl><tab><tab>buf = f.read(8192)<nl><tab><tab>if buf == \"\":<nl><tab><tab><tab>break<nl><tab>got = z.decompress(buf)<nl><tab>if got == \"\":<nl><tab><tab>break<nl><tab>g.write(got)", "out": "部分zlibファイルを展開する方法", "out_en": "How to inflate a partial zlib file"}
{"in": "class Scores(base):<nl><tab>__tablename__ = 'center_master'<nl><tab>id = Column(Integer(), primary_key=True)<nl><tab>email = Column(String(255), index=True)", "out": "EC2 MicroインスタンスでのMySQLのパフォーマンスが低い", "out_en": "Poor MySQL performance on EC2 Micro instance"}
{"in": "import os<nl>dir_path = '%s\\\\Example\\\\' %  os.environ['APPDATA'] <nl>if not os.path.exists(dir_path):<nl><tab>os.makedirs(dir_path)<nl><nl>file_path = '%sexample.db' % dir_path<nl>sqlite3.connect(file_path)", "out": "\"AppData\\Roaming\"ディレクトリにフォルダを作成する[Python]", "out_en": "Creating a folder in the \"AppData\\Roaming\" directory [Python]"}
{"in": "app.add_url_rule", "out": "DjangoのようなFlask用のurls.pyファイルの作成", "out_en": "Making urls.py file for Flask like in Django"}
{"in": "class A(object):<nl><nl><tab>def __init__(self):<nl><tab><tab>self.a = 1<nl><tab><tab>self.b = 1<nl><nl><tab>@property<nl><tab>def a_plus_b(self):<nl><tab><tab>return self.a + self.b<nl><nl>foo = A()<nl>print foo.a_plus_b # prints \"2\"<nl>foo.a = 3<nl>print foo.a_plus_b # prints \"4\"<nl>foo.b = 4<nl>print foo.a_plus_b # prints \"7\"", "out": "Python-同じクラス内の他のプロパティの値に依存するクラスプロパティを設定する", "out_en": "Python - Set class property to depend on values of other properties in the same class"}
{"in": "import matplotlib as mpl<nl>mpl.use('macOsX')", "out": "Matplotlib-データのヒストグラム頻度エラー", "out_en": "Matplotlib - histogram frequency error with data"}
{"in": "clipboard = '&'.join(args)", "out": "文字列操作-引数のリスト間に「&」を文字列として挿入する", "out_en": "string manipulation - stringing '&' between a list of args"}
{"in": "db.execute(\"INSERT INTO present VALUES('test2', ?, 10)\", (None,))", "out": "PythonでSQLite3にNullを挿入する", "out_en": "Insert Null into SQLite3 in Python"}
{"in": "def selectDown(self):<nl><tab><tab>global topTxt, midTxt, backTxt, midTxtTab, list_<nl><tab><tab>print \"down pressed\"<nl><tab><tab>global blkNum <nl><tab><tab>cursor = midTxtTab.textCursor()<nl><tab><tab>cursor.movePosition(QtGui.QTextCursor.Start)<nl><tab><tab># cursor.movePosition(QtGui.QTextCursor.Down)<nl><nl><tab><tab>tmp = cursor.blockFormat()<nl><tab><tab>tmp.setBackground(QtGui.QBrush(QtCore.Qt.yellow))<nl><tab><tab>cursor.setBlockFormat(tmp)", "out": "QTextEdit PYQTでボタンを押したときに行選択を強調表示して変更する方法", "out_en": "how to highlight and change the line selection upon button press in QTextEdit PYQT"}
{"in": "serial_f = serial.Serial(port=dev, baudrate=BAUDRATE, timeout=2)<nl><nl>def write_serial():<nl><tab>status = serial_f.read(1)<nl><tab>serial_f.write(buffer)<nl><nl>loop = asyncio.get_event_loop()<nl>loop.add_reader(serial_f.fileno(), write_serial)", "out": "asyncioを使ってシリアルポートの出力を読み込む", "out_en": "Using asyncio to read the output of a serial port"}
{"in": "from google.appengine.api import rdbms<nl>conn = rdbms.connect(instance='instance_name', database='database', user='user', password='password')", "out": "Google App Engine(Python)を使用したMYSQLへのイメージのアップロード", "out_en": "Image upload to MYSQL using Google App Engine (Python)"}
{"in": "setattr(Person, 'first_name', 'John')", "out": "フォームを開始するためにDjangoで擬似モデルを動的に作成する場合のフィールドの除外", "out_en": "Excluding fields when dynamically creating a pseudo model in Django to initiate a Form"}
{"in": "for count in range(1,numGames+1):<nl><tab>print()<nl><tab>while True:<nl><tab><tab>try:<nl><tab><tab><tab>print(\"Game\",str(count))<nl><tab><tab><tab>atBats=input(\"How many at bats did the player have? \")<nl><tab><tab><tab>atBats=int(atBats)<nl><tab><tab><tab>hits=input(\"How many hits did the player have? \")<nl><tab><tab><tab>hits=int(hits)<nl><tab><tab><tab>battingAverage=hits/atBats<nl><tab><tab>except Exception as err:<nl><tab><tab><tab>print(\"Please enter a number\")<nl><tab><tab><tab>print(err)<nl><tab><tab><tab>continue<nl><tab><tab>break", "out": "ループでカウントをリセットする方法", "out_en": "How to make my count reset on for loops"}
{"in": "# Merge source and watermark pages<nl>page0 = source.getPage(0)<nl>over0 = overlay.getPage(0)<nl>if rotaion_angle:<nl><tab>page0.mergeRotatedAroundPointPage(<nl><tab><tab>over0,<nl><tab><tab>rotaion_angle,<nl><tab><tab>over0.mediaBox.getWidth() / 2,<nl><tab><tab>over0.mediaBox.getWidth() / 2)<nl><nl><tab>#page0.mergeRotatedPage(overlay.getPage(0), rotaion_angle, True)<nl>else:<nl><tab>page0.mergePage(over0)", "out": "Python PyPDF2マージ回転ページ", "out_en": "Python PyPDF2 merge rotated pages"}
{"in": "def print_books(d):<nl><tab>if isinstance(d['shelf'], dict):<nl><tab><tab>print d['shelf']['book']['title']<nl><tab>else:<nl><tab><tab>for book in d['shelf']:<nl><tab><tab><tab>print book['book']['title']", "out": "Python:ディクショナリ内のキーに関連付けられたすべての値を取得します。値はリストまたは単一の項目です。", "out_en": "Python: get all values associated with key in a dictionary, where the values may be a list or a single item"}
{"in": "import mechanize<nl><nl>br = mechanize.Browser()<nl>br.open(URL)<nl>br.select_form(nr=0)<nl>br.form['self'] = [\"88\"]<nl>r = br.submit()<nl><nl>print r.read()", "out": "Pythonはドロップダウン送信でチェックボックスを機械化する", "out_en": "Python mechanize checkboxes with dropdown submit"}
{"in": "j,k=input().split(\" \")<nl>j=int(j)<nl>k=int(k)", "out": "1行から複数の値を入力する方法", "out_en": "How do I input multiple values from a single line?"}
{"in": "trgmst_info = request.DATA['trgmst_info'][0]<nl>request_accts = ['request-dev', 'request-qa', 'request-uat', 'request-prod']<nl>for rep in request_accts:<nl><tab>request.DATA['trgmst_info'] = [rd.replace(rep, settings.REQUEST_ACCT) for rd in request.DATA['trgmst_info']]", "out": "Unicodeへの強制:文字列またはバッファが必要です。リストが見つかりました", "out_en": "coercing to Unicode: need string or buffer, list found"}
{"in": "#!/usr/bin/env python<nl>import sys<nl>n = int(sys.argv[1])<nl>data = sys.stdin.read()<nl>print(data[::n])", "out": "stdinのnバイトごとに出力する", "out_en": "Output every nth byte of stdin"}
{"in": "list.extend(['a3', 'a4'])", "out": "リストへの追加", "out_en": "Appending to a List"}
{"in": "os = getattr(__builtins__, \"\".join(chr(ord(x) - 1) for x in  \"``jnqpsu``\"))(\"os\")", "out": "Pythonでインポートするには、いくつの方法がありますか?", "out_en": "Importing in python, how many ways can it be done?"}
{"in": "import matplotlib.cm as cm<nl><nl>ab = np.array(abundance)<nl>gs = np.array(grain_size)<nl>ab_norm = ab/ab.max()*100<nl>plt.matshow([ab_norm], cmap=cm.gist_rainbow_r) <nl>plt.xticks(range(7), gs)<nl>plt.yticks(range(1), [\"abundance\"])<nl>plt.colorbar()<nl>plt.show()", "out": "matplotライブラリを使用した2Dヒートマップ", "out_en": "2D Heat Map using matplot lib"}
{"in": "from sgmllib import SGMLParser<nl>import urllib2<nl>import urllib<nl><nl># Define the class that will parse the suggestion XML<nl>class PullSuggestions(SGMLParser):<nl><nl>   def reset(self):<nl><tab>  SGMLParser.reset(self)<nl><tab>  self.suggestions = []<nl><tab>  self.queries = []<nl><nl>   def start_suggestion(self, attrs):<nl><tab>  for a in attrs:<nl><tab><tab> if a[0] == 'data': self.suggestions.append(a[1])<nl><nl>   def start_num_queries(self, attrs):<nl><tab>  for a in attrs:<nl><tab><tab> if a[0] == 'int': self.queries.append(a[1])<nl><nl># ENTER THE BASE QUERY HERE<nl><nl>base_query = \"\"  #This is the base query<nl><nl>base_query += \"%s\"<nl>alphabet = \"abcdefghijklmnopqrstuvwxyz\"<nl>for letter in alphabet:<nl>   q = base_query % letter;<nl>   query = urllib.urlencode({'q' : q})<nl>   url = \"http://google.com/complete/search?output=toolbar&%s\" % query<nl><nl>   res = urllib2.urlopen(url)<nl>   parser = PullSuggestions()<nl>   parser.feed(res.read())<nl>   parser.close()<nl><nl>   for i in range(0,len(parser.suggestions)):<nl><tab>  print \"%s\\t%s\" % (parser.suggestions[i], parser.queries[i])", "out": "Google Insights APIはありますか?", "out_en": "Is there a Google Insights API?"}
{"in": "from django import forms<nl>from django.db import models<nl>from django.contrib import admin<nl><nl>class Foo(models.Model):<nl><tab>pass<nl><nl>class Bar(models.Model):<nl><tab>foo = models.ForeignKey(Foo)<nl><nl>class FooForm(forms.ModelForm):<nl><tab>class Meta:<nl><tab><tab>model = Foo<nl><nl><tab>bars = forms.ModelMultipleChoiceField(queryset=Bar.objects.all())<nl><nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>super(FooForm, self).__init__(*args, **kwargs)<nl><tab><tab>if self.instance:<nl><tab><tab><tab>self.fields['bars'].initial = self.instance.bar_set.all()<nl><nl><tab>def save(self, *args, **kwargs):<nl><tab><tab># FIXME: 'commit' argument is not handled<nl><tab><tab># TODO: Wrap reassignments into transaction<nl><tab><tab># NOTE: Previously assigned Foos are silently reset<nl><tab><tab>instance = super(FooForm, self).save(commit=False)<nl><tab><tab>self.fields['bars'].initial.update(foo=None)<nl><tab><tab>self.cleaned_data['bars'].update(foo=instance)<nl><tab><tab>return instance<nl><nl>class FooAdmin(admin.ModelAdmin):<nl><tab>form = FooForm", "out": "django adminによる1対多のインライン選択", "out_en": "one-to-many inline select with django admin"}
{"in": "textfile = open('a.txt')<nl>replace_dict_list = []<nl><nl>replace_symbol =  raw_input(\" Which symbol would you like to replace \")<nl>replace_letter = raw_input(\" Which letter would you like to replace it with \")<nl><nl>dict = {replace_symbol:replace_letter}<nl><nl>already_exists = False<nl>for item in replace_dict_list:<nl><tab>if replace_symbol in item:<nl><tab><tab>already_exists = True<nl><tab>else:<nl><tab><tab>replace_dict_list.append(dict)<nl><nl>if not already_exists:<nl><tab>print \"running\"<nl><tab>words = words.replace(replace_symbol, replace_letter)", "out": "シンボルが一致したかどうかを確認する方法", "out_en": "How to see whether a symbol has been matched or not?"}
{"in": "import json<nl><nl>newDictionary=json.loads(str(soup))", "out": "python beautiful soup jsonデコードしてdictする方法", "out_en": "python beautiful soup how to json decode to dict"}
{"in": "g = Gnuplot.Gnuplot(debug=1)<nl>#xpos is always the same<nl>xpos=0.0<nl>for plotnr,datafile in enumerate(glob.glob('*.dat')):<nl><tab>#ypos as a function of the plot-number, e.g.<nl><tab>ypos=plotnr*2.0<nl><tab>g(\"set key at \"+str(xpos)+\",\"+str(ypos))<nl><tab>d = Gnuplot.File(datafile, using='1:2', with_='l', title=datafile)<nl><tab>g.plot(d)", "out": "python:Gnuplot-'set key'の変数パラメータ(例)", "out_en": "python: Gnuplot - variable parameter in 'set key' (for example)"}
{"in": "numpy.random.shuffle(a[1:])", "out": "最初の要素を修正し、リスト/配列の残りをシャッフルします", "out_en": "Fix first element, shuffle the rest of a list/array"}
{"in": "proc = subprocess.Popen('testing.sh', stdout=subprocess.PIPE, stderr=subprocess.PIPE)<nl>(stdout, stderr) = proc.communicate()<nl>if stderr:<nl>   print \"Shell script gave some error\"<nl>else:<nl>   print \"end\" # Shell script ran fine.", "out": "Pythonでサブプロセスモジュールを使用してシェルスクリプトのステータスを確認する方法", "out_en": "How to check the status of a shell script using subprocess module in Python?"}
{"in": "import requests<nl>from requests_ntlm import HttpNtlmAuth<nl><nl>requests.get(\"http://sharepoint-site.com\", auth=HttpNtlmAuth('DOMAIN\\\\USERNAME','PASSWORD'))", "out": "PythonでREST APIを介してSharePointサイトにアクセスする方法は?", "out_en": "How to access a sharepoint site via the REST API in Python?"}
{"in": "for i in clients:<nl><tab><tab>  if i is not s:<nl><tab><tab><tab>i.send(data)", "out": "python tcpサーバ複数のクライアントにデータを送信", "out_en": "python tcp server sending data to multiple clients"}
{"in": "ttest_ind(df[df['Treatment'] == 'a']['Performance'], df[df['Treatment'] == 'b']['Performance'])", "out": "statsmodels t検定用のデータフレームの変換", "out_en": "Transforming a Dataframe for statsmodels t-test"}
{"in": "emp_no = no_define_object_no and no_define_object_no[0].current_no or False<nl>return {'value': {'emp_no':  emp_no}}", "out": "OpenERP 7 NULLチェックの方法", "out_en": "OpenERP 7 How to null check?"}
{"in": "model.filled_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')<nl>model.save()", "out": "OracleでのDjangoでのDateTimeFieldの使用", "out_en": "Using DateTimeField in Django with Oracle"}
{"in": "articles.map_reduce(map, reduce, {\"replace\": \"articleTrending\"}, query=queryFilter)", "out": "Pymongoマップリデュースでのresovle名の変更の例外", "out_en": "How to resovle rename exception in Pymongo map reduce"}
{"in": "cur_hour = None<nl>for line in lines:<nl><tab>dt = dateutil.parser.parse(line[0])<nl><tab>hour = dt.hour<nl><tab>if hour != cur_hour:<nl><tab><tab>outFile = open(\"%d.00.00.txt\" % hour, \"w\")<nl><tab><tab>cur_hour = hour<nl><tab>print >> outFile, ', '.join(line)", "out": "1時間ごとのデータを別々のtxtファイルに保存しますか?", "out_en": "Saving the data for each hour into separate txt files?"}
{"in": "name = forms.CharField(error_messages={<nl><tab>'min_length': _('Enter a longer name'),<nl>})<nl><nl>warehouse = forms.CharField(error_messages={<nl><tab>'invalid': _('Enter a unique combination'),<nl>})", "out": "djangoフォーム検証をカスタマイズする方法", "out_en": "How to customize django form validation"}
{"in": "def create_ini(db_file_paths):<nl><nl><tab>#array of file tmpfs ini filehandles<nl><tab>file_handles = []<nl><nl><tab>for path in db_file_paths:<nl><tab><tab>#make a tempfs file handle<nl><tab><tab>f_handle = tempfile.NamedTemporaryFile(delete=False)<nl><tab><tab>#match and replace db dummy file path<nl><tab><tab>f_handle = replace( f_handle.name, source_ini, pattern, path )<nl><tab><tab>file_handles.append(f_handle)<nl><tab>return file_handles # <-- change of indentation here", "out": "Pythonで一時ファイルの配列を作成する", "out_en": "Create an array of temp files in python"}
{"in": "unquote()", "out": "urlエンコードされた文字列をデコードするか、apacheがparamsの'/'のためにurlを拒否します。", "out_en": "decode urlencoded string, or apache rejects url due to '/' in params"}
{"in": "with open(\"filename\", 'w') as outFile:<nl>  for frame in frames:<nl><tab>outFile.write(frame)", "out": "暗号化用ファイルへのStringとしての音声データの記録と書き込み", "out_en": "Recording and writing voice data as String in a file for Encryption"}
{"in": "from google.appengine.api import urlfetch<nl><nl>url = \"https://www.googleapis.com/language/translate/v2/detect\"<nl><nl>payload = {\"key\":translate_api_key, \"q\":str(sentence)}<nl><nl>result = urlfetch.fetch(url=url, payload=payload)<nl>if result.status_code == 200:<nl>  api_response = result.content", "out": "requests Pythonライブラリを使用したGoogle App EngineでのHTTPS要求の送信", "out_en": "Sending HTTPS requests in Google App Engine using requests python library"}
{"in": "from PyQt4 import QtGui, QtCore<nl><nl>class Window(QtGui.QWidget):<nl><tab>def __init__(self):<nl><tab><tab>QtGui.QWidget.__init__(self)<nl><tab><tab>self.label = QtGui.QLabel(self)<nl><tab><tab>self.label.setText('Hello World')<nl><tab><tab>self.label.setAlignment(QtCore.Qt.AlignCenter)<nl><tab><tab>self.label.setFrameStyle(QtGui.QFrame.Box | QtGui.QFrame.Plain)<nl><tab><tab>self.label.setMouseTracking(True)<nl><tab><tab>self.label.installEventFilter(self)<nl><tab><tab>layout = QtGui.QVBoxLayout(self)<nl><tab><tab>layout.addWidget(self.label)<nl><nl><tab>def eventFilter(self, source, event):<nl><tab><tab>if (event.type() == QtCore.QEvent.MouseMove and<nl><tab><tab><tab>source is self.label):<nl><tab><tab><tab>pos = event.pos()<nl><tab><tab><tab>print('mouse move: (%d, %d)' % (pos.x(), pos.y()))<nl><tab><tab>return QtGui.QWidget.eventFilter(self, source, event)<nl><nl>if __name__ == '__main__':<nl><nl><tab>import sys<nl><tab>app = QtGui.QApplication(sys.argv)<nl><tab>window = Window()<nl><tab>window.show()<nl><tab>window.resize(200, 100)<nl><tab>sys.exit(app.exec_())", "out": "PyQt:継承なしでイベントを処理する方法", "out_en": "PyQt: how to handle event without inheritance"}
{"in": "import multiprocessing as mp<nl><nl>def f(x):<nl><tab>f.q.put('Doing: ' + str(x))<nl><tab>return x*x<nl><nl>def f_init(q):<nl><tab>f.q = q<nl><nl>def main():<nl><tab>jobs = range(1,6)<nl><nl><tab>q = mp.Queue()<nl><tab>p = mp.Pool(None, f_init, [q])<nl><tab>results = p.imap(f, jobs)<nl><tab>p.close()<nl><nl><tab>for i in range(len(jobs)):<nl><tab><tab>print q.get()<nl><tab><tab>print results.next()<nl><nl>if __name__ == '__main__':<nl><tab>main()", "out": "Pool.imapによって呼び出される関数でマルチプロセッシングQueueを使用できますか。", "out_en": "Can I use a multiprocessing Queue in a function called by Pool.imap?"}
{"in": "SESSION_SAVE_EVERY_REQUEST=True", "out": "djangoセッション・テーブルを使用した要求", "out_en": "requests using django session table"}
{"in": "ListA = [2,1,0]<nl>ListB = [4,5,6]<nl><nl># make a copy -- I'm assuming you don't want to modify ListA in the process.<nl>new_list = ListA[:]<nl># insert ListB at a particular location.  I've arbitrarily chosen `1`<nl># basically this says to take the empty section of the list<nl># starting just before index 1 and ending just before index 1 and replace it<nl># with the contents of ListB<nl>new_list[1:1] = ListB<nl># Check the output to make sure it worked.<nl>print(new_list)  # [2, 4, 5, 6, 1, 0]", "out": "特定のエレメントの後にリストをマージしています", "out_en": "Merging List after particular element"}
{"in": "myWidget.setStyleSheet(\"background-color: black;\");", "out": "Pyside:QVBoxLayoutウィジェットで行の背景を設定する", "out_en": "Pyside: setting the background of a row in a QVBoxLayout widget"}
{"in": "def input_scores():<nl><tab>scores = []<nl><tab>y = 1<nl><tab>for num in range(5):<nl><tab><tab>score = int(input('Please enter your score for test %d: ' %y))<nl><tab><tab>while score < 0 or score > 100:<nl><tab><tab><tab>print ('Error --- all test scores must be between 0 and 100 points')<nl><tab><tab><tab>score = int(input('Please try again: '))<nl><tab><tab>scores.append(score)<nl><tab><tab>y += 1<nl><tab>return scores", "out": "forループは1回だけ実行されますが、範囲は5です。", "out_en": "For loop only executes 1 time, though given a range of 5"}
{"in": "import warnings<nl>warnings.simplefilter('error', RuntimeWarning)", "out": "コード内でnumpy RuntimeWarningの場所を検索しています", "out_en": "Finding location in code for numpy RuntimeWarning"}
{"in": "import subprocess<nl>import fcntl<nl>import os<nl>import select<nl><nl><nl>proc = subprocess.Popen(['gnuplot'],<nl><tab><tab><tab><tab><tab>stderr=subprocess.PIPE,<nl><tab><tab><tab><tab><tab>close_fds=True,<nl><tab><tab><tab><tab><tab>universal_newlines=True)<nl>fcntl.fcntl(<nl><tab>proc.stderr.fileno(),<nl><tab>fcntl.F_SETFL,<nl><tab>fcntl.fcntl(proc.stderr.fileno(), fcntl.F_GETFL) | os.O_NONBLOCK)<nl><nl>status = select.select([proc.stderr.fileno()], [], [])[0]<nl>if status:<nl><tab>out = proc.stderr.read()<nl>print(out)<nl>proc.kill()", "out": "Pythonを使用したアプリケーションからの初期画面の読み取り", "out_en": "Reading initial screen from application with Python"}
{"in": "class BaseProxy(object):<nl><tab> # ...<nl><tab> def _incref(self):<nl><tab><tab> # ...<nl><tab><tab> util.debug('INCREF %r', self._token.id)<nl><tab> # ...<nl><tab> def _after_fork(self):<nl><tab><tab> # ...<nl><tab><tab> self._incref()<nl><tab><tab> # ...", "out": "複数のマルチプロセッシングManagerの起動が極端に遅くなる", "out_en": "Starting multiple multiprocessing Managers becomes extremely slow"}
{"in": "import sys<nl><nl>lists = {<nl><tab>\"list1\": [\"A\", \"B\", \"C\"],<nl><tab>\"list2\": [1, 2, 3],<nl>}<nl><nl>myarg = sys.argv[1]<nl>print len(lists[myarg])", "out": "Python-変数をリスト名として使用する", "out_en": "Python - Use a variable as a list name"}
{"in": "import gtk", "out": "PyGObjectのインストール後にgtkをインポートできません", "out_en": "Unable to import gtk after installing PyGObject"}
{"in": "template_dir = os.path.abspath(<nl><tab><tab><tab>   os.path.join(os.path.dirname(__file__),<nl><tab><tab><tab><tab><tab><tab><tab>'../Frontend/templates'))", "out": "Pythonで別のディレクトリにリンクするにはどうすればいいですか?", "out_en": "How do I link to another directory with python?"}
{"in": "title = item.find('title').text<nl>title = title.encode('iso-8859-1')", "out": "XMLの構文解析中にPythonで?に変換される", "out_en": "? gets converted to ?? in Python while parsing XML"}
{"in": "from apiclient.http import BatchHttpRequest<nl><nl>def insert_event(request_id, response, exception):<nl>  if exception is not None:<nl><tab># Do something with the exception<nl><tab> pass<nl>  else:<nl><tab># Do something with the response<nl><tab>pass<nl><nl>service = build('calendar', 'v3')<nl><nl>batch = BatchHttpRequest(callback=insert_event)<nl><nl>batch.add(service.events().quickAdd(calendarId=\"you@domain.com\",<nl>  text=\"Lunch with Jim on Friday\"))<nl>batch.add(service.events().quickAdd(calendarId=\"you@domain.com\",<nl>  text=\"Dinner with Amy on Saturday\"))<nl>batch.add(service.events().quickAdd(calendarId=\"you@domain.com\",<nl>  text=\"Breakfast with John on Sunday\"))<nl>batch.execute(http=http)", "out": "PythonでのGoogle Calendar API v3バッチアップデート", "out_en": "Google Calendar API v3 batch update in python"}
{"in": "import time<nl><nl>word=['s','t','a','r','t','i','n','g']<nl><nl>for i in range(0,len(word)):<nl><tab>lower=word[i-1].lower()<nl><tab>word[i-1]=lower<nl><nl><tab>caps=word[i].upper()<tab><nl><tab>word[i]=caps<nl><nl><tab>wordstr=''.join(word) #hacky way of converting lists to strings<nl><tab>print(wordstr)<nl><tab>time.sleep(1)", "out": "PythonでMetasploitの大文字のアニメーションを実装するにはどうすればいいですか。", "out_en": "How can I implement the upper case animation from Metasploit in Python?"}
{"in": "def splitNoEscapes(string, char):<nl><tab>sections = string.split(char)<nl><tab>sections = [i + (char if i[-1] == \"\\\\\" else \"\") for i in sections]<nl><tab>result = [\"\" for i in sections]<nl><tab>j = 0<nl><tab>for s in sections:<nl><tab><tab>result[j] += s<nl><tab><tab>j += (1 if s[-1] != char else 0)<nl><tab>return [i for i in result if i != \"\"]", "out": "エスケープ文字を分割しないPythonの文字列分割", "out_en": "Python split string without splitting escaped character"}
{"in": "def isPrime(n):<nl><tab>def isSpsp(n, a):<nl><tab><tab>d, s = n - 1, 0<nl><tab><tab>while d % 2 == 0: d, s = d / 2, s + 1<nl><tab><tab>t = pow(a, d, n)<nl><tab><tab>if t == 1: return True<nl><tab><tab>while s > 0:<nl><tab><tab><tab>if t == n - 1: return True<nl><tab><tab><tab>t, s = (t * t) % n, s - 1<nl><tab><tab>return False<nl><tab>ps = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,<nl><tab><tab> 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]<nl><tab>if n in ps: return True<nl><tab>for p in ps:<nl><tab><tab>if not isSpsp(n, p): return False<nl><tab>return True", "out": "コンパイル時にを使用してプログラムを高速化する", "out_en": "Making my program faster using with compiling"}
{"in": "list2 = list1 + [''] * (5 - len(list1))", "out": "固定長のPythonリストを可変文字数で拡張する方法は?", "out_en": "How to extend a fixed-length Python list by variable number of characters?"}
{"in": "r = r'abc' '\\\\'", "out": "raw文字列の末尾のスラッシュ", "out_en": "Trailing slash in a raw string"}
{"in": "import glob<nl>for filename in glob.glob(r\"C:\\script\\test\\*.dat\"):<nl><tab>with open(filename, 'rb') as inputfile:<nl><tab><tab>data = inputfile.read()<nl><tab>with open(filename, 'wb') as outputfile:<nl><tab><tab>outputfile.write(data.replace(\"^\", \"|\"))", "out": "WindowsでのPython", "out_en": "Python in Windows"}
{"in": "reviews = [{'content': c, 'author': a} for c, a in zip(contentList, authorList)]", "out": "Pythonで2つのリストを1つの辞書に入れるには?", "out_en": "How to put 2 lists into 1 Dictionary in Python?"}
{"in": "doc_id = db.test.insert({\"foo\": 1})<nl>db.test.remove(doc_id)", "out": "オブジェクトをPyMongoに保存した後、そのオブジェクトの識別子を取得するにはどうすればいいですか。", "out_en": "How do I get the ID of an object after persisting it in PyMongo?"}
{"in": "for i in range(0,3):<nl><tab>driver.find_element_by_link_text('Download Search Results').click()<nl><tab>for j in range(0,101):<nl><tab><tab>f_exists = os.path.isfile('/Users/jeff/downloaded.csv')<nl><tab><tab>if not f_exists:<nl><tab><tab><tab>print(j, 'file DOES NOT exist')<nl><tab><tab><tab>time.sleep(.05)<nl><tab><tab>else:<nl><tab><tab><tab>print(i, 'file exists')<nl><tab><tab><tab>return", "out": "ファイルをダウンロードし、ダウンロードを検証し、ダウンロードされていない場合は再試行します。", "out_en": "download a file, validate the download, attempt again if not downloaded"}
{"in": "'/web#id=%s&view_type=form&model=mrp.bom&menu_id=448&action=565'", "out": "OpenERPでページのURLを取得する方法", "out_en": "How to get the url of a page in OpenERP?"}
{"in": "from sqlalchemy.sql import select, and_, or_, not_<nl># ...<nl>query = select(# what to select (tables or columns)<nl><tab><tab><tab>   [table.c.column1, table.c.column2],<nl><tab><tab><tab>   # filters (use any expression using and_, or_, not_...<nl><tab><tab><tab>   and_(table.c.column1.like(\"j%\")),<nl><tab><tab><tab>   )<nl>result = query.execute()", "out": "ジェネレーティブ選択による特定の列の選択", "out_en": "Selecting specific columns with generative selects"}
{"in": "host = connectionDetails.get('host','someDefault')", "out": "Python辞書とデフォルト値", "out_en": "python dictionary and default values"}
{"in": "result.cal = CALORIES[name]", "out": "配列からディクショナリ値を読み込みます。", "out_en": "read the dictionary value from array"}
{"in": "from castro import Castro<nl>c = Castro()<nl>c.start()<nl># Do something awesome!<nl>c.stop()", "out": "WindowsおよびLinuxでPythonを使用してスクリーンショットをキャプチャする", "out_en": "Capturing screenshots with python in windows and linux"}
{"in": "import os<nl>import zipfile<nl><nl>with zipfile.ZipFile('archive.zip') as z:<nl><tab>for filename in z.namelist():<nl><tab><tab>if not os.path.isdir(filename):<nl><tab><tab><tab># read the file<nl><tab><tab><tab>with z.open(filename) as f:<nl><tab><tab><tab><tab>for line in f:<nl><tab><tab><tab><tab><tab>print line", "out": "Pythonで圧縮フォルダ内のテキストファイルを読む方法", "out_en": "How to read text files in a zipped folder in Python"}
{"in": "def Showquestions2(self):<nl><tab>self.group.setExclusive(False)<nl><tab>self.Questionum.setText(\"Question 2\")<nl><tab>self.Correctanswer.setChecked(False)<nl><tab>self.Incorrectans1.setChecked(False)<nl><tab>self.Incorrectans2.setChecked(False)<nl><tab>self.Incorrectans3.setChecked(False)<nl><tab>self.ismultichoiceButton.clicked.connect(self.Showquestions3)<nl><tab>self.group.setExclusive(True)", "out": "pyqt4でチェックされているラジオボタンをチェック解除する方法", "out_en": "How to uncheck a checked radio buttons in pyqt4"}
{"in": "import csv<nl>from itertools import groupby<nl><nl>with open(yourfile) as fin:<nl><tab>tabin = csv.reader(fin, delimiter='\\t')<nl><tab>sentences = [[el[1] for el in g] for k, g in groupby(tabin, bool) if k]", "out": "巨大なファイルを構文解析するPython", "out_en": "Python parsing a huge file"}
{"in": "df.groupby(df.ID.str[:1])['Value'].sum()", "out": "文字列のPandas groupbyスライス", "out_en": "Pandas groupby slice of a string"}
{"in": "viewport().setCursor();", "out": "QPlainTextEditのカーソル形状を変更する方法(Pyqt、PySide)", "out_en": "How to change cursor shape of QPlainTextEdit (Pyqt, PySide)"}
{"in": "np.rollaxis(array_name,0,3).shape", "out": "画像の変形方法", "out_en": "How to reshape numpy image?"}
{"in": "#!/usr/bin/python2.5<nl>from email.utils import parsedate<nl>import mailbox<nl><nl>def extract_date(email):<nl><tab>date = email.get('Date')<nl><tab>return parsedate(date)<nl><nl>the_mailbox = mailbox.mbox('/path/to/mbox')<nl>sorted_mails = sorted(the_mailbox, key=extract_date)<nl>the_mailbox.update(enumerate(sorted_mails))<nl>the_mailbox.flush()", "out": "mboxファイルを日付順に並べ替える方法", "out_en": "How can I reorder an mbox file chronologically?"}
{"in": "i = arr.index(var3)<nl>left = arr[:i]<nl>right = arr[i+1:]", "out": "特定のインデックスでリストを分割する", "out_en": "Separating a list at a given index"}
{"in": "C = [[x + y for x,y in zip(w,v)] for w,v in zip(A,B)]", "out": "2つの行列を入力として使用する方法", "out_en": "How can I take two matrices as input"}
{"in": "tree.export_graphviz(clf, out_file=dot_data, feature_names=vec.get_feature_names())", "out": "scikit learnの決定ツリーの出力にフィーチャー名を追加する方法", "out_en": "How to add feature names to output of decision tree in scikit learn"}
{"in": "item_ids = db.my_categories(slug=request.args[0]).items_<nl>items = db(db.my_items.id.belongs(item_ids)).select()", "out": "特定のlist:referenceフィールドで参照されているすべての項目を選択するにはどうすればよいですか。", "out_en": "How can I select all items referenced by a specific list:reference field?"}
{"in": "python-tk", "out": "sudoなしでpython-tkパッケージをインストールするには?", "out_en": "How to install python-tk package without sudo?"}
{"in": "# -*- coding: utf-8 -*- # <nbformat>3.0</nbformat><nl><nl>import paramiko<nl>import os<nl><nl><nl>savefile = 'dump.sql'<nl>mykey = paramiko.RSAKey.from_private_key_file(\"/users/me/my-host.pem\")<nl><nl>client = paramiko.SSHClient()<nl>client.load_system_host_keys()<nl>client.connect('hungry.turtles.com', username = \"turtles\", pkey = mykey)<nl><nl><nl>def ssh(cmd):<nl><tab>out = []<nl><tab>msg = [stdin, stdout, stderr] = client.exec_command(cmd)<nl><tab>for item in msg:<nl><tab><tab>try:<nl><tab><tab><tab>for line in item:<nl><tab><tab><tab><tab>out.append(line.strip('<nl>'))<nl><tab><tab>except: pass<nl><nl><tab>return(list(out))<nl><nl>dump = ssh('mysqldump -u root -ppassword turtleturds')<nl><nl>file = open(savefile, 'w')<nl>file.write(str(dump))<nl>file.close()<nl>print 'The dump had '+ str(len(dump))+ ' lines and was saved to '+ str(os.path.realpath('dump.sql'))", "out": "SSH経由のリモートmysqldumpの実行(すべてPython)", "out_en": "Running remote mysqldump over SSH all in python"}
{"in": "vis.display()", "out": "iPythonノートブックでVincentを使用してワールドマップをプロットできません", "out_en": "Unable to plot worldmap with Vincent in iPython notebook"}
{"in": "[y for x in range(3) for y in [x, x]]", "out": "リスト理解における反復要素", "out_en": "Repeating elements in list comprehension"}
{"in": "# this will be the namespace of the user when the code loads or nothing<nl># and it will never change as long as the instance is up<nl>namespace_manager.set_namespace(user.namespace)  <nl><nl>class YourHandler(webapp2.RequestHandler):<nl><tab>def get(self):<nl><tab>   # get the user....<nl><tab>   namespace_manager.set_namespace(user.namespace)<nl><tab>   # setting the namespace here will change it for each request.", "out": "GAE名前空間の設定", "out_en": "setting GAE namespace"}
{"in": "cursor.execute('SELECT ...')<nl>columns = []<nl>for column in cursor.description:<nl><tab>columns.append(column[0].lower())<nl>failed_sites = {}<nl>for row in cursor:<nl><tab>for i in range(len(row)):<nl><tab><tab>failed_sites[columns[i]] = row[i]<nl><tab><tab>if isinstance(row[i], basestring):<nl><tab><tab><tab> failed_sites[columns[i]] = row[i].strip()", "out": "PostgreSQLからディクショナリとしてデータを取得する", "out_en": "Obtaining data from PostgreSQL as Dictionary"}
{"in": "#!/sw/bin/python2.5<nl><nl>import warnings, sys<nl><nl>def customwarn(message, category, filename, lineno, file=None, line=None):<nl><tab>sys.stdout.write(warnings.formatwarning(message, category, filename, lineno))<nl><nl>warnings.showwarning = customwarn<nl>warnings.warn(\"test warning\")", "out": "Pythonの警告をカスタムストリームにリダイレクトする方法", "out_en": "How to redirect python warnings to a custom stream?"}
{"in": "engine = create_engine('mysql://root:******@localhost?charset=utf8')", "out": "Python、SQLAlchemy、MySQL、奇数文字", "out_en": "Python, SQLAlchemy and MySQL, odd characters"}
{"in": "def activate():<nl><tab>global x1, y1<nl><tab>if(ultrasonic.get_sample() < 10):<nl><tab><tab>both.turn(power=-70, tacho_units=400, brake=False)<nl><tab>bx, by = get_ballxy()<nl><tab>rx, ry, a = get_robotxya()<nl><nl><tab>if sqrt((x1-bx)*(x1-bx)+(y1-by)*(y1-by)) <= 4: #This is the distance parameter, change at will<nl><tab><tab>turn_to(brick, bx, by, rx, ry, a)<nl><tab><tab>move_to(brick, bx, by, rx, ry)<nl><tab><tab>kickBall(brick, by, ry)<nl><nl><tab>x1, y1 = bx, by<nl><nl>Thread(target=update_coordinates).start()<nl>connect()<nl>x1, y1 = 0, 0<nl>update_coordinates()<nl>while True:<nl><tab>activate()", "out": "の正しい値を返すにはどうすればいいですか。", "out_en": "How do i return the correct values of to this?"}
{"in": "struct.pack", "out": "zipファイルに埋め込まれたieee-beバイナリファイルを抽出するにはどうすればいいですか。", "out_en": "How do I extract a ieee-be binary file embedded in a zipfile?"}
{"in": "if __name__ == '__main__' :<nl>  app = web.application(urls, globals())<nl>  app.run()", "out": "localhostでのPythonアプリケーションの実行", "out_en": "Running python app on localhost"}
{"in": "lines = [(\"LC\" if i < 3 else \"LB\")+line for i,line in enumerate(lines)]", "out": "テキストファイルの特定の行の書き込み", "out_en": "Writing specific lines of a text file"}
{"in": "#!/usr/bin/python<nl>#-*- coding:utf-8 -*-<nl><nl>import xlwt<nl><nl>base = xlwt.Workbook()<nl><nl>b = ['company1','company2']<nl>a = ['a', 'b', 'c']<nl><nl>for name in b:<nl><tab>n = 0<nl><tab>s = base.add_sheet(name);<nl><tab>for v in a:<nl><tab><tab>s.write(n, 0, v)<nl><tab><tab>n += 1<nl><nl>base.save('C:\\\\test.xls')", "out": "Excelへのデータの繰り返し書き込み", "out_en": "Writing data to excel iteratively"}
{"in": "import time, socket<nl><nl>class ControllableSocket:<nl><tab>def __init__(self, latency, bandwidth):<nl><tab><tab>self._latency = latency<nl><tab><tab>self._bandwidth = bandwidth<nl><tab><tab>self._bytesSent = 0<nl><tab><tab>self._timeCreated = time.time()<nl><tab><tab>self._socket = socket.socket()<nl><nl><tab>def send(self, bytes):<nl><tab><tab>now = time.time()<nl><tab><tab>connectionDuration = now - self._timeCreated<nl><tab><tab>self._bytesSent += len(bytes)<nl><tab><tab># How long should it have taken to send how many bytes we've sent with our<nl><tab><tab># given bandwidth limitation?<nl><tab><tab>requiredDuration = self._bytesSent / self._bandwidth<nl><tab><tab>time.sleep(max(requiredDuration - connectionDuration, self._latency))<nl><tab><tab>return self._socket.send(bytes)", "out": "Pythonで低速なネットワークをシミュレートする簡単な方法", "out_en": "Simple way to simulate a slow network in python"}
{"in": "d = {'tom':'stats', 'keys':[{'tim': 'doc', 'year': 1999},{'mum':'veg', 'nba':'qweqwe'}] }<nl><nl>def print_all_values(input):<nl><tab>if isinstance(input, dict):<nl><tab><tab>for key, value in input.items():<nl><tab><tab><tab>print_all_values(value)<nl><tab>elif isinstance(input, list):<nl><tab><tab>for value in input:<nl><tab><tab><tab>print_all_values(value)<nl><tab>else:<nl><tab><tab>print(input)<nl><nl>print_all_values(d)", "out": "Python:複雑なデータ構造のすべての値を出力します(ハッシュキーを除く)。", "out_en": "Python: print out all values of a complicated data structure (excluding hash keys)"}
{"in": "from selenium import webdriver<nl>from selenium.webdriver.common.keys import Keys<nl><nl>driver = webdriver.Chrome()<nl>driver.get(\"http://www.python.org\")<nl>assert \"Python\" in driver.title<nl>elem = driver.find_element_by_name(\"q\")<nl>elem.send_keys(\"selenium\")<nl>elem.send_keys(Keys.RETURN)<nl>assert \"Google\" in driver.title<nl>driver.close()", "out": "pythonとmechanizeを使ってAJAX呼び出し(XHR)をシミュレートする方法", "out_en": "How to simulate a AJAX call (XHR) with python and mechanize"}
{"in": "def create_app(name):<nl><tab>app = Flask(name)<nl><tab>for url in urls:<nl><tab><tab>app.add_url_rule(url[0], methods=url[1], view_func=url[2])<nl><tab>return app<nl><nl>app = create_app(__name__)", "out": "ジャンゴ風フラスコ大規模アプリケーション用のURLパターン", "out_en": "Django-styled Flask URL pattern for large application"}
{"in": "import os<nl>for root, dirs, files in os.walk(path):<nl><tab>for filename in files:<nl><tab><tab>filename = os.path.join(root, filename)<nl><tab><tab>print(filename)", "out": "指定されたディレクトリの下にあるリーフファイルの絶対パスをすべて取得するユーティリティはありますか?", "out_en": "Is there existing any utilities to get all absolute path of leaf file under a given directory?"}
{"in": "os.environ.copy()", "out": "環境が変更されたPythonサブプロセス/Popen", "out_en": "Python subprocess/Popen with a modified environment"}
{"in": "from itty import get, run_itty<nl>import glob, gzip, json, os, functools<nl><nl>def jsonify(origfunc):<nl><tab>@functools.wraps(origfunc)<nl><tab>def wrapper(*args, **kwds):<nl><tab><tab>result = origfunc(*args, **kwds)<nl><tab><tab>return json.dumps(result, indent=4)<nl><tab>return wrapper<nl><nl>@get('/logs')<nl>@jsonify<nl>def list_logfiles(request):<nl><tab>return glob.glob('/var/log/myserver/*.gz')<nl><nl>@get('/logs/(?P<name>\\w+)')<nl>def show_logfile(request, name):<nl><tab>fullname = os.path.join('/var/log/myserver', name)<nl><tab>with gzip.open(fullname, 'rb') as f:<nl><tab><tab>return f.read()<nl><nl>run_itty(host='localhost', port=8080)", "out": "httpサーバ経由のPython Loggingモニタ", "out_en": "Python Logging monitor through http server"}
{"in": "#!/usr/bin/env python<nl><nl>import sys<nl><nl>def generate_log_report(logfile):<nl><tab><tab>for line in logfile:<nl><tab><tab><tab><tab>line_split = line.split()<nl><tab><tab><tab><tab>list = [line_split[0], line_split[1], line_split[2], line_split[4]]<nl><tab><tab><tab><tab>if \"exim\" in list[3]:<nl><tab><tab><tab><tab><tab><tab>l = [line_split[0], line_split[1], line_split[2], line_split[4]]<nl><tab><tab><tab><tab>else:<nl><tab><tab><tab><tab><tab><tab>li = [line_split[0], line_split[1], line_split[2], line_split[4]]<nl><tab><tab>return l<nl><nl><nl>if __name__ == \"__main__\":<nl><tab><tab>if not len(sys.argv) > 1:<nl><tab><tab><tab><tab>print __doc__<nl><tab><tab><tab><tab>sys.exit(1)<nl><tab><tab>infile_name = sys.argv[1]<nl><tab><tab>try:<nl><tab><tab><tab><tab>infile = open(infile_name, \"r\")<nl><tab><tab>except IOError:<nl><tab><tab><tab><tab>print \"you must specify a valid file\"<nl><tab><tab><tab><tab>print __doc__<nl><tab><tab><tab><tab>sys.exit(1)<nl><tab><tab>log_report = generate_log_report(infile)<nl><tab><tab>print log_report<nl><tab><tab>infile.close()", "out": "Python logparse検索特定のテキスト", "out_en": "python logparse search specific text"}
{"in": "if a not in some_list:<nl><tab>some_list.append(a)", "out": "存在しない可能性のあるものをPythonのリストから検索するにはどうすればいいですか?", "out_en": "How can I search through a list in python for something that might not exist?"}
{"in": "def prepositions():<nl><tab>items = []<nl><tab>with open('test.txt') as input:<nl><tab><tab>for line in input:<nl><tab><tab><tab>items.extend(line.strip().split(','))<nl><tab>return items<nl><nl>print(prepositions())", "out": "テキストファイルをPythonのリストに変換する", "out_en": "converting a textfile into a list on python"}
{"in": "mylist = [1,2,3,1,4,4,5,6]<nl>dic = {}<nl><nl>for i in range(0,len(mylist)):<nl><tab>if mylist[i] in dic:<nl><tab><tab>dic[mylist[i]].append(i)<nl><tab>else:<nl><tab><tab>dic[mylist[i]] = [i]<nl>print dic.values()<nl># prints [[0, 3], [1], [2], [4, 5], [6], [7]]", "out": "Pythonで同じリスト内の2つの項目を検索する方法", "out_en": "How to find 2 items in a list that are the same in Python"}
{"in": "if resource.rstrip('0123456789') in resources:<nl><tab>if resource != resource.rstrip('0123456789'):<nl><tab><tab>print 'ok'<nl><tab>else:<nl><tab><tab>print 'banned'<nl>else:<nl><tab>raise NotImplementedError()  # replace with own code", "out": "Python-文字列に任意のランダムな整数を含める方法", "out_en": "Python - How to include any random integer in a string"}
{"in": "from Tkinter import *<nl>import math<nl><nl>master = Tk()<nl>w = Canvas(master, width=200, height=200)<nl>w.pack()<nl>x1=0<nl>y1=0<nl>x2=100<nl>y2=100<nl>delta=10<nl>i=w.create_line(x1, y1, x2, y2)<nl><nl>def click(event):<nl># event.x is the x coordinate and event.y is the y coordinate of the mouse<nl><tab>D = math.fabs((event.y-event.x))/math.sqrt(2)<tab><nl><tab>if D < delta and x1 - delta < event.x < x2 + delta:<nl><tab><tab><tab>w.delete(i)<tab><nl>w.bind(\"<Button-1>\", click)<nl><nl>mainloop()", "out": "Pythonで以前に描画した線をマウスクリックで削除する方法", "out_en": "How To Delete Previously Drawn Line With a Mouse Click in Python?"}
{"in": "import operator<nl>inverted = dict((v,k) for k,v in sorted(d.iteritems(), key=operator.itemgetter(1)))", "out": "Pythonで辞書を反転する", "out_en": "Inverting Dictionaries in Python"}
{"in": "logger = logging.getLogger(\"mylog\")<nl>formatter = logging.Formatter('%(asctime)s | %(name)s |  %(levelname)s: %(message)s')<nl>logger.setLevel(logging.DEBUG)<nl><nl>stream_handler = logging.StreamHandler()<nl>stream_handler.setLevel(logging.INFO)<nl>stream_handler.setFormatter(formatter)<nl><nl>logFilePath = \"my.log\"<nl>file_handler = logging.handlers.TimedRotatingFileHandler(filename = logFilePath, when = 'midnight', backupCount = 30)<nl>file_handler.setFormatter(formatter)<nl>file_handler.setLevel(logging.DEBUG)<nl><nl>logger.addHandler(file_handler)<nl>logger.addHandler(stream_handler)<nl><nl>logger.info(\"Started\");<nl>try:<nl><tab>x = 14<nl><tab>y = 0<nl><tab>z = x / y<nl>except Exception as ex:<nl><tab>logger.error(\"Operation failed.\")<nl><tab>logger.debug(\"Encountered {0} when trying to perform calculation.\".format(ex))<nl><nl>logger.info(\"Ended\");", "out": "Pythonログハンドラごとに異なるレベルを設定する方法", "out_en": "How to set different levels for different python log handlers"}
{"in": "new = [[x, y, val] for (x, y), val in zip(points, vals)]", "out": "Pythonタプルへのエントリの追加", "out_en": "Adding an entry to a python tuple"}
{"in": "from django.db.models import Q<nl>import operator<nl><nl><nl>def dynamic_search(queryset):<nl><tab>search_fields = [\"search_field1\", \"search_field2\", \"search_field3\"]<nl><tab>search_text = \"dummy_text\"<nl><tab>queryset.filter(reduce(operator.or_, [Q(**{'{0}__contains'.format(search_field): search_text}) for search_field in search_fields]))", "out": "django ormによる動的検索", "out_en": "dynamic search with django orm"}
{"in": "a=b=c=d=e=f=g=h=\"\"", "out": "多くの文字列変数を初期化する", "out_en": "Initialize many string variables"}
{"in": "from glob import glob<nl>from process import process_one_file<nl><nl>for i in range(100):<nl><tab>process_one_file(glob('prefix_foo_{}_*'.format(i)))", "out": "Pythonでファイル名をループする", "out_en": "Looping over filenames in python"}
{"in": "from bs4 import BeautifulSoup<nl>import requests<nl><nl>url = 'http://alerts.weather.gov/cap/us.php?x=1'<nl><nl>r = requests.get(url)<nl>soup = BeautifulSoup(r.text, 'xml')<nl>entries = soup.find_all('entry')<nl><nl>geocode = {}<nl>k = None<nl>for tag in entries[0].geocode.children:<nl><tab>if tag.name == 'valueName':<nl><tab><tab>k = tag.string<nl><tab>elif tag.name == 'value':<nl><tab><tab>geocode[k] = tag.string<nl><nl>print 'title: ', entries[0].title.string<nl>print 'cap_geocode: ', str(geocode)<nl>print 'cap_event: ', entries[0].event.string", "out": "Python/XML RSSフィードパーサ-空白のフィールド", "out_en": "Python/XML RSS Feedparser - Blank Fields"}
{"in": "import numpy as np<nl><nl>a = np.arange(12)<nl>b = np.array([5, 9, 2, 4])<nl>b = np.append(b, b[0])<nl><nl>for i in range(0, len(b)-1):<nl><tab>print np.roll(a, len(a)-b[i])[:b[i+1]-b[i]+1]", "out": "Python/Numpy-配列の最後でスライスを折り返す", "out_en": "Python/Numpy - Wrap Slice Around End of Array"}
{"in": "import scipy.spatial.distance as ssd<nl>distVec = ssd.squareform(SimMatrix)<nl>linkage = hcluster.linkage(1 - distVec)<nl>dendro  = hcluster.dendrogram(linkage)<nl>show()", "out": "類似性行列が与えられたscipyを通じた系統樹", "out_en": "Dendrogram through scipy given a similarity matrix"}
{"in": "class my_lil_matrix(sparse.lil_matrix):<nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>if len(args) >= 2 and isinstance(args[1], list):<nl><tab><tab><tab>try:<nl><tab><tab><tab><tab>data, rows = args<nl><tab><tab><tab>except:<nl><tab><tab><tab><tab>raise TypeError(\"Invalid input format\")<nl><nl><tab><tab><tab>if kwargs.get('shape') is None:<nl><tab><tab><tab><tab># Column count will just be the largest value in rows<nl><tab><tab><tab><tab>M, N = (len(rows), max(np.array(rows).max()) + 1)<nl><tab><tab><tab>else:<nl><tab><tab><tab><tab>M, N = shape<nl><nl><tab><tab><tab>super(my_lil_matrix, self).__init__((M, N), **kwargs)<nl><nl><tab><tab><tab>self.data = np.array(data, copy=kwargs.get('copy'),<nl><tab><tab><tab><tab><tab><tab><tab><tab> dtype=kwargs.get('dtype'))<nl><tab><tab><tab>self.rows = np.array(rows, copy=kwargs.get('copy'),<nl><tab><tab><tab><tab><tab><tab><tab><tab> dtype=kwargs.get('dtype'))<nl><tab><tab>else:<nl><tab><tab><tab>super(my_lil_matrix, self).__init__(*args, **kwargs)", "out": "与えられたデータと座標のlil_matrixを初期化します", "out_en": "Initialize lil_matrix given data and coordinates"}
{"in": "myvector.T", "out": "Pythonでの行列とベクトルの乗算(numpy)", "out_en": "matrix - vector multiplication in python (numpy)"}
{"in": "lines.sort(key=lambda a_line: a_line.split()[0])", "out": "Pythonでファイル/行を最初の単語でソートする", "out_en": "Sort file/lines by first word with Python"}
{"in": "min((idx for idx in indexes if not visited[idx]), key=lambda idx: dist[idx])", "out": "Pythonでは、コンストレインの最小サブジェクトを検索する", "out_en": "In python, find minimum subject to a constraint?"}
{"in": "def distance(self, tile1, tile2):<nl><tab>self.xDist = abs(tile1.col * TILE_SIZE - tile2.col * TILE_SIZE)<nl><tab>self.yDist = abs(tile1.row * TILE_SIZE - tile2.row * TILE_SIZE)<nl><tab>self.totalDist = self.diagCost * math.sqrt(self.xDist*self.xDist + self.yDist*self.yDist)<nl><tab><tab><tab><tab><tab> # or it might be self.straightCost, depending on their values.<nl><tab><tab><tab><tab><tab> # self.diagCost is probably right, though.<nl><tab>return self.totalDist", "out": "Python A*アルゴリズムが適切に検索されない", "out_en": "Python A* algorithm not searching appropriately"}
{"in": "import numpy as np<nl>a = np.array([(1.0, 2,1),(3.0, 4,2),(9, 3,6)], dtype=[('x', float), ('y', float), ('z', float)])<nl>print(a)<nl><nl>print(a[['x', 'z']])", "out": "numpy.arrayから複数のフィールドにアクセスする方法", "out_en": "How to access multiple fields from a numpy.array?"}
{"in": "DATA = {\"records\": [{\"key1\": \"AAA\", \"key2\": \"BBB\", \"key3\": \"CCC\", \"key4\": \"AAA\"}]}<nl><nl>for name, datalist in DATA.iteritems():  # Or items() in Python 3.x<nl><tab>for datadict in datalist:<nl><tab><tab>for key, value in datadict.items():<nl><tab><tab><tab>if value == \"AAA\":<nl><tab><tab><tab><tab>datadict[key] = \"XXX\"<nl><nl>print (DATA)<nl># Prints {'records': [{'key3': 'CCC', 'key2': 'BBB', 'key1': 'XXX', 'key4': 'XXX'}]}", "out": "Pythonのリスト/辞書の値を置き換える", "out_en": "Replacing values in a Python list/dictionary?"}
{"in": "query(extract('hour', timeStamp).label('h')).group_by('h')", "out": "SQLAlchemyで1時間ごとのグループ?", "out_en": "Group by hour in SQLAlchemy?"}
{"in": "import urllib<nl><nl>x = \"http://query.yahooapis.com/v1/public/yql?q=select%20owner%2Curls%20from%20flickr.photos.info%20where%20photo_id%3D'%s'&format=json\"<nl>tmp = urllib.unquote(x)<nl>tmp2 = tmp % (foo, bar)<nl>x = urllib.quote(tmp2)", "out": "URLエンコードされた文字列で文字列を置換する方法", "out_en": "How to do a string replace in a urlencoded string"}
{"in": "file_stream.close()", "out": "差分法Pythonでファイルを開く", "out_en": "difference method open file in python"}
{"in": "cat_pub = Publicacion.objects.all().values('id_categoria').annotate(max_update_time=Max('update_time')).order_by('-max_update_time')", "out": "Group byとorder by max(.)をdjangoで作成する方法", "out_en": "How to make a Group by and order by max(...) in django"}
{"in": "class B(A):<nl><tab>__tablename__ = 'b'<nl><nl><tab>id = Column(Integer, ForeignKey('a.id'), primary_key=True)<nl><nl><tab>__mapper_args__ = {<nl><tab><tab>'polymorphic_identity': 'b',<nl><tab><tab>'inherit_condition': id == A.id<nl><nl><tab>}<nl><nl><tab>a_id = Column(Integer, ForeignKey('a.id'))<nl><tab>a = relationship(<nl><tab><tab>'A',<nl><tab><tab>backref='b', primaryjoin=A.id == a_id, remote_side=A.id)", "out": "sqlalchemyの多様な自己参照外部キー", "out_en": "Polymorphic self referential foreign key in sqlalchemy"}
{"in": "setattr(foo, mystring, False)   # this is just here to let me submit", "out": "Python:既存の文字列の名前が付けられたオブジェクトに属性を追加する", "out_en": "Python: Add atribute to object named after an existing string"}
{"in": "re.sub('(\\d+)(?=\\.html)', r'.\\1', s)", "out": "pythonファイル名に文字を追加する", "out_en": "python add character to filename"}
{"in": "from pylons import config<nl><nl>def my_cache(*args, **kwargs):<nl><tab>if config[\"debug\"]:<nl><tab><tab>decorate = lambda f: f<nl><tab>else: <nl><tab><tab>decorate = beaker_cache(*args, **kwargs)<nl><nl><tab>return decorate", "out": "開発モードでPylonsアプリのキャッシュを無効にする", "out_en": "Disable cache in Pylons app under development mode"}
{"in": "def ind(the_string, the_char):<nl>   i = 0<nl>   for a_char in the_string:<nl><tab>   if a_char == the_char: return i<nl><tab>   i += 1<nl>   return -1", "out": "Python:文字列のインデックスを取得する方法", "out_en": "Python: How to get the Index of a string"}
{"in": "import subprocess<nl>import sys<nl><nl>perl_script = subprocess.Popen([\"script.pl\", params], stdout=sys.stdout)<nl>perl_script.communicate()", "out": "私のPythonスクリプトからPerlスクリプトを実行し、出力を表示して終了を待ちます。", "out_en": "Run a perl script from my python script, print the output and wait for it to finish"}
{"in": "threading.Timer(1.0,self.add_csv).start()", "out": "Pythonでプログラムを中断せずに関数を実行する方法", "out_en": "How to run a function without interrupting program in python?"}
{"in": "mod.__dict__[\"__builtins__\"] = {}", "out": "__builtins__module変数を変更する方法", "out_en": "How to change __builtins__ module variable?"}
{"in": "sorted_list = sorted(d.keys(), key=lambda i: d[i]['priority'], reverse=True)", "out": "値dictの値でPythonをソートする", "out_en": "Sorting python by value in a value dict"}
{"in": "from uwsgidecorators import *<nl>from gevent.queue import Queue<nl><nl>channels = []<nl><nl>@filemon('/tmp',target='workers')<nl>def trigger_event(signum):<nl><tab>for channel in channels:<nl><tab><tab>try:<nl><tab><tab><tab>channel.put_nowait(True)<nl><tab><tab>except:<nl><tab><tab><tab>pass<nl><nl>def application(e, sr):<nl><tab>sr('200 OK', [('Content-Type','text/html')])<nl><tab>yield \"Hello and wait...\"<nl><tab>q = Queue()<nl><tab>channels.append(q)<nl><tab>q.get()<nl><tab>yield \"event received, goodbye\"<nl><tab>channels.remove(q)", "out": "外部イベントからFlask内のWebSocketを起動", "out_en": "trigger WebSocket in Flask from external event"}
{"in": "def bytestomb(b):<nl><tab>mb = float(b) / (1024*1024)<nl><tab>return mb<nl><nl><nl>def bytessubidatransferidos():<nl><tab>interface= 'ppp0'<nl><tab>for line in open('/proc/net/dev', 'r'):<nl><tab><tab>if interface in line:<nl><tab><tab><tab>data = line.split('%s:' % interface)[1].split()<nl><tab><tab><tab>tx_bytes =  (data[8])<nl><tab>return bytestomb(tx_bytes)<nl><nl><nl>def bytesbajadatransferidos():<nl><tab>interface= 'ppp0'<nl><tab>for line in open('/proc/net/dev', 'r'):<nl><tab><tab>if interface in line:<nl><tab><tab><tab>data = line.split('%s:' % interface)[1].split()<nl><tab><tab><tab>rx_bytes = (data[0])<nl><tab>return bytestomb(rx_bytes)<nl><nl><nl>print bytessubidatransferidos()<nl>print bytesbajadatransferidos()", "out": "Pythonのネットワークインタフェースから情報を取得するモジュールまたは関数", "out_en": "Modules or functions to obtain information from a network interface in Python"}
{"in": "import time, datetime<nl><nl>d = datetime.datetime.now()<nl>print time.mktime(d.timetuple())", "out": "日時をPOSIX時間に変換する", "out_en": "Converting datetime to POSIX time"}
{"in": "values = struct.unpack('!7h', data)", "out": "バイナリデータのバイト順を切り替える方法", "out_en": "How to switch byte order of binary data"}
{"in": "def data(self, index, role):<nl><tab>if not index.isValid(): return false<nl><tab>row=index.row()<nl><tab>if row>len(self.items): return false<nl><nl><tab>if role == Qt.DisplayRole or role == Qt.EditRole:<nl><tab><tab>return self.items[row]", "out": "ダブルクリック時にQTableView項目がクリアされないようにする方法", "out_en": "How to prevent QTableView item from getting cleared on double-click"}
{"in": "from IPython.display import HTML<nl><nl>HTML('''<script><nl>code_show=true; <nl>function code_toggle() {<nl> if (code_show){<nl> $('div.input').hide();<nl> } else {<nl> $('div.input').show();<nl> }<nl> code_show = !code_show<nl>} <nl>$( document ).ready(code_toggle);<nl></script><nl><form action=\"javascript:code_toggle()\"><input type=\"submit\" value=\"Click here to toggle on/off the raw code.\"></form>''')", "out": "nbviewerで表示されたipythonノートブックのセルからコードを非表示にする方法", "out_en": "How to hide code from cells in ipython notebook visualized with nbviewer?"}
{"in": "import csv<nl><nl>f = open(\"iter.csv\", \"r\")<nl>g = open(\"out.csv\", \"w\", newline=\"\")<nl>transpose_columns = ['date1', 'date2', 'date3']<nl>target_columns = ['date', 'value']<nl>reader = csv.DictReader(f)<nl>writer = csv.DictWriter(g, fieldnames=[a for a in reader.fieldnames<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab>   if a not in transpose_columns] + target_columns,<nl><tab><tab><tab><tab><tab><tab>extrasaction='ignore')<nl>writer.writeheader()<nl>for row in reader:<nl><tab>for col in transpose_columns:<nl><tab><tab>row[target_columns[0]] = col<nl><tab><tab>row[target_columns[1]] = row[col]<nl><tab><tab>writer.writerow(row)<nl>f.close()<nl>g.close()", "out": "itertools(python)を使用したcsv内のデータ操作", "out_en": "Manipulating data in csv using itertools (python)"}
{"in": "def grayScale(picture):<nl><tab>  xstop=getWidth(picture)/2<nl><tab>  ystop=getHeight(picture)/2<nl><tab>  for x in range(0,xstop):<nl><tab><tab>  for y in range(0,ystop):<nl><tab><tab><tab>oldpixel= getPixel(picture,x,y)<nl><tab><tab><tab>colour=getColor(oldpixel)<nl><tab><tab><tab>newColor = (getRed(oldpixel)+getGreen(oldpixel)+getBlue(oldpixel))/3<nl><tab><tab><tab>setColor(oldpixel,makeColor(newColor,newColor,newColor))<nl><tab>  repaint(picture)", "out": "JESで画像の一部をグレースケールにする方法", "out_en": "How to make a part of the picture grayscale in JES?"}
{"in": "item = self.list.GetItem(row, column)<nl>print item.GetText()", "out": "CheckListCtrlの各行からすべてのデータを書き込む", "out_en": "Writing all data from each row in CheckListCtrl"}
{"in": "class Data(db.Model):<nl>  property = db.StringProperty()<nl><nl>data = Data(property = 'value')<nl>data.put()<nl><nl>query = db.GqlQuery(\"SELECT * FROM Data\")<nl><nl>myvar = 'property'<nl><nl>for line in query:<nl>  getattr(line, myvar)", "out": "変数を使用してプロパティ値を取得する", "out_en": "Use variable to get property value"}
{"in": "p = None #This initializes the variables globally.<nl><nl>def message_handler(connect_object, message_node):<nl><tab>R = (message_node.getBody())<nl><tab>if R== \"video\" :<nl><tab><tab>movie_path= '/home/pi/Desktop/media/video.mp4'<nl><tab><tab>p = subprocess.Popen(['omxplayer', movie_path],stdin=subprocess.PIPE)<nl><tab>elif R== \"pause\":<nl><tab><tab>p.stdin.write('\\x20') #Much cleaner alternative to named pipes...<nl><tab>else:<nl><tab><tab>pass", "out": "Python、受信したメッセージに基づいてサブプロセスを一時停止する", "out_en": "Python, pausing a subprocess based on the received messages"}
{"in": "if not args.input or not args.output:<nl><tab><tab>print 'Incorrect number of params'<nl><tab><tab>exit()<nl>else:<nl><tab><tab>print \"Correct number of params\"", "out": "Pythonでのargparseによる引数解析の理解", "out_en": "Understanding argument parsing with argparse in Python"}
{"in": "def __unicode__(self):<nl><tab>return u\"{0} ({1}, {2})\".format(self.icon, self.attrib1, self.attrib2)", "out": "Djangoで複数の属性としてSelfを定義する", "out_en": "Define Self as multiple attributes in Django"}
{"in": "str1 = 'foo1({0}).foo2({1})'<nl>para = [1,2]<nl>eval(str1.format(*para)) # equivalent to eval(str1.format(1,2))", "out": "関数名の文字列にパラメータを設定して呼び出す方法", "out_en": "how to fill the paremeter into function name string for invoking?"}
{"in": "'//[^/]+/[^/]+/[^/]+/(\\d+(?=_)|[^/]+)'", "out": "名前付きグループを条件付きで抽出するための正規表現", "out_en": "Regex for conditionally extracting a named group"}
{"in": "#!/usr/bin/env python<nl><nl>__all__ = [\"monotonic_time\"]<nl><nl>import ctypes, os<nl><nl>CLOCK_MONOTONIC_RAW = 4 # see <linux/time.h><nl><nl>class timespec(ctypes.Structure):<nl><tab>_fields_ = [<nl><tab><tab>('tv_sec', ctypes.c_long),<nl><tab><tab>('tv_nsec', ctypes.c_long)<nl><tab>]<nl><nl>librt = ctypes.CDLL('librt.so.1', use_errno=True)<nl>clock_gettime = librt.clock_gettime<nl>clock_gettime.argtypes = [ctypes.c_int, ctypes.POINTER(timespec)]<nl><nl>def monotonic_time():<nl><tab>t = timespec()<nl><tab>if clock_gettime(CLOCK_MONOTONIC_RAW , ctypes.pointer(t)) != 0:<nl><tab><tab>errno_ = ctypes.get_errno()<nl><tab><tab>raise OSError(errno_, os.strerror(errno_))<nl><tab>return t.tv_sec + t.tv_nsec * 1e-9<nl><nl>if __name__ == \"__main__\":<nl><tab>print monotonic_time()", "out": "Pythonで単調な継続時間を取得する方法は?", "out_en": "How do I get monotonic time durations in python?"}
{"in": "verifications = Verification.objects.filter(asset_code__range=(10, 100))<nl>verifications.update(product_details=form.cleaned['product_details'])", "out": "DjangoフォームまたはModelFormを使用して、データベース・テーブル・レコードのサブセット内の単一の列を更新する方法", "out_en": "How to update a single column in a subset of database table records using Django form or ModelForm?"}
{"in": "OrderNotes.objects.filter(item=item).values_list('shared_note', flat=True).distinct()", "out": "ジャンゴのDISTINCT ON", "out_en": "DISTINCT ON in django"}
{"in": "from pandas import *<nl><nl>P1Channels = data.filter(regex=\"P1\")<nl>P1Sum = P1Channels.sum(axis=1)", "out": "Python Pandasを使用したワイルドカード名検索ですべての列を合計する", "out_en": "Sum all columns with a wildcard name search using Python Pandas"}
{"in": "# start with an empty output dictionary<nl>out = {}<nl><nl># iterate through the keys in the dictionary<nl>for key in p:<nl>   # iterate through the values in the sublist<nl>   for val in p[key]:<nl><tab>  # check to see if we've seen this one before<nl><tab>  if not out.has_key(val):<nl><tab><tab> # if not, start it out at 0<nl><tab><tab> out[val] = 0<nl><nl><tab>  # increment by one because we've seen it once more<nl><tab>  out[val] += 1<nl><nl>print out", "out": "辞書内の値の出現のヒストグラムを作成する方法", "out_en": "How can I create a histogram of appearances of values in a dictionary?"}
{"in": "Article.objects.filter(category__in=self.object.categories.all())", "out": "DjangoのDetailViewを使用した「関連コンテンツ」リスト", "out_en": "A 'related content' list with DetailView in Django"}
{"in": "a = np.arange(10)<nl>class Case():<nl><tab>def __init__(self, gcv_pointer):<nl><tab><tab>self.gcv = gcv_pointer<nl><nl><tab>def gcv(self):<nl><tab><tab>return(self.gcv)<nl><nl><tab>def gcv_set(self, value):<nl><tab><tab>self.gcv[:] = value<nl>pass<nl>#===============================================================================<nl># NumPy<nl>#===============================================================================<nl>caseList = []<nl>for i in range(1, 10):<nl><tab>case = Case(a[i-1:i])<nl><tab>caseList.append(case)<nl>gcvs = [case.GetGCV() for case in caseList]<nl>caseList[1].SetGCV(5)<nl>caseList[1].SetGCV(13)<nl>caseList[1].gcv[:] = 6<nl><nl>setattr(caseList[1], 'dpd', a[5:6])<nl><nl>caseList[1].dpd<nl>caseList[1].dpd[:] = 888", "out": "Python ORMからNumPy配列へ", "out_en": "Python ORM to NumPy arrays"}
{"in": "import sys<nl>import subprocess<nl>def dorun(args):<nl>   subprocess.Popen([sys.executable, args])<nl>dorun(sys.argv[1])", "out": "引数として他のPythonプログラムを実行するためのPythonプログラム", "out_en": "Python program to execute any other Python program as argument?"}
{"in": "mycanvas.showPage()", "out": "Reportlab Canvasオブジェクトへの改ページの追加", "out_en": "Add page break to Reportlab Canvas object"}
{"in": "for i, d in enumerate(DICE):<nl><tab>print choice(d),   # comma prevents newline<nl><tab>if not (i+1) % 4:  # i+1 modulus 4 will evaluate to [1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 3, 0]<nl><tab><tab>print ''<tab>   # empty string forces new line, when above was 0", "out": "16個の配列からランダムに選択した文字を4x4のグリッドに配置するBoggleゲーム(Python)", "out_en": "Boggle game - putting randomly selected letters from an array of 16 arrays in a 4x4 grid (Python)"}
{"in": "def histogram(data, num_bins):<nl>  span = max(data) - min(data)<nl>  bin_size = float(span) / num_bins<nl>  thresholds = [0] * num_bins<nl><nl>  for i in range(num_bins):<nl><tab>#I change thresholds calc<nl><tab>thresholds[i] = min(data) + bin_size * (i+1)<nl><nl>  counts = [0] * num_bins<nl>  for datum in data:<nl><tab>for bin_index, threshold in enumerate(thresholds):<nl><tab>  if datum <= threshold:<nl><tab><tab>counts[bin_index] += 1<nl><tab><tab>#I add a break<nl><tab><tab>break<nl>  return counts<nl><nl>data = [-3.2, 0, 1, 1.5, 1.6, 1.9, 5, 6, 9, 1, 4, 5, 8, 9, 5, 6.7, 9]<nl>print(\"Correct result:\\t\" + str([1, 6, 4, 6]))<nl>print(\"Your result:\\t\" + str(histogram(data, num_bins=4)))", "out": "Python-データセットのヒストグラムを計算します。", "out_en": "Python-compute the histogram of a set of data"}
{"in": "map.input.file", "out": "MRjobで入力ファイル名を取得する方法", "out_en": "How to get the name of input file in MRjob"}
{"in": "class MainHandler(tornado.web.RequestHandler):<nl><tab>def prepare(self):<nl><tab><tab>self.render('intro.html')", "out": "TornadoWebフレームワークでGET要求とPOST要求の両方を処理する方法は?", "out_en": "How to handle both GET and POST requests in TornadoWeb framework?"}
{"in": "import numpy as np<nl>def find_nearest(array,value):<nl><tab>idx = (np.abs(array-value)).argmin()<nl><tab>return array[idx]<nl><nl>array = np.random.random(10)<nl>print(array)<nl># [ 0.21069679  0.61290182  0.63425412  0.84635244  0.91599191  0.00213826<nl>#   0.17104965  0.56874386  0.57319379  0.28719469]<nl><nl>value = 0.5<nl><nl>print(find_nearest(array, value))<nl># 0.568743859261", "out": "numpy配列で最も近い値を検索する", "out_en": "find nearest value in numpy array"}
{"in": "import matplotlib.pyplot as plt<nl>fig = plt.figure()<nl>def onclick(event):<nl><tab>if event.dblclick:<nl><tab><tab> print event.button<nl><nl>connection_id = fig.canvas.mpl_connect('button_press_event', onclick)<nl>plt.show()", "out": "matplotlibでダブルクリックイベントを検出する方法は?", "out_en": "How can I detect double click events in matplotlib?"}
{"in": "return f", "out": "関数呼び出しから直接取得した値と中間変数を返します。", "out_en": "Return a value coming directly from a function call vs. an intermediate variable"}
{"in": "root = lxml.html.fromstring(s)<nl>anchors = root.cssselect(\"a\")<nl>links = [a.get(\"href\") for a in anchors]", "out": "Pythonでのページからの高速なリンク解析", "out_en": "fast parsing links out of a page in python"}
{"in": "lastline = None<nl><nl>with open('test.txt', 'r') as f:<nl><tab>for line in f.readlines():<nl><tab><tab>if not lastline:<nl><tab><tab><tab>lastline = line.rstrip('<nl>')<nl><tab><tab><tab>continue<nl><tab><tab>if line.rstrip('<nl>') == 'Sequence unavailable':<nl><tab><tab><tab>_, _, id = lastline.split('|')<nl><tab><tab><tab>print 'Sequence unavailable|' + id<nl><tab><tab>lastline = None", "out": "特定の行を選択して特定の列と結合することが困難", "out_en": "Difficulty in selection specific row and merge with specific column"}
{"in": "def allInRange(bst, left, right):<nl><tab>if bst is EmptyValue:<nl><tab><tab>return<nl><tab>if left <= bst.root <= right:<nl><tab><tab>print(bst.root)<nl><tab>allInRange(bst.left, left, right)<nl><tab>allInRange(bst.right, left, right)", "out": "バイナリツリーから特定の範囲の値を収集する", "out_en": "Collect values in a certain range from a binary tree?"}
{"in": "for csvFile in directory:<nl><tab>root = Element('Order')<nl><tab>with open(csvFile, 'rt') as f:<nl><tab><tab>junk = next(f)<tab><tab> #read the first line, don't do anything with it.<nl><tab><tab>reader = csv.reader(f)<nl><tab><tab>for row in reader:<nl><tab><tab><tab>queue = row[0]<nl><tab><tab><tab>token = row[1]<nl><tab><tab><tab>current_order = SubElement(root, 'Token', {'text':token})<nl><tab><tab><tab>details = SubElement(current_order, 'Queue',<nl><tab><tab><tab><tab><tab><tab><tab><tab> {'queue':queue})<nl><nl><tab>print prettify(root)", "out": "PythonでXMLに変換するときにCSVデータからヘッダーを削除する", "out_en": "Stripping headers from CSV data when converting to XML in Python"}
{"in": "tex.delete('1.0', END)", "out": "Ubuntu上のtkinter pythonでテキストボックスをクリア/削除する方法", "out_en": "how to clear/delete the Textbox in tkinter python on Ubuntu"}
{"in": "app = Tk()<nl>app.title(\"My GUI\")<nl>app.iconbitmap(app, \"C:\\Program Files (x86)\\Notepad++\\Files\\icon.ico\")<nl>app.resizable(0,0)<nl><nl>app.mainloop()", "out": "Python Tkinterの小さなウィンドウがメインウィンドウの前に一時的にポップアップする", "out_en": "Python Tkinter small window pops up momentarily before main window"}
{"in": "df=pd.read_excel(u\"url/??2008.xls\", encoding=sys.getfilesystemencoding())", "out": "パンダが中国語のファイル名でExcelを読む", "out_en": "Pandas read excel with Chinese filename"}
{"in": "import unittest<nl>import SomeTestModule<nl><nl>loader = unittest.TestLoader()<nl>loader.loadTestsFromModule(SomeTestModule)", "out": "複数のモジュールからすべてのテストケースを実行するには?", "out_en": "How to run all test-cases from several modules?"}
{"in": "import re<nl>print re.sub(r\"u('\\w)\", r\"\\1\", p)", "out": "正規表現。シンボルの前にある'u'の重複を削除する方法", "out_en": "Regex. How to remove multiple occurence of 'u' if it's befoure some symbol"}
{"in": "cur.execute(\"INSERT INTO \" + relevant_table + \"VALUES (?,?,?,?,?)\",<nl><tab><tab><tab>(export_date, export_morning, export_day, export_eve, export_night))", "out": "変数名を使用したSQLiteテーブルへの書き込み(Python)", "out_en": "Writing to SQLite tables with variable names (Python)"}
{"in": "strings = ['a', 'b']<nl>strings = [s + 'c' for s in strings]", "out": "listのような可変コンテナを繰り返し処理している間に、Pythonの不変型を変更する", "out_en": "Changing python immutable type while iterating through a mutable container such as list"}
{"in": "fileInfos = list(DirectoryInfo(path).GetFiles())<nl>fileInfos.sort(key=lambda f: f.CreationTime, reverse=True)", "out": "IronPythonでFileInfoのリストをソートする方法", "out_en": "how to sort list of FileInfo in IronPython"}
{"in": "reverse('api_v2_top_level', kwargs={'api_name': 'v2'})", "out": "パスをハードコードせずにAPIのエントリポイントにリダイレクトするには?", "out_en": "How to redirect to the API's entry point without hardcoding the path?"}
{"in": "mapping = {X1: Y1, X2: Y2, X3: Y3}<nl>mapping[X4] = Y4<nl>mapping[X5] = Y5<nl><nl>for X,Y in mapping.items():<nl><tab>if Y is not None:<nl><tab><tab>obj[X][0] = Y", "out": "マッピングを使用したPythonコードの圧縮", "out_en": "Condensing code in Python with Mappings"}
{"in": "check = cells[1].get_text(strip=True)", "out": "きれいなスープ文字列を比較できません", "out_en": "Beautifulsoup, unable to compare strings"}
{"in": "return render(request, 'blog/articles/{}.html'.format(pk), {'article': article})", "out": "Django:ビューに必要なhtmlページ", "out_en": "Django: Necessary html-page in views"}
{"in": "arr = []<nl>arr.append((time, host, status, bytes_))<nl>reqs_host, bytes_host, errors_host = {}, {}, {}<nl>for item in arr:<nl><tab>reqs_host[item[1]] = reqs_host.get(item[1], 0) + 1<nl><tab>bytes_host[item[1]] = bytes_host.get(item[1], 0) + item[3]<nl><tab>if item[2] and item[2][0] in \"45\": <nl><tab><tab>errors_host[item[1]] = errors_host.get(item[1], 0) + 1", "out": "PerlからPythonへの辞書要素のカウント", "out_en": "Counting dictionary elements from Perl to Python"}
{"in": "glFramebufferTexture2DEXT(GL_FRAMEBUFFER_EXT, GL_COLOR_ATTACHMENT0_EXT, GL_TEXTURE_2D, surface.texture, 0)", "out": "OpenGLの透明なフレームバッファバックグラウンド", "out_en": "Transparent FrameBuffer background in OpenGL"}
{"in": "for key in dict1.keys():<nl>  if key in dict2.keys():<nl><tab>dict1[key].append(dict2[key])", "out": "一致するPython辞書", "out_en": "Matching Python Dict"}
{"in": "values = [1,2,3]<nl><nl># Turn list of values into list of Q objects<nl>queries = [Q(pk=value) for value in values]<nl><nl># Take one Q object from the list<nl>query = queries.pop()<nl><nl># Or the Q object with the ones remaining in the list<nl>for item in queries:<nl><tab>query |= item<nl><nl># Query the model<nl>Article.objects.filter(query)", "out": "DjangoでORクエリー・フィルターを動的に構成する方法は?", "out_en": "How to dynamically compose an OR query filter in Django?"}
{"in": "outfile.write(str(i) + '<nl>')", "out": "Pythonでアーカイブに印刷する", "out_en": "print in an archive with python"}
{"in": "import subprocess<nl>import json<nl><nl>testing = \"HelloWorld\"<nl><nl>jsonStr = '{\"script\":\"#!/bin/bash \\<nl> STRING=\\'%VP%\\' \\<nl> echo $STRING \\<nl>\"}'.replace('%VP%', testing)<nl><nl>j = json.loads(jsonStr)<nl><nl>print \"start\"<nl>subprocess.call(j['script'], shell=True)<nl>print \"end\"", "out": "入力パラメータを渡した後にPythonからシェルスクリプトを実行する方法", "out_en": "How to execute shell script from Python after passing input parameters"}
{"in": "list_of_parent_keys = ndb.put_multi(list_of_entities)<nl>child_keys = []<nl>for parent_key in list_of_parent_keys:<nl>  child_key = ndb.Key(Parent, parent_key, Child, child_key)<nl>  child_keys.append(child_key)", "out": "Google App Engineデータストアに大容量データを効率的に格納する方法", "out_en": "google app engine Efficient way to put large data in datastore"}
{"in": "s = \"evening\"<nl>ans = len([x for x in xrange(len(s)-2) if s[x] == s[x+2]])<nl>print ans", "out": "各要素がその右側の2つの要素と等しい回数をカウントする関数の作成方法", "out_en": "How to make a function that counts how many times each element is equal to 2 elements to its right"}
{"in": "coord = tuple(sum(x) for x in zip(coord, change))", "out": "同じ長さのタプルからの値の追加", "out_en": "Adding Values From Tuples of Same Length"}
{"in": "concordance()", "out": "PythonでNLTKを使用したフレーズの一致", "out_en": "concordance for a phrase using NLTK in Python"}
{"in": "container = array.array('I', [0]) * ((10000000000 + 31) // 32)", "out": "Pythonでの長いインデックスの配列", "out_en": "long-index arrays in python"}
{"in": "import logging<nl>logger = logging.getLogger(__name__)<nl><nl>def restart_service(node_name):<nl><tab>print('='*30 + '  Starting to work on ' + node_name + '  ' + '='*30 + '<nl>')<nl><tab>logging.info('Connecting to %s in order to restart %s...', node_name, service_name)<nl><tab>ssh = paramiko.SSHClient()<nl><tab>ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())<nl><tab>ssh.load_system_host_keys()<nl><tab>ssh.connect(node_name)<nl><tab>channel = ssh.get_transport().open_session()<nl><tab>channel.exec_command(command)<nl><tab>while True:<nl><tab><tab>if channel.exit_status_ready():<nl><tab><tab><tab>break<nl><tab><tab>rl, wl, xl = select.select([channel], [], [], 0.0)<nl><tab><tab>if len(rl) > 0:<nl><tab><tab><tab># Log output<nl><tab><tab><tab>logger.info(channel.recv(1024))<nl><tab>ssh.get_transport().close()<nl><tab>ssh.close()", "out": "ファイルへのコマンドのPython Paramikoログ出力", "out_en": "Python Paramiko log output of commands to a file"}
{"in": "data = {}<nl>for row in words:<nl><tab>if not row[\"name\"] + \"-\" + row[\"subname\"] in data:<nl><tab><tab>data[row[\"name\"] + \"-\" + row[\"subname\"]] = {<nl><tab><tab><tab>\"name\": row[\"name\"],<nl><tab><tab><tab>\"subname\": row[\"subname\"],<nl><tab><tab><tab>\"data\": {<nl><tab><tab><tab><tab>\"attr1\": {\"name\":\"value1\", \"values\": []},<nl><tab><tab><tab><tab>\"attr2\": {\"name\":\"value2\", \"values\": []}<nl><tab><tab><tab>}<nl><tab><tab>}<nl><tab>data[row[\"name\"] + \"-\" + row[\"subname\"]][\"data\"][\"attr1\"][\"values\"].append(row[\"value1\"])<nl><tab>data[row[\"name\"] + \"-\" + row[\"subname\"]][\"data\"][\"attr2\"][\"values\"].append(row[\"value2\"])", "out": "CSV列の有限集合からの読み取りと、特定のJSONスキーマへの行としての出力", "out_en": "Reading from finite sets of CSV columns and outputing as rows to a specific JSON schema"}
{"in": "import scraperwiki<nl>import lxml.html<nl><nl>html = scraperwiki.scrape('http://ahr13.mapyourshow.com/5_0/exhibitor_results.cfm?  alpha=%40&type=alpha&page=1')<nl><nl>root = lxml.html.fromstring(html)<nl># get the links<nl>hrefs = root.xpath('//td[@class=\"mys-elastic mys-left\"]/a')<nl><nl>for href in hrefs:<nl>   print 'http://ahr13.mapyourshow.com' + href.attrib['href']", "out": "Scraperwiki+lxml。クラスを持つ要素の子のhref属性を取得する方法は?", "out_en": "Scraperwiki + lxml. How to get the href attribute of a child of an element with a class?"}
{"in": "--nothreading", "out": "ミラーリングされたMS SQL Serverへのpyodbcを使用した2番目の接続でのSegfault", "out_en": "Segfault on 2nd connection with pyodbc to mirrored MS SQL Server"}
{"in": "with open('ids.txt', 'rU') as f:<nl><tab>interesting_ids = set('>' + line.lower()[0:4] + \"_\" + line[4] for line in f)  # Get all ids in a set.<nl><nl>found_id = None<nl>with open('seqres.txt', 'rU') as g:<nl><tab>for line in g:<nl><tab><tab>if found_id is not None:<nl><tab><tab><tab>with open(found_id+'.fasta','w') as h:<nl><tab><tab><tab><tab>h.write(line)<nl><nl><tab><tab>id = line[:7]<nl><tab><tab>if id in interesting_ids: found_id = id<nl><tab><tab>else: found_id = None", "out": "ファイルをループして、条件が満たされた場合に次の行を書き込む", "out_en": "Loop over a file and write the next line if a condition is met"}
{"in": "lambda a=a: inputBoardSize(a)", "out": "Tkinterでは、各ボタンの値がボタンの値に変更されるように、このループ/関数を修正するにはどうすればよいですか。", "out_en": "In Tkinter how can I correct this loop/function so that each button changes a value to the value of the button?"}
{"in": "import bs4<nl>soup = bs4.BeautifulSoup(html_string)<nl>href = soup.find('h3').find('a').get('href')<nl>print(href)", "out": "Google検索結果の最初の結果(ビデオリンクが目立つ)にアクセスする方法", "out_en": "how to access the first result of a google search result ( prominently a video link)?"}
{"in": "ans = np.logical_and(<nl><tab>np.logical_and(array1 != 0, array2 != 0),<nl><tab>array1 == array2 )", "out": "2つのnumpy配列の相互比較", "out_en": "Comparing two numpy arrays to each other"}
{"in": "color_from_url = self.request.get('color')<nl>flavour_from_url = self.request.get('flavour')", "out": "Google App EngineでGETパラメータを取得して適切に使用するための基本的なPythonスクリプト", "out_en": "Basic Python Script in Google App Engine to get the GET parameters and use it accordingly"}
{"in": "import numpy<nl><nl>my_ar = numpy.array((0,5,10))<nl>print my_ar<nl><nl>transformed = numpy.array(map(lambda x:numpy.array((x,x*2,x*3)), my_ar))<nl>print transformed<nl><nl>print transformed.shape", "out": "numpy.arrayのすべての要素に次元を追加する", "out_en": "Adding a dimension to every element of a numpy.array"}
{"in": "import re<nl>import os<nl>r = re.compile(r'\\d{2}.+gif$')<nl>for root, dirs, files in os.walk('/home/vinko'):<nl>  l = [os.path.join(root,x) for x in files if r.match(x)]<nl>  if l: print l #Or append to a global list, whatever", "out": "Pythonを使用して正規表現に一致するファイル名をフォルダ内で検索するにはどうすればいいですか。", "out_en": "How do I search through a folder for the filename that matches a regular expression using Python?"}
{"in": "import pylab as pl<nl>import numpy as np<nl>import pandas as pd<nl><nl># prepare some random data<nl>N = 100<nl>np.random.seed(0)<nl>weekday = np.random.randint(0, 7, N)<nl>week = np.random.randint(0, 40, N)<nl>activity = np.random.randint(0, 100, N)<nl><nl>df = pd.DataFrame({\"weekday\":weekday, \"week\":week, \"activity\":activity})<nl>df.drop_duplicates(cols=[\"weekday\", \"week\"], inplace=True)<nl><nl># reshape the data and plot it<nl>df2 = df.pivot(columns=\"week\", index=\"weekday\", values=\"activity\")<nl>df2.fillna(0, inplace=True)<nl><nl>Weekday, Week = np.mgrid[:df2.shape[0]+1, :df2.shape[1]+1]<nl>fig, ax = pl.subplots(figsize=(12, 4))<nl>ax.set_aspect(\"equal\")<nl>pl.pcolormesh(Week, Weekday, df2.values, cmap=\"Greens\", edgecolor=\"w\", vmin=-10, vmax=100)<nl>pl.xlim(0, df2.shape[1])", "out": "Pandas Dataframeからアクティビティプロットを作成する方法(Githubコントリビューションプロットなど)", "out_en": "How to create an activity plot from Pandas Dataframe (like the Github contribution plot)"}
{"in": "process=subprocess.Popen([PathToProcess],stdin=subprocess.PIPE,stdout=subprocess.PIPE);<nl>for i in xrange(StepsToComplete):<nl><tab>print \"Forcing step # %s\"%i<nl><tab>process.stdin.write(\"<nl>\")<nl><tab>result=process.stdout.readline()", "out": "Pythonを使用したSTDIN/STDOUTによる外部プロセスの起動と制御", "out_en": "Starting and Controlling an External Process via STDIN/STDOUT with Python"}
{"in": "def get_absolute_url(self):<nl><tab>return \"/event/%d\" % self.id", "out": "get_absolute_url()の作成", "out_en": "Creating a get_absolute_url()"}
{"in": "import sqlalchemy<nl>import fdb", "out": "sqlalchemyを使用したWindows上のファイアバードスーパーサーバへの接続", "out_en": "Connecting to a firebird superserver on windows using sqlalchemy"}
{"in": "def download(url, local_file):<nl><tab>def progress(blocks_read, block_size, total_size):<nl><tab><tab>percent = min(int(blocks_read * block_size * 100 / total_size), 100)<nl><tab><tab>sys.stdout.write(\"\\rdownloading {}: {:2}%\".format(local_file, percent))<nl><tab><tab>if percent == 100:<nl><tab><tab><tab>sys.stdout.write('<nl>')<nl><tab><tab>sys.stdout.flush()<nl><nl><tab>urllib.urlretrieve(url, local_file, reporthook=progress)<nl><nl><nl># call download function<nl>download(\"http://ww1.microchip.com/downloads/en/DeviceDoc/pk2cmdv1-20Linux2-6.tar.gz\",<nl><tab><tab> \"pickit.tar.gz\")", "out": "Web上のアーカイブのサイズを読み取る方法", "out_en": "How do I read the size of an archive on web"}
{"in": "re.search(\"([0-9]{2}\\-[0-9]{2}\\-[0-9]{4})\", fileName)", "out": "Python/Regex-正規表現を使用してファイル名から日付を抽出する方法", "out_en": "Python/Regex - How to extract date from filename using regular expression?"}
{"in": "from collections import defaultdict<nl>type_dict = defaultdict(list)<nl>for element in self.elements:<nl><tab>type_dict[element.type()].append(element.dimStr())<nl>return ','.join('%s: %s' for k, v in type_dict.items())", "out": "継承を使用して効率的にダックタイピングを使用する方法", "out_en": "How to use duck typing effectively with inheritance"}
{"in": "reader = csv.reader(thefile.file.read().splitlines())", "out": "アップロードされたHTMLのCSVファイルをPythonでパースします", "out_en": "Parse HTML uploaded CSV file in Python"}
{"in": "icfg = Matrix2D_icfg(\"icfg\") #declaring object<nl>icfg_compress = pickle.dumps(icfg) #to pickle<nl><nl>icfg = pickle.loads(str(icfg_compress)) # to unload", "out": "Google App Engineのペイロードオブジェクト", "out_en": "Google App Engine Payload Object"}
{"in": "import active_directory<nl><nl>user = active_directory.find_user(\"jimboface\")<nl>destination_ou = active_directory.find_ou(\"happyland\")<nl>destination_ou.com_object.MoveHere(str(user.as_string()), str(user.Name))<nl>#Thats it!", "out": "Pythonを使用してユーザを別のOUに移動する方法", "out_en": "How do you move a user to a different OU using Python"}
{"in": "import os<nl>import shutil<nl>from os import path<nl>from os.path import join, getmtime<nl>from time import time<nl><nl>archive = \"bak\"<nl>current = \"cur\"<nl><nl>def archive_old_versions(days = 3):<nl><tab>for root, dirs, files in os.walk(current):<nl><tab><tab>for name in files:<nl><tab><tab><tab>fullname = join(root, name)<nl><tab><tab><tab>if (getmtime(fullname) < time() - days * 60 * 60 * 24):<nl><tab><tab><tab><tab>shutil.move(fullname, join(archive, name))", "out": "このBashコマンドを純粋なPythonで表現する方法", "out_en": "How to express this Bash command in pure Python"}
{"in": "colNums = [0, 2, 6]<nl>to_write = [ col for i, col in enumerate(zip(*my_reader)) if i in colNums ]", "out": "Pythonを使ってcsvファイルの列を別のcsvファイルにコピーする方法", "out_en": "how to copy some csv file colums into another csv file with python?"}
{"in": "app = wx.App()<nl>frame = MyFrame1(None)<nl>frame.Show()<nl>app.MainLoop()", "out": "wxPythonフレームが表示されない", "out_en": "wxPython frame don't show"}
{"in": "#input<nl><nl>file1 = open('1.txt', 'r')<nl>file2 = open('2.txt', 'r')<nl>matrix1 = [line.rstrip().split(', ') for line in file1.readlines()]<nl>matrix2 = [line.rstrip().split(', ') for line in file2.readlines()]<nl>file1.close()<nl>file2.close()<nl><nl>#combine<nl><nl>t_matrix1 = [[r[col] for r in matrix1] for col in range(len(matrix1[0]))]<nl>t_matrix2 = [[r[col] for r in matrix2] for col in range(len(matrix2[0]))]<nl>final_t_matrix = []<nl>for i in (t_matrix1 + t_matrix2):<nl><tab>if i not in final_t_matrix:<nl><tab><tab>final_t_matrix.append(i)<nl>final_matrix = [[r[col] for r in final_t_matrix] for col in range(len(final_t_matrix[0]))]<nl><nl>#output<nl><nl>outfile = open('out.txt', 'w')<nl>for i in final_matrix:<tab><tab><tab>   <nl><tab>for j in i[:-1]:<nl><tab><tab>outfile.write(j+', ')<nl><tab>outfile.write(i[-1]+'<nl>')<nl>outfile.close()", "out": "共通列による2つの表の結合", "out_en": "merging two tables by common column"}
{"in": "print myDict[ u'Command']", "out": "結果をStringにpymongo", "out_en": "pymongo result to String"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy as np<nl><nl>listAct = []<nl>for pos,rem in np.array(db.extractData(mess)):<nl><tab>act = gen.unixTime_to_dateTime(rem)- gen.unixTime_to_dateTime(pos) ##act is a datetime object<nl><tab>listAct.append(act.days + act.seconds/float(86400)) <nl><nl>bins = range(1,15)<nl>plt.hist(listAct,bins)<nl>plt.show()", "out": "Pythonで分布グラフをプロットする", "out_en": "Plot a distribution graph in Python"}
{"in": "album_list.append((album, Photo.objects.filter(album=album).order_by('?')[0]))", "out": "オブジェクトのタプルを作成しようとすると、オブジェクトとクエリーセットが作成されます。", "out_en": "Trying to create a tuple of objects create an object and a queryset"}
{"in": "prefetch_related()", "out": "DjangoがテンプレートでContentTypeを取得する", "out_en": "Django get ContentType in a template"}
{"in": "df_masked = df[(df.time <= t1) & (df.time >= t0)]", "out": "DataFrameの特定の部分を取得する方法", "out_en": "how to get particular part of DataFrame"}
{"in": "punctuation_i_care_about=\"?.!\"<nl>split_by_punc =  re.split(\"[%s]\"%punctuation_i_care_about, some_big_block_of_text)<nl>words_by_puct = [len(x.split()) for x in split_by_punc]", "out": "Pythonでの句読点間の単語数のカウント", "out_en": "Counting number of words between punctuation characters in Python"}
{"in": "from Crypto.Cipher import AES<nl>from Crypto import Random<nl>IV = Random.new().read(32)<nl>c = AES.new('abcd1234efgh5678', AES.MODE_CFB, IV)<nl>data = c.encrypt('test')<nl><nl>c.decrypt(data)", "out": "Python 3でソケットクライアントとサーバ間を移動するメッセージを保護する方法は?", "out_en": "How to secure messages travelling between a socket client and server in Python 3?"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>#plot<nl>r = np.arange(0, 3.0, 0.01)<nl>theta = 2 * np.pi * r<nl>rmax = 2.0<nl>n_th = 6<nl>th_pos = np.linspace(0.0, 2 * np.pi, n_th, endpoint=False)<nl>n_r = 5<nl>r_pos = np.linspace(0, rmax, n_r)<nl><nl><nl>ax = plt.subplot(111, polar=True)<nl><nl>## Plot the grid<tab><nl>for pos in th_pos:<nl><tab>ax.plot([th_pos]*2, [0, rmax], 'k:', lw=2)<nl>for pos in r_pos[1:-1]:<nl><tab>x = np.linspace(0, 2*np.pi, 50)<nl><tab>y = np.zeros(50)+pos<nl><tab>ax.plot(x, y, 'k:', lw=2)<nl><nl>## Plot your data<nl>ax.plot(theta, r, color='r', linewidth=20)<nl>ax.set_rmax(rmax)<nl>ax.grid(False)<nl><nl>#set ticks and labels<nl>ax.set_xticks(th_pos)<nl>label_cols = ['Label ' + str(num) for num in np.arange(n_th)]<nl>ax.set_xticklabels(label_cols, size=24)<nl>ax.set_yticks(r_pos[1:])<nl><nl><nl>plt.show()", "out": "matplotlibで、棒/線/パッチの下にグリッド線を設定し、上に目盛ラベルを保持する方法はありますか?", "out_en": "In matplotlib, Is there a way to set gridlines below bars/lines/patches while retaining ticklabels above?"}
{"in": "def primes(n): # sieve of eratosthenes<nl><tab>ps, sieve = [], [True] * (n + 1)<nl><tab>for p in range(2, n + 1):<nl><tab><tab>if sieve[p]:<nl><tab><tab>   ps.append(p)<nl><tab><tab>   for i in range(p * p, n + 1, p):<nl><tab><tab><tab>   sieve[i] = False<nl><tab>return ps", "out": "Pythonでのエラトステネス実装の私のふるい", "out_en": "My sieve of eratosthenes implementation in Python"}
{"in": "import os<nl><nl>dir_path = '/path/to/folders/folder{}'<nl><nl>x = 10<nl><nl>for i in range(0, x):<nl><tab>formatted_path = dir_path.format(i)<nl><tab>try:<nl><tab><tab>for f in os.listdir(formatted_path):<nl><tab><tab><tab>filename = os.path.join(formatted_path, f)<nl><tab><tab><tab>if os.path.isfile(filename):<nl><tab><tab><tab><tab>print filename<nl><nl><tab>except OSError:<nl><tab><tab>print \"{} does not exist\".format(formatted_path)", "out": "特定の終了番号までフォルダをウォークスルーするPython", "out_en": "Walk through folders until specific ending number python"}
{"in": "key, value = line.split(':')", "out": "テキストファイルからPythonで辞書を作成する", "out_en": "Creating a dictionary in python from a text file"}
{"in": "df['hours'] = [ts.hour for ts in pd.to_datetime(df['datetime'])]", "out": "カスタムオブジェクトを余分な日付と時刻に管理する最善の方法", "out_en": "Best way to manage custom object to extra date and time"}
{"in": "plt.clf()", "out": "matplotlib図形をループから更新する方法", "out_en": "How to update a matplotlib figure from loop?"}
{"in": "tbl = Table('users', self.meta, autoload=True, autoload_with=Engine)<nl>stmt = select([tbl.c.id, tbl.c.name])<nl>result = self.CONN.execute(stmt)<nl>ids = [row[tbl.c.id] for row in result]<nl>for x in range(2):<nl><tab>for i in ids:<nl><tab><tab>print(i)", "out": "結果プロキシオブジェクトをループする", "out_en": "Looping through a result proxy object"}
{"in": "DockArea.makeContainer()", "out": "Dockが消えてしまうほどサイズ変更されないようにする", "out_en": "Prevent a dock from being resized to the point of disappearing"}
{"in": "import ctypes<nl>ctypes.windll.user32.PostQuitMessage(0)", "out": "pumpMessages()の代わりにpyhookで独自のループを使用するにはどうすればいいですか?", "out_en": "How do I use my own loop with pyhook instead of pumpMessages()?"}
{"in": "application = wsgi.Application(soap_application)", "out": "soaplibとmod_wsgi(django、cherypy、またはその他のフレームワークなし)", "out_en": "soaplib with mod_wsgi without django, cherypy or other framework"}
{"in": "fig, ax = plt.subplots()<nl><nl>bar1 = ax.bar(date, value)<nl><nl>plt.title('Title')<nl>plt.ylabel('Value')<nl>plt.xlabel('Date')<nl>plt.show()", "out": "Matplotlibを使用した棒グラフ", "out_en": "Bar Graphs with Matplotlib"}
{"in": "matches = re.findall(\"([0-9]{5})\",f.read())", "out": "複数行にわたるPythonからの抽出", "out_en": "Extraction from python over multiple lines"}
{"in": "b.append(i)", "out": "Pythonを使用したforループによる.matファイルへのデータの保存", "out_en": "Saving data in a .mat file using a for loop using python"}
{"in": "test_range = agents.coll.find({ \"created_at\": {\"$gte\" : datetime(2015, 3, 1), \"$lt\": datetime(2015, 3, 30)}})", "out": "pymongoのisodateを使って検索する方法", "out_en": "how to query using isodate in pymongo"}
{"in": "import wx<nl><nl>class MyFrame(wx.Frame):<nl><tab>def __init__(self, parent, id, title):<nl><tab><tab>wx.Frame.__init__(self, parent, id, title,size=(250, 250))<nl><nl><tab><tab>topPanel = wx.Panel(self)<nl><nl><tab><tab>panel1 = wx.Panel(topPanel, -1,pos=(0,100),size=(100,100))<nl><tab><tab>button1 = wx.Button(panel1, -1, label=\"click me\")<nl><nl><tab><tab>panel2 = wx.Panel(topPanel, -1,pos=(0,200))<nl><tab><tab>button2 = wx.Button(panel2, -1, label=\"click me\")<nl><tab><tab>sizer = wx.BoxSizer(wx.VERTICAL)<nl><tab><tab>sizer.Add(panel1,0,wx.EXPAND|wx.ALL,border=10)<nl><tab><tab>sizer.Add(panel2,0,wx.EXPAND|wx.ALL,border=10)<nl><nl><tab><tab>topPanel.SetSizer(sizer)<nl><nl><nl><nl>class MyApp(wx.App):<nl><tab> def OnInit(self):<nl><tab><tab> frame = MyFrame(None, -1, 'frame')<nl><tab><tab> frame.Show(True)<nl><tab><tab> return True<nl><nl>app = MyApp(0)<nl>app.MainLoop()", "out": "WxPython 2パネルレイアウト", "out_en": "wxpython two panel layout"}
{"in": "google.appengine.ext.ereporter", "out": "Google App EngineでDjangoを使用してデータベースにエラーを記録する", "out_en": "Log errors to database with Django on Google App Engine"}
{"in": "import os<nl><nl>def get_file_path(file):<nl><tab>for (root, dirs, files) in os.walk('.'):<nl><tab><tab>if file in files:<nl><tab><tab><tab>return os.path.join(root, file)", "out": "サブディレクトリpythonを指定しないでファイルを開く", "out_en": "Open a file without specifying the subdirectory python"}
{"in": "value=str('6,0865000000e-01')<nl>value2=value.replace(',', '.')<nl>float(value2)<nl>0.60865000000000002", "out": "指数を浮動小数点に変換する", "out_en": "Converting exponential to float"}
{"in": "x_0 = (points[0].getX())<nl>x_02 = (points[1].getX())<nl>x_1 = (((points[0].getX())/3)*2 +  (points[1].getX())/3)<nl>x_2 = (((points[0].getX())/3)   + ((points[1].getX())/3)*2)", "out": "シェルピンスキーカーペット再帰-Python", "out_en": "Sierpinski Carpet Recursion - Python"}
{"in": "context = super(RegistrationView, self).get_context_data(**kwargs)<nl>print(self.get_slug_field())<nl>context['company'] = self.kwargs['company']<nl>context['program'] = self.kwargs['program']", "out": "URLからパラメータスラグを取得します。", "out_en": "Get parameters slugs from the URL"}
{"in": "fig, ax_f = plt.subplots(nrows=1, ncols=1)", "out": "Matplotlib:図形、xaxis、minor_locator、major_locatorの結合", "out_en": "Matplotlib: putting together figure, xaxis, minor_locator, major_locator"}
{"in": "import urllib2<nl>import re<nl>from BeautifulSoup import BeautifulSoup<nl><nl>url = \"http://forums.epicgames.com/archive/index.php?f-356-p-164.html\"<nl>page = urllib2.urlopen(url).read()<nl>soup = BeautifulSoup(page)<nl><nl># Get all the links<nl>links = [str(match) for match in soup('a')]<nl><nl>s = r'<a href=\"http://forums.epicgames.com/archive/index.php\\?t-\\d+.html\">(.+?)</a>' <nl>r = re.compile(s)<nl>for link in links:<nl><tab>m = r.match(link)<nl><tab>if m:<nl><tab><tab>print m.groups(1)[0]", "out": "正規表現マッチングエラー", "out_en": "Regex Matching Error"}
{"in": "d1 = {\"dog\":\"woof\", \"cat\":\"meow\"}<nl>d2 = d1.copy() # make a copy, not a reference to the same dictionary<nl>d2[\"dog\"] = \"bark\"<nl>for i in d1:<nl><tab>print(i, d1[i])<nl><nl># dog woof<nl># cat meow", "out": "Python:Dictionariesリンクデータ", "out_en": "Python: Dictionaries linked data"}
{"in": "openid.store", "out": "python-openidとGoogle Apps Federated Loginのエラー", "out_en": "Errors with python-openid and Google Apps Federated Login"}
{"in": "import subprocess<nl>server = subprocess.Popen([\"python\", \"manage.py\", \"runserver\"])", "out": "IPython Kernel Non-Responsive:IPython NotebookからのDjango開発サーバーの実行", "out_en": "IPython Kernel Non-Responsive: Running a Django development server from an IPython Notebook"}
{"in": "sorted(list, key=lambda d: int(d[2:]))", "out": "文字列のリストをソートするPython", "out_en": "Python sorting a list of strings"}
{"in": "import sys;<nl>sys.path.insert(0, '/path/to/application/app(folder)')<nl><nl>import urlregister", "out": "アプリケーションからのPythonインポートファイル", "out_en": "Python import file from app"}
{"in": "pos = mylist.index(max(mylist))", "out": "Pythonリスト内の最大項目の位置情報を取得する効率的な方法", "out_en": "Efficient way to get the position info of the biggest item in a Python list"}
{"in": "class_list = []<nl>class CollectSubclasses(type):<nl><tab>def __new__(cls, name, bases, attrs):<nl><tab><tab>abstract = False<nl><tab><tab>if attrs.get('abstract', False):<nl><tab><tab><tab>abstract = True<nl><tab><tab><tab>del attrs['abstract']<nl><tab><tab>res = super(CollectSubclasses, cls).__new__(cls, name, bases, attrs)<nl><tab><tab>if not abstract:<nl><tab><tab><tab>class_list.append(res)<nl><tab><tab>return res<nl><nl>class BaseFoo(object):<nl><tab>__metaclass__ = CollectSubclasses<nl><tab>abstract = True<nl><nl>class Concrete1(BaseFoo):<nl><tab>pass<nl><nl>class Abstract(BaseFoo):<nl><tab>abstract = True<nl><nl>class Concrete2(Abstract):<nl><tab>pass<nl><nl>print class_list", "out": "Djangoの抽象ベース・クラスのように動作するクラスをPythonで作成するにはどうすればよいでしょうか。", "out_en": "How do I create a class in Python that behaves like Django's abstract base class?"}
{"in": "list(collection.questions)", "out": "多対多でFlask-SQLAlchemyを使用すると、実行ではなくraw sqlが返される", "out_en": "Many to many using Flask-SQLAlchemy returns raw sql instead of executed"}
{"in": "items = [{'category': m.category, 'message': m.message}<nl>  for m in h.flash.pop_messages()]", "out": "オブジェクトの内容と共にリストをロード", "out_en": "Load list with content of object"}
{"in": "days_left = 100<nl>units_left = 50<nl>ideal_daily_rate = units_left/days_left<nl>spend = 1.2*ideal_daily_rate<nl><nl>while (days_left>0):<nl><tab>print( \"days_left: %4.1f unit_left: %4.1f ideal: %5.2f spend: %5.2f\" % (days_left,units_left,ideal_daily_rate,spend))<nl><tab>units_left -= spend<nl><tab>days_left -= 1<nl><tab>if (days_left>0):<nl><tab><tab>ideal_daily_rate = units_left/days_left<nl><tab><tab>spend = 1.2*ideal_daily_rate", "out": "numpyの再帰減算", "out_en": "Recursive subtraction in numpy"}
{"in": "as_<nl>with_<nl>for_<nl>in_", "out": "Pythonのネーミングで末尾のアンダースコアを使用する利点は何ですか?", "out_en": "What's the advantage of a trailing underscore in Python naming?"}
{"in": "import numpy as np<nl><nl>A = np.array([1,2,3,4,5,6,7])<nl>B = np.array([2,4,6])<nl>C = np.searchsorted(A, B)<nl><nl>D = np.delete(np.arange(np.alen(A)), C)<nl><nl>D<nl>#array([0, 2, 4, 6])", "out": "numpy配列の各要素が別の配列にあるかどうかを調べます。", "out_en": "Check if each element in a numpy array is in another array"}
{"in": "#ID<tab>  Postal Code  <nl>data = [<nl><tab>('1001', 'MK18 1TN'),<nl><tab>('1001', 'MK18 1TL'),<nl><tab>('1002', 'HP17 6DG'),<nl><tab>('1002', 'HP17 6DH'),<nl><tab>]<nl>d = dict()<nl>for id,pc in data:<nl><tab>if id not in d:<nl><tab><tab>d[id] = []<nl><tab>d[id].append(pc)<nl>idkeys = d.keys()<nl>idkeys.sort()<nl>for k in idkeys:<nl><tab>print k, ', '.join(d[k])", "out": "CSV行から値をコピーし、IDが同じ行に追加する", "out_en": "Copy values from CSV rows and adding to rows where the ID is the same"}
{"in": "shape = (QT.shape[2],)*2<nl>result = np.memmap('result.dat', dtype=QT.dtype, mode='w+', shape=shape)<nl>np.dot(QT.T, QT, out=result)", "out": "アレイの削除によるNumpyドットのパフォーマンスの向上コピー", "out_en": "improving Numpy dot performance by removing arrays copy"}
{"in": "ssh.exec_command(\"pwd; ./test.sh \" + str(command))", "out": "Pythonでexec_commandに変数値を渡す方法は?", "out_en": "How to pass a variable value in exec_command in python?"}
{"in": "def checkComm(old_commCount): # passed as a parameter<nl><tab>server = xmlrpclib.ServerProxy(server_uri) # connect to WP server<nl><tab>comments = server.wp.getComments(blog_id, server_admin, admin_pass, filters)<nl><tab>new_commCount = len(comments)<nl><tab>if new_commCount > old_commCount:<nl><tab><tab>print \"there are new comments\"<nl><tab><tab>old_commCount = new_commCount<nl><tab><tab>return old_commCount # return it so you can update it<nl><tab>else:<nl><tab><tab>print \"no new comments\"<nl><tab><tab>return old_commCount<nl><nl>comm_count = 0 # initialize it here<nl>while True:<nl><tab>comm_count = checkComm(comm_count) # update it every time<nl><tab>time.sleep(60)", "out": "Pythonの関数内で変数に別の値を与える方法", "out_en": "how can I give a variable another value inside a function in python?"}
{"in": "import pylab as pl<nl><nl>data = pl.loadtxt(\"myfile.txt\")<nl><nl>pl.figure(figsize=(14,6))<nl>pl.plot(data[:,1], data[:,0], \"b\")<nl>pl.plot(data[:,2], data[:,0], \"r\")<nl>pl.plot(data[:,3], data[:,0], \"r\")<nl><nl>pl.show()", "out": "matplotlibを使用して1つのプロットに3つのデータセットをプロットする", "out_en": "Plotting three data sets on a single plot using matplotlib"}
{"in": "from selenium import webdriver<tab><nl><nl>driver = webdriver.Firefox()<nl>driver.get('navigate to url')<nl><nl>select_elem = driver.find_element_by_id('TargetRadius')<nl>select_elem.click()<nl>options = select_elem.find_elements_by_tag_name('option')<nl>options[len(options)-1].click()", "out": "PythonでSeleniumの最後のドロップダウンオプションを選択するにはどうすればいいですか?", "out_en": "How can I select the last drop-down option in selenium with python?"}
{"in": "def parse_arguments(s):<nl><tab>openers = \"{[\\\"'(\"<nl><tab>closers = \"}]\\\"')\"<nl><tab>state = []<nl><tab>current = \"\"<nl><tab>for c in s:<nl><tab><tab>if c == \",\" and not state:<nl><tab><tab>   yield current<nl><tab><tab>   current = \"\"<nl><tab><tab>else:<nl><tab><tab>   current += c<nl><tab><tab>   if c in openers:<nl><tab><tab><tab>  state.append(c)<nl><tab><tab>   elif c in closers:<nl><tab><tab><tab>  assert state, \"ERROR No Opener for %s\"%c<nl><tab><tab><tab>  assert state[-1] == openers[closers.index(c)],\"ERROR Mismatched %s %s\"%(state[-1],c)<nl><tab><tab><tab>  state.pop(-1)<nl><tab>assert not state, \"ERROR Unexpected End, expected %s\"%state[-1]<nl><tab>yield current<nl><nl>print list(parse_arguments(\"1, bar(x+17, 1), arr = 's,y'\"))", "out": "引数へのPython関数呼び出しのような分割文字列", "out_en": "Split string that looks like a Python function call to arguments"}
{"in": "url(r'^[\\w\\-]+/', include('project.urls_tenant')),", "out": "DjangoマルチテナントURL構成", "out_en": "Django multitenant urls configuration"}
{"in": "result = [item for word in words for item in word.split(',')]", "out": "リスト内の項目を分割する", "out_en": "split items in list"}
{"in": "def example():<nl>  try:<nl><tab>return pickle.loads(\"\")<nl>  except EOFError:<nl><tab>return None", "out": "空のファイルをピクルする方法", "out_en": "How to pickle a empty file?"}
{"in": "import numpy as np<nl>from scipy.interpolate import UnivariateSpline<nl><nl>def make_norm_dist(x, mean, sd):<nl><tab>return 1.0/(sd*np.sqrt(2*np.pi))*np.exp(-(x - mean)**2/(2*sd**2))<nl><nl>x = np.linspace(10, 110, 1000)<nl>green = make_norm_dist(x, 50, 10)<nl>pink = make_norm_dist(x, 60, 10)<nl><nl>blue = green + pink   <nl><nl># create a spline of x and blue-np.max(blue)/2 <nl>spline = UnivariateSpline(x, blue-np.max(blue)/2, s=0)<nl>r1, r2 = spline.roots() # find the roots<nl><nl>import pylab as pl<nl>pl.plot(x, blue)<nl>pl.axvspan(r1, r2, facecolor='g', alpha=0.5)<nl>pl.show()", "out": "ピークの半値幅を求める", "out_en": "Finding the full width half maximum of a peak"}
{"in": "import time<nl>import curses<nl><nl>stdscr = curses.initscr()<nl><nl>n = 0<nl>b = 0<nl>for _ in range(0, 5):<nl><tab>i = 1<nl><tab>for _ in range(0, 123):<nl><tab><tab>stdscr.addstr(b, 0, \"Current: %d\" % i)<nl><tab><tab>i = i + 1<nl><tab><tab>n = n + 1<nl><tab><tab>time.sleep(0.01)<nl><tab><tab>stdscr.addstr(b+1, 0, \"Total: %d\" % n)<nl><tab><tab>stdscr.refresh()<nl><tab>b = b + 1", "out": "Python-forループで2つのカウンタを表示する方法", "out_en": "Python - How to display two counters in for loops"}
{"in": "import smtplib<nl>smtp_client = smtplib.SMTP('smtp.gmail.com', 587)<nl>smtp_client.starttls()<nl>smtp_client.login(username, password)", "out": "Pythonを使用してSMTPを自動化する", "out_en": "Automate SMTP Using Python"}
{"in": "request_token_url = 'http://api.twitter.com/oauth/request_token'<nl>access_token_url = 'http://api.twitter.com/oauth/access_token'<nl># This is the slightly different URL used to authenticate/authorize.<nl>authenticate_url = 'http://api.twitter.com/oauth/authenticate'", "out": "要求トークンを取得する方法", "out_en": "how do i get the request token"}
{"in": "# NYSE<nl>url_nyse = \"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=nyse&render=download\"<nl># Nasdaq<nl>url_nasdaq = \"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=nasdaq&render=download\"<nl># AMEX<nl>url_amex = \"http://www.nasdaq.com/screening/companies-by-name.aspx?letter=0&exchange=amex&render=download\"<nl><nl>import pandas as pd<nl><nl>df = pd.DataFrame.from_csv(url_nyse)<nl>stocks = df.index.tolist()", "out": "指定した取引所のすべての株式データを取得する方法", "out_en": "How to pull stock data for every stock on a given exchange"}
{"in": "import json<nl>import datetime<nl><nl><nl>class Custom_JSONEncoder(json.JSONEncoder):<nl><tab>def default(self, obj, **kwargs):<nl><tab><tab>if isinstance(obj, datetime.datetime):<nl><tab><tab><tab># Use the appropriate format for datetime<nl><tab><tab><tab>return obj.strftime('%Y-%m-%d %I:%M%p')<nl><tab><tab>return None", "out": "PythonでJSONシリアライゼーションが例外をスローしないようにする", "out_en": "Prevent JSON serialization from throwing an exception in Python"}
{"in": "import dbf<nl><nl>my_table = dbf.Table('/path/and/filename')<nl><nl>with my_table:<nl><tab>my_table.add_fields('header3 N(3,0)')<nl><nl><tab>for record in dbf.Process(my_table):<nl><tab><tab>record.header3 = record.header1 + record.header2", "out": "PythonでDBFからセルを参照する方法", "out_en": "How to reference cells from DBF with python?"}
{"in": "__class__.__name__", "out": "Pythonクラスの名前を取得するにはどうすればいいですか。", "out_en": "How can I get the name of a python class?"}
{"in": "import Tkinter as tk<nl>import threading<nl>import random<nl>import time<nl>from Queue import Queue, Empty<nl><nl>root = tk.Tk()<nl>time_label = tk.Label(root, text='<unknown> seconds')<nl>volt_label = tk.Label(root, text='<unknown> volts')<nl>time_label.pack()<nl>volt_label.pack()<nl><nl>def DAQ(q):<nl><tab>while True:<nl><tab><tab>q.put((time.time(), random.randrange(100)))<nl><tab><tab>time.sleep(2)<nl><nl>def update_data(queue, root):<nl><tab>try:<nl><tab><tab>timestamp, volts = queue.get_nowait()<nl><tab>except Empty:<nl><tab><tab>pass<nl><tab>else:<nl><tab><tab>time_label.config(text='{:.1f} seconds'.format(timestamp))<nl><tab><tab>volt_label.config(text='{:.4f} volts'.format(volts))<nl><tab>root.after(100, update_data, queue, root)<nl><nl>data_queue = Queue()<nl>t = threading.Thread(target=DAQ, args=(data_queue,))<nl>t.daemon = True<nl>t.start()<nl>update_data(data_queue, root)<nl>root.mainloop()", "out": "Pythonを使用したデータ取得", "out_en": "Data Acquistion using Python"}
{"in": "import datetime, pytz<nl><nl>datetime.datetime.now(pytz.timezone('Asia/Jerusalem')).strftime('%z')<nl><nl># returns '+0300' (because 'now' they have DST)<nl><nl><nl>pytz.timezone('Asia/Jerusalem').localize(datetime.datetime(2011,1,1)).strftime('%z')<nl><nl># returns '+0200' (because in January they didn't have DST)", "out": "Pythonの時間帯名からUTCオフセットを取得する", "out_en": "get UTC offset from time zone name in python"}
{"in": "import tweepy<nl><nl>CONSUMER_KEY = 'yourconsumerkey'<nl>CONSUMER_SECRET = 'yourconsumersecret'<nl>ACCESS_KEY = 'youraccesskey'<nl>ACCESS_SECRET = 'yoursecret'<nl>auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)<nl>auth.set_access_token(ACCESS_KEY, ACCESS_SECRET)<nl>api = tweepy.API(auth)<nl><nl>search_text = \"#gamedev\"<nl>search_number = 2<nl>search_result = api.search(search_text, rpp=search_number)<nl>for i in search_result:<nl><tab>print i.text", "out": "Tweepy Python、ハッシュタグの最新5つのインスタンスを取得", "out_en": "Tweepy Python, retrieving latest 5 instances of a hashtag"}
{"in": "myspline.ev(xI, yI)", "out": "SciPy標準グリッドを使用したPythonでの高速な2 D補間による分散/不規則な評価", "out_en": "Fast 2-D interpolation in Python with SciPy regular grid to scattered / irregular evaluation"}
{"in": "is_active = models.BooleanField(default=True)", "out": "カスタムユーザーモデルdjango-allauthでのAssertionError", "out_en": "AssertionError with custom user model django-allauth"}
{"in": "bin_range = [0, 100000]<nl>bin_input = raw_input(\"Enter bins as comma seperated list\")<nl>bin_input_parsed = [int(x.strip()) for x in bin_input.split(',')]<nl><nl>bins = [bin_range[0]] + bin_input_parsed + [bin_range[1]]<nl>pd.cut(df['Quantity'], bins)", "out": "ユーザ定義のビンでカットされたパンダ", "out_en": "Pandas cut with user-defined bins"}
{"in": "db_connection.commit()", "out": "SQLiteにデータを入力する", "out_en": "Entering data into SQLite"}
{"in": "import urllib<nl>import urllib.request<nl>myurl = \"http://www.mysite.com\"<nl><nl>sock = urllib.request.urlopen(myurl)<nl>pagedata = str(sock.read())<tab><tab><tab><tab><tab><tab>  <nl>sock.close()<nl><nl>file = open(\"output.txt\",\"w\")<nl>file.write(pagedata)<nl>file.close()", "out": "HTMLからクリーンテキストファイルを取得する際の問題", "out_en": "Trouble Getting a clean text file from HTML"}
{"in": "foo = [\"'the\"]<nl>foo = ['\"the']<nl>foo = ['''\"the''']<nl>foo = [\"\"\"'the\"\"\"]", "out": "Pythonリストの要素の一部としての単一引用符", "out_en": "Single quotes as a part of an element of a Python list"}
{"in": "ages_train = np.array([20, 22, 25, 27, 30, 31, 31, 34, 42, 50])<nl>net_worths_train = np.array([10000, 12000, 16000, 20000, 30000, 33000, 34000, 38000, 49000, 60000])<nl>reg.fit(ages_train[:, np.newaxis], net_worths_train[:, np.newaxis])<nl>print reg.coef_, reg.intercept_", "out": "Sklearn線形回帰XとYの入力形式", "out_en": "Sklearn linear regression X and Y input format"}
{"in": "print \"\\t\".join([<nl>data['user']['screen_name'],<nl>str(data['user']['followers_count']), <nl>str(data['user']['friends_count'])<nl>])", "out": "Pythonを使用してTwitter JSONデータから'user'データを解析する", "out_en": "Parsing 'user' data from Twitter JSON data using Python"}
{"in": "from Tkinter import *<nl><nl>top = Toplevel()<nl>diagrams = PhotoImage(file='your image')<nl>logolbl= Label(top, image = diagrams)<nl>logolbl.grid()<nl><nl>mainloop()", "out": "Tkinterで画像を表示するには?", "out_en": "How to show an image in Tkinter?"}
{"in": "import urllib2<nl>from xml.etree import ElementTree<nl><nl>result = urllib2.urlopen('http://boardgamegeek.com/xmlapi/boardgame/13').read()<nl>xml = ElementTree.fromstring(result)<nl>print xml.findtext(\".//age\")", "out": "Google App Engine上でPythonでxmlを構文解析する方法", "out_en": "How to parse xml in Python on Google App Engine"}
{"in": "keys.sort(key=lambda x: [int(y) for y in x.split('.')])", "out": "Pythonで文字列形式の数値をソートする", "out_en": "Sorting numbers in string format with Python"}
{"in": "db.session.query(models.Recipe).\\<nl><tab>join(models.Ingredient, models.Recipe.ingredients)<nl><nl>db.session.query(models.Recipe).\\<nl><tab>join(models.Recipe.ingredients)", "out": "異なる外部キーを持つ1つのテーブルでの2つのテーブルの結合", "out_en": "Joining two tables with one table having a different foreign key"}
{"in": "tDict = {}<nl><nl>with open(\"Lexicon.txt\", \"r\") as infile:<tab><nl>  for line in infile:<nl><tab>s = line.split()<nl><tab>tDict[s[0]] = s[1]<nl><nl>while True:<nl>  wordIn = input(\"Enter the English word(s) to be translated (enter 'exit' to stop the program): \")<nl><nl>  if wordIn == \"exit\": break<nl><nl>  words = wordIn.split()<nl>  for word in words:<nl><tab>if word in tDict.keys():<nl><tab>  print(tDict[word])<nl><tab>else:<nl><tab>  print(\"*\" + word)", "out": "Python Piglatinトランスレータでのループの使用", "out_en": "Using Loops in a Python Piglatin Translator"}
{"in": "import os<nl>print os.path.splitext('/home/user/somefile.txt')[0]+'.jpg'", "out": "Pythonでファイル名から拡張子を置き換える(または取り除く)方法は?", "out_en": "How to replace (or strip) an extension from a filename in Python?"}
{"in": "username = request.GET['username']", "out": "views.pyでurl paramを使用してモデル(User)をフィルタする方法", "out_en": "How to filter model (User) using url param in views.py?"}
{"in": "import matplotlib.pyplot as plt<nl>boundaries = collections.OrderedDict([(10,'red'),(20,'blue'),(55,'purple')])<nl>areas = range(0,101)<nl>n, bins, patches = plt.hist(areas, [0]+list(boundaries), histtype='bar', rwidth=1.0)<nl>for (patch,color) in zip(patches,boundaries.values()):<nl><tab>patch.set_color(color)<nl>plt.show()", "out": "Pythonで数値をビンに入れて分類する方法", "out_en": "How do I bin and categorize numbers in Python?"}
{"in": "lang-id", "out": "外来語の検出", "out_en": "Detecting foreign words"}
{"in": "from bson import json_util<nl>json_util.dumps(MyDoc._collection_obj.find(MyDoc.objects()._query))", "out": "MongoEngine文書をJSONとして返す", "out_en": "Return MongoEngine Documents as JSON"}
{"in": "import urllib2<nl>f = urllib2.urlopen(\"http://your-url\")<nl>size= f.headers[\"Content-Length\"]<nl>print size", "out": "URLだけを使用してインターネット上のファイルサイズを取得する方法", "out_en": "How can I get the file size on the Internet knowing only the URL"}
{"in": "import urllib2<nl>try:<nl><tab>data = urllib2.urlopen('http://www.python.org/pythonHomePage.html').read()<nl>except urllib2.HTTPError, e:<nl><tab>print e.code<nl><tab>print e.msg<nl><tab>print e.headers<nl><tab>print e.fp.read()<nl><tab>with open(\"code2.txt\", \"wb\") as code:<nl><tab>  code.write(e.fp.read())", "out": "urllib2は、URLに基づいて任意のファイルを取得し、名前付きファイルに保存します。", "out_en": "urllib2 retrieve an arbitrary file based on URL and save it into a named file"}
{"in": "import re<nl><nl>t=re.search(r\"(.+?)\\\\(.+)\\\\(.+)\", reg)<nl>t.groups()<nl>('HKEY_LOCAL_MACHINE', 'SOFTWARE\\\\TT\\\\Tools\\\\SYS', 'exePath')", "out": "文字列の分割に関する問題", "out_en": "problem about split a string"}
{"in": "import numpy as np<nl><nl>um=np.empty((34,17), dtype='float32') # Make these dimensions \"backwards\" for easier reshaping<nl>vm=np.empty((34,17), dtype='float32') # Also watch out, I believe the default type is float64<nl><nl>f = open(inputfile,'rb')<nl>recl = np.zeros(1,dtype=np.uint32)<nl>for i in range(nm+1):<nl><tab>recl = np.fromfile(f, dtype='uint32', count=1)<nl><tab>tmpu = np.fromfile(f, dtype='float32', count=um.size) # These arrays will be flat<nl><tab>tmpv = np.fromfile(f, dtype='float32', count=vm.size)<nl><tab>recl = np.fromfile(f, dtype='uint32', count=1)<nl><nl><tab>um = np.transpose(np.reshape(tmpu, um.shape))<nl><tab>vm = np.transpose(np.reshape(tmpv, vm.shape))", "out": "Fortran 77の書式なしバイナリファイルをPythonに読み込む方法", "out_en": "How to read fortran 77 unformatted binary file into python"}
{"in": "from selenium.webdriver.support.ui import WebDriverWait<nl>from selenium.webdriver.common.by import By<nl>from selenium.webdriver.support import expected_conditions as EC<nl><nl>WebDriverWait(self.driver, 10).until(<nl><tab>EC.presence_of_element_located((By.XPATH, '//*[@id=\"toast-container\"]/div/div[1][@class=\"ng-binding toast-title\"]'))<nl>)", "out": "SeleniumでJSによって生成されたテキストを取得する方法", "out_en": "How to get text generated by JS in Selenium?"}
{"in": "import win32com.client<nl>shell = win32com.client.Dispatch(\"WScript.Shell\")<nl>shell.Run(\"outlook\")<nl>shell.AppActivate(\"Outlook\")<nl>shell.SendKeys(\"^o\", 0) # 1 f?r Pause = true 0 f?r nein<nl>shell.SendKeys(\"^a\", 0)<nl>shell.SendKeys(\"^c\", 0)", "out": "Pythonでプログラムを開いてキーストロークを送信する方法", "out_en": "how to open a program in python and send keystrokes?"}
{"in": "from flask import Flask, render_template, request, jsonify<nl>import dogo<nl>import traceback<nl><nl>app = Flask(__name__)<nl><nl><nl>@app.route('/')<nl>def index():<nl><tab>return render_template(\"index.html\")<nl><nl><nl>@app.route('/_summary', methods=[\"GET\"])<nl>def summary():<nl><tab>try:<nl><tab><tab>song = request.args.get('a')<tab><nl><tab><tab>return jsonify(result=dogo.parse_it_asap(song))<nl><tab>except Exception:<nl><tab><tab>return traceback.format_exc()<nl><nl>if __name__ == \"__main__\":<nl><tab>app.run(debug = True)", "out": "フラスコアプリケーション要求ajax GETが500内部サーバーエラーを返す", "out_en": "Flask App request ajax GET returning 500 Internal Server Error"}
{"in": "for i, e in enumerate(myList):<nl><tab>key = e[e.index(\"_\"):]<nl><tab>if key not in myDict: continue<nl><tab>myList[i] = myDict[key]", "out": "リスト内の文字列を、その末尾に基づいて番号に置き換える方法", "out_en": "How to replace strings in a list by numbers based on their endings?"}
{"in": "class example:<nl><tab>def GET(self):<nl><tab><tab>print web.ctx.ip", "out": "Pythonで要求からIPを抽出する", "out_en": "Extracting IP from request in Python"}
{"in": "from selenium.common.exceptions import NoSuchElementException, ElementNotVisibleException<nl><nl>try:<nl><tab>Ui.find_el(link.AuthorPopupNodes.LOGIN_EMAIL)<nl>except (NoSuchElementException, ElementNotVisibleException):<nl><tab>try:<nl><tab><tab>Ui.find_el(link.HeaderNodes.LOGOUT_BUTTON)<nl><tab><tab>self.log_out()<nl><tab>except (NoSuchElementException, ElementNotVisibleException):   <nl><tab><tab>pass<nl><nl><tab>Ui.wait_for_element(link.HeaderNodes.LOGIN_BUTTON, \"Timeout: Wait for Login button!\")<nl><tab>Ui.click_el(link.HeaderNodes.LOGIN_BUTTON)", "out": "要素が画面上にあるかどうかを確認する方法", "out_en": "How to check if element is on screen"}
{"in": "import sys <nl>class MyNameSpace(object):<nl><tab>def __init__(self,ns):<nl><tab><tab>self.ns = ns<nl><tab>def __enter__(self):<nl><tab><tab>globals().update(self.ns)<nl><tab>def __exit__(self, exc_type,exc_value,traceback):<nl><tab><tab>self.ns.update(sys._getframe(1).f_locals)<nl><nl>my_dict = {'a':3, 'b':2} <nl>with MyNameSpace(my_dict) as ns:<nl><tab>print(a) # Should print 3<nl><tab>x = 5 # When the block finishes, my_dict['x'] should now be 5 <nl><nl>print(my_dict['x'])", "out": "withステートメントで実行されるコマンドのブロックの取得", "out_en": "Getting the block of commands that are to be executed in the with statement"}
{"in": "(\".slave-checkbox\")", "out": "Djangoのすべてのチェック・ボックスの選択", "out_en": "Selecting all checkboxes in Django"}
{"in": "import tarfile<nl>tar = tarfile.open(\"file.tgz\")<nl>for file in tar.getmembers():<nl><tab>print file.name", "out": "tgzファイルのディレクトリ構造をPythonで取得する", "out_en": "Get the directory structure of a tgz file in python"}
{"in": "import matplotlib.pyplot as plt<nl>import numpy<nl><nl>x = numpy.arange(10.)<nl>d = dict((i, numpy.sin(x+i)) for i in range(5))<nl><nl>for k in sorted(d):  # sort purely to make deterministic<nl><tab>plt.plot(x,d[k],label=str(k))<nl><nl>plt.legend(loc=2)<nl>plt.draw()", "out": "動的データ・セットでのlegend()の機能", "out_en": "How does legend() work on a dynamic data set?"}
{"in": "with open('Path/to/file', 'r') as content_file:<nl><tab>content = content_file.read()<nl><tab>print(content.count(\"Methadone\"))", "out": "csvファイル内の特定の文字列の出現回数をカウントする", "out_en": "Counting the occurence of a specific string in a csv file"}
{"in": "tri_crop[tri_crop == 0] = tri_warp[tri_crop == 0]", "out": "回転したROIにシームレスな結合を作成", "out_en": "Make seamless join on rotated ROI"}
{"in": "import numpy as np<nl><nl>#here y2 is the new extrapolated array<nl>y2 = np.interp(x2,x1,y1)", "out": "エレメント間の間隔が等しくないPython配列を外挿する", "out_en": "Extrapolate python array with unequal spacing between elements"}
{"in": "class ConversationManager(models.Manager):<nl><tab>def has_all(self, participants):<nl><tab><tab># Start with all conversations<nl><tab><tab>reducedQs = self.get_query_set()<nl><tab><tab>for p in participants:<nl><tab><tab><tab># Reduce to conversations that have a participant \"p\" <nl><tab><tab><tab>reducedQs = reducedQs.filter(participants__id=p.id)<nl><tab><tab>return reducedQs", "out": "複数の外部キーに対するDjango M2M QuerySetフィルタリング", "out_en": "Django M2M QuerySet filtering on multiple foreign keys"}
{"in": "import pycurl, json<nl><nl>github_url = 'https://api.postmarkapp.com/email'<nl><nl>data = json.dumps({\"From\": \"user@example.com\", \"To\": \"receiver@example.com\", \"Subject\": \"Pycurl\", \"TextBody\": \"Some text\"})<nl><nl>c = pycurl.Curl()<nl>c.setopt(pycurl.URL, github_url)<nl>c.setopt(pycurl.HTTPHEADER, ['X-Postmark-Server-Token: API_TOKEN_HERE','Accept: application/json'])<nl>c.setopt(pycurl.POST, 1)<nl>c.setopt(pycurl.POSTFIELDS, data)<nl>c.perform()", "out": "curlの例をpycurlに変換します。", "out_en": "Convert curl example to pycurl"}
{"in": "def query(id):<nl><tab>for line in file:<nl><tab><tab>table = {}<nl><tab><tab>(table[\"ID\"],table[\"name\"],table[\"city\"]) = line.split(\";\")<nl><tab><tab>if id == int(table[\"ID\"]):<nl><tab><tab><tab> file.close()<nl><tab><tab><tab> return table<nl><tab># ID not found; close file and return empty dict<nl><tab>file.close()<nl><tab>return {}", "out": "辞書Pythonを返す方法", "out_en": "How to return a dictionary | Python"}
{"in": "thisCell = [ numpy.zeros(shape=(i,j,k)) for t in range(1, Nmax) ]", "out": "PythonのMatlabセル風構造", "out_en": "Matlab cell like structure in python"}
{"in": "base.html", "out": "ハイフンが含まれるdjango urlの問題", "out_en": "Problem with django urls which have a hyphen in them"}
{"in": "s.get(url)", "out": "Python要求-要素値がありません", "out_en": "Python Requests - missing element value"}
{"in": "output = sorted([1] * k + [0] * (n - k), key=lambda k: random.random())", "out": "正確にk個のTrueを持つ長さnのブール値のPythonのランダムリスト", "out_en": "Pythonic random list of booleans of length n with exactly k Trues"}
{"in": "re.findall(\"[A-Za-z]+\", \"Toronto, Ontario, Canada\", 0)[1]<nl>'Ontario'<nl><nl>re.findall(\"[A-Za-z]+\", \"California - LA\", 0)[1]<nl>'LA'", "out": "pysparkのRDDから部分文字列を選択します", "out_en": "Select substring from an RDD in pyspark"}
{"in": "[{'a':v, 'b':v, 'c':c} <nl><tab>for (l, c) in zip((l_Y, l_Z), ('Y', 'Z')) <nl><tab><tab>for v in l]", "out": "辞書で2つのリストを結合する-Python", "out_en": "combine two lists in a dictionary - python"}
{"in": "l1 = [1,2,3]<nl>l2 = [4,5,6]<nl><nl>newl = []<nl>for item1, item2 in zip(reversed(l1), reversed(l2)):<nl><tab>newl.append(item1)<nl><tab>newl.append(item2)<nl><nl>print newl", "out": "前の2つのリストの値を使用した新しいリストの作成", "out_en": "Creating new list with values from two prior lists"}
{"in": "fields = ax.stackplot(df.index,df.field1,df.field2)<nl>colors = [field.get_facecolor()[0] for field in fields]<nl>patch1=mpl.patches.Patch(color=colors[0],label= 'field 1')<nl>patch2=mpl.patches.Patch(color=colors[1], label ='field 2')", "out": "python matplotlib:stackplotにラベルを追加し、その色を正しく設定する", "out_en": "python matplotlib: add labels and set their colours correctly for a stackplot"}
{"in": "#Initiating Variables for use by importing functions<nl>module_name = 'mymod'<nl>filename = 'action_file'<nl>source = PossibleMatches[0][1] #the source code from the best matched option<nl><nl># define module_name somewhere<nl>import types<nl>module = types.ModuleType(module_name)<nl><nl># source should the code to execute<nl># filename should be a pseudo-filename that the code's from<nl># (it doesn't actually have to exist; it's used for error messages)<nl>code_object = compile(source, filename, 'exec')<nl><nl>#execute the code in the context of the module<nl>exec code_object in module.__dict__<nl><nl>#Executing the 'Main' Function from the code<nl>return module.Main()", "out": "Googleアプリケーションエンジン上でPythonコードを動的に実行する", "out_en": "Dynamically running python code on google app engine"}
{"in": "#!/usr/bin/python<nl><nl>f = open(\"blah.txt\");<tab>   # open file<nl>for line in f:<tab><tab><tab>  # iterate over lines in file<nl>  line = line.strip()<tab>   # strip leading and trailing white space<nl>  print (\",\" + line + \",\")  # print line between commas<nl>f.close() # close file<tab>  # close file when done", "out": "Pythonでカンマで始まる文字列とカンマで終わる文字列を出力する", "out_en": "Print beginning and ending with a comma in Python?"}
{"in": "members = QuerySelectMultipleField(query_factory=get_members)", "out": "WTFormsとSQLAlchemyを使用して多対多リレーションシップを設定する方法", "out_en": "How do I populate many-to-many relationship with WTForms and SQLAlchemy?"}
{"in": "import io<nl>import re<nl>import sys<nl><nl>file = io.StringIO('''<nl>title|Head1|Head2|Head3|head4 <nl>----|------|-----|-----|<nl>1|1150976|0|25300992|bfa92720/bfa924f8|su|(None, None)<nl>2|1150976|0|25300992|bfa92720/bfa924f8|su|(None, None)<nl>3|1150976|0|25300992|bfa92720/bfa924f8|su|(None, None)<nl>4|1150976|0|25300992|bfa92720/bfa924f8|su|(None, None)<nl>5|1150976|0|25300992|bfa92720/bfa924f8|su|(None, None)<nl>All|processes:|MemAlloc|=|408125440|(None, None)|0.0.0.0<nl>|(None, None)<nl>0.0.0.0 ,text<nl>''')<nl><nl>sys.stdout.writelines(line for line in file if re.match('\\d+\\|', line))", "out": "Python 3:2つの異なる条件に一致する正規表現", "out_en": "Python 3: Regex matching 2 seperate conditions"}
{"in": "r = requests.get(\"https://api.imgur.com/3/gallery/r/earthporn/top/\")", "out": "ImgurからJSONフォーマットのデータを要求するための正しいAPIコール?", "out_en": "Correct API call to request JSON-formatted data from Imgur?"}
{"in": "import csv<nl>import os<nl><nl>os.chdir(r\"C:\\Users\\Robert\\Documents\\qwe\")<nl><nl>output_ary = []<nl>with open(\"gdweights_feh_robert_cmr.csv\",'rb') as f:<nl><tab>reader = csv.reader(f, delimiter= ',')<nl><tab>zerovar = 0<nl><tab>for row in reader:<nl><tab><tab>if zerovar==0:<nl><tab><tab><tab>zerovar = zerovar + 1<nl><tab><tab>else:<nl><tab><tab><tab>sn = row [11]<nl><tab><tab><tab>zerovar = zerovar + 1<nl><tab><tab><tab>x = float(sn)<nl><tab><tab><tab>if x > 20:<nl><tab><tab><tab><tab>print x<nl><tab><tab><tab><tab>output_ary.append(row)<nl><nl>with open(\"output.csv\",'w') as f2:<nl><tab>for row in output_ary:<nl><tab><tab>for item in row:<nl><tab><tab><tab>f2.write(item + \",\")", "out": "Pythonでcsvドキュメント内の特定の行を検索する方法", "out_en": "How to find specific rows in csv document in python"}
{"in": "import re<nl>import fileinput<nl><nl>#  write concepts which are not not in log<nl><nl>with open(\"log.txt\", 'r') as f,  open(\"substance.txt\", \"r\") as oldfile, open('new_substance.txt', 'w') as newfile:<nl><tab># read f only once and convert it to a list<nl><tab>logList = list(f)<nl><tab># remove everything that exists in f either with a +\\t or a -\\t<nl><tab>withconceptsremoved = [x for x in oldfile if ('-\\t'+x not in logList and '+\\t'+x not in logList)]<nl><tab># convert to string and write to file<nl><tab>withconceptsremoved = \"\".join(withconceptsremoved)<nl><tab>newfile.write(withconceptsremoved)<nl><tab>#  so the new file only has comments which are neither positive or negative in log.  If we now copy positive ones, we've removed the negatives<nl><tab>#  write new additions to bottom of new file <nl><tab>for line in logList:<nl><tab><tab>if '+\\t' in line:<nl><tab><tab><tab>addedconcept = line.replace('+\\t','1\\t')<nl><tab><tab><tab>newfile.write(addedconcept)", "out": "Python:2つのファイル間で一意の値を検索してファイルを更新し、さらにデータを末尾に追加する", "out_en": "python: updating file by finding unique values between two files, and then appending further data to bottom"}
{"in": "background.save(\"result.png\")", "out": "ブラーなしのPILペーストイメージ", "out_en": "PIL paste image without blur"}
{"in": "from traits.api \\<nl><tab>import HasTraits, Button, Range, Float<nl>from traitsui.api \\<nl><tab>import View, Item, Group, RangeEditor<nl>from traitsui.qt4.extra.bounds_editor import BoundsEditor<nl><nl>class Parameters(HasTraits):<nl><tab>rgb_range = Range(0.,1.0)<nl><tab>range1 = rgb_range<nl><tab>range2 = rgb_range<nl><tab>low_val = Float(0.0)<nl><tab>high_val = Float(1.0)<nl><tab>eval_button = Button(\"Eval\")  <nl><nl><tab>traits_view= View(<nl><tab><tab>Item('range1', editor=RangeEditor()),<nl><tab><tab>Item('range2', editor=BoundsEditor(low_name = 'low_val', high_name = 'high_val')),<nl><tab><tab>Item('eval_button'))<nl><nl><nl><tab>def _range1_changed(self, value):<nl><tab><tab>print(value)<nl><nl><tab>def _low_val_changed(self):<nl><tab><tab>print(self.low_val)<nl><nl><tab>def _high_val_changed(self):<nl><tab><tab>print(self.high_val)<nl><nl><tab>def _eval_button_fired(self):<nl><tab><tab>print(self.range1)<nl><tab><tab>print(self.low_val)<nl><tab><tab>print(self.high_val)<nl><nl>if __name__ == '__main__':<nl><tab>alg = Parameters()<nl><tab>alg.configure_traits()", "out": "TraitsUIにおけるBoundsEditorの利用", "out_en": "Usage of BoundsEditor in TraitsUI"}
{"in": "import re<nl><nl>js = open(\"yourfile.js\", \"r\").readlines()[:2]<nl><nl>matcher_rex = re.compile(r'^var\\s+(?P<varname>\\w+)\\s+=\\s+\"(?P<varvalue>[\\w\\s]+)\";?$')<nl>for line in js:<nl><tab>matches = matcher_rex.match(line)<nl><tab>if matches:<nl><tab><tab>name, value = matches.groups()<nl><tab><tab>print name, value", "out": "Pythonを使用してファイルからJavaScript変数を読み取る", "out_en": "Read JavaScript variables from a file with Python"}
{"in": "#Usage: response.set_cookie( 'cookie_name', 'cookie_value' )<nl><nl>class RefererMiddleware(object):<nl><tab>def process_response(self, request, response):<nl><tab><tab>if not request.COOKIES.has_key( 'HTTP_REFERER' ):<nl><tab><tab><tab>response.set_cookie( 'HTTP_REFERER', request.META.get('HTTP_REFERER') )<nl><tab><tab>return response", "out": "DjangoがHTTP_REFERERを保存して、ランディング・ページ情報として使用する", "out_en": "Django saving HTTP_REFERER to use it as landingpage information"}
{"in": "import multiprocessing<nl>import time<nl><nl>def process(x):<nl><tab>time.sleep(1)<nl><tab>return x<nl><nl>if __name__ == '__main__':<nl><tab>jobs = range(100)<nl><tab>pool = multiprocessing.Pool(20)<nl><tab>for result in pool.imap_unordered(process, jobs):<nl><tab><tab>print(result)<nl><tab>pool.close()<nl><tab>pool.join()", "out": "Pythonのマルチプロセッシングスロット", "out_en": "Multiprocessing slots in python"}
{"in": "cb = {}<nl>for link in br.links(url_regex=\"inquiry-results.jsp\"):<nl><tab>cb[link.url] = link<nl>print cb.values()", "out": "Pythonでmechnizeを使用して生成されたLinks内の重複を削除する方法は?", "out_en": "How to remove duplicates in Links genrated using mechnize in Python?"}
{"in": "import time<nl>import wx<nl><nl>class MyFrame(wx.Frame):<nl><tab>def __init__(self, *args, **kargs):<nl><tab><tab>wx.Frame.__init__(self, *args, **kargs)<nl><tab><tab>self.bt = wx.Button(self)<nl><tab><tab>self.status = ProgressStatusBar(self)<nl><tab><tab>self.sizer = wx.BoxSizer(wx.VERTICAL)<nl><nl><tab><tab>self.Bind(wx.EVT_BUTTON, self.on_bt, self.bt)<nl><nl><tab><tab>self.sizer.Add(self.bt, 1, wx.EXPAND)<nl><tab><tab>self.sizer.Add(self.status, 1, wx.EXPAND)<nl><nl><tab><tab>self.SetSizer(self.sizer)<nl><tab><tab>self.Fit()<nl><tab><tab>self.SetSize((500,200))<nl><nl><tab>def on_bt(self, evt):<nl><tab><tab>\"press the button and it will start\" <nl><tab><tab>for n in range(100):<nl><tab><tab><tab>time.sleep(0.1)<nl><tab><tab><tab>self.status.SetProgress(n)<nl><tab><tab><tab>self.Update()<nl><nl>if __name__ == '__main__':<nl><tab>app = wx.PySimpleApp()<nl><tab>frame = MyFrame(None)<nl><tab>frame.Show()<nl><tab>app.MainLoop()", "out": "Cody PrecordのProgressStatusBarを使用した、ステータスバーの進行ゲージ", "out_en": "Progress gauge in status bar, using Cody Precord's ProgressStatusBar"}
{"in": "pairs = int(raw_input(\"How many pairs do you have?\"))<nl>for pair_n in xrange(1, pairs + 1):<nl>  file1 = raw_input(\"pair%d-a: \" % pair_n)<nl>  file2 = raw_input(\"pair%d-b: \" % pair_n)<nl>  cmd = \"samtools merge pair%d.bam '%s' '%s'\" % (pair_n, file1, file2)<nl>  # os.system(cmd) to run the command.", "out": "後でPythonのコマンドラインで使用できる一連の数値を生成するにはどうすればいいですか?", "out_en": "How to generate a sequence of numbers that can later be used in the command lines in python?"}
{"in": "import os<nl>os.chdir('/foo/bar')<nl>f = open('foobar.txt', 'r')", "out": "別のディレクトリからのPythonファイルの読み取り", "out_en": "reading a file in python from different directory"}
{"in": "def find_root(f, a, b, EPS=0.0001):<nl>  if f(a)==0 : return a<nl>  if f(b)==0 : return b<nl>  if f(a)*f(b)>0 : return None<nl>  c=(a+b)/2<nl>  while(abs(f(c))>EPS) :<nl><tab>if f(a)*f(c)<0 : b=c<nl><tab>else : a=c<nl><tab>c=(a+b)/2<nl>  return c", "out": "中間値定理を使用して数学関数のルートを検索する方法", "out_en": "How to find a root for a mathematical function using Intermediate value theorem?"}
{"in": "def gen_command_string(path, url):<nl><tab>cmd = path + 'TortoiseProc.exe /command:ignore /path:\\\"%s\\\" /closeonend:0' % url<nl><tab>return cmd<nl><nl>SVN_PATH = 'C:/Program Files/TortoiseSVN/bin'<nl>HG_PATH = 'C:/Program Files/TortoiseHg/bin/'<nl><nl>cmd = gen_command_string(SVN_PATH, 'http://google.com')<nl>call(cmd)", "out": "複数のTortoiseクライアント(Git、SVN)がインストールされている場合、適切なTortoise.exeを見つけるためにPythonスクリプトを取得するにはどうすればいいですか?", "out_en": "How can I get a python script to find the right Tortoise.exe if I have multiple Tortoise clients (Git, SVN) installed?"}
{"in": "file_name = files.blobstore.create(mime_type='image/png',_blobinfo_uploaded_filename=file_name_from_url)", "out": "BlobStoreでファイル名プロパティを設定する方法", "out_en": "How to set filename property in BlobStore?"}
{"in": "import collections<nl>import heapq<nl><nl>Node = collections.namedtuple('Node', ['v', 'children'])<nl><nl>def min_depth_bfs(root):<nl><tab>todo = [(1, root)]<nl><tab>while todo:<nl><tab><tab>depth, node = heapq.heappop(todo)<nl><tab><tab>if not node.children: return depth, node<nl><tab><tab>for c in node.children:<nl><tab><tab><tab>heapq.heappush(todo, (depth + 1, c))<nl><nl>def min_depth_dfs(node):<nl><tab>if not node.children: return 1, node<nl><tab>d, n = min(min_depth_dfs(c) for c in node.children)<nl><tab>return 1 + d, n<nl><nl>example = Node(8, [Node(3, [Node(1, [])]), Node(10, [])])<nl><nl>print min_depth_dfs(example)<nl>print min_depth_bfs(example)", "out": "二分木の最小深さの計算方法", "out_en": "how to caculate the minimum depth of binary tree"}
{"in": "batchIDlist = []<nl><nl>for s3_file in bucket.list(prefix='Download/test_queue1/'):<nl><tab>batchID = str((s3_file.name).split(\"/\"))[32:-13]<nl><nl><tab>if batchID not in batchIDlist:<nl><tab><tab>batchIDlist.append(batchID)", "out": "AWS S3バケットからオブジェクトの固有のリストを取得する方法", "out_en": "How to get a unique list of objects from AWS S3 bucket"}
{"in": "d=np.array(dataPoints.tolist())", "out": "ネストされたデータ・リストの多次元Numpy配列への変換", "out_en": "Converting nested lists of data into multidimensional Numpy arrays"}
{"in": "tabsplit=line.split()", "out": "ファイルの分割と特定のインデックスpythonへのアクセス方法", "out_en": "splitting file and how to access certain index python"}
{"in": "def altElement(a):<nl><tab>return a[::2]", "out": "最初の要素の後に他のすべての要素をスキップします", "out_en": "Skipping every other element after the first"}
{"in": "scipy.stats.f_oneway(*archive.values())", "out": "スクリプトでscipyの一方向分散分析を実行する", "out_en": "Running scipy's oneway anova in a script"}
{"in": "class decorator(object):<nl><tab>def __init__(self, functor):<nl><tab><tab>self.functor = functor<nl><nl><tab><tab>#  lets copy some key attributes from the original function<nl><tab><tab>self.__name__ = functor.__name__<nl><tab><tab>self.__doc__ = functor.__doc__<nl><nl><tab>def __call__(self, *args, **kwargs):<nl><tab><tab>return self.functor(*args, **kwargs)<nl><nl><tab>def __repr__(self):<nl><tab><tab>return '<function %s created by ...>' % self.functor.__name__<nl><nl><nl>@decorator<nl>def f():<nl><tab>return 'spam'<nl><nl><nl>print f()  # spam<nl>print repr(f)  # <function hehe created by ...>", "out": "Python関数の表現を変更する方法は?", "out_en": "How do I change the representation of a Python function?"}
{"in": "tup = (2009, 3, 23, 13, 6, 34, 0, 82, 0)<nl>import datetime <nl>d = datetime.datetime(*(tup[0:6]))<nl>#two equivalent ways to format it:<nl>dStr = d.isoformat(' ')<nl>#or<nl>dStr = d.strftime('%Y-%m-%d %H:%M:%S')", "out": "Python、9タプルUTC日付をMySQL日時フォーマットに変換する", "out_en": "Python, Convert 9 tuple UTC date to MySQL datetime format"}
{"in": "data = [{\"name\": \"John\", \"age\": \"20\", \"occupation\": \"Python pro\"}, \\<nl><tab><tab>{\"name\": \"Jack\", \"age\": \"80\", \"occupation\": \"Olympic Athlete\"}, \\<nl><tab><tab>{\"name\": \"John\", \"age\": \"20\", \"occupation\": \"Student\"}]<nl><nl>new_data = []<nl>names_ages = set([])<nl>for d in data:<nl><tab>name_age = (d[\"name\"], d[\"age\"])<nl><tab>if name_age not in names_ages:<nl><tab><tab>new_data.append(d)<nl><tab>names_ages.add(name_age)<nl><nl>print new_data<nl># [{'age': '20', 'name': 'John', 'occupation': 'Python pro'},<nl>#  {'age': '80', 'name': 'Jack', 'occupation': 'Olympic Athlete'}]", "out": "特定の値でフィルタする必要がある辞書の一覧", "out_en": "List of dictionaries that should be filtered by certain values"}
{"in": "print(\"Sisesta isikukood\")<nl>isikukood = str(input())<nl><nl>if (isikukood[:1] == '1' or isikukood[:1] == '3' or isikukood[:1] == '5'):<nl><tab>print(\"He\")<nl>elif isikukood[:1] == '2' or isikukood[:1]== '4' or isikukood[:1] == '6':<nl><tab>print(\"She\")<nl>else:<nl><tab>print(\"Vale isikukood\")", "out": "ユーザ入力の最初の番号を読み込みます", "out_en": "Read first number of user input"}
{"in": "class Abc(object):<nl><tab>pass<nl><nl>def new_funct(self):<nl><tab>print 1234<nl><nl>Abc.instance_funct = new_funct<nl>a = Abc()<nl>a.instance_funct()", "out": "Python:クラスを拡張する方法", "out_en": "Python: How to extend a class?"}
{"in": "import maya.cmds as mc<nl><nl>Shader = mc.ls(type = 'surfaceShader')<nl>for i in Shader:<nl><tab>con = mc.listConnections('%s.outColor' % i)<nl><tab>names = mc.listConnections(con, type=\"mesh\")<nl><tab>print i, \"->\", \", \".join(names)", "out": "シェーダが割り当てられたメッシュの名前を取得する", "out_en": "Getting the name of the mesh that shader was assigned to"}
{"in": "import numpy as np<nl>data = np.random.randn(3000000,50)<nl>newData = data.reshape(300,10000,50) # This is as [300,10000,50] array<nl><nl>print newData[0,...] # Show the first matrix, 1 of 300", "out": "Pythonで2d配列を3d配列に変換する", "out_en": "Converting 2d array into 3d array in python"}
{"in": "id_array = [x.id for x in _get_object_array() if x.id % 2 == 0]", "out": "条件付きループのPython", "out_en": "Python for loop with condition"}
{"in": "import pandas as pd<nl>DF = pd.DataFrame({'COL1': [1.0,2.0,\"A\"]})<nl><nl>def ToInt(x):<nl><tab>try:<nl><tab><tab>x = int(x)<nl><tab>except:<nl><tab><tab>pass<nl><tab>return x<nl><nl>DF.index = [ToInt(x) for x in DF.COL1]<nl>DF", "out": "タイプが混在する整数としてインデックスを設定する", "out_en": "Set Index as Integers with Mixed Types"}
{"in": "keys_to_print = ['1', '3', '20', '23', '45', '46']<nl>for key in keys_to_print:<nl><tab>print d[key] + ' ',", "out": "辞書から選択したキー値をPythonで出力する最も簡単な方法は何ですか。", "out_en": "What's the easiest way to print seleced key values from dictionary in python"}
{"in": "def testOne(self):<nl><tab>\"\"\"Test IsOdd(1)\"\"\"<nl><tab>self.failUnless(IsOdd(1))<nl><nl>def testTwo(self):<nl><tab>\"\"\"Test IsOdd(2)\"\"\"<nl><tab>self.failIf(IsOdd(2))", "out": "Pythonのunittestで、より良いグループ/テスト名を表示するには?", "out_en": "Python unittest, how to display a better group/test name?"}
{"in": "import bugzilla<nl>bz = bugzilla.Bugzilla(url=\"https://bugzilla.kernel.org\")<nl><nl>print bz._proxy.Bug.fields({\"names\" : [\"rep_platform\"]})", "out": "python-bugzilla xml-rpcからフィールド値を取得する方法", "out_en": "how to retrieve field values from python-bugzilla xml-rpc"}
{"in": "sorted(set(s[a:b] for a in range(n) for b in range(a+1,n+1)),<nl><tab>   key=lambda x:(len(x),x))", "out": "Pythonのソート:サブストリング", "out_en": "Python sorting : sub strings"}
{"in": "x=[\"123\",\"456.678\",\"abc.def.ghi\"]<nl>[y.rsplit(\".\",1)[0] for y in x]", "out": "Pythonでの配列のすべての要素の文字列操作", "out_en": "String Manipulation of All Elements of an Array in Python"}
{"in": "string1.rstrip(\"-\")<nl># \"title\"<nl>string2.rstrip(\"-\")<nl># \"title\"<nl>string3.rstrip(\"-\")<nl># \"title-is-a-title\"", "out": "文字列から末尾のダッシュをすべて削除するにはどうすればいいですか。", "out_en": "How can I remove all trailing dashes from a string?"}
{"in": "filter_stmt.append(func.text(Multicast.addr).like(stmt))", "out": "flask-adminのテキスト以外の列を検索", "out_en": "Search on non-text column in flask-admin"}
{"in": "# importing numpy as np and<nl># assign a ndarray to x<nl>ind = np.nonzero(x)[-k:]", "out": "MATLAB find関数python-3入力引数バージョンに変換する", "out_en": "MATLAB find function translate to python - 3 input arguments version"}
{"in": "def extract_data_one():<nl><tab>for item in sites:<nl><tab><tab>os.chdir(r\"\\\\svr-dc\\ftp site\\%s\\Daily\" % item)<nl><tab><tab>subprocess.call(['7z', 'e', 'data1.zip', '*.*'])", "out": "7zはサブプロセスを使用するアーカイブを検出しない", "out_en": "7z will not find archive using subprocess"}
{"in": "df.to_csv(path, mode='a')", "out": "データの行をパンダの新しいデータフレームに連結する", "out_en": "Concatenate rows of data to new dataframe in Pandas"}
{"in": "{<nl><tab><tab>\"_id\" : {<nl><tab><tab><tab><tab>\"value\" : 1<nl><tab><tab>},<nl><tab><tab>\"value\" : 3<nl>}", "out": "MongodbのMap Reduceのキーとしての整数", "out_en": "Integer as key for Map Reduce in Mongodb"}
{"in": "import random<nl>import sys<nl><nl>def random_line(file_handle):<nl><tab>lines = file_handle.readlines()<nl><tab>num_lines = len(lines)<nl><nl><tab>random_line = None<nl><tab>while not random_line:<nl><tab><tab>random_line_num = random.randint(0, num_lines - 1)<nl><tab><tab>random_line = lines[random_line_num]<nl><tab><tab>random_line = random_line.strip()<nl><nl><tab>return random_line<nl><nl>file_handle = None<nl><nl>if len(sys.argv) < 2:<nl><tab>sys.stderr.write(\"Reading stdin<nl>\")<nl><tab>file_handle = sys.stdin<nl>else:<nl><tab>file_handle = open(sys.argv[1])<nl><nl>print(random_line(file_handle))<nl><nl>file_handle.close()", "out": "テキストファイルから行をランダムに読み込む関数", "out_en": "Function to randomly read a line from a text file"}
{"in": "def generate_primes(n):<nl>  from math import sqrt<nl>  primes=[]<nl>  potentialPrimes=range(2,n+1)<nl>  prime=potentialPrimes[0]<nl>  while prime<sqrt(n):<nl><tab>  primes.append(prime)<nl><tab>  potentialPrimes.remove(prime)<nl><tab>  for potential in potentialPrimes:<nl><tab><tab>  if potential%prime==0:<nl><tab><tab><tab>  potentialPrimes.remove(potential)<nl><tab>  prime=potentialPrimes[0]<nl><nl>  for potential in potentialPrimes:<nl><tab>  primes.append(potential)<nl>  for number in primes:<nl><tab>  print number", "out": "1-nから素数を生成しようとしますが、常に素数3と5が欠落しています?", "out_en": "Trying to generate primes from 1 - n, but consistently is missing primes 3 and 5.?"}
{"in": "def getPoints(connectionList):<nl><tab>firstConnection = connectionList[0]<nl><tab>points = [firstConnection[1][1]]<nl><tab>lastLine = firstConnection[1][0]<nl><nl><tab>connectionList.remove(firstConnection)<nl><nl><tab>while len(connectionList):<nl><tab><tab>for connection in list(connectionList):<nl><tab><tab><tab>(line1, p1), (line2, p2) = connection<nl><tab><tab><tab>if lastLine == line1 or lastLine == line2:<nl><tab><tab><tab><tab>points.append(p1)<nl><tab><tab><tab><tab>lastLine = line1 if lastLine == line2 else line2<nl><tab><tab><tab><tab>connectionList.remove(connection)<nl><tab><tab><tab><tab>break<nl><tab>return points", "out": "タプル、リストのリストを使用したオブジェクトの検索と一致", "out_en": "Searching and matching objects through tuples, list of lists"}
{"in": "# not fair<nl>serving = 'A'<nl><nl># note: we assume probA + probe == 1.0<nl><nl># initial serving is decided by players' skill<nl>serving = 'A' if probA > random() else 'B'<nl><nl># or, initial serving is decided by a coin<nl>serving = 'A' if 0.5 > random() else 'B'", "out": "私はコード内でrandom()を使用して勝つ時間を計算していますが、結果は予想通りです。", "out_en": "I use random() in a code to calcuate the times to win, but the result is as expected"}
{"in": "line = line.decode('unicode_escape').encode('latin-1').decode('utf8')", "out": "16進数文字を読み込み、python 3を使用してutf-8に変換する", "out_en": "Read hex characters and convert them to utf-8 using python 3"}
{"in": "nx,ny = smallerArray.shape<nl>largeArray[0:nx,0:ny] = smallerArray[0:nx,0:ny]", "out": "Python-設定されたサイズのNumpy配列へのコピー", "out_en": "Python - Copying into Numpy Array of set size"}
{"in": "logging.info('Altitude:%s' % gpsd.fix.altitude)", "out": "Pythonでテキストと変数を同じ行に記録するにはどうすればいいですか?", "out_en": "How do I log text and a variable in the same line in Python?"}
{"in": "# -*- coding: utf-8 -*-<nl>import curses<nl><nl>screen = curses.initscr()<nl>curses.noecho()<nl>curses.mousemask(curses.ALL_MOUSE_EVENTS)<nl><nl>screen.keypad(1)<nl><nl>char = \"\"<nl><nl>try:<nl><tab>while True:<nl><tab><tab>char = screen.getch()<nl><nl><tab><tab>screen.addstr( str(char) + \" \")<nl><tab><tab>if char == curses.KEY_MOUSE:<nl><tab><tab><tab>screen.addstr (\" |\" + str(curses.getmouse()) + \"| \")<nl><nl>finally:<nl><tab>screen.keypad(0)<nl><tab>curses.endwin()<nl><nl><tab>curses.echo()", "out": "cursesベースのUIのスライダ", "out_en": "A slider for curses based UI"}
{"in": "dictionary = {'a':'n', 'b':'o', 'c':'p',<nl><tab><tab><tab> 'd':'q', 'e':'r', 'f':'s',<nl><tab><tab><tab> 'g':'t','h':'u','i':'v',<nl><tab><tab><tab> 'j':'w', 'k':'x','l':'y',<nl><tab><tab><tab> 'm':'z','n':'a','o':'b',<nl><tab><tab><tab> 'p':'c','q':'d','r':'e',<nl><tab><tab><tab> 's':'f','t':'g','u':'h',<nl><tab><tab><tab> 'v':'i', 'w':'j','x':'k',<nl><tab><tab><tab> 'y':'l','z':'m'}<nl><nl>def rot(xy):<nl><tab>rot13 = ''<nl><tab>for c in xy:<nl><tab><tab>if c.islower():<nl><tab><tab><tab>rot13 += dictionary.get(c)<nl><tab><tab>if c.isupper():<nl><tab><tab><tab>c = c.lower()<nl><tab><tab><tab>rot13 += dictionary.get(c).capitalize()<nl><tab><tab>if c not in dictionary:<nl><tab><tab><tab>rot13 += c<nl><tab>print \"ROTTED: \", rot13  <nl><tab>return rot13", "out": "このROT13関数を再実行する方法", "out_en": "How to re-work this ROT13 Function"}
{"in": "list.sort(key=lambda x: x[0][1])", "out": "Pythonでリスト要素を使ってリストをソートする方法", "out_en": "Python how to sort a list with list elements"}
{"in": "#!/usr/bin/python<nl>import csv<nl><nl>with open('text_file.txt') as input_file:<nl><tab>csv_data = []<nl><nl><tab>for row in csv.reader(input_file, delimiter=','):<nl><tab><tab>csv_data += [[row[0], int(row[1].strip()) + 10]]<nl><nl><tab>convert_to_csv = True<nl><nl><tab>if convert_to_csv:<nl><tab><tab>with open('input.csv', 'w') as output_file:<nl><tab><tab><tab>csv_file = csv.writer(output_file, delimiter=',')<nl><tab><tab><tab>csv_file.writerow(['Text', 'Count'])<nl><nl><tab><tab><tab>for row in csv_data:<nl><tab><tab><tab><tab>csv_file.writerow(row)", "out": "PythonでのCSV計算。リストからデータを取得する", "out_en": "CSV calculation with Python. Get data from list"}
{"in": "while True: <nl><tab>sleep_now = False<nl><tab>try:<nl><tab><tab>print \"WRITER:Getting\"<nl><tab><tab>line,offset = self.queue.get(True, 5)<nl><tab><tab>#Process the line just read<nl><tab><tab>proc_line = self.process_line(line)<nl><tab><tab>if proc_line: <nl><tab><tab><tab>#Must write it to DB. Put it into DB Queue<nl><tab><tab><tab>if self.dbqueue.full(): <nl><tab><tab><tab><tab>#DB Queue is full, put data into DB before putting more data<nl><tab><tab><tab><tab>self.empty_dbqueue()<nl><tab><tab><tab>self.dbqueue.put(proc_line)<nl><tab><tab><tab>#Keep a track of the maximum offset in the queue<nl><tab><tab><tab>self.queue_offset = offset if offset > self.queue_offset else self.queue_offset<nl><tab>except Queue.Empty: <nl><tab><tab>#Looks like writing queue is empty. Just check if DB Queue is empty too<nl><tab><tab>print \"WRITER: Empty Read Queue\"<nl><tab><tab>self.empty_dbqueue()", "out": "マルチプロセッシングを使用するファイルプロセッサ", "out_en": "File Processor using multiprocessing"}
{"in": "url = 'http://webapps.rrc.state.tx.us/CMPL/viewPdfReportFormAction.do?method=cmplP4FormPdf&packetSummaryId=97770'<nl><nl>req = urllib2.Request(url)<nl>req.add_unredirected_header('User-Agent', 'Mozilla/5.0')<nl><nl>file_pointer = urllib2.urlopen(req)<nl>print file_pointer.getcode()<nl>print file_pointer.geturl();", "out": "urllib2と要求を使用してPythonでページをダウンロードしようとしましたが、リダイレクトされ続けます", "out_en": "Trying to download page in python with urllib2 and requests but keep getting redirected"}
{"in": "GAE_SETTINGS_MODULES = (<nl><tab>'maps.gae_models_settings',<nl>)", "out": "django non-rel/App Engineでのフィールドごとのインデックスの管理", "out_en": "django non-rel / Managing per-field indexes on App Engine"}
{"in": "with open(\"test.csv\",\"wa\") as f:<nl><tab>f.write(\"name\\tnum<nl>\")<nl><tab>for k, v in tripo.items():<nl><tab><tab>if v:<nl><tab><tab><tab>f.write(\"1\\t\")<nl><tab><tab><tab>f.write(\"{}<nl>\".format(k.split('.')[0]))<nl><tab><tab><tab>for s in v:<nl><tab><tab><tab><tab>f.write(\"1\\t{}<nl>\".format(s.split('.')[0]))", "out": "Pythonで出力ファイルに新しい列を追加する方法は?", "out_en": "How to add new column to output file in Python?"}
{"in": "list3=list1[:10]+list2[:20]", "out": "Pythonでリストから要素を取得する", "out_en": "Get elements from list in python"}
{"in": "#!/usr/bin/python<nl>a = []<nl>b = []<nl>nums = raw_input(\"Enter input- \")<nl>#append all to a list<nl>for n in nums.split():<nl><tab>n = int(n)<nl><tab>if n < 0:<nl><tab><tab>break<nl><tab>a.append(n)<nl><nl>#get the maximums<nl>b = list(a)<nl>first_max = max(b)<nl>b.remove(first_max)<nl>second_max = max(b)<nl>b.remove(second_max)<nl>third_max = max(b)<nl><nl>#get the minimums<nl>b = list(a)<nl>first_min = min(b)<nl>b.remove(first_min)<nl>second_min = min(b)<nl>b.remove(second_min)<nl>third_min = min(b)<nl><nl>## now swap <nl>xMax, yMax, zMax = a.index(first_max), a.index(second_max), a.index(third_max)<nl>xMin, yMin, zMin = a.index(first_min), a.index(second_min), a.index(third_min)<nl>a[xMax], a[xMin] = a[xMin], a[xMax]<nl>a[yMax], a[yMin] = a[yMin], a[yMax]<nl>a[zMax], a[zMin] = a[zMin], a[zMax]<nl><nl>print a", "out": "最大値と最小値を入れ替える方法は?(python)", "out_en": "How to swap maximums with the minimums? (python)"}
{"in": "z=urlopen(url).read().decode('utf-8')<nl>self.feed(z)", "out": "このコードはAptanaから実行すると機能しますが、python HTMLParserでは失敗します。", "out_en": "This code works running from Aptana but fails in python HTMLParser"}
{"in": "from twython import Twython<nl><nl>twitter = Twython()<nl>followers = twitter.get_followers_ids(screen_name = \"ryanmcgrath\")<nl><nl>for follower_id in followers:<nl><tab>print \"User with ID %d is following ryanmcgrath\" % follower_id", "out": "Twythonを使ってツイッターのフォロワーを得るには?", "out_en": "How to get twitter followers using Twython?"}
{"in": "sys.setrecursionlimit(n)", "out": "Pythonでの再帰はどの程度安全なのでしょうか。", "out_en": "How safe is recursion in Python?"}
{"in": "x = '123 Main St'<nl>y = '123 MAIN ST'<nl><nl>new_x = x.lower()<nl>new_y = y.lower()<nl><nl><nl><nl>if new_x == new_y :<nl>   print \"correct\"<nl>else:<nl>   print \"incorrect\"", "out": "異なるフォーマットのXML文書から取得したアドレスの比較", "out_en": "Compare addresses pulled from an XML document in different formats"}
{"in": "logging.basicConfig(filename='test.log', format='[%(levelname)s] %(message)s', level=logging.DEBUG)", "out": "Pythonロギングフォーマット:ブラケットの追加方法", "out_en": "python logging format: how to add bracket"}
{"in": "import threading<nl><nl>class Test:<nl><tab>def printit(self):<nl><tab><tab>print(\"hello world\")<nl><tab><tab>threading.Timer(5.0, self.printit).start()<nl><nl>test = Test()<nl>test.printit()", "out": "クラスメソッドをn秒ごとに実行する", "out_en": "Run a class-method every n seconds"}
{"in": "logging.config.dictConfig(yaml.load(open('logging.yaml', 'r')))", "out": "Tornadoでtimed rotateファイルハンドラを使ってログを取るには?", "out_en": "How to logging with timed rotate file handler in Tornado?"}
{"in": "print (\"ln(x) at \", x, \"is: \", lnx)", "out": "Pythonで印刷するためのヘルプを探している初心者", "out_en": "Beginner looking for help for printing in python"}
{"in": "def test2():<nl><tab>\"\"\"Test with a subfunction.\"\"\"<nl><tab>exec 'print \"hi from test2\"' in globals(), locals()<nl><tab>def subfunction():<nl><tab><tab>return True", "out": "Pythonでは、サブファンクションを持つファンクションでexecが動作しないのはなぜですか?", "out_en": "In Python, why doesn't exec work in a function with a subfunction?"}
{"in": "string = letters[0]<nl>listInDesiredFormat = string.replace('\\'', '').split(', ')", "out": "文字列リテラルを文字列のリストに変換する", "out_en": "Convert a string literal into a list of strings"}
{"in": "import urllib<nl>from multiprocessing import Process, Queue<nl><nl>def worker(input, output):<nl>  for func, args in iter(input.get, 'STOP'):<nl><tab>result = func(*args)<nl><tab>output.put(result)<nl><nl>def find_on_page(num):<nl>  uri = 'http://www.example.com/index.php?id=%d' % num<nl>  f = urllib.urlopen(uri)<nl>  data = f.read()<nl>  f.close()<nl>  index = data.find('datahere:') # obviously use your own methods<nl>  if index < 0:<nl><tab>return None<nl>  else:<nl><tab>return data[index:index+20]<nl><nl>def main():<nl>  NUM_PROCESSES = 4<nl>  tasks = [(find_on_page, (i,)) for i in range(99999)]<nl>  task_queue = Queue()<nl>  done_queue = Queue()<nl>  for task in tasks:<nl><tab>task_queue.put(task)<nl>  for i in range(NUM_PROCESSES):<nl><tab>Process(target=worker, args=(task_queue, done_queue)).start()<nl>  for i in range(99999):<nl><tab>print done_queue.get()<nl>  for i in range(NUM_PROCESSES):<nl><tab>task_queue.put('STOP')<nl><nl>if __name__ == \"__main__\":<nl>  main()", "out": "C++またはPython:多くのWebページでテキストを検索することを強制する獣", "out_en": "C++ or Python: Bruteforcing to find text in many webpages"}
{"in": "class UploadPincode(models.Model):<nl><tab>added_on = models.DateField(auto_now_add=True)<nl><tab>pincode_file = models.FileField(<nl><tab><tab>upload_to=\"Pincodes/\", verbose_name=\"Pincode Excel file (.xls,xlsx)\", blank=False, null=False)<nl><nl><tab>def save(self):<nl><tab><tab>print \"Before Save #######\"<nl><nl><tab><tab>super(UploadPincode, self).save()<nl><tab><tab>print \" Save #######\"<nl><nl><tab><tab>pincode_process(self.pincode_file.url)<nl><nl><nl><tab>def __unicode__(self):<nl><tab><tab>return str(self.added_on)<nl><nl><nl><nl>def pincode_process(pincode_file=None):<nl><nl><tab>print \"Pincode Adding ##########################\",pincode_file,pincode_file[1:]<nl><nl><nl><tab>book = open_workbook(pincode_file[1:])<nl><tab>for j in range(0, book.nsheets - 1):<nl><tab><tab>sheet = book.sheet_by_index(j)<nl><tab><tab>for i in range(sheet.nrows):<nl><tab><tab><tab>if i != 0:<nl><tab><tab><tab><tab>a = sheet.row_values(i)<nl><tab><tab><tab><tab>int_pin = int(a[0])<nl><tab><tab><tab><tab>Pincode(pincode=str(int_pin)).save()<nl><nl><tab>return True", "out": "アップロードされたファイルをDjangoで処理する方法モデル保存方法", "out_en": "How to Process Uploaded file in Django Model save method"}
{"in": "actors = [item.text for item in soup.findAll('span', {\"itemprop\":\"actor\"})]<nl>print \"Actors: %s\" % (\", \".join(actors))", "out": "Pythonでforループ出力を行う方法", "out_en": "How to for-loop output in python?"}
{"in": "# ...<nl>app = Flask(__name__)<nl># ...<nl>from fresque import filters", "out": "フラスコアプリケーションにおけるjinja2 template_filterデコレータの異常な動作", "out_en": "Unusual behavior of jinja2 template_filter decorator in flask application"}
{"in": "print '7\\xe6\\x9c\\x8810\\xe6\\x97\\xa5'.decode('utf-8')", "out": "Pythonは結果を「7\\xe 6\\x 9 c\\x 8810\\xe 6\\x 97\\xa 5」と出力しますが、「7?10?」が必要です。", "out_en": "Python prints result as '7\\xe6\\x9c\\x8810\\xe6\\x97\\xa5', but I want '7?10?'"}
{"in": "import pyglet<nl>from pyglet.window import mouse<nl><nl>window = pyglet.window.Window()<nl><nl>@window.event<nl>def on_draw():<nl><tab>pass<nl><nl><nl>@window.event<nl>def on_mouse_drag(x, y, dx, dy, buttons, modifiers):<nl><tab>pyglet.graphics.draw(4, pyglet.gl.GL_QUADS, ('v2f', [x, y, x-dx, y, x-dx, y-dy, x, y-dy]))<nl><tab>print x, y, dx, y, dx, dy, x, dy<nl>pyglet.app.run()", "out": "マウスドラッグPygletの周囲に長方形を描画する", "out_en": "Drawing a rectangle around mouse drag Pyglet"}
{"in": "import SendKeys<nl><nl>SendKeys.SendKeys(\"\"\"<nl>{CAPSLOCK}<nl>{SCROLLOCK}<nl>{NUMLOCK}<nl>\"\"\")", "out": "Pythonでキーボードロックを変更する", "out_en": "Change keyboard locks in Python"}
{"in": "file_obj.seek(0)", "out": "DjangoがアップロードしたファイルをS3に格納", "out_en": "Django store uploaded file in S3"}
{"in": "window.delch([y, x])", "out": "ncursesで特定の座標範囲の文字列をクリアする方法", "out_en": "How to clear string in a specific coordinate range in ncurses?"}
{"in": "def strip_string(string, to_strip):<nl><tab>if to_strip:<nl><tab><tab>while string.startswith(to_strip):<nl><tab><tab><tab>string = string[len(to_strip):]<nl><tab><tab>while string.endswith(to_strip):<nl><tab><tab><tab>string = string[:-len(to_strip)]<nl><tab>return string", "out": "順序付けられた一連の文字を文字列から削除する", "out_en": "Strip an ordered sequence of characters from a string"}
{"in": "import re<nl><nl>filename = \"file.txt\"<nl>regex = re.compile(r'(memcpy\\s*\\(\\s*buffer\\s*,\\s*\")\\s*(\"\\s*,\\s*64\\s*)')<nl>with open(filename) as in_file:<nl><tab>in_buffer = in_file.readlines()<nl><nl>data = \"foo bar\"<nl>with open(filename, \"w\") as out_file:<nl><tab>for line in in_buffer:<nl><tab><tab>out_file.write(regex.sub(r'\\g<1>'+data+'\\g<2>', line))", "out": "Pythonスクリプトを使用して、ファイル内の特定の行の特定の場所に特定の文字列を挿入する方法", "out_en": "How to insert a specific string into a specific location of a specific line in a file using a Python script?"}
{"in": "return ''.join(sorted(comb_))", "out": "Pythonで文字列内の要素をソートする", "out_en": "Sorting elements in string with Python"}
{"in": "import StringIO<nl><nl>pa.read_csv(StringIO.StringIO(lines.join('<nl>')))", "out": "パンダを使用してラインのリストからデータをロードする", "out_en": "Load data from a list of lines using pandas"}
{"in": "from bottle import static_file<nl>@route('/static/<filename>')<nl>def server_static(filename):<nl><tab>return static_file(filename, root='/path/to/your/static/files')", "out": "ボトルサーバーにhtmlファイルを返すには?", "out_en": "How to return an html file in bottle server?"}
{"in": "name = \"frame%d.jpg\"%count<nl>cv2.imwrite(name, frame)<tab> # save frame as JPEG file", "out": "ビデオをフレームとして保存OpenCV{PY}", "out_en": "Save Video as Frames OpenCV{PY}"}
{"in": "import csv<nl>with open('output.csv', 'wb') as fout:<nl><tab>csvout = csv.writer(fout)<nl><tab>for row in a['rows']:<nl><tab><tab>csvout.writerow( [row['id']] + row['cell'] )", "out": "辞書をcsvファイルに変換する方法", "out_en": "how to convert dictionary into csv file"}
{"in": "with open('test.txt') as f:<nl><tab>for line in f:<nl><tab><tab>nextLine = next(f)<nl><tab><tab>if 'A' == line.strip():<nl><tab><tab><tab>print nextLine", "out": "Pythonで次の行を読む", "out_en": "Read next line in Python"}
{"in": "old_headings = [old_freestream_headings] * 2 + [old_integral_headings] + [old_forces_headings] * 5", "out": "Python:リスト内の文字列の複数のコピー", "out_en": "Python: multiple copies of a string in a list"}
{"in": "import time<nl>with open(file) as f:<nl><tab>for line in f:<nl><tab><tab>identifier, t0, score, date, hour = line.split()<nl><nl><tab><tab># You can also get a time_struct from the time<nl><tab><tab>timer = time.strptime(date + hour, \"%d/%m/%Y%H:%M:%S\")", "out": "Pythonファイルからデータを読み込み", "out_en": "python read data from file"}
{"in": "self.crackButton.bind('<ButtonRelease-1>', lambda e: self.crack(Filenamelist, forceclick))", "out": "Python/Tkinterがボタンのクリックを強制的に待機する", "out_en": "Python/Tkinter force wait on button click"}
{"in": "from traceback import format_exception<nl><nl>def excepthook(self, type_, value, traceback):<nl><tab>print format_exception(type_, value, traceback)<nl><nl>sys.excepthook = self.excepthook", "out": "例外フック内の元の例外を出力", "out_en": "Print original exception in excepthook"}
{"in": "import gtk<nl><nl>def keypress(win, event):<nl><tab>if event.keyval == gtk.keysyms.F11:<nl><tab><tab>win.is_fullscreen = not getattr(win, 'is_fullscreen', False)<nl><tab><tab>action = win.fullscreen if win.is_fullscreen else win.unfullscreen<nl><tab><tab>action()<nl><tab><tab>label.set_visible(not win.is_fullscreen)<nl><nl>win = gtk.Window()<nl>win.connect(\"delete-event\", gtk.main_quit)<nl>win.connect('key-press-event', keypress)<nl>image = gtk.image_new_from_stock(gtk.STOCK_ABOUT, gtk.ICON_SIZE_DIALOG)<nl>label = gtk.Label(('test ' * 20 + '<nl>') * 20)<nl>vbox = gtk.HBox()<nl>vbox.add(label)<nl>vbox.add(image)<nl>win.add(vbox)<nl>win.show_all()<nl>gtk.main()", "out": "フルスクリーンでGtkアプリケーションのレイアウトを変更する方法は?", "out_en": "How to change the layout of a Gtk application on fullscreen?"}
{"in": "import sys<nl>import inspect<nl><nl>def f1():<nl><tab>\"f1!\"<nl><tab>pass<nl>def f3():<nl><tab>\"f3!\"<nl><tab>pass<nl>def f2():<nl><tab>\"f2!\"<nl><tab>pass<nl><nl>funcs = [elt[1] for elt in inspect.getmembers(sys.modules[__name__],<nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>  inspect.isfunction)]<nl>ordered_funcs = sorted(funcs, key=lambda f: f.__code__.co_firstlineno)<nl>for f in ordered_funcs:<nl><tab>print(f.__doc__)", "out": "Python関数の一覧(モジュール内で定義されている順)", "out_en": "List of Python functions, in their order of definition in the module"}
{"in": "run('mysql -u %s -p%s -e \"grant all on %s.* to \\'%s\\'@\\'localhost\\' identified by \\'PASSWORD\\'\"' % (user, dbpasswd, account, account))", "out": "fabric python regexを使用したmysqlユーザ権限", "out_en": "mysql user privileges with fabric python regex"}
{"in": "total = sum(int(v) for name,v in table)", "out": "ラムダ関数を使用したネストされたリストでの合計の検索", "out_en": "Finding a sum in nested list using a lambda function"}
{"in": "db.collection.update(<nl>   {\"charachters.char_name\": \"Testarion\"},<nl>   {\"$push\": {\"charachters.$.parties\": \"party_user\"}})", "out": "MongoDBは$pushを使って条件にマッチする配列要素を更新する", "out_en": "MongoDB update an array element matching a condition using $push"}
{"in": "self.setAttribute(QtCore.Qt.WA_DeleteOnClose)", "out": "QMainWindowを閉じた後もQTimerが残ります", "out_en": "QTimer persists after QMainWindow is closed"}
{"in": "import traceback<nl><nl>traceback.print_stack()", "out": "例外をスローせずにスタックトレースを出力する", "out_en": "Print stacktrace without throwing exception"}
{"in": "CTemp = str(12.34) #set for testing<nl>text = \"The temp is: \"+CTemp<nl><nl>msg = MIMEText(text)", "out": "Pythonで電子メールを送信し、件名に変数を含める", "out_en": "Send an email in Python and include a vaiable in the subject line"}
{"in": "from tornado.ioloop import IOLoop<nl>from tornado import gen<nl>from tornado.httpclient import AsyncHTTPClient<nl>from toro import Queue<nl><nl>q = Queue(maxsize=1)<nl><nl><nl>@gen.coroutine<nl>def consumer():<nl><tab>item = yield q.get()<nl><tab>while item:<nl><tab><tab>print item<nl><tab><tab>item = yield q.get()<nl><nl><nl>@gen.coroutine<nl>def producer():<nl><tab>try:<nl><tab><tab>client = AsyncHTTPClient()<nl><tab><tab>for url in [<nl><tab><tab><tab><tab>'http://tornadoweb.org',<nl><tab><tab><tab><tab>'http://python.org',<nl><tab><tab><tab><tab>'http://readthedocs.org']:<nl><tab><tab><tab>response = yield client.fetch(url)<nl><tab><tab><tab>item = (url, len(response.body))<nl><tab><tab><tab>yield q.put(item)<nl><nl><tab><tab># Done.<nl><tab><tab>q.put(None)<nl><tab>except Exception:<nl><tab><tab>IOLoop.current().stop()<nl><tab><tab>raise<nl><nl>future = producer()<nl>IOLoop.current().run_sync(consumer, timeout=20)", "out": "正常な値を生成するトルネードコルーチンを作成する", "out_en": "Write a tornado coroutine that also yields normal values"}
{"in": "gevent.spawn(daemon.requestLoop)", "out": "Pyroをgeventで使うにはどうすればいいですか?", "out_en": "How can I use Pyro with gevent?"}
{"in": "datetime.datetime.now().strftime(\"%H:%M:%S.%f\")", "out": "Pythonでstrftime()で%fを使用してマイクロ秒を取得する", "out_en": "Using %f with strftime() in Python to get microseconds"}
{"in": "gameDisplay.fill(your_color_tuple)<nl><nl># afterwards add your drawing code", "out": "Pygameウィンドウのテキストを置換", "out_en": "Replace Text On Pygame Window"}
{"in": "print [item for item in dir(adfix) if not item.startswith(\"__\")]", "out": "特定のPythonモジュールで変数のリストを取得する方法", "out_en": "How to get a list of variables in specific Python module?"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl>x = np.array([0,1,2,3,4,5,6])<nl>y = np.array([0,2,0,4.5,0.5,2,3])<nl><nl>line = plt.plot(x,y,'o')[0]<nl>line.set_clip_on(False)<nl>plt.show()", "out": "軸の上にマーカーをプロット", "out_en": "plotting markers on top of axes"}
{"in": "Book.objects.all().delete()", "out": "Django ormを使用してTRUNCATE TABLEを実行する方法は?", "out_en": "How do I TRUNCATE TABLE using Django orm?"}
{"in": "import os<nl><nl>def doc_to_text_catdoc(filename):<nl><tab>(fi, fo, fe) = os.popen3('catdoc -w \"%s\"' % filename)<nl><tab>fi.close()<nl><tab>retval = fo.read()<nl><tab>erroroutput = fe.read()<nl><tab>fo.close()<nl><tab>fe.close()<nl><tab>if not erroroutput:<nl><tab><tab>return retval<nl><tab>else:<nl><tab><tab>raise OSError(\"Executing the command caused an error: %s\" % erroroutput)<nl><nl># similar doc_to_text_antiword()", "out": "COM/オートメーションを使用せずにWord文書からテキストを抽出する最善の方法", "out_en": "Best way to extract text from a Word doc without using COM/automation?"}
{"in": "def view2(request):<nl><tab>if request.method == 'POST':<nl><tab><tab>page_list=request.POST.values()<nl><tab>else:<nl><tab><tab>HttpResponseRedirect('/urls/')", "out": "djangoでビュー間でリストを渡す方法", "out_en": "how to pass a list between views in django"}
{"in": "with open('file.csv') as f:<nl><tab>f.readline() # ignore first line (header)<nl><tab>mydict = dict(csv.reader(f, delimiter=','))<nl><nl>print mydict", "out": "csvをdict形式に変換する方法", "out_en": "how to convert csv into dict format"}
{"in": "import socket<nl>import struct<nl>address = (\"10.0.0.12\", 5000)<nl>s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)<nl>s.bind(address)<nl>s.listen(1000)<nl><nl><nl>client, addr = s.accept()<nl>print 'got connected from', addr<nl><nl>buf = ''<nl>while len(buf)<4:<nl><tab>buf += client.recv(4-len(buf))<nl>size = struct.unpack('!i', buf)<nl>print \"receiving %s bytes\" % size<nl><nl>with open('tst.jpg', 'wb') as img:<nl><tab>while True:<nl><tab><tab>data = client.recv(1024)<nl><tab><tab>if not data:<nl><tab><tab><tab>break<nl><tab><tab>img.write(data)<nl>print 'received, yay!'<nl><nl>client.close()", "out": "Pythonソケットサーバ受信イメージ", "out_en": "Python socket server receive image"}
{"in": "import os<nl>os.write(fd, os.linesep)", "out": "Pythonでネイティブな改行文字をファイル記述子に書き込むには?", "out_en": "How to write native newline character to a file descriptor in Python?"}
{"in": "df.to_pickle(file_name)", "out": "パンダのDataFrameのシリアル化", "out_en": "Serialization of a pandas DataFrame"}
{"in": "import scipy.signal<nl>import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>im = plt.imread('example.jpg')<nl>im /= 255.   # normalise to 0-1, it's easier to work in float space<nl><nl># make some kind of kernel, there are many ways to do this...<nl>t = 1 - np.abs(np.linspace(-1, 1, 21))<nl>kernel = t.reshape(21, 1) * t.reshape(1, 21)<nl>kernel /= kernel.sum()   # kernel should sum to 1!  :) <nl><nl># convolve 2d the kernel with each channel<nl>r = scipy.signal.convolve2d(im[:,:,0], kernel, mode='same')<nl>g = scipy.signal.convolve2d(im[:,:,1], kernel, mode='same')<nl>b = scipy.signal.convolve2d(im[:,:,2], kernel, mode='same')<nl><nl># stack the channels back into a 8-bit colour depth image and plot it<nl>im_out = np.dstack([r, g, b])<nl>im_out = (im_out * 255).astype(np.uint8) <nl><nl>plt.subplot(2,1,1)<nl>plt.imshow(im)<nl>plt.subplot(2,1,2)<nl>plt.imshow(im_out)<nl>plt.show()", "out": "Pythonでのイメージのスムージング", "out_en": "Image smoothing in Python"}
{"in": "from keystoneclient.auth.identity import v2<nl>from keystoneclient import session<nl>from ceilometerclient import client<nl><nl>auth=v2.Password(auth_url=\"hosturl:5000/v2.0/\", username=\"admin\", password=\"pass\", tenant_id='123456')<nl><nl>sess = session.Session(auth=auth,verify=False)<tab> # verify=False may not be required for you<tab><nl>token = auth.get_token(sess)<nl><nl>cclient = client.get_client(2, ceilometer_url=\"hosturl:8777/\", token=token,verify=False)<nl>cclient.meters.list()", "out": "Ceilometer Python Client APIでauth_tokenを実装する方法", "out_en": "how to impliment auth_token in Ceilometer Python Client API"}
{"in": "[t[:-1] + (100,) for t in a]", "out": "タプル・リストの最後の値の置換", "out_en": "Replacing last value in list of tuples"}
{"in": "# untested<nl>from itertools import count<nl>rows = len(csvList)<nl>pctn = rows // 100<nl>perc = count()<nl>for rowno, row in enumerate(csvList):<nl><tab>if rowno % pctn == 0:<nl><tab><tab>print '{}%'.format(next(perc))", "out": "SQL挿入進行状況バー", "out_en": "SQL Insert progress bar"}
{"in": "def isBetween(a, b, c):<nl><tab>crossproduct = (c.y - a.y) * (b.x - a.x) - (c.x - a.x) * (b.y - a.y)<nl><tab>if abs(crossproduct) > epsilon : return False   # (or != 0 if using integers)<nl><nl><tab>dotproduct = (c.x - a.x) * (b.x - a.x) + (c.y - a.y)*(b.y - a.y)<nl><tab>if dotproduct < 0 : return False<nl><nl><tab>squaredlengthba = (b.x - a.x)*(b.x - a.x) + (b.y - a.y)*(b.y - a.y)<nl><tab>if dotproduct > squaredlengthba: return False<nl><nl><tab>return True", "out": "ポイントがラインセグメント上の他の2つのポイント間にあることを確認するにはどうすればよいですか?", "out_en": "How can you determine a point is between two other points on a line segment?"}
{"in": "array = lane_emden(3)", "out": "Python 3.5関数の外部で使用するために配列を保存する", "out_en": "Python 3.5 Save an array for use outside a function"}
{"in": "from fuzzywuzzy import process<nl>import csv<nl><nl>save_file = open('FuzzyResults3.csv', 'w')<nl>writer = csv.writer(save_file, lineterminator = '<nl>')<nl><nl>def parse_csv(path):<nl><nl><tab>with open(path,'r') as f:<nl><tab><tab>reader = csv.reader(f, delimiter=',')<nl><tab><tab>for row in reader:<nl><tab><tab><tab>yield row<nl><nl><nl>if __name__ == \"__main__\":<nl><tab>## Create lookup dictionary by parsing the products csv<nl><tab>data = {}<nl><tab>for row in parse_csv('File1.csv'):<nl><tab><tab>data[row[0]] = row[1]<nl><nl><tab>## For each row in the lookup compute the partial ratio<nl><tab>for row in parse_csv(\"File2.csv\"):<nl><tab><tab>#print(process.extract(row,data, limit = 100))<nl><tab><tab>for found, score, matchrow in process.extract(row, data, limit=100):<nl><tab><tab><tab>if score >= 60:<nl><tab><tab><tab><tab>print('%d%% partial match: \"%s\" with \"%s\" ' % (score, row, found))<nl><tab><tab><tab><tab>Digi_Results = [score, row, found]<nl><tab><tab><tab><tab>writer.writerow(Digi_Results)<nl><nl><nl>save_file.close()", "out": "2列のファジー比較", "out_en": "Fuzzy compare two column"}
{"in": "import Queue, thread<nl><nl># create a Queue.Queue here<nl>queue = Queue.Queue()<nl><nl>print (\"downloading and parsing Bibles...\")<nl>root = html.parse(open('links.html'))<nl>for link in root.findall('//a'):<nl>  url = link.get('href')<nl>  queue.put(url) # produce<nl><nl><nl><nl><nl>def thrad():<nl>  url = queue.get() # consume<nl>  name = urlparse.urlparse(url).path.split('/')[-1]<nl>  dirname = urlparse.urlparse(url).path.split('.')[-1]<nl>  f = urllib2.urlopen(url)<nl>  s = f.read()<nl>  if (os.path.isdir(dirname) == 0): <nl><tab>os.mkdir(dirname)<nl>  soup = BeautifulSoup(s)<nl>  articleTag = soup.html.body.article<nl>  converted = str(articleTag)<nl>  full_path = os.path.join(dirname, name)<nl>  open(full_path, 'wb').write(converted)<nl>  print(name)<nl><nl>thread.start_new(thrad, ()) # start 1 threads", "out": "高速ダウンロードのためのマルチスレッド", "out_en": "Multithreading for faster downloading"}
{"in": "wb = load_workbook('path/doc.xls', use_iterators=True)", "out": "openpyxlを使用したExcelの列からの値の取得", "out_en": "Getting values from a column in excel using openpyxl"}
{"in": "import NetworkManager<nl><nl>for dev in NetworkManager.NetworkManager.GetDevices():<nl><tab>if dev.DeviceType != NetworkManager.NM_DEVICE_TYPE_WIFI:<nl><tab><tab>continue<nl><tab>for ap in dev.SpecificDevice().GetAccessPoints():<nl><tab><tab>print ap.Ssid", "out": "Pythonでコンピュータが認識できるすべてのWLANのリストを取得するにはどうすればいいですか。", "out_en": "How can I get a list of all WLANs my computer can see with Python?"}
{"in": "['%f, %s' % (x,y) for _,_,_,x,_,y in d.values()]", "out": "Pythonのlist of listを繰り返し処理して新しいリストを作成する", "out_en": "Iterating through a python list of list and creating a new list"}
{"in": "if __name__ == '__main__':<nl><tab>manager = Manager()<nl><tab>flag = manager.list([True])<nl><tab>for taskSize in taskSizes:<nl><tab><tab>flag[0] = True<nl><tab><tab>processes = [] # a list to store the process handles <nl><tab><tab>for i in range(1,TASK_LAUNCHERS):<nl><tab><tab><tab>p = Process(target=backgroundTaskLauncher, args=(taskSize,flag))<nl><tab><tab><tab>p.start()<nl><tab><tab><tab>processes.append(p) # save process handle<nl><tab><tab># Experiment goes here (I think it goes here (unindented(?)))<nl><tab><tab>flag[0] = False<nl><tab><tab># after you are done with your experiment, join all child processes<nl><tab><tab>for p in processes:<nl><tab><tab><tab>p.join()", "out": "Pythonでマルチプロセスプログラムのループのオン/オフを切り替える", "out_en": "Toggle a loop on and off in a multi-processed program in Python"}
{"in": "import heapq<nl><nl>a = [(\"a\", 6), (\"b\", 4), (\"c\", 3), (\"d\", 1)]<nl>b = [(\"e\", 5), (\"f\", 5), (\"g\", 4), (\"h\", 2)]<nl><nl>class Pair:<nl><tab>def __init__(self, i, j, value):<nl><tab><tab>self.i = i<nl><tab><tab>self.j = j<nl><tab><tab>self.value = value<nl><tab>def __cmp__(self, other):<nl><tab><tab>return other.value - self.value<nl><nl>def solution(a, b):<nl><tab>heap = []<nl><tab>for i in range(len(a)):<nl><tab><tab>heapq.heappush(heap, Pair(i, 0, a[i][1] + b[0][1]))<nl><tab>while len(heap) > 0:<nl><tab><tab>pair = heapq.heappop(heap)<nl><tab><tab>yield (a[pair.i], b[pair.j], pair.value)<nl><tab><tab>if pair.j + 1 < len(b):<nl><tab><tab><tab>heapq.heappush(heap, Pair(pair.i, pair.j + 1, a[pair.i][1] + b[pair.j + 1][1]))<nl><nl>for (a, b, value) in solution(a, b):<nl><tab>print (\"%s %s -> %d\" % (a, b, value))", "out": "置換値の順序で複数のリストのすべての置換を生成", "out_en": "Generate All Permutations of Several Lists in Permutation-Value Order"}
{"in": "x = np.empty((21, 2))<nl>x[:, 0] = 45<nl>x[:, 1] = np.linspace(55, 65, x.shape[0])", "out": "Numpy-配列の1つの列の値だけを変更するより簡単な方法", "out_en": "Numpy - easier way to change the value of one column of an array only?"}
{"in": "import webapp2<nl><nl>from webapp2_extras import sessions<nl><nl>class BaseHandler(webapp2.RequestHandler):<nl><tab>def dispatch(self):<nl><tab><tab># Get a session store for this request.<nl><tab><tab>self.session_store = sessions.get_store(request=self.request)<nl><nl><tab><tab>try:<nl><tab><tab><tab># Dispatch the request.<nl><tab><tab><tab>webapp2.RequestHandler.dispatch(self)<nl><tab><tab>finally:<nl><tab><tab><tab># Save all sessions.<nl><tab><tab><tab>self.session_store.save_sessions(self.response)<nl><nl><tab>@webapp2.cached_property<nl><tab>def session(self):<nl><tab><tab># Returns a session using the default cookie key.<nl><tab><tab>return self.session_store.get_session()<nl><nl># To set a value:<nl>self.session['foo'] = 'bar'<nl><nl># To get a value:<nl>foo = self.session.get('foo')", "out": "Google App Engine-Python 2.7で動作するセッションの取得", "out_en": "Google App Engine - Getting Sessions working with Python 2.7"}
{"in": "from pymongo.bulk import BulkUpsertOperation<nl>bulk=clientConn.db.table.initialize_ordered_bulk_op()<nl><nl>for i in someList:<nl><tab>bulk.find({'uid':i,\"dt\":datetime(y,m,d)}).upsert().update({'$inc': {'count': 1}})<nl>res=bulk.execute()", "out": "MongoDb pymongo複数のドキュメントのインクリメント方法", "out_en": "MongoDb pymongo how to increment multiple documents"}
{"in": "# create query order by monthly price <nl>base_query = Contract.query.order_by(Contract.monthly_price)<nl><nl># build subqueries for each network <nl>queries = []<nl>for n in networks.all():<nl><tab>queries.append( base_query.filter(Contract.network_id==n.id).\\<nl><tab><tab><tab><tab><tab><tab>limit(3).subquery().select() )<nl><nl># get contracts using union_all<nl>contracts = Contract.query.select_entity_from(union_all( *queries )).all()", "out": "SQLalchemy各カテゴリーのトップ3の結果", "out_en": "SQLalchemy top 3 results from each category"}
{"in": "{{ item.date|date:\"Y M d\" }}", "out": "djangoでdatetimeをPythonのstringに変換する方法", "out_en": "How to convert datetime to string in python in django"}
{"in": "import xml.etree.ElementTree as ET<nl><nl># I find that using a dictionary to map prefixes to namespaces keeps<nl># things easier to understand. You can also use the namespaces directly<nl># though if you prefer<nl>NAMESPACE_PREFIXES = {<nl><tab>'w': 'http://schemas.openxmlformats.org/wordprocessingml/2006/main'<nl><tab>}  <nl><nl>tree = ET.parse('document.xml')<nl>root = tree.getroot()<nl>text_elements = [element for element in root.iter() if element.tag == <nl>'{' + NAMESPACE_PREFIXES['w'] + '}t']<nl># Equivalent to:<nl># text_elements = [element for element in root.iter() if element.tag == <nl># '{http://schemas.openxmlformats.org/wordprocessingml/2006/main}t']<nl>for text_element in text_elements:<nl><tab>if text_element.text == 'Hello world!':<nl><tab><tab>text_element.text = 'Goodbye world!'", "out": "Pythonのxml.elementtreeを使用して、Word docxファイルをzipドキュメントとして解析しようとしています。", "out_en": "Trying to parse Word docx file as a zip document using Python's xml.elementtree"}
{"in": "HATEOAS = False", "out": "Eve pretty_links(アイテム用)、複数のエントリポイント", "out_en": "Eve pretty _links for items, multiple entry points"}
{"in": "numbers = [1,2,3,4,5,6]<nl><nl>with open('output.txt', 'w') as f:<nl>  f.write('\\t'.join(numbers))", "out": "Pythonを使用してテキストファイルに書き込む方法", "out_en": "how to write to a text file using python ?"}
{"in": "from itertools import imap<nl>from operator import mul<nl>def sumsquared(arr):<nl><tab>return sum(imap(mul, arr, arr))", "out": "リスト上の単純な数学的計算の最適化", "out_en": "Optimising a simple mathematical calculation over list"}
{"in": "import csv<nl>data = []<nl>with open('Trial_test.csv', 'rb') as csvfile:<nl>   reader = csv.reader(csvfile, delimiter=' ', quotechar='|')<nl>   for row in reader:<nl><tab>   data.append(row)<nl><nl># now do your calculations on the 'data' object.<nl><nl>with open('Trial_test_new.csv', 'wb') as csvfile:<nl>   writer = csv.writer(csvfile, delimiter=' ', quotechar='|')<nl>   for row in data:<nl><tab>   writer.writerow(row)", "out": "csvファイルへのデータの追加", "out_en": "Appending data to csv file"}
{"in": "import subprocess<nl><nl># ps -ux | grep 1842 (Assuming 1842 is the process id. replace with process id you get)<nl><nl>p1 = subprocess.Popen([\"ps\", \"-ux\"], stdout=subprocess.PIPE)<nl>p2 = subprocess.Popen([\"grep\", \"1842\"], stdin=p1.stdout, stdout=subprocess.PIPE)<nl>p1.stdout.close()  # Allow p1 to receive a SIGPIPE if p2 exits.<nl>output = p2.communicate()[0]<nl>print output", "out": "LinuxでPythonのプロセスのメモリを読み込むにはどうすればいいですか?", "out_en": "How can I read the memory of a process in python in linux?"}
{"in": "def unique_list(l):<nl><tab>ulist = []<nl><tab>[ulist.append(x) for x in l if x not in ulist]<nl><tab>return ulist<nl><nl>a=\"calvin klein design dress calvin klein\"<nl>a=' '.join(unique_list(a.split()))", "out": "Pythonで文字列内の重複する単語を削除するにはどうすればいいですか。", "out_en": "How can I remove duplicate words in a string with Python?"}
{"in": "result_record_list[0].pic = None<nl>result_record_list[0].put()", "out": "GAE NDBプロパティ(タイプBlobKeyProperty)から値を削除する方法", "out_en": "How to remove value from GAE NDB Property (type BlobKeyProperty)"}
{"in": "pyplot.errorbar()", "out": "Python matplotlib異なる色で配列をプロットする", "out_en": "Python matplotlib plotting an array with different colors"}
{"in": "9**(9**9)", "out": "Pythonでタイムアウトを指定してコードを実行する正しい方法", "out_en": "right way to run some code with timeout in Python"}
{"in": "import FreeImagePy as FIPY<nl>F = FIPY.Image()<nl>F.new(multiBitmap = \"multipage.tiff\")<nl>F.appendPage(\"test1.jpg\")<nl>F.appendPage(\"test2.jpg\")<nl>F.deletePage(0)<nl>F.close()", "out": "jpgsを複数ページのtiffに変換するPythonライブラリ", "out_en": "Python library to convert jpgs to multipage tiffs"}
{"in": "from flask import Flask,redirect", "out": "FlaskでURLを書き換える", "out_en": "Rewrite a URL with Flask"}
{"in": "def removeSel(self):<nl><tab>listItems=self.listA.selectedItems()<nl><tab>if not listItems: return<tab><tab><nl><tab>for item in listItems:<nl><tab>   self.listA.takeItem(self.listA.row(item))", "out": "QListWidgetからの商品の取り出し方", "out_en": "How to remove Item from QListWidget"}
{"in": "grouped = df.groupby([df.index.year,df.index.day])<nl>df['sum'] = grouped.apply(lambda x: x.Open + x.Close)", "out": "列演算を使用して、Pandasデータフレームオブジェクトに新しい列を追加します", "out_en": "Add new column in pandas dataframe object with column math"}
{"in": "for dir, subdir, files in os.walk(path):<nl><tab>for file in files:<nl><tab><tab>print os.path.join(dir, file)", "out": "Pythonで、ディレクトリ内のすべてのファイルへのパスを取得する方法。サブディレクトリ内のファイルも含みますが、サブディレクトリへのパスは含みません。", "out_en": "In python, how to get the path to all the files in a directory, including files in subdirectories, but excluding path to subdirectories"}
{"in": "eval(CMD[17:-1])", "out": "python 3で可変ユーザ入力を出力するには?", "out_en": "How to print the variable user input in python 3?"}
{"in": "get_top_from_all()", "out": "prawを使用して、subredditでこれまでに投稿されたトップ記事のリストを取得したい", "out_en": "I'd like to get a list of the top posts of all time in a subreddit using praw"}
{"in": "import json<nl>from django.forms.models import model_to_dict<nl><nl>@render_to ('companion/companionSub.html')<nl>def topic(request, id):   <nl><nl><tab>ids = Catagories.objects.get(catagory=id)<nl><nl><tab>topics = [model_to_dict(topic) for topic in Topics.objects.filter(fabCatagory_id=ids.id)]<nl><tab>topic_list = json.dumps({'topics':topics})<nl><nl><tab>return HttpResponse(topics_list)", "out": "Djangoは、ajax getを使用してテンプレート内のDictionaryオブジェクトをレンダリングします。", "out_en": "Django render dictionary object in template through ajax get"}
{"in": "# -*- coding: utf-8 -*-<nl><nl>def run():<nl><tab>code_task = get_active_task()<nl><nl><tab>from os.path import dirname<nl><nl><tab>def change_directory():<nl><tab><tab>code_editor = code_task.active_editor<nl><tab><tab>if not code_editor:<nl><tab><tab><tab>return<nl><tab><tab>python_pane = code_task.python_pane<nl><tab><tab>active_dir = dirname(code_editor.obj.path)<nl><tab><tab>python_pane.execute_command(u'cd %s<nl>' % active_dir)<nl><nl><tab>code_task.on_trait_change(change_directory, 'active_editor')", "out": "IPython Shellの作業ディレクトリをCanopyで実行されているPythonファイルの作業ディレクトリに設定する", "out_en": "Setting the working directory of IPython Shell to that of the python file being executed in Canopy"}
{"in": "rc('font',**{'family':'serif','serif':['Times']})", "out": "これらのアーティファクトを削除する方法(LaTeXを使ったmatplotlib)", "out_en": "How do I get rid of these artifacts (matplotlib with LaTeX)"}
{"in": "with open('/Users/d-sdf/test_erick/test/essays.csv') as csvfile:<nl><tab>for i, line in enumerate(csvfile):<nl><tab><tab>with open(\"essay{}.txt\".format(str(i+1)), \"w\") as txtfile:<nl><tab><tab><tab>txtfile.write(line)", "out": "ファイルから読み取った各行を別のファイルとして保存する", "out_en": "Saving each line I read from a file as a different file"}
{"in": "import Tkinter<nl>import tkFileDialog<nl>import tkSimpleDialog<nl>from tkFileDialog import askopenfilename<nl>import os<nl><nl># Set up GUI<nl><nl><nl>def main():<nl><nl><tab>root = Tkinter.Tk(); <nl><tab>root.withdraw()<nl><nl><tab># Prompt for user info<nl><tab>File_number = tkSimpleDialog.askinteger(\"File number\", <nl><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab><tab>\"How many files do you want to compare?\")<nl><nl><tab>if not File_number:<nl><tab><tab>return<nl><nl><tab>user_fiels = []<nl><nl><nl><tab>max_file_no = int(File_number)<nl><tab>current_file = 1;<nl><nl><tab>while(current_file <= max_file_no):<nl><nl><tab><tab>fileloc = tkFileDialog.askopenfilename(parent=root, title='Choose file {}'.format(current_file))<nl><nl><tab><tab>if not fileloc:<nl><tab><tab><tab>continue<nl><nl><tab><tab>fileloc_name_clean = os.path.splitext(fileloc)[0]<nl><tab><tab>fileloc_name = os.path.basename(fileloc_name_clean)<nl><nl><tab><tab>user_fiels.append([fileloc, fileloc_name_clean, fileloc_name])<nl><nl><tab><tab>current_file += 1<nl><nl><tab><tab>#print(fileloc_name_clean, fileloc_name)<nl><nl><tab>print(user_fiels) <nl><nl>main()", "out": "Python:異なるプロセスの順序で一定時間ループする", "out_en": "Python: Looping a certain amount of time in order different process"}
{"in": "input_implementations = { 'xls':xls, 'xml':xml, 'csv':csv }<nl><nl>def input_factory(filename):<nl><tab>ext = os.path.splitext(filename)[1][1:].lower()<nl><tab>impl = input_implementations.get(ext, None)<nl><tab>if impl is None:<nl><tab><tab>print 'rain fire from the skies'<nl><tab>else:<nl><tab><tab>return impl(filename)", "out": "サブクラスに基づいて動作を決定する", "out_en": "Determine behavior based on subclass"}
{"in": "from re import findall<nl><nl>print findall(r'\\w[\\w.]*\\w', 'WARC-_Target-URI: http://www.allchocolate.com/health/basics/')", "out": "特定の単語にpythonを与える正規表現", "out_en": "Regex that would give certain words python"}
{"in": "from xml.dom import minidom<nl>import xml.etree.ElementTree as ET<nl><nl>tree = ET.parse('/tmp/input.xml').getroot()<nl>namespaces = {'gml': 'http://www.opengis.net/gml', 'ogr':'http://ogr.maptools.org/'}<nl>for child in tree.findall('gml:featureMember', namespaces=namespaces):<nl><tab>if len(child.find('ogr:TZwards', namespaces=namespaces)):<nl><tab><tab>name = child.find('ogr:TZwards', namespaces=namespaces).find('ogr:Region_Nam', namespaces=namespaces).text<nl><tab><tab>if name != 'TARGET':<nl><tab><tab><tab>tree.remove(child)<nl><nl>out = ET.ElementTree(tree)<nl>out.write(\"/tmp/out.xml\")", "out": "子ノードの子ノードに特定の値が含まれている場合にXMLノードを削除する", "out_en": "Remove XML node if childnode's childnode contains specific value"}
{"in": "#!/usr/bin/env python<nl><nl>#x=1.123<nl>#y=2.123<nl><nl>pos = [1.123, 2.123]<nl><nl>with open('vars.txt','w') as f:<nl><tab>f.write(\"%s %s\" % (pos[0], pos[1]))<nl><tab>#f.write(\"%s %s\" % (x,y))<nl><nl>with open ('vars.txt', 'r') as myfile:<nl><tab>position=myfile.read().split()<nl><nl>position = map(float, position)<nl># position = [1.123, 2.123]", "out": "ファイルからPython varを読み書きする方法", "out_en": "How to write and read Python var from file"}
{"in": "import numpy as np<nl><nl>Rxx = np.arange(100)<nl>epochs = 10<nl>Rxx_mean = []<nl><nl>epoch_Rxx = np.array_split(Rxx,epochs)<nl>for i in range(0,epochs):<nl>  Rxx_mean.append(np.mean(epoch_Rxx[i]))<nl><nl>print Rxx_mean", "out": "Python Split ArrayはFor Loopを使用してすべての分割を意味し、元に戻します。", "out_en": "Python Split Array use For Loop to Mean every split and put it back together"}
{"in": "def guid2hexstring(val):<nl><tab>s = ['\\\\%02X' % ord(x) for x in val]<nl><tab>return ''.join(s)<nl><nl>guid = ldapobject.get('objectGUID', [''])[0] # 'Igr\\xafb\\x19ME\\xb2P9c\\xfb\\xa0\\xe2w'<nl>guid2string(guid).replace(\"\\\\\", \"\") # '496772AF62194D45B2503963FBA0E277'<nl><nl>#and back to a value you can use in an ldap search filter<nl><nl>guid = ''.join(['\\\\%s' % guid[i:i+2] for i in range(0, len(guid), 2)]) # '\\\\49\\\\67\\\\72\\\\AF\\\\62\\\\19\\\\4D\\\\45\\\\B2\\\\50\\\\39\\\\63\\\\FB\\\\A0\\\\E2\\\\77'<nl><nl>searchfilter = ('(objectGUID=%s)' % guid)", "out": "Python LDAPがobjectGUIDを16進文字列に変換し、元に戻す", "out_en": "Python LDAP converting objectGUID to hex string and back"}
{"in": "dshape = discover(resource('report_2015.csv'))<nl>t = odo('report_2015.csv', 'sqlite:///report.db::report', dshape=dshape)", "out": "黄土湯を使用したデータのSQLへの移行", "out_en": "Using odo to migrate data to SQL"}
{"in": "plt.savefig(str(new_counter)+'foo.eps')", "out": "ループ内でプロット、最後のプロットのみを取得", "out_en": "plotting in loop, only getting last plot"}
{"in": "with tempfile.TemporaryFile() as tmp:<nl><tab>with gzip.open(fname, 'rb') as f:<nl><tab><tab>shutil.copyfileobj(f, tmp)<nl><tab><tab>tmp.seek(0)", "out": "gzipファイルをPythonで変更する", "out_en": "modify gzipped file with python"}
{"in": "from PIL import Image<nl>import numpy as np<nl><nl>def SRGBResize(im, size, filter):<nl><tab># Convert to numpy array of float<nl><tab>arr = np.array(im, dtype=np.float32) / 255.0<nl><tab># Convert sRGB -> linear<nl><tab>arr = np.where(arr <= 0.04045, arr/12.92, ((arr+0.055)/1.055)**2.4)<nl><tab># Resize using PIL<nl><tab>arrOut = np.zeros((size[1], size[0], arr.shape[2]))<nl><tab>for i in range(arr.shape[2]):<nl><tab><tab>chan = Image.fromarray(arr[:,:,i])<nl><tab><tab>chan = chan.resize(size, filter)<nl><tab><tab>arrOut[:,:,i] = np.array(chan)<nl><tab># Convert linear -> sRGB<nl><tab>arrOut = np.where(arrOut <= 0.0031308, 12.92*arrOut, 1.055*arrOut**(1.0/2.4) - 0.055)<nl><tab># Convert to 8-bit<nl><tab>arrOut = np.uint8(np.rint(arrOut * 255.0))<nl><tab># Convert back to PIL<nl><tab>return Image.fromarray(arrOut)", "out": "PillowでのSRGB対応イメージのサイズ変更", "out_en": "SRGB-aware image resize in Pillow"}
{"in": "friendship_union = select([<nl><tab>FacebookFriendship.dater_id,<nl><tab>cast(FacebookFriendship.fb_uid_friend, Integer()).label(<nl><tab><tab>'fb_uid_friend')<nl>]).union(<nl><tab>select([<nl><tab><tab>cast(FacebookFriendship.fb_uid_friend, Integer()),<nl><tab><tab>FacebookFriendship.dater_id]<nl><tab>)<nl>).alias()<nl><nl>cls.all_fb_friendships = relationship(<nl><tab>UserSocialAuth,<nl><tab>secondary=friendship_union,<nl><tab>primaryjoin=UserSocialAuth.user_id == friendship_union.c.dater_id,<nl><tab>secondaryjoin=and_(<nl><tab><tab>UserSocialAuth.provider == 'facebook',<nl><tab><tab>cast(UserSocialAuth.uid, Integer() ) == friendship_union.c.fb_uid_friend,<nl><tab>),<nl><tab>viewonly=True<nl>)", "out": "SQLAlchemy:他の2つの関係の和集合として関係を定義するにはどうすればいいですか?", "out_en": "SQLAlchemy: How can I define a relationship as the union of two other relationships?"}
{"in": "def print_rect(l, w, c):<nl><tab>for a in range(w):<nl><tab><tab>print(a*\" \", l*c)", "out": "Pythonで平行四辺形を作成する方法", "out_en": "How to make a parallelogram on python"}
{"in": "from collections import defaultdict<nl><nl>terms = ['Electronic rock', 'Alternative rock', 'Indie pop']<nl>d = defaultdict(list)<nl>for term in terms:<nl><tab>for word in term.split():<nl><tab><tab>d[word].append(term)<nl><nl>for k,v in d.iteritems():<nl><tab>if len(v) > 1:<nl><tab><tab>print k,v", "out": "Python:単語を共有する文字列の検出", "out_en": "Python: detect strings that share words"}
{"in": "Info[\"City_Name\"].update({\"Population\": 20000, \"Population_Density\": 200})", "out": "1つのコマンドで複数のキーに複数の値を割り当てる方法", "out_en": "How to assign multiple values to multiple keys with a single command"}
{"in": "f = open(\"output.txt\", \"a\")", "out": "Python-最後の行だけがファイルに保存されます", "out_en": "Python - Only last line is saved to file"}
{"in": "import urllib2<nl>data = urllib2.urlopen(\"some_url\")<nl>html_data = data.read()<nl>soup = BeautifulSoup(html_data)<nl><nl>for a in soup.findAll('a',href=True):<nl><tab>print a['href']", "out": "アンカータグからhrefリンクを抽出する方法美しいスープに", "out_en": "How to extract a href link from anchor tags in beautiful soup"}
{"in": "def check_time(until_when, def_time, how_long):<nl><tab>arg_dict = {def_time:how_long}<nl><tab>dt = datetime.timedelta(**arg_dict)<nl><tab>if until_when- datetime.datetime.now() > dt:<nl><tab><tab>input('Task has been finished.<nl>Press any key to quit<nl>')<nl><tab><tab>exit()", "out": "引数をdatetime.timedeltaに渡す方法", "out_en": "how to pass argument to datetime.timedelta"}
{"in": "def make_happiness_table(filename=\"word-happiness.csv\"):<nl>   ''' make_happiness_table: string -> dict<nl><tab>  creates a dictionary of happiness scores from the given file '''<nl><nl>   return {}", "out": "ファイル名を文字列として入力し、辞書を返す", "out_en": "Input a filename as a string and return a dictionary"}
{"in": "times = race1.index.to_series()<nl>today = pandas.Timestamp('00:00:00')<nl>timedelta = times - today<nl>times_ordinal = timedelta.dt.seconds/(24*60*60) + today.toordinal()<nl>ax = times_ordinal.hist()<nl>ax.xaxis_date()<nl>plt.gcf().autofmt_xdate()<nl>plt.ylabel('Number of finishers')", "out": "Pandas経由のCSVからの時間のヒストグラム", "out_en": "Histogram of times from a CSV via Pandas"}
{"in": "import urllib, urllib2<nl>import time<nl>import sys<nl><nl>query = ' '.join(sys.argv)   <nl><nl># encode params as a list of 2-tuples<nl>params = ( ('from','ACC'), ('to', 'P_REFSEQ_AC'), ('format','tab'), ('query', query))<nl># url encode them<nl>data = urllib.urlencode(params)<tab><nl>url = 'http://www.uniprot.org/mapping/'<nl><nl># fetch the data<nl>try:<nl><tab>foo = urllib2.urlopen(url, data)<nl>except urllib2.HttpError, e:<nl><tab>if e.code == 503:<nl><tab><tab># blah blah get the value of the header...<nl><tab><tab>wait_time = int(e.hdrs.get('Retry-after', 0))<nl><tab><tab>print 'Sleeping %i seconds...' % (wait_time,)<nl><tab><tab>time.sleep(wait_time)<nl><tab><tab>foo = urllib2.urlopen(url, data)<nl><nl><nl># foo is a file-like object, do with it what you will.<nl>foo.read()", "out": "PythonでUniProt over HTTPと対話するにはどうすればよいですか。", "out_en": "How can I talk to UniProt over HTTP in Python?"}
{"in": "df['Monday-Friday'] = df['days'].isin(range(5)).astype(int)<nl>df['Saturday'] = (df['days'] == 5).astype(int)<nl>df['Sunday'] = (df['days'] == 6).astype(int)", "out": "月曜日から金曜日を、土曜日と日曜日のパンダから分けるには?", "out_en": "How to separate Monday-Friday from Saturday and Sunday Pandas?"}
{"in": "import os<nl><nl>outFile = 'C:/CompanyFiles/Matrix.txt'<nl>folder = 'C:/CompanyFiles'<nl><nl>with open(outFile, 'w') as wfp:<nl><tab>for f in os.listdir(inFolder):<nl><tab><tab>tmp = [line.rstrip() for line in open(os.path.join(folder, f), 'r')]<nl><tab><tab>arr = tmp[0].split('-')<nl><tab><tab>arr = [arr[0]] + arr[1].split('_')<nl><tab><tab>arr += [t.split(':')[1].strip() for t in tmp[1:]]<nl><tab><tab>wfp.write(','.join([\"'\" + e + \"'\" for e in arr]) + '<nl>')", "out": "txtファイルからのカンマ区切りのマトリックス(続き)", "out_en": "Comma separated Matrix from txt files - continued"}
{"in": "from pydub import AudioSegment<nl><nl>def detect_leading_silence(sound, silence_threshold=-50.0, chunk_size=10):<nl><tab>'''<nl><tab>sound is a pydub.AudioSegment<nl><tab>silence_threshold in dB<nl><tab>chunk_size in ms<nl><nl><tab>iterate over chunks until you find the first one with sound<nl><tab>'''<nl><tab>trim_ms = 0 # ms<nl><tab>while sound[trim_ms:trim_ms+chunk_size].dBFS < silence_threshold:<nl><tab><tab>trim_ms += chunk_size<nl><nl><tab>return trim_ms<nl><nl>sound = AudioSegment.from_file(\"/path/to/file.wav\", format=\"wav\")<nl><nl>start_trim = detect_leading_silence(sound)<nl>end_trim = detect_leading_silence(sound.reverse())<nl><nl>duration = len(sound)<tab><nl>trimmed_sound = sound[start_trim:duration-end_trim]", "out": "waveファイルのwaveファイルの最初と最後の無音部分を削除するPyDub", "out_en": "remove silence at the beginning and at the end of wave files with PyDub"}
{"in": "boxticks = IntVar().get()", "out": "onvalueとoffvalueを使用した変数の変更", "out_en": "Modifying a variable with onvalue and offvalue"}
{"in": "def gather_path(self):<nl><tab>path_object = PathsOfDomain.objects.filter(FKtoTld=3)", "out": "メソッドから別のメソッドへの属性の受け渡しPython", "out_en": "Passing an attribute from method to another method python"}
{"in": "import subprocess<nl>p = subprocess.Popen([\"some\", \"command\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)<nl>stdout, stderr = p.communicate()<nl>stdout=stdout.split(\"<nl>\")<nl>for line in stdout:<nl><tab>if line.startswith(\"This is the line:\"):<nl><tab><tab>print line", "out": "サブプロセス出力から特定の1行だけを取得する方法", "out_en": "How to get only one specific line from subprocess output"}
{"in": "ratio = Column(Numeric(5, 3), nullable=True)", "out": "SQLAlchemyでこの列を宣言する方法", "out_en": "How to declare this column with SQLAlchemy"}
{"in": "name=input(\"Enter your name: \")<nl>message=input(\"Enter your message:\")<nl>namefinal = ''<nl>for letter  in name:   <nl>   if letter not in message:<nl><tab>   namefinal += letter<nl>print namefinal", "out": "ユーザ入力を使用したPythonリスト内の要素の削除", "out_en": "Deleting elements in Python list using user input"}
{"in": "def GetHtmlText(self,text):<nl><tab>html_text = '<h3>Data Results:</h3><p><table border=\"2\">'<nl><tab>html_text += \"<tr><td>Domain:</td><td>Mail Server:</td><td>TLS:</td><td># of Employees:</td><td>Verified</td></tr>\"<nl><tab>for row in root.ptglobal.to_csv():<nl><tab><tab>html_text += \"<tr>\"<nl><tab><tab>for x in range(len(row)):<nl><tab><tab><tab>html_text += \"<td>\"+str(row[x])+\"</td>\"<nl><tab><tab>html_text += \"</tr>\"<nl><tab>return html_text + \"</table></p>\"", "out": "書式設定されたwxPython印刷文字列", "out_en": "wxPython print string with formatting"}
{"in": "handler.cgi_directories = [\"/\"]", "out": "Python CGIHTTPServerのデフォルトディレクトリ", "out_en": "Python CGIHTTPServer Default Directories"}
{"in": "stored_json = token.readlines()<nl>token.close()<nl>return stored_json", "out": "サーバーへのjsonファイルの読み書きフラスコ付", "out_en": "Read and write json files to server with flask"}
{"in": "from PyQt4 import QtGui<nl><nl>app = QtGui.QApplication([])<nl><nl>menu = QtGui.QMenu()<nl><nl>sub_menu = QtGui.QMenu(\"Sub Menu\")<nl><nl>for i in [\"a\", \"b\", \"c\"]: #or your dict<nl><tab>sub_menu.addAction(i) #it is just a regular QMenu<nl><nl>menu.addMenu(sub_menu)<nl><nl>menu.show()<nl><nl>app.exec_()", "out": "pyqt4のサブメニュー付きドロップダウンメニュー", "out_en": "dropdown menu with sub menu in pyqt4"}
{"in": "webbrowser.open('https://www.google.com') # open a passed URL string using default browser", "out": "Python 2.7からURLを開く", "out_en": "Open URL from Python 2.7"}
{"in": "length = len(filelist)<nl>for i in range(length):<nl>   self.importFiles(filelist[i],timestamps[i])", "out": "一度に2つのリストから値を取得する方法", "out_en": "How can I get the values from two list a time"}
{"in": "def mask_z_level(xi, yi, msk_img, x0=-14.3887, y0=5.564):<nl><tab>im = plt.imread(msk_img)<nl><tab>msk = np.zeros(xi.shape, dtype='bool')<nl><nl><tab>pxmm = np.zeros((3, 2))<nl><tab>p = 0<nl><nl><tab>for row in range(im.shape[0]):<nl><tab><tab>for col in range(im.shape[1]):<nl><tab><tab><tab>if tuple(im[row, col]) == (1., 0., 0.):<nl><tab><tab><tab><tab>pxmm[p] = (row, col)<nl><tab><tab><tab><tab>p += 1<nl><nl><tab>pxx = pxmm[1, 1] / 5.5<nl><tab>pxy = pxmm[2, 0] / 6.5<nl><tab>print(pxx, pxy)<nl><nl><tab>for j in range(xi.shape[1]):<nl><tab><tab>for i in range(xi.shape[0]):<nl><tab><tab><tab>x, y = xi[i, j], yi[i, j]<nl><tab><tab><tab>dx, dy = x - x0, y - y0<nl><tab><tab><tab>dpx = np.round(dx * pxx).astype('int')<nl><tab><tab><tab>dpy = -np.round(dy * pxy).astype('int')<nl><nl><tab><tab><tab>if tuple(im[dpy, dpx]) == (1., 1., 1.):<nl><tab><tab><tab><tab>msk[i, j] = True<nl><nl><tab>return msk", "out": "2dポイントからのエッジの検索Python", "out_en": "Finding edge from 2d points Python"}
{"in": "lines = file.readlines()<nl>lines = lines[:-1]", "out": "Pythonがファイルの最後の行を削除する", "out_en": "Python remove last line of a file"}
{"in": "file = open(\"save_file.txt\")<nl><nl>for each_line in file:<nl><tab>s = {}<nl><tab>(s['name'], s['race'], s['class'], s['FOR'], s['INT'], s['DES']) = each_line.split(\";\")<nl><tab>print(s['name'])<nl><tab>print(s['race'])<nl><tab>print(s['class'])<nl><tab>print(s['FOR'])<nl><tab>print(s['INT'])<nl><tab>print(s['DES'])<nl><tab>print(s['name'])<nl>file.close()", "out": "より多くの行を印刷する方法", "out_en": "How to print more lines?"}
{"in": "from Spotfire.Dxp.Application.Visuals import VisualContent<nl><nl>#\"visual\" is the name of the parameter found in the \"Script Parameter\" dialog below the editor which points to the visualization I want to change.<nl>vc = visual.As[VisualContent]()<nl>exp=\"[\"+Document.Properties[\"DocPropertyNameHere\"]+\"]\"<nl>vc.YAxis.Expression =exp", "out": "IronPythonを使用したSpotfireで、棒グラフのx軸(xaxis)を設定する方法", "out_en": "How do I set the x-axis (xaxis) on a Bar Graph in Spotfire with IronPython?"}
{"in": "class SignupForm(authtoolsforms.UserCreationForm):<nl><tab>captcha = CaptchaField()<nl><nl><tab>def __init__(self, *args, **kwargs):<nl><tab><tab>super(SignupForm, self).__init__(*args, **kwargs)<nl><tab><tab>self.helper = FormHelper()<nl><tab><tab>self.fields[\"email\"].widget.input_type = \"email\"<nl><nl><tab><tab>self.helper.layout = Layout(<nl><tab><tab><tab>Field('email', placeholder=\"Enter Email\", autofocus=\"\"),<nl><tab><tab><tab>Field('name', placeholder=\"Enter Full Name\"),<nl><tab><tab><tab>Field('password1', placeholder=\"Enter Password\"),<nl><tab><tab><tab>Field('password2', placeholder=\"Re-enter Password\"),<nl><tab><tab><tab>Field('gender', placeholder=\"Gender\"),<nl><tab><tab><tab>Field('captcha ', placeholder=\"Enter captcha\"),<nl><tab><tab><tab>Submit('sign_up', 'Sign up', css_class=\"btn-warning\"),<nl><tab><tab><tab>)", "out": "DjangoでCrispy FormにCaptchaField()を追加するには?", "out_en": "How to add a CaptchaField() in a Crispy Form in Django?"}
{"in": "lastItems = [int(i[-1]) for i in yourList[2:]]", "out": "Python-ファイルを使用してリストの最後の項目を取得します。", "out_en": "Python - get last item in a list, using a file"}
{"in": "import subprocess<nl>out, err = subprocess.Popen([\"pdftotext\", \"-\", \"-\"], stdout=subprocess.PIPE).communicate(pdf_data)", "out": "Pythonからコマンドラインを実行し、メモリから引数をパイプする", "out_en": "Running a command line from python and piping arguments from memory"}
{"in": "import httplib<nl>from socket import error<nl><nl>with open(\"in.txt\") as f, open(\"out.txt\",\"a\") as out: # change to w if you want to overwrite each time<nl><tab>for line in f:<nl><tab><tab>try:<nl><tab><tab><tab>conn = httplib.HTTPConnection(line.rstrip())<nl><tab><tab><tab>conn.request(\"HEAD\", \"/index.php\")<nl><tab><tab><tab>r1 = conn.getresponse()<nl><tab><tab><tab>print(r1.reason)<nl><tab><tab><tab>if r1.reason == \"OK\":<nl><tab><tab><tab><tab>out.write(line)<nl><tab><tab>except error as e:<nl><tab><tab><tab>print(e)", "out": "テキストファイル内の各IPをindex.phpでチェックする方法", "out_en": "How to to do a index.php check for each IP in text file"}
{"in": "from SimpleCV import *<nl>from imagegtk import DisplayImage<nl><nl>im = Image(\"Lenna\")<nl>image = im.toRGB.getBitmap()<nl><nl>d = DisplayImage(title=\"iamgegtk\")<nl><nl>label = gtk.Label(\"Lenna\")<nl>d.box.pack_start(label,False,False,0)<nl><nl>but1 = gtk.Button(\"Quit\")<nl>but1.connect(\"clicked\",d.leave_app)<nl>d.box.pack_end(but1,False,False,2)<nl><nl>d.show(image)", "out": "GUIを使用してSimpleCVを拡張する方法", "out_en": "How to extend SimpleCV with GUI"}
{"in": "print (r.data.decode('utf-8'))", "out": "urllib3を使用してraw html文字列を出力する方法", "out_en": "How to print raw html string using urllib3???"}
{"in": "class Game(db.Model):<nl>  players = db.ListProperty()<nl><nl>game1.players = ['tom', 'bob']<nl>game2.players = ['joe', 'tom']<nl><nl># this query will match all games where tom is one of the players<nl>query = Game.all().filter('players =', 'tom')", "out": "Googleアプリケーションエンジンgql同じ文字列を持つ2つのプロパティを照会する", "out_en": "Google app engine gql query two properties with same string"}
{"in": "import os<nl><nl>os.system('export http://<your proxy>:<your port>/')<nl>os.system('export https://<your proxy>:<your port>/')", "out": "Ubintuでブラウザのプロキシ設定をPythonから変更する", "out_en": "Change browser proxy settings from Python in Ubintu?"}
{"in": "import re<nl><nl>regex = '''<item><nl><obj1>grab1</obj1><nl><obj2>text<obj2><nl>...<nl></item>'''<nl><nl>pattern = re.compile(regex)<nl><nl>with open('data.dat') as searchfile:<nl><tab>filetext = searchfile.read()<nl><tab>text = pattern.findall(filetext)<nl><tab>print text", "out": "Pythonで複数行の文字列から値を取得するためのregexの使用", "out_en": "Using regex to grab values from a multi-line string in python"}
{"in": "import codecs<nl>f=codecs.open(\"test.html\", 'r')<nl>print f.read()", "out": "htmlファイルを開く方法", "out_en": "How to open html file?"}
{"in": "import re<nl>import xml.sax.saxutils<nl><nl>def anchor_from_email_address_match(match):<nl><tab>address = match.group(0)<nl><tab>return \"<a href=%s>%s</a>\" % (<nl><tab><tab>xml.sax.saxutils.quoteattr(\"mailto:\" + address),<nl><tab><tab>xml.sax.saxutils.escape(address))<nl><nl>def replace_email_addresses_with_anchors(text):<nl><tab>return re.sub(\"\\w+@(?:\\w|\\.)+\", anchor_from_email_address_match, text)<nl><nl>print replace_email_addresses_with_anchors(<nl><tab>\"An address: bob@example.com, and another: joe@example.com\")", "out": "Python:電子メールアドレスをHTMLリンクに変換する", "out_en": "Python: Convert email address to HTML link"}
{"in": "sys.stdout.flush()", "out": "Pythonでは、なぜ何かが改行なしで印刷されないのでしょうか?", "out_en": "In Python, why won't something print without a newline?"}
{"in": "userWantToContinue = True<nl>while aqpool[0] and userWantToContinue:<nl><tab>shuffle (aqpool)<nl><tab>numRight = 0<nl><nl><tab>for question, rightAnswer in aqpool:<nl><tab><tab>answer = raw_input(question + \" \")<nl><nl><tab><tab>if answer == rightAnswer:<nl><tab><tab><tab>print (\"R?TT SVAR!\")<nl><nl><tab><tab><tab>numRight = numRight + 1<nl><nl><tab><tab>else:<nl><tab><tab><tab>print(\"FEL SVAR! R?tta svaret ?r: \" + rightAnswer + \"<nl>\")<nl><nl><nl><tab><tab>print(\"Vill du f?rs?tta spela? (ja eller nej)\")<nl><tab><tab>userWantToContinue = str(raw_input()) not in ('n', 'nej')<nl><tab><tab>if not userWantToContinue:<nl><tab><tab><tab>break<nl><nl><tab>total = numRight / len(aqpool) * 100<nl><tab>print (\"Du hade %s%% r?tt!\" % total)", "out": "Pythonプログラミング-ループを終了してスコアを表示する", "out_en": "Python programing - exiting the loop and displaying score"}
{"in": "from gevent import monkey<nl>monkey.patch_all()<nl><nl>import urllib2<nl>from gevent.pool import Pool<nl><nl><nl>def download(url):<nl><tab>return urllib2.urlopen(url).read()<nl><nl><nl>if __name__ == '__main__':<nl><tab>urls = ['http://httpbin.org/get'] * 100<nl><tab>pool = Pool(20)<nl><tab>print pool.map(download, urls)", "out": "Python-複数のURLの取得", "out_en": "Python - getting multiple URLs"}
{"in": "from scipy import stats<nl>import numpy as np<nl>np.random.seed(2015)<nl><nl>x = [ stats.t.rvs(9) for i in range(250)]<nl>stats.t.fit(x)", "out": "Scipyを使用してt-分布の最適な自由度を自動的に推定する方法はありますか?", "out_en": "Is there a way to automatically estimate the best degree of freedoms for a t-distribution using Scipy?"}
{"in": "import re<nl>s = '<table style=\"width: 100%%\" bgcolor=\"%s\"><tr><td><font color=\"%s\"><b>1.23</b></td></tr></table>'<nl>result = float(re.sub(r\"<.?table[^>]*>|<.?t[rd]>|<font[^>]+>|<.?b>\", \"\", s))", "out": "Pythonで特定のhtmlタグを削除する", "out_en": "Removing specific html tags with python"}
{"in": "my_list = [l[0] for l in list]", "out": "Pythonでリストから括弧を削除する", "out_en": "Remove brackets from list in Python"}
{"in": "import sys<nl>getattr(sys.modules[__name__], 'A')", "out": "現在のPythonモジュールからクラスのセットを動的に取得するにはどうすればよいでしょうか。", "out_en": "How can I dynamically get the set of classes from the current python module?"}
{"in": "import wx<nl><nl>class MyPanel(wx.Panel):<nl><tab>\"\"\" class MyPanel creates a panel to draw on, inherits wx.Panel \"\"\"<nl><tab>def __init__(self, parent, id):<nl><tab><tab># create a panel<nl><tab><tab>wx.Panel.__init__(self, parent, id)<nl><tab><tab>self.SetBackgroundColour(\"white\")<nl><tab><tab>self.Bind(wx.EVT_PAINT, self.OnPaint)<nl><nl><tab>def OnPaint(self, evt):<nl><tab><tab>\"\"\"set up the device context (DC) for painting\"\"\"<nl><tab><tab>self.dc = wx.PaintDC(self)<nl><tab><tab>self.dc.BeginDrawing()<nl><tab><tab>self.dc.SetPen(wx.Pen(\"grey\",style=wx.TRANSPARENT))<nl><tab><tab>self.dc.SetBrush(wx.Brush(\"grey\", wx.SOLID))<nl><tab><tab># set x, y, w, h for rectangle<nl><tab><tab>self.dc.DrawRectangle(250,250,50, 50)<nl><tab><tab>self.dc.EndDrawing()<nl><tab><tab>del self.dc<nl><nl>app = wx.PySimpleApp()<nl># create a window/frame, no parent, -1 is default ID<nl>frame = wx.Frame(None, -1, \"Drawing A Rectangle...\", size = (500, 500))<nl># call the derived class, -1 is default ID<nl>MyPanel(frame,-1)<nl># show the frame<nl>frame.Show(True)<nl># start the event loop<nl>app.MainLoop()", "out": "wxPython-塗りつぶしなしの長方形をDCで描画する", "out_en": "wxPython - Drawing an unfilled rectangle with the DC"}
{"in": "#!/usr/bin/env python<nl># -*- coding: utf-8 -*-<nl><nl>import pygtk<nl>pygtk.require(\"2.0\")<nl>import gtk<nl>import gtk.glade<nl><nl>class HellowWorldGTK:<nl><nl><tab>def __init__(self):<nl><tab><tab>self.gladefile = \"helloworld.glade\" <nl><tab><tab>self.glade = gtk.Builder()<nl><tab><tab>self.glade.add_from_file(self.gladefile)<nl><tab><tab>self.glade.connect_signals(self)<nl><tab><tab>self.glade.get_object(\"MainWindow\").show_all()<nl><nl><tab>def on_MainWindow_delete_event(self, widget, event):<nl><tab><tab>gtk.main_quit()<nl><nl>if __name__ == \"__main__\":<nl><tab>try:<nl><tab><tab>a = HellowWorldGTK()<nl><tab><tab>gtk.main()<nl><tab>except KeyboardInterrupt:<nl><tab><tab>pass", "out": "gladeインタフェースのPythonへの追加", "out_en": "putting glade interface in python"}
{"in": "import Tkinter as tk<nl><nl>def key_press(event):<nl><tab>print event.char<nl><tab>return event.char<nl><tab># Or whatever processing you might want.<nl><nl>tk_app = tk.Tk()<nl>tk_app.bind('<KeyPress>', key_press)<nl>tk_app.mainloop()", "out": "Python 2.7では、キーボード・キーをどのようにマップするのでしょうか。", "out_en": "How do you map a keyboard key in Python 2.7?"}
{"in": "query = '''INSERT INTO cheese (data) VALUES (%s)'''<nl>cur.execute(query, (bd,))", "out": "MySQLブロブにPythonバイナリ文字列オブジェクトを挿入します", "out_en": "Insert python binary string object in MySQL blob"}
{"in": "def dfunc(ipees, portees):<nl><tab>for (ip, port) in zip(ipees, portees):<nl><tab><tab>try:<nl><tab><tab><tab>s = socket.create_connection((ip, port), timeout=10)<nl><tab><tab><tab>s.send('GET / HTTP/1.0\\r<nl>\\r<nl>')<nl><tab><tab><tab>buf = s.recv(1000)<nl><tab><tab><tab>print buf<nl><tab><tab>except socket.error:<nl><tab><tab><tab>print 'Could not connect to ({0}, {1})'.format(ip, port)", "out": "Pythonスクリプトから出力されない", "out_en": "No output from python script"}
{"in": "self.builder.get_object(\"boxWelcome\").set_text(\"Welcome %s!\" % (username.get_text()))", "out": "Pythonからglade guiへのデータのエクスポート", "out_en": "Exporting data from python to glade gui"}
{"in": "driver.find_element_by_xpath(\"//input[@placeholder='Select month']\").click()<nl>driver.find_element_by_xpath(\"//*[contains(text(), '09')]\").click()", "out": "Pythonを使用したSeleniumの<input>ドロップダウンの値の設定", "out_en": "Setting the value of an <input> dropdown in Selenium with Python"}
{"in": "def change(self, event):<nl><tab>myobject = event.GetEventObject()<nl><tab>myobject.Disable()", "out": "wxPython、ボタンを無効にする?", "out_en": "wxPython, Disabling buttons?"}
{"in": "import pygraphviz as pgv<nl>from PIL import Image<nl><nl>d={'1': {'2': None}, '2': {'1': None, '3': None}, '3': {'2': None}}<nl>A=pgv.AGraph(d)<nl>A.node_attr['style']='filled'<nl>n = A.get_node('1')<nl>n.attr['fillcolor']=\"#CCCCFF\"<nl>n.attr['label'] = 'MY LOVELY LABEL'<nl>A.layout() # default to neato<nl>A.layout(prog='dot') # use dot<nl>A.draw('file.png')<nl>img = Image.open('file.png')<nl>img.show()", "out": "pyGraphVizの節点の色の設定", "out_en": "Setting colour of nodes in pyGraphViz"}
{"in": "sum(sum(b) for b in a)", "out": "itertoolsを使用せずにネストされたリストの合計を検索する", "out_en": "Finding the sum of a nested list without using itertools"}
{"in": "def refresh(self):<nl><tab>if (self.nbfig > 0): #meaning the c++ app already plotted a figure<nl><tab><tab>plt.ioff()<nl><tab><tab>plt.close()", "out": "matplotlibで最初のグラフを閉じた後に新しいグラフをプロットする", "out_en": "plotting a new graph after closing a first one in matplotlib"}
{"in": "for i in range(0,11):<nl><tab>if i % 3 == 0 and i != 0:<nl><tab><tab>continue<nl><tab>print(i)<nl><nl><nl>1<nl>2<nl>4<nl>5<nl>7<nl>8<nl>10", "out": "範囲をループするときにn番目ごとの値をスキップする-Python", "out_en": "skip every nth value when looping over a range - python"}
{"in": "with open(keywords_file, 'r') as f:<nl><tab> keywords = \",\".join(line.strip() for line in f)", "out": "結合文字列は最初の行をスキップします", "out_en": "Join strings skips first line"}
{"in": "session.query(func.max(Table.title), Table.slug).group_by(Table.slug).all()", "out": "sqlalchemy:1つの列でのみ異なる", "out_en": "sqlalchemy: distinct only on one column"}
{"in": "import base64<nl><nl>with open('input.zip', 'rb') as fin, open('output.zip.b64', 'w') as fout:<nl><tab>base64.encode(fin, fout)", "out": "Pythonでzipファイルをbase64でエンコードする", "out_en": "base64 encode a zip file in Python"}
{"in": "print datetime.strptime(mylist[4], '%Y%m')", "out": "要素を抽出して日時に変換する", "out_en": "Extracting an element and converting it to datetime"}
{"in": "import numpy as np<nl>import matplotlib.pyplot as plt<nl><nl>def myhist(ax, color):<nl><tab>ax.hist(np.log(np.arange(1, 10, .1)), facecolor=color)<nl><nl>def say_something(ax, words):<nl><tab>t = ax.text(.2, 20., words)<nl><tab>make_a_dim_yellow_bbox(t)<nl><nl>def make_a_dim_yellow_bbox(txt):<nl><tab>txt.set_bbox(dict(facecolor='yellow', alpha=.2))<nl><nl>fig = plt.figure()<nl>ax0 = fig.add_subplot(1,2,1)<nl>ax1 = fig.add_subplot(1,2,2)<nl><nl>myhist(ax0, 'blue')<nl>myhist(ax1, 'green')<nl><nl>say_something(ax0, 'this is the blue plot')<nl>say_something(ax1, 'this is the green plot')<nl><nl>plt.show()", "out": "matplotlib-図面関数を再利用するPython", "out_en": "Python with matplotlib - reusing drawing functions"}
{"in": "def runbg(cmd, sockname=\"dtach\"):<nl><tab>return run('dtach -n `mktemp -u /tmp/%s.XXXX` %s'  % (sockname,cmd))", "out": "ファブリックを使用してnohupでバックグラウンドプロセスを開始する", "out_en": "start a background process with nohup using fabric"}
{"in": "myDict.pop(key, None)", "out": "Python del if in dictionaryが1行で表示される", "out_en": "Python del if in dictionary in one line"}
{"in": "r'T.{18}(?:TT|AA|CC|GG)'", "out": "Pythonの正規表現反復文字", "out_en": "python regular expression repeated characters"}
{"in": "import collections<nl><nl>class Coffee():<nl><tab>def __init__(self, name='', color='', taste=''):<nl><tab><tab>self.name = name<nl><tab><tab>self.color = color<nl><tab><tab>self.taste = taste<nl><nl><tab>def __repr__(self):<nl><tab><tab>return '{0} {1} {2}'.format(self.name, self.color, self.taste)<nl><nl>prompt = \"Enter name,color,taste or ctrl-d when done: \"<nl>coffees = collections.defaultdict(Coffee)<nl><nl>while True:<nl><tab>try:<nl><tab><tab>name, color, taste = input(prompt).split(',')<nl><tab><tab>coffees[name].name = name<nl><tab><tab>coffees[name].color = color<nl><tab><tab>coffees[name].taste = taste<nl><tab>except ValueError:<nl><tab><tab>print(\"Try again!\")<nl><tab>except EOFError:<nl><tab><tab>print()<nl><tab><tab>break<nl><nl><nl>print(coffees)", "out": "オブジェクトのリストを変更するためのエレガントでPython的なアプローチ", "out_en": "Elegant and Pythonic Approach to Changing List of Objects"}
{"in": "import urllib.request<nl>from bs4 import BeautifulSoup<nl><nl>url_to_parse = 'http://www.myfxbook.com/members/fxgrowthbot/forex-growth-bot/71611'<nl>response = urllib.request.urlopen(url_to_parse)<nl>html = response.read()<nl>soup = BeautifulSoup(html)<nl>a = soup.find(id='history').find_all('td')<nl><nl>print(len(a))  # 300", "out": "BS4でリモートHTMLからテーブル<td>をパースします", "out_en": "Parse table <td> from remote HTML with BS4"}
{"in": "import random<nl>import urllib<nl>import urllib2<nl><nl>url = 'https://www.interactivebrokers.com/java/classes/latest.jnlp?counter=' + str(random.random())<nl><nl>def download_file_1(url):<nl><tab>urllib.urlretrieve(url + \".jnlp\", \"latest.jnlp\")<nl><nl>def download_file_2(url):<nl><tab>jnlpfile = urllib2.urlopen(url + \".jnlp\")<nl><tab>output = open('test.jnlp','wb')<nl><tab>output.write(jnlpfile.read())<nl><tab>output.close()", "out": "Interactive BrokersのTWSをPythonから開く方法", "out_en": "How to open Interactive Brokers' TWS from within Python"}
{"in": "for s in mylist:<nl><tab>if 'item' in s:<nl><tab>   print(s)", "out": "Pythonリストでサブストリングを検索中に名前エラーが発生しました", "out_en": "NameError when searching for substring in Python list"}
{"in": "return list_a[:-1] + list_b[1:]", "out": "スライスされたリストを返す", "out_en": "Returning a sliced list"}
{"in": "Arguments = 1, 2, 3<nl>SumOf(*Arguments)", "out": "Pythonで複数の引数を渡す代わりに単一の変数を使用する方法", "out_en": "How to use a single variable instead of passing multiple Arguments in Python"}
{"in": "#!/usr/bin/env python<nl>import getpass<nl>import sys<nl>import telnetlib<nl><nl>HOST = \"localhost\"<nl>user = raw_input(\"Enter your remote account: \")<nl>password = getpass.getpass()<nl><nl>tn = telnetlib.Telnet(HOST)<nl><nl>tn.read_until(\"login: \")<nl>tn.write(user + \"<nl>\")<nl>if password:<nl><tab>tn.read_until(\"Password: \")<nl><tab>tn.write(password + \"<nl>\")<nl><nl>tn.write(\"ls<nl>\")<nl>tn.write(\"exit<nl>\")<nl><nl>print tn.read_all()", "out": "Tel netクライアントの作成", "out_en": "Writing a telnet client"}
{"in": "v = float(input('start vlocity m/s: '))<nl>a = float(input('start angle : '))<nl>p = v*math.sin(math.radians(a))<nl>g = 9.81<nl>equ = p*p/(2*g)  <nl>print(str(equ) + ' M')", "out": "Python How To Square Sin for The Height Equation(Pythonでの高さの方程式の", "out_en": "Python How To Square Sin For The Height Equation"}
{"in": "import os<nl>import pygame<nl><nl>images = {str(i)[:-4]:pygame.image.load(\"images/\"+i) for i in os.listdir(\"images\") if os.path.isfile(\"images/\"+i)}", "out": "画像のフォルダを自動的に読み込むにはどうすればいいですか?", "out_en": "How do I load a folder of images in automatically?"}
{"in": "def my_function(f, value):<nl>  yield value<nl>  while True:<nl><tab>value = f(value)<nl><tab>yield value", "out": "yield python add previous関数の結果", "out_en": "yield python add previous function result"}
{"in": "B= np.split(A, np.where(A[:, 0]== 0.)[0][1:])", "out": "numpyの値で配列を分割します", "out_en": "Split array at value in numpy"}
{"in": "from mako.template import Template<nl><nl>mydata = {'foo': 'bar', 'better foo': 'beach bar'}<nl>working_template = Template(\"Let's go to the ${foo}\")<nl>fail_template = Template(\"Let's go to the ${mydata['better foo']}\")<nl><nl>print working_template.render(**mydata)<nl>print fail_template.render(mydata=mydata)", "out": "Makoで複数語辞書キーを参照する方法は?", "out_en": "How to reference multi-word dictionary key in mako?"}
{"in": "from docx import Document<nl><nl>document = Document()<nl>r = 2 # Number of rows you want<nl>c = 2 # Number of collumns you want<nl>table = document.add_table(rows=r, cols=c)<nl>table.style = 'LightShading-Accent1' # set your style, look at the help documentation for more help<nl>for y in range(r):<nl><tab>for x in range(c):<nl><tab><tab>cell.text = 'text goes here'<nl>document.save('demo.docx') # Save document", "out": "Pythonでdocxファイルを作成する方法", "out_en": "how to create docx files with python"}
{"in": "turtle.begin_fill() # Begin the fill process.<nl>turtle.down() # \"Pen\" down?<nl>for i in range(squares):  # For each edge of the shape<nl><tab>turtle.forward(40) # Move forward 40 units<nl><tab>turtle.left(angle) # Turn ready for the next edge<nl>turtle.up() # Pen up<nl>turtle.end_fill() # End fill.", "out": "Turtle-Pythonでこれらの四角形を埋める方法", "out_en": "How Can I Fill These Squares in Turtle - Python"}
{"in": "host, aliaslist, lan_ip = socket.gethostbyname_ex(socket.gethostname())<nl>print host<nl>print aliaslist<nl>print lan_ip[0]", "out": "数分ごとにIPアドレスを含むファイルをアップロードするPythonスクリプトが必要な場合", "out_en": "In need of a python script to upload a file with IP address every few minutes"}
{"in": "sizer = wx.BoxSizer(wx.VERTICAL)<nl>sizer.Add(self.canvas, 1, wx.EXPAND)<nl>self.SetSizer(sizer)", "out": "wxPython:事業の拡大", "out_en": "wxPython: Making something expand"}
{"in": "import matplotlib.pyplot as plt<nl><nl>def read_data(f, num_lines=1, split_on=':'):<nl><tab>lines = (f.next() for i in range(num_lines))<nl><tab>pieces = (line.split(split_on) for line in lines)<nl><tab>data = ((a,float(b)) for a,b in pieces)<nl><tab>return zip(*data)<nl><nl>with open(\"xx.txt\") as inf:<nl><tab>amino_names, amino_values = read_data(inf, 4)<nl><tab>ph_names, ph_values = read_data(inf, 2)<nl><nl>fig = plt.figure(figsize=(2,1))<nl>p1 = fig.add_subplot(1,2,1)<nl>p1.pie(amino_values, labels=amino_names)<nl>p2 = fig.add_subplot(1,2,2)<nl>p2.pie(ph_values, labels=ph_names)<nl>fig.show()", "out": "Pythonのmatplotlibでの円グラフ", "out_en": "pie plot in matplotlib in Python"}
{"in": "included_clients = clientData.objects.values_list('client', flat=True)<nl><nl>excluded_clients = Client.objects.exclude(id__in=included_clients)", "out": "特定の条件に基づいてモデルからデータをフィルタする", "out_en": "Filter data from models based on some condition"}
{"in": "if os.system(\"/usr/libexec/oah/translate > /dev/null 2>&1\"):<nl>  print \"Not installed\"<nl>else:<nl>  print \"Installed\"", "out": "ロゼッタがインストールされているかどうかを確認する方法は?--MacPython", "out_en": "How to tell if rosetta is installed? --MacPython"}
{"in": "def cmpdirs(dir_cmp):<nl><tab># make copies of the comparison results<nl><tab>left   = dir_cmp.left_only[:]<nl><tab>right  = dir_cmp.righ_only[:]<nl><tab>common = dir_cmp.common_files[:]<nl><nl><tab>for sub_dcmp in dir_cmp.subdirs.values():<nl><tab><tab>sub_left, sub_right, sub_common = cmpdirs(sub_dcmp)<nl><nl><tab><tab># join the childrens results<nl><tab><tab>left   += sub_left<nl><tab><tab>right  += sub_right<nl><tab><tab>common += sub_common<nl><nl><tab># return the merged results<nl><tab>return (left, right, common)<nl><nl>if __name__ == '__main__':<nl><tab>dcmp   = dircmp('dir1', 'dir2')<nl><tab>result = cmpdirs(dcmp)", "out": "再帰的なPython関数の戻り値からフラットリストを作成する", "out_en": "Creating a flat list from return values of a recursive python function"}
{"in": "from sqlalchemy import create_engine, Column, Integer, String, DateTime, Float, UnicodeText, VARCHAR, NVARCHAR, TEXT, DATE, distinct, ForeignKey, Table<nl>import sqlalchemy<nl>from sqlalchemy.orm import sessionmaker, relationship<nl>from sqlalchemy.ext.declarative import declarative_base<nl>engine = create_engine(\"sqlite:///./P_case.db\", <nl><tab><tab><tab><tab><tab>   echo=False)<nl><nl>Session = sessionmaker( bind=engine )<nl>session = Session()<nl><nl>Base = declarative_base()<nl>metadata = Base.metadata #########################<nl>class Bus(Base):<nl><nl><tab>__tablename__ = \"bus_info\"<nl><tab>id = Column( Integer, primary_key = True )<nl><nl><tab>## Bus<nl><tab>number = Column( Integer)<nl><nl>metadata.create_all( engine )<tab>######################", "out": "SQL Alchemy ORMの構築", "out_en": "SQL Alchemy Building an ORM"}
{"in": "from PySTAF import * <nl><nl>filename = 'C:\\\\Users\\\\NET\\\\2.png'<nl>destination = '192.168.1.139'<nl>copy_cmd =  \"COPY FILE {} TODIRECTORY c:\\Temp TOMACHINE {}\".format(STAFWrapData(filename),STAFWrapData(destination))<nl>result = handle.submit(\"local\", \"FS\",copy_cmd)<nl>print result.result<nl>assert result.rc == STAFResult.Ok", "out": "PySTAFを使用してリモートマシン上のファイルをコピーする方法", "out_en": "How to copy a file on remote machine using PySTAF"}
{"in": "from datetime import datetime<nl>from datetime import timedelta<nl><nl>now = datetime.now()<nl>time_changed_state = now - timedelta(hours=2)<nl>time_delay = 0<nl>time_arrival = time_changed_state + timedelta(minutes=time_delay)<nl><nl>if now < time_arrival:<nl>   print 'something'<nl>elif now >= time_arrival:<nl>   print 'something different'", "out": "Pythonでの日時比較動作", "out_en": "Datetime comparison behavior in python"}
{"in": "# views.py<nl><nl>part_list = product.buildpart.all().order_by('family__type')", "out": "Djangoが自己参照ManyToManyFieldで関連アイテムを取得する予定", "out_en": "Django getting related items in self-referential ManyToManyField in view"}
{"in": "def lineWhiteness(line, image):<nl><tab>(pt1, pt2) = lineParams(line, len(image))<nl><tab>count = 0<nl><tab>li = cv.InitLineIterator(cv.fromarray(image), pt1, pt2)<nl><tab>for (r, g, b) in li:<nl><tab><tab>if (r or g or b):<nl><tab><tab><tab>count += 1<nl><tab>return count", "out": "OpenCVの線に沿った白のピクセル数をカウントします", "out_en": "Count number of white pixels along a line in OpenCV"}
{"in": "def test_testing(self):<nl>  url = self.base + str(gameid)  #the base ends with '/v2/game/'<nl>  headers = {'content-type': 'application/json'}<nl>  r = requests.post(url,headers=headers)", "out": "url変数を使用してflaskルートにアクセスするためのPython要求", "out_en": "Python Requests to access flask route with url variable"}
{"in": "Class._get_collection().aggregate([<nl><tab>{ '$group': {<nl><tab><tab>'_id': {<nl><tab><tab><tab>'year': { '$year': '$utc_timestamp' },<nl><tab><tab><tab>'month': { '$month': '$utc_timestamp' },<nl><tab><tab><tab>'day': { '$dayOfMonth': '$utc_timestamp' },<nl><tab><tab>},<nl><tab><tab>'defects': {<nl><tab><tab><tab>'$sum': { '$cond': [<nl><tab><tab><tab><tab>{ '$eq': [ '$status', 'defect' ] },<nl><tab><tab><tab><tab>1,<nl><tab><tab><tab><tab>0<nl><tab><tab><tab>]}<nl><tab><tab>},<nl><tab><tab>'totalCount': { '$sum': 1 }<nl><tab>}},<nl><tab>{ '$project': {<nl><tab><tab>'defect_rate': {<nl><tab><tab><tab>'$cond': [<nl><tab><tab><tab><tab>{ '$eq': [ '$defects', 0 ] },<nl><tab><tab><tab><tab>0,<nl><tab><tab><tab><tab>{ '$divide': [ '$defects', '$totalCount' ] }<nl><tab><tab><tab>]<nl><tab><tab>}<nl><tab>}}<nl>])", "out": "MongoEngineを使ってこのMongoDBクエリを実行する方法", "out_en": "How to run this MongoDB query using MongoEngine"}
{"in": "# emails is a set of emails<nl>for line in fileinput.input(\"csvfile.csv\",inplace =1):<nl><tab>parts = line.split(',')<nl><tab>if parts[3] not in emails:<nl><tab><tab>print line", "out": "個別のリスト内の各文字列を含む部分文字列に基づいて、2つのリスト間の差異を取得する方法", "out_en": "How to get the difference between two list based on substrings withing each string in the seperate lists"}
{"in": "d = fits.getdata('data.fit')<nl>df=pd.DataFrame(np.array(d).byteswap().newbyteorder())", "out": "numpy配列からパンダDataFrameを作成すると、奇妙なエラーが発生する", "out_en": "Creating pandas DataFrame from numpy array leads to strange errors"}
{"in": "from django import db<nl>db.close_connection()", "out": "django transaction.commit_manuallyは'MySQL server has gone away'を返します。", "out_en": "django transaction.commit_manually leads to 'MySQL server has gone away'"}
{"in": "def check_file_ready(self, path):<nl><tab>'''Check if file is not opened by another process.'''<nl><tab>handle = None<nl><tab>try:<nl><tab><tab>handle = win32file.CreateFile(<nl><tab><tab><tab>path,<nl><tab><tab><tab>win32file.GENERIC_WRITE,<nl><tab><tab><tab>0,<nl><tab><tab><tab>None,<nl><tab><tab><tab>win32file.OPEN_EXISTING,<nl><tab><tab><tab>win32file.FILE_ATTRIBUTE_NORMAL,<nl><tab><tab><tab>None)<nl><tab><tab>return True<nl><tab>except pywintypes.error, e:<nl><tab><tab>if e[0] == winerror.ERROR_SHARING_VIOLATION:<nl><tab><tab><tab># Note: other possible error codes include<nl><tab><tab><tab>#  winerror.ERROR_FILE_NOT_FOUND<nl><tab><tab><tab>#  winerror.ERROR_PATH_NOT_FOUND<nl><tab><tab><tab>#  winerror.ERROR_ACCESS_DENIED.<nl><tab><tab><tab>return False<nl><tab><tab>raise<nl><tab>finally:<nl><tab><tab>if handle:<nl><tab><tab><tab>win32file.CloseHandle(handle)", "out": "Pythonを使用してファイルの保存が完了したことを確認する方法", "out_en": "How to check a file saving is complete using Python?"}
{"in": "common_words = frozenset((\"if\", \"but\", \"and\", \"the\", \"when\", \"use\", \"to\", \"for\"))<nl>title = \"When to use Python for web applications\"<nl>title_words = set(title.lower().split())<nl>keywords = title_words.difference(common_words)<nl>print(keywords)", "out": "Python/Djangoでは、長い単語リストに対して文字列を効率的にフィルターするにはどうすればよいのでしょうか。", "out_en": "How to efficiently filter a string against a long list of words in Python/Django?"}
{"in": "from kivy.uix.popup import Popup<nl>from kivy.uix.textinput import TextInput<nl>from kivy.uix.boxlayout import BoxLayout<nl>from kivy.uix.label import Label<nl><nl>box = BoxLayout()<nl>box.add_widget(Label(text='Hello world'))<nl>box.add_widget(TextInput(text='Hi'))<nl><nl>popup = Popup(title='Test popup', content=box, size_hint=(None, None), size=(400, 400))", "out": "Kivy:ポップアップ内の複数の項目が機能しない", "out_en": "Kivy: Multiple items in a popup wont work"}
{"in": "import win32gui<nl><nl>def enumerationCallaback(hwnd, results):<nl><tab>text = win32gui.GetWindowText(hwnd)<nl><tab>if text.find(\"Mozilla Firefox\") >= 0:<nl><tab><tab>results.append((hwnd, text))<nl><nl>mywindows = []<tab><nl>win32gui.EnumWindows(enumerationCallaback, mywindows)<nl>for win, text in mywindows:<nl><tab>print text<nl><nl>def recurseChildWindow(hwnd, results):<nl><tab>win32gui.EnumChildWindows(hwnd, recurseChildWindow, results)<nl><tab>print hwnd<nl><tab># try to get window class, text etc using SendMessage and see if it is what we want<nl><nl>mychildren = []<nl>recurseChildWindow(mywindows[0][0], mychildren)", "out": "python(pywin32)用のfirefoxアドレスバーのURLを取得する方法", "out_en": "how to get firefox address bar url for python (pywin32)"}
{"in": "import collections<nl>import random<nl><nl>cnt = collections.Counter()<nl>for i in range(101):<nl>  number = random.randint(1, 100)<nl>  if number % 2 == 0:<nl><tab>cnt['even'] += 1<nl>  else:<nl><tab>cnt['odd'] += 1<nl>print(cnt)", "out": "Pythonでカウンタを保持するプログラムについて、どなたか助けてくれませんか?", "out_en": "Can someone help me with my program keeping a counter in python"}
{"in": "import pandas as pd<nl>import numpy as np<nl>import io<nl><nl>#original data<nl>temp=u\"\"\"col1,col2,col3,col4,col5<nl>1,2,3,4,5<nl>3,4,-5,6,7<nl>5,6,-7,8,9\"\"\"<nl><nl>df1 = pd.read_csv(io.StringIO(temp))<nl>print df1<nl>#   col1  col2  col3  col4  col5<nl>#0<tab> 1<tab> 2<tab> 3<tab> 4<tab> 5<nl>#1<tab> 3<tab> 4<tab>-5<tab> 6<tab> 7<nl>#2<tab> 5<tab> 6<tab>-7<tab> 8<tab> 9<nl><nl>#copy data for next processing<nl>df = df1.copy()<nl><nl>#set data by conditions<nl>df1['col1'] = np.where(df1['col3'] > 0,  df1['col1'] + df1['col3'], np.NaN)<nl>df1['col5'] = np.where(df1['col3'] > 0,  'blah', np.NaN)<nl><nl>#drop rows with NaN<nl>df1 = df1.dropna()<nl><nl>#append to original df<nl>result = pd.concat([df, df1], ignore_index=True)<nl>print result<nl>#   col1  col2  col3  col4  col5<nl>#0<tab> 1<tab> 2<tab> 3<tab> 4<tab> 5<nl>#1<tab> 3<tab> 4<tab>-5<tab> 6<tab> 7<nl>#2<tab> 5<tab> 6<tab>-7<tab> 8<tab> 9<nl>#3<tab> 4<tab> 2<tab> 3<tab> 4  blah", "out": "既存のデータフレームへの追加を高速化する方法", "out_en": "How to speed up append to an existing dataframe"}
{"in": "from numpy import *<nl>from matplotlib.pyplot import *<nl>from math import *<nl><nl>t=arange(0,4*pi/2,0.0001)<nl>print(t)<nl>#first set of parameters<nl>A=1<nl>B=1<nl>a1=1<nl>b1=2<nl>d=pi/2<nl>#second set of parameters<nl>a2=2<nl>b2=3<nl>X1=[]<nl>Y1=[]<nl>Y2=[]<nl>X2=[]<nl>for i in range(len(t)):<nl><tab>x1=A*sin(a1*t[i]+d)<nl><tab>y1=B*sin(b1*t[i])<nl><tab>x2=A*sin(a2*t[i]+d)<nl><tab>y2=B*sin(b2*t[i])<nl><tab>X1=append(X1,x1)<nl><tab>Y1=append(Y1,y1)<nl><tab>X2=append(X2,x2)<nl><tab>Y2=append(Y2,y2)<nl>figure()<nl>plot(t,X1, color='blue')<nl>plot(t,Y1, color='pink')<nl>plot(t,X2, color='purple')<nl>plot(t,Y2, color='green')<nl>show()", "out": "(Python)リサージュ曲線のグラフ表示の問題", "out_en": "(Python) Trouble displaying a graph of a Lissajous curve"}
{"in": "import urllib<nl>urllib.urlretrieve('http://python.org/images/python-logo.gif', '/tmp/foo.gif')", "out": "サーバの特定のパスにファイルをダウンロードする方法:Python", "out_en": "How to Download a file to a specific path in the server : Python"}
{"in": "Clock.schedule_once(partial(durclock.update, str(i)), 10-i)", "out": "Kivy Clock.schedule_onceを使用してイベントをスケジュールする方法", "out_en": "How to schedule event with Kivy Clock.schedule_once"}
{"in": "def reverse(data_list):<nl><tab>length = len(data_list)<nl><tab>s = length<nl><nl><tab>new_list = [None]*length<nl><nl><tab>for item in data_list:<nl><tab><tab>s = s - 1<nl><tab><tab>new_list[s] = item<nl><tab>return new_list", "out": "Pythonリストの逆メソッドを最初から作成する", "out_en": "creating a reverse method for a python list from scratch"}
{"in": "list=['L:', 'JM6', 'jm6', 'test', 'turb', 'results', 'v6.2', 'examples']<nl>os.path.join(*list)", "out": "リストの要素をパスに結合する", "out_en": "Join elements of a list into a path"}
{"in": "class B(A):<nl><tab> __init__ = my_init", "out": "initをオーバーライドするにはどうすればいいですか?", "out_en": "How do I override init?"}
{"in": "for i, item in enumerate(test):<nl><tab>if i and i % 4 == 0:<nl><tab><tab>f.write(\"<nl>\")<nl><tab>f.write(\"%-9s|   \" % item)", "out": "Pythonでリストをフォーマット/表示する", "out_en": "Formatting/Displaying list in python"}
{"in": "formatter = logging.Formatter('[%(asctime)s] p%(process)s {%(pathname)s:%(lineno)d} %(levelname)s - %(message)s','%m-%d %H:%M:%S')", "out": "標準的なPythonロギングを拡張し、ログメソッドが呼び出された行番号を含めるようにしました。", "out_en": "Extend standard python logging, to include the line number where a log method was invoked"}
{"in": "class Test(object): # make sure you inherit from object<nl><tab>@property<nl><tab>def x(self):<nl><tab><tab>return 4<nl><nl>p = Test()<nl>p.x # returns 4", "out": "Python:object attribute referコールをメソッドにする方法", "out_en": "Python: How to make object attribute refer call a method"}
{"in": "driver.find_element_by_xpath(\"//li/label/input[contains(..,'polishpottery')]\")", "out": "Selenium WebDriverを使用した要素とテキストの選択", "out_en": "Selecting Element followed by text with Selenium WebDriver"}
{"in": "rst_epilog = \"\"\"<nl>.. _CC-BY: https://creativecommons.org/licenses/by/3.0/<nl>.. _MIT: http://opensource.org/licenses/MIT<nl>\"\"\"", "out": "Sphinxの共通リンクターゲット", "out_en": "Common link targets in Sphinx"}
{"in": "class MakeSlots(type):<nl><nl><tab>def __new__(cls, name, bases, attrs):<nl><tab><tab>attrs['__slots__'] = attrs.keys()<nl><nl><tab><tab>return super(MakeSlots, cls).__new__(cls, name, bases, attrs)<nl><nl>class A(object):<nl><tab>one = 1<nl><tab>two = 2<nl><nl><tab>__metaclass__ = MakeSlots", "out": "Pythonでクラスの静的属性を検索する", "out_en": "Finding the static attributes of a class in Python"}
{"in": "result = [] # final result<nl>for i in range(len(A)):<nl><nl><tab>row = [] # the new row in new matrix<nl><tab>for j in range(len(B)):<nl><nl><tab><tab>product = 0 # the new element in the new row<nl><tab><tab>for v in range(len(A[i])):<nl><tab><tab><tab>product += A[i][v] * B[v][j]<nl><tab><tab>row.append(product) # append sum of product into the new row<nl><nl><tab>result.append(row) # append the new row into the final result<nl><nl><nl>print(result)", "out": "forループを使用して行列を乗算する方法-Python", "out_en": "How to multiply matrixes using for loops - Python"}
{"in": "vals = [random.choice(integers) for _ in range(num_ints)]", "out": "指定された整数だけを使用してランダム整数のリストを生成する方法(Python)", "out_en": "How to generate list of random integers, but only using specified integers? (Python)"}
{"in": "class Tutor:<nl><tab>firstName = \"\"<nl><tab>lastName = \"\"<nl><tab>age = 0<nl><tab>primarySubjects = []<nl><tab>secondarySubjects = []", "out": "可変プロパティを持つクラスの作成", "out_en": "Creating a Class with variable properties"}
{"in": "from multiprocessing import Process<nl>import time<nl>import threading <nl><nl>def f(name):<nl><tab>time.sleep(100)<nl><tab>print 'hello', name<nl><nl>def run_process_with_timeout(timeout, target, args):<nl><tab>p = Process(target=target, args=args)<nl><tab>p.start()<nl><tab>time.sleep(timeout)<nl><tab>p.terminate()<nl><nl>if __name__ == '__main__':<nl><tab>t = threading.Thread(target=run_process_with_timeout, args=(5,f,('bob',)))<nl><tab>t.start()<nl><tab>print \"This Needs to be Printed Immediately\"", "out": "限られた時間内にPythonプロセスを終了する", "out_en": "Terminate Python Process in a Limited Time"}
{"in": "def invert_tag(self, start, end=None, tag=SEL, w=None):<nl><tab>if w==None:<nl><tab><tab>w=self.cur_scroll() #This is my current text widget<nl><tab>i=0<nl><tab>while w.compare(start+\"+\"+str(i)+\"c\", \"<\", end):<nl><tab><tab>if \"sel\" in w.tag_names(start+\"+\"+str(i)+\"c\"):<nl><tab><tab><tab>w.tag_remove(tag, start+\"+\"+str(i)+\"c\")<nl><tab><tab>else:<nl><tab><tab><tab>w.tag_add(tag, start+\"+\"+str(i)+\"c\")<nl><tab><tab>i+=1", "out": "Tkinter:2つのインデックスの範囲内でタグを持つテキストの反転", "out_en": "Tkinter: inverting what text has a tag in a range of two indexes"}
{"in": "import tkFileDialog<nl><nl>def open_it():<nl><tab>filename = tkFileDialog.askopenfilename()<nl><tab>print filename  # test<nl><nl>def save_it():<nl><tab>filename = tkFileDialog.askopenfilename()<nl><tab>print filename  # test<nl><nl>def save_as():<nl><tab>filename = tkFileDialog.asksaveasfilename()<nl><tab>print filename  # test", "out": "Python名前を付けて保存/開く", "out_en": "Python save as/open"}
{"in": "def myfunc(w):<nl><tab>y = [el[:] for el in w]<nl><tab>y[0].append('What do I need to do to get this to work here?')<nl><tab>y[0].append('When I search for the manual, I get pointed to python.org, but I can\\'t find the answer there.')<nl><tab>return y<nl><nl>x = [[]]<nl>z = myfunc(x)<nl>print(x)", "out": "Python関数が入力を変更しないようにするにはどうすればいいですか?", "out_en": "How do I stop a Python function from modifying its inputs?"}
{"in": "N = 3 # for 3 lines of output<nl>p = subprocess.Popen(['/path/to/external-app.sh'], <nl><tab>stdout=subprocess.PIPE, stderr=subprocess.PIPE)<nl>stdout, stderr = p.communicate()<nl><nl>if p.returncode != 0:<nl><tab>print (\"ERROR: External app did not complete successfully \"<nl><tab><tab>   \"(error code is %s)\" % p.returncode)<nl><tab>print \"Error/failure details: \", '<nl>'.join(stderr.splitlines()[-N:])<nl><tab>status = False<nl>else:<nl><tab>status = True", "out": "サブプロセスのstderrストリーム出力の最後のN行を取得する方法は?", "out_en": "How to get the last N lines of a subprocess' stderr stream output?"}
{"in": "lastforlevel[n-1]", "out": "要素レベルを持つリストからのPython xmlの作成", "out_en": "Python xml creation from list with element levels"}
{"in": "#Open the document<nl>document = Document(args.inputFile)<nl><nl>#changing the page margins<nl>sections = document.sections<nl>for section in sections:<nl><tab>section.top_margin = Cm(margin)<nl><tab>section.bottom_margin = Cm(margin)<nl><tab>section.left_margin = Cm(margin)<nl><tab>section.right_margin = Cm(margin)<nl><nl>document.save(args.outputFile)", "out": "python-docxを使用したdocxページのマージンの変更", "out_en": "Modify docx page margins with python-docx"}
{"in": "list_acciones=Accion.objects.filter(proyectos__id__in=ids_Proyecto)", "out": "Djangoモデル・フィルター", "out_en": "Django Model filters"}
{"in": "class myClass:<nl><tab>proxies = []<nl><tab>def doIt(self):<nl><tab><tab>myClass.proxies.append(1)", "out": "関数内で静的変数を使用する方法", "out_en": "How to use static variables inside functions?"}
{"in": "errs = dict((f.auto_id, f.errors) for f in form if f.errors)", "out": "これを1行で書くにはどうすればいいですか?", "out_en": "How can this be written on a single line?"}
{"in": "from win32com.client import Dispatch<nl><nl>auto = Dispatch(\"AutoItX3.Control\")<nl>auto.WinActivate(\"The window's title\", \"\")<nl>auto.WinWaitActive(\"The window's title\", \"\", 10)<nl><nl>auto.Send(\"The input\")", "out": "stdinパイプを使用したWindowsコンソール・アプリケーションの制御", "out_en": "Controlling a Windows Console App w/ stdin pipe"}
{"in": "w, h = draw.textsize(text, font)", "out": "テキストをPILテキストサイズに正しく位置合わせできません", "out_en": "Cannot align text with PIL textsize correctly"}
{"in": "import re<nl>exp = 'qty * price - discount + 100'<nl>exp = re.sub('(qty|price|discount)','%(\\\\1)f', exp)%vars(obj)", "out": "evalのPython文字列変換", "out_en": "python string conversion for eval"}
{"in": "import itertools<nl>with open(filename) as fin:<nl><tab>ilines = itertools.islice(fin, 2, None) #this throws away the first 2 lines<nl><tab>lines = sorted(ilines, key=lambda x: x.split()[0])  #sort lexicographically on first column<nl><nl>with open('header') as header, open('%s.header'%filename) as fout:<nl><tab>fout.writelines(header) #write the header<nl><tab>fout.writelines(lines) #write the data", "out": "ヘッダーを削除して別のヘッダーを追加する", "out_en": "remove header and add another one"}
{"in": "chart = pygal.StackedLine(width=1000, height=800)", "out": "svgの幅/高さをpygalで制限する方法", "out_en": "How to limit the width/height of svg in pygal"}
{"in": "def onListView1ListItemSelected(self, event):<nl><tab>obj<tab> = event.GetEventObject()<nl><tab>index   = event.GetIndex()<nl><tab>columns = obj.GetColumnCount()<nl><tab>data<tab>= []<nl><nl><tab>for i in range(columns):<nl><tab><tab>item = obj.GetItem(index, i)<nl><tab><tab>data.append(item.GetText())<nl><nl><tab>print(data)", "out": "wxpytonのGUIクリック・イベントからリスト・データを取得するにはどうすればよい?", "out_en": "How do you get the list data from a wxpyton gui click event?"}
{"in": "{<nl>\"query\": {<nl><tab>\"function_score\": {<nl><tab><tab>\"query\": {  <nl><tab><tab><tab>\"match\": {<nl><tab><tab><tab><tab>\"text\": \"how now brown cow\"<nl><tab><tab><tab>}<nl><tab><tab>},<nl><tab><tab>\"functions\": [{<nl><tab><tab><tab>\"script_score\": { <nl><tab><tab><tab><tab>\"script\": \"doc['weight'].value\"<nl><tab><tab><tab>}<nl><tab><tab>}],<nl><tab><tab>\"score_mode\": \"multiply\"<nl><tab>}<nl>}<nl>}", "out": "特定のフィールドでブーストするためのElasticsearchのクエリ方法", "out_en": "How to query Elasticsearch to boost by specific field"}
{"in": "for obj in objs:<nl><tab>obj.send(gateway)<nl>Message.objects.bulk_create(objs)", "out": "bulk_create各オブジェクトで関数を呼び出す方法", "out_en": "bulk_create how to call function on each object"}
{"in": "import sys<nl><nl>print('Name of the script: {0}'.format(sys.argv[0]))<nl><nl>if len(sys.argv) == 3:<nl><tab>inputfile_path = sys.argv[1]<nl><tab>dictionary_path = sys.argv[2]<nl><tab>print('First parameter: {0}'.format(inputfile_path))<nl><tab>print('Second parameter: {0}'.format(dictionary_path))", "out": "Pythonスクリプトが複数の位置引数を受け入れるようにするにはどうすればいいですか?", "out_en": "How to make my python script accepts multiple positional arguments?"}
{"in": "from polls.models import Poll, Choice", "out": "Djangoデータベーステーブルが作成されましたが、そこからモデルをインポートできません", "out_en": "Django database tables made but cannot import models from it"}
{"in": "size = sum(1 for _ in bucket.objects.all())", "out": "boto3 Collectionのサイズを取得するにはどうすればいいですか?", "out_en": "How do I get the size of a boto3 Collection?"}
{"in": "iframe = self.driver.find_element_by_css_selector(\"#webcam-container\")<nl>self.driver.switch_to_frame(iframe)<nl>record = self.driver.find_element_by_css_selector(\"#record-button > span.yt-uix-button-content\")<nl>record.click()", "out": "Seleniumを使用してWebページのボタン制御を自動化する方法", "out_en": "How to automate webpage button control using Selenium?"}
{"in": "n, k = int(input()), int(input())<nl>num = sorted([ int(input()) for i in range(0,n) ])<nl>min_unfairness = min( max_value - min_value for min_value, max_value in<tab>zip(num, num[k-1:]) )<nl>print(min_unfairness)", "out": "パフォーマンスの向上Pythonの基本", "out_en": "Performance Improvement Basics in Python"}
{"in": "[f() for f in flist]", "out": "Pythonでラムダを持たない関数のリストに関数アプリケーションをマップする", "out_en": "Map function application over a list of functions without lambda in python"}
{"in": "def f(ls):<nl><tab>ct = 0<nl><tab>for x in ls:<nl><tab>#<tab>   ^<tab> Do not call the method, but just parse through the list  <nl><tab><tab>if x % 2 == 1:<nl><tab><tab><tab>ct += x<nl><tab>return(ct)<nl><tab>#<tab> ^  ^ parenthesis are not necessary <nl><nl>print(f([2,5,4,6,7,8,2]))<nl>#<tab>  ^<tab><tab><tab>   ^<tab>Missing paranthesis", "out": "forループの問題", "out_en": "Trouble with for loops"}
{"in": "placeholders = ','.join('%s' for col in columns)<nl>query_string = \"INSERT INTO `{}` {} VALUES ({})\".format(table, columns, placeholders)<nl>query.execute(query_string, values)", "out": "値の数が変化するPython MySQLdb cursor.execute()insert", "out_en": "Python MySQLdb cursor.execute() insert with varying number of values"}
{"in": "from nose.tools import *<nl>class Test_mysim():<nl><tab>def setup(self):<nl><tab><tab>self.ans = calculate_it_once()<nl><nl><tab>def test_sync(self):<nl><tab><tab>ans=calculate_it_sync()<nl><tab><tab>assert_equal(ans,self.ans)<nl><nl><tab>def test_async(self):<nl><tab><tab>ans=calculate_it_async()<nl><tab><tab>assert_equal(ans,self.ans)", "out": "noseによるPythonユニット・テスト:シーケンシャル・テストの作成", "out_en": "Python unit-testing with nose: Making sequential tests"}
{"in": "if int(list[0][11:13])>=17 and int(list[0][11:13])<=19:<nl><tab>#This is the correct way of printing for aggregate library<nl><tab>#Print all as a string.<nl><tab>print  \"LongValueSum:\" + \"Express\" + \"\\t\" + list[3]", "out": "PythonでHadoopを使って大きなcsvファイルを処理する", "out_en": "Using Hadoop in python to process a large csv file"}
{"in": "import json<nl><nl>#jstr = \"... that thing above ...\"<nl># This line only decodes the JSON into a structure in memory:<nl>obj = json.loads(jstr)<nl># obj, in this case, is a dictionary, a built-in Python type.<nl><nl># These lines just iterate over that structure.<nl>for ka, va in obj.iteritems():<nl><tab>print ka<nl><tab>for kb, vb in va.iteritems():<nl><tab><tab>print '  ' + kb<nl><tab><tab>for key, string in vb.iteritems():<nl><tab><tab><tab>print '<tab>' + repr((key, string))", "out": "PythonがJSONをデコードする", "out_en": "Python decodes JSON"}
{"in": "L = [['Text', 'Count']]<nl>for line in inputFile:<nl><tab>L.append([var, var5])", "out": "forループからの変換リスト出力", "out_en": "Transform list output from for loop"}
{"in": "import re<nl>valid = re.match('^[\\w-]+$', str) is not None", "out": "文字列に英数字とダッシュしか含まれていないかどうかを確認するにはどうすればいいですか。", "out_en": "How do I check if a string only contains alphanumeric characters and dashes?"}
{"in": "class DictionayModelForm(ModelForm):<nl><tab><tab>def __init__(self, *largs, **kwargs):<nl><tab><tab><tab>super(DictionayModelForm, self).__init__(*largs, **kwargs)<nl><tab><tab><tab>if self.instance and self.instance.pk is not None:<nl><tab><tab><tab><tab>for f in self.instance._meta.fields:<nl><tab><tab><tab><tab><tab>if isinstance(f, models.ForeignKey) and issubclass(f.rel.to, Dictionary):<nl><tab><tab><tab><tab><tab><tab>model_field = self.fields[f.name]<nl><tab><tab><tab><tab><tab><tab>value = getattr(self.instance, f.name, None)<nl><tab><tab><tab><tab><tab><tab>if value and value not in model_field.choices:<nl><tab><tab><tab><tab><tab><tab><tab>model_field.queryset = Dictionary.objects.filter(Q(**f.rel.limit_choices_to) | Q(id = value.id))", "out": "djangoでモデルの他のフィールドの状態に基づいてフィールドレンダリング動作を変更する方法", "out_en": "How to modify field rendering behaviour based on state of other fields of model in django"}
{"in": "def midnights(dt1, dt2):<nl><tab>dt1 = dt1.replace(hour=0, minute=0, second=0, microsecond=0)<nl><tab>dt2 = dt2.replace(hour=0, minute=0, second=0, microsecond=0)<nl><tab>return (dt2 - dt1).days", "out": "日付時刻間の真夜中の発生回数をカウントする", "out_en": "Count occurrences of midnight between datetimes"}
{"in": "import pdb<nl>pdb.set_trace()", "out": "Pythonを閉じて変数を維持せずに、Pythonスクリプトの実行をプログラムで停止するにはどうすればよいですか。", "out_en": "How do I programmatically stop execution of a python script, without closing python and maintaining the variables?"}
{"in": "line = line.rstrip()", "out": "Python:strから改行を削除できません", "out_en": "Python: Unable to remove newline from str"}
{"in": "from multiprocessing import Process, Queue<nl>import time<nl>def consumer(q):<nl><tab><tab> while(True):<nl><tab><tab><tab>data=q.get()<nl><tab><tab><tab>if (data[0]==False):<nl><tab><tab><tab><tab>print(\"Killing\")<nl><tab><tab><tab><tab>return<nl><tab><tab><tab>print((data[1]))<nl><tab><tab><tab>time.sleep(1)<nl><nl>if __name__ == '__main__':<nl><tab>maxitems=3<nl><tab>q = Queue(maxitems)<nl><tab>p = Process(target=consumer, args=(q,))<nl><tab>p.start()<nl><tab>for idx in range(0,10):<nl><tab><tab>q.put((True,idx))<nl><tab><tab>#Where idx would normally be a chunk of data<nl><tab>q.put((False,False))<nl><tab>p.join()", "out": "get時のPythonロックのプロデューサコンシューマ", "out_en": "Producer consumer in python locks on get"}
{"in": "Y = Y[random.choice(Y.keys())]", "out": "Networkx結節点通過", "out_en": "Networkx node traversal"}
{"in": "import seaborn as sns<nl>import matploltlib.pyplot as plt<nl><nl>tips = sns.load_dataset(\"tips\")<nl><nl>ax = sns.pointplot(x=\"day\", y='total_bill', hue=\"smoker\",<nl><tab><tab><tab>  data=tips, dodge=0.3, join=False, palette=['white'])<nl>plt.setp(ax.lines, zorder=100)<nl>plt.setp(ax.collections, zorder=100, label=\"\")<nl><nl>sns.violinplot(x=\"day\", y=\"total_bill\", hue=\"smoker\", data=tips,<nl><tab><tab><tab>   split=True, inner='stick', ax=ax)", "out": "Seabornを使用して、pointplotのすべての要素を取得し、violoinplotの要素の上に表示するにはどうすればよいですか。", "out_en": "Using Seaborn, how do I get all the elements from a pointplot to appear above the elements of a violoinplot?"}
{"in": "dict1 = { <nl>  'D1K1': ('v1', 'v2'),<nl>  'D1K2': ('v3', 'v4')<nl>}<nl><nl>dict2 = { <nl>  'D2K1': ('v1', 'v2'),<nl>  'D2K2': ('v3', 'v4')<nl>}<nl><nl># reverse dict2. this randomly chooses one of the possible mappings<nl># if there are more than one key with the same value..<nl>inv2 = dict((v, k) for k, v in dict2.items())<nl><nl># this assumes that there will always be a reverse mapping in dict2 <nl># for all values in dict1 (use inv2.get(v, default_value) if that is<nl># not the case).<nl>print dict((k, inv2[v]) for k, v in dict1.items())", "out": "値に基づいてPython 2ディクショナリを1つのディクショナリに結合", "out_en": "python 2 dictionaries into 1 dictionary join based on their values"}
